<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Route53Resolver</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet">
            <summary>
            Adds IP addresses to an inbound or an outbound Resolver endpoint. If you want to add
            more than one IP address, submit one <code>AssociateResolverEndpointIpAddress</code>
            request for each IP address.
            
             
            <para>
            To remove an IP address from an endpoint, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverEndpointIpAddress.html">DisassociateResolverEndpointIpAddress</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet.IpAddress">
            <summary>
            <para>
            <para>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID.
            If you specify a subnet ID, Resolver chooses an IP address for you from the available
            IPs in the specified subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to associate IP addresses with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.AssociateResolverEndpointIpAddressResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.AssociateResolverEndpointIpAddressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IpAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^IpAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverEndpointIpAddressAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverQueryLogConfigAssociationCmdlet">
            <summary>
            Associates an Amazon VPC with a specified query logging configuration. Route 53 Resolver
            logs DNS queries that originate in all of the Amazon VPCs that are associated with
            a specified query logging configuration. To associate more than one VPC with a configuration,
            submit one <code>AssociateResolverQueryLogConfig</code> request for each VPC.
            
             <note><para>
            The VPCs that you associate with a query logging configuration must be in the same
            Region as the configuration.
            </para></note><para>
            To remove a VPC from a query logging configuration, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverQueryLogConfigAssociationCmdlet.ResolverQueryLogConfigId">
            <summary>
            <para>
            <para>The ID of the query logging configuration that you want to associate a VPC with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverQueryLogConfigAssociationCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of an Amazon VPC that you want this query logging configuration to log queries
            for.</para><note><para>The VPCs and the query logging configuration must be in the same Region.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverQueryLogConfigAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfigAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.AssociateResolverQueryLogConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.AssociateResolverQueryLogConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverQueryLogConfigAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet">
            <summary>
            Associates a Resolver rule with a VPC. When you associate a rule with a VPC, Resolver
            forwards all DNS queries for the domain name that is specified in the rule and that
            originate in the VPC. The queries are forwarded to the IP addresses for the DNS resolvers
            that are specified in the rule. For more information about rules, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.Name">
            <summary>
            <para>
            <para>A name for the association that you're creating between a Resolver rule and a VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.ResolverRuleId">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to associate with the VPC. To list the existing
            Resolver rules, use <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.VPCId">
            <summary>
            <para>
            <para>The ID of the VPC that you want to associate the Resolver rule with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRuleAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.AssociateResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.AssociateResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResolverRuleAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet">
            <summary>
            Adds one or more tags to a specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get
            the ARN for a resource, use the applicable <code>Get</code> or <code>List</code> command:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html">GetResolverRuleAssociation</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags that you want to add to the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.AddR53RResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet">
            <summary>
            Updates the configuration of the firewall behavior provided by DNS Firewall for a
            single VPC from Amazon Virtual Private Cloud (Amazon VPC).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet.FirewallFailOpen">
            <summary>
            <para>
            <para>Determines how Route 53 Resolver handles queries during failures, for example when
            all traffic that is sent to DNS Firewall fails to receive a reply. </para><ul><li><para>By default, fail open is disabled, which means the failure mode is closed. This approach
            favors security over availability. DNS Firewall blocks queries that it is unable to
            evaluate properly. </para></li><li><para>If you enable this option, the failure mode is open. This approach favors availability
            over security. DNS Firewall allows queries to proceed if it is unable to properly
            evaluate them. </para></li></ul><para>This behavior is only enforced for VPCs that have at least one DNS Firewall rule group
            association. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the VPC that the configuration is for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateFirewallConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateFirewallConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet">
            <summary>
            Updates the firewall domain list from an array of domain specifications.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.Domain">
            <summary>
            <para>
            <para>A list of domains to use in the update operation.</para><para>Each domain specification in your domain list must satisfy the following requirements:
            </para><ul><li><para>It can optionally start with <code>*</code> (asterisk).</para></li><li><para>With the exception of the optional starting asterisk, it must only contain the following
            characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, <code>-</code> (hyphen).</para></li><li><para>It must be from 1-255 characters in length. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list whose domains you want to update. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.Operation">
            <summary>
            <para>
            <para>What you want DNS Firewall to do with the domains that you are providing: </para><ul><li><para><code>ADD</code> - Add the domains to the ones that are already in the domain list.
            </para></li><li><para><code>REMOVE</code> - Search the domain list for the domains and remove them from
            the list.</para></li><li><para><code>REPLACE</code> - Update the domain list to exactly match the list that you
            are providing. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateFirewallDomainsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateFirewallDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallDomainListId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallDomainListId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet">
            <summary>
            Updates the specified firewall rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.Action">
            <summary>
            <para>
            <para>The action that DNS Firewall should take on a DNS query when it matches one of the
            domains in the rule's domain list:</para><ul><li><para><code>ALLOW</code> - Permit the request to go through.</para></li><li><para><code>ALERT</code> - Permit the request to go through but send an alert to the logs.</para></li><li><para><code>BLOCK</code> - Disallow the request. This option requires additional details
            in the rule's <code>BlockResponse</code>. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.BlockOverrideDnsType">
            <summary>
            <para>
            <para>The DNS record's type. This determines the format of the record value that you provided
            in <code>BlockOverrideDomain</code>. Used for the rule action <code>BLOCK</code> with
            a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.BlockOverrideDomain">
            <summary>
            <para>
            <para>The custom DNS record to send back in response to the query. Used for the rule action
            <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.BlockOverrideTtl">
            <summary>
            <para>
            <para>The recommended amount of time, in seconds, for the DNS resolver or web browser to
            cache the provided override record. Used for the rule action <code>BLOCK</code> with
            a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.BlockResponse">
            <summary>
            <para>
            <para>The way that you want DNS Firewall to block the request. Used for the rule action
            setting <code>BLOCK</code>.</para><ul><li><para><code>NODATA</code> - Respond indicating that the query was successful, but no response
            is available for it.</para></li><li><para><code>NXDOMAIN</code> - Respond indicating that the domain name that's in the query
            doesn't exist.</para></li><li><para><code>OVERRIDE</code> - Provide a custom override in the response. This option requires
            custom handling details in the rule's <code>BlockOverride*</code> settings. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list to use in the rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group for the rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.Priority">
            <summary>
            <para>
            <para>The setting that determines the processing order of the rule in the rule group. DNS
            Firewall processes the rules in a rule group by order of priority, starting from the
            lowest setting.</para><para>You must specify a unique priority for each rule in a rule group. To make it easier
            to insert rules later, leave space between the numbers, for example, use 100, 200,
            and so on. You can change the priority setting for the rules in a rule group at any
            time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateFirewallRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateFirewallRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet">
            <summary>
            Changes the association of a <a>FirewallRuleGroup</a> with a VPC. The association
            enables DNS filtering for the VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.FirewallRuleGroupAssociationId">
            <summary>
            <para>
            <para>The identifier of the <a>FirewallRuleGroupAssociation</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.MutationProtection">
            <summary>
            <para>
            <para>If enabled, this setting disallows modification or removal of the association, to
            help prevent against accidentally altering DNS firewall protections. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule group association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.Priority">
            <summary>
            <para>
            <para>The setting that determines the processing order of the rule group among the rule
            groups that you associate with the specified VPC. DNS Firewall filters VPC traffic
            starting from the rule group with the lowest numeric priority setting. </para><para>You must specify a unique priority for each rule group that you associate with a single
            VPC. To make it easier to insert rule groups later, leave space between the numbers,
            for example, use 100, 200, and so on. You can change the priority setting for a rule
            group association after you create it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateFirewallRuleGroupAssociationResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateFirewallRuleGroupAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet">
            <summary>
            Attaches an Identity and Access Management (Amazon Web Services IAM) policy for sharing
            the rule group. You can use the policy to share the rule group using Resource Access
            Manager (RAM).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN (Amazon Resource Name) for the rule group that you want to share.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet.FirewallRuleGroupPolicy">
            <summary>
            <para>
            <para>The Identity and Access Management (Amazon Web Services IAM) policy to attach to the
            rule group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.PutFirewallRuleGroupPolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.PutFirewallRuleGroupPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.EditR53RFirewallRuleGroupPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigCmdlet">
            <summary>
            Retrieves the configuration of the firewall behavior provided by DNS Firewall for
            a single VPC from Amazon Virtual Private Cloud (Amazon VPC).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the VPC from Amazon VPC that the configuration is for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetFirewallConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetFirewallConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigListCmdlet">
            <summary>
            Retrieves the firewall configurations that you have defined. DNS Firewall uses the
            configurations to manage firewall behavior for your VPCs. 
            
             
            <para>
            A single call might return only a partial list of the configurations. For information,
            see <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallConfigsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet">
            <summary>
            Retrieves the domains that you have defined for the specified firewall domain list.
            
            
             
            <para>
            A single call might return only a partial list of the domains. For information, see
            <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list whose domains you want to retrieve. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Domains'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallDomainsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallDomainListId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallDomainListId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListCmdlet">
            <summary>
            Retrieves the specified firewall domain list.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallDomainList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetFirewallDomainListResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetFirewallDomainListResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallDomainListId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallDomainListId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListListCmdlet">
            <summary>
            Retrieves the firewall domain lists that you have defined. For each firewall domain
            list, you can retrieve the domains that are defined for a list by calling <a>ListFirewallDomains</a>.
            
            
             
            <para>
            A single call to this list operation might return only a partial list of the domain
            lists. For information, see <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallDomainLists'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallDomainListsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallDomainListsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallDomainListListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupCmdlet">
            <summary>
            Retrieves the specified firewall rule group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetFirewallRuleGroupResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetFirewallRuleGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationCmdlet">
            <summary>
            Retrieves a firewall rule group association, which enables DNS filtering for a VPC
            with one rule group. A VPC can have more than one firewall rule group association,
            and a rule group can be associated with more than one VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationCmdlet.FirewallRuleGroupAssociationId">
            <summary>
            <para>
            <para>The identifier of the <a>FirewallRuleGroupAssociation</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetFirewallRuleGroupAssociationResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetFirewallRuleGroupAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet">
            <summary>
            Retrieves the firewall rule group associations that you have defined. Each association
            enables DNS filtering for a VPC with one rule group. 
            
             
            <para>
            A single call might return only a partial list of the associations. For information,
            see <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group that you want to retrieve the associations
            for. Leave this blank to retrieve associations for any rule group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.Priority">
            <summary>
            <para>
            <para>The setting that determines the processing order of the rule group among the rule
            groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting
            from the rule group with the lowest numeric priority setting. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.Status">
            <summary>
            <para>
            <para>The association <code>Status</code> setting that you want DNS Firewall to filter on
            for the list. If you don't specify this, then DNS Firewall returns all associations,
            regardless of status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.VpcId">
            <summary>
            <para>
            <para>The unique identifier of the VPC that you want to retrieve the associations for. Leave
            this blank to retrieve associations for any VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallRuleGroupAssociationsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallRuleGroupAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupListCmdlet">
            <summary>
            Retrieves the minimal high-level information for the rule groups that you have defined.
            
            
             
            <para>
            A single call might return only a partial list of the rule groups. For information,
            see <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallRuleGroupsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallRuleGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupPolicyCmdlet">
            <summary>
            Returns the Identity and Access Management (Amazon Web Services IAM) policy for sharing
            the specified rule group. You can use the policy to share the rule group using Resource
            Access Manager (RAM).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupPolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN (Amazon Resource Name) for the rule group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetFirewallRuleGroupPolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetFirewallRuleGroupPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleGroupPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet">
            <summary>
            Retrieves the firewall rules that you have defined for the specified firewall rule
            group. DNS Firewall uses the rules in a rule group to filter DNS network traffic for
            a VPC. 
            
             
            <para>
            A single call might return only a partial list of the rules. For information, see
            <code>MaxResults</code>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.Action">
            <summary>
            <para>
            <para>Optional additional filter for the rules to retrieve.</para><para>The action that DNS Firewall should take on a DNS query when it matches one of the
            domains in the rule's domain list:</para><ul><li><para><code>ALLOW</code> - Permit the request to go through.</para></li><li><para><code>ALERT</code> - Permit the request to go through but send an alert to the logs.</para></li><li><para><code>BLOCK</code> - Disallow the request. If this is specified, additional handling
            details are provided in the rule's <code>BlockResponse</code> setting. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group that you want to retrieve the rules
            for. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.Priority">
            <summary>
            <para>
            <para>Optional additional filter for the rules to retrieve.</para><para>The setting that determines the processing order of the rules in a rule group. DNS
            Firewall processes the rules in a rule group by order of priority, starting from the
            lowest setting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of objects that you want Resolver to return for this request. If
            more objects are available, in the response, Resolver provides a <code>NextToken</code>
            value that you can use in a subsequent call to get the next batch of objects.</para><para>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100
            objects. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first call to this list request, omit this value.</para><para>When you request a list of objects, Resolver returns at most the number of objects
            specified in <code>MaxResults</code>. If more objects are available for retrieval,
            Resolver returns a <code>NextToken</code> value in the response. To retrieve the next
            batch of objects, use the token that was returned for the prior request in your next
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListFirewallRulesResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListFirewallRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RFirewallRuleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigCmdlet">
            <summary>
            Retrieves the behavior configuration of Route 53 Resolver behavior for a single VPC
            from Amazon Virtual Private Cloud.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>Resource ID of the Amazon VPC that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigListCmdlet">
            <summary>
            Retrieves the Resolver configurations that you have defined. Route 53 Resolver uses
            the configurations to manage DNS resolution behavior for your VPCs.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Resolver configurations that you want to return in the response
            to a <code>ListResolverConfigs</code> request. If you don't specify a value for <code>MaxResults</code>,
            up to 100 Resolver configurations are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) If the current Amazon Web Services account has more than <code>MaxResults</code>
            Resolver configurations, use <code>NextToken</code> to get the second and subsequent
            pages of results.</para><para>For the first <code>ListResolverConfigs</code> request, omit this value.</para><para>For the second and subsequent requests, get the value of <code>NextToken</code> from
            the previous response and specify that value for <code>NextToken</code> in the request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverConfigsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigCmdlet">
            <summary>
            Gets DNSSEC validation information for a specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the virtual private cloud (VPC) for the DNSSEC validation status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverDNSSECConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverDnssecConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverDnssecConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet">
            <summary>
            Lists the configurations for DNSSEC validation that are associated with the current
            Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of objects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para><i>Optional</i>: An integer that specifies the maximum number of DNSSEC configuration
            results that you want Amazon Route 53 to return. If you don't specify a value for
            <code>MaxResults</code>, Route 53 returns up to 100 configuration per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) If the current Amazon Web Services account has more than <code>MaxResults</code>
            DNSSEC configurations, use <code>NextToken</code> to get the second and subsequent
            pages of results.</para><para>For the first <code>ListResolverDnssecConfigs</code> request, omit this value.</para><para>For the second and subsequent requests, get the value of <code>NextToken</code> from
            the previous response and specify that value for <code>NextToken</code> in the request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverDnssecConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverDnssecConfigsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverDnssecConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverDnssecConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointCmdlet">
            <summary>
            Gets information about a specified Resolver endpoint, such as whether it's an inbound
            or an outbound Resolver endpoint, and the current status of the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverEndpointResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet">
            <summary>
            Gets the IP addresses for a specified Resolver endpoint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to get IP addresses for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code>
            request. If you don't specify a value for <code>MaxResults</code>, Resolver returns
            up to 100 IP addresses. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</para><para>If the specified Resolver endpoint has more than <code>MaxResults</code> IP addresses,
            you can submit another <code>ListResolverEndpointIpAddresses</code> request to get
            the next group of IP addresses. In the next request, specify the value of <code>NextToken</code>
            from the previous response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IpAddresses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverEndpointIpAddressesResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverEndpointIpAddressesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointIpAddressListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet">
            <summary>
            Lists all the Resolver endpoints that were created using the current Amazon Web Services
            account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of Resolver endpoints, such as all inbound
            Resolver endpoints.</para><note><para>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and
            specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>,
            if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Resolver endpoints that you want to return in the response to
            a <code>ListResolverEndpoints</code> request. If you don't specify a value for <code>MaxResults</code>,
            Resolver returns up to 100 Resolver endpoints. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverEndpoints</code> request, omit this value.</para><para>If you have more than <code>MaxResults</code> Resolver endpoints, you can submit another
            <code>ListResolverEndpoints</code> request to get the next group of Resolver endpoints.
            In the next request, specify the value of <code>NextToken</code> from the previous
            response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverEndpointsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverEndpointListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigCmdlet">
            <summary>
            Gets information about a specified Resolver query logging configuration, such as the
            number of VPCs that the configuration is logging queries for and the location that
            logs are sent to.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigCmdlet.ResolverQueryLogConfigId">
            <summary>
            <para>
            <para>The ID of the Resolver query logging configuration that you want to get information
            about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverQueryLogConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverQueryLogConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverQueryLogConfigId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverQueryLogConfigId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationCmdlet">
            <summary>
            Gets information about a specified association between a Resolver query logging configuration
            and an Amazon VPC. When you associate a VPC with a query logging configuration, Resolver
            logs DNS queries that originate in that VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationCmdlet.ResolverQueryLogConfigAssociationId">
            <summary>
            <para>
            <para>The ID of the Resolver query logging configuration association that you want to get
            information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfigAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverQueryLogConfigAssociationResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverQueryLogConfigAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverQueryLogConfigAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverQueryLogConfigAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet">
            <summary>
            Lists information about associations between Amazon VPCs and query logging configurations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of query logging associations.</para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code>
            request and specify the <code>NextToken</code> parameter, you must use the same values
            for <code>Filters</code>, if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.SortBy">
            <summary>
            <para>
            <para>The element that you want Resolver to sort query logging associations by. </para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code>
            request and specify the <code>NextToken</code> parameter, you must use the same value
            for <code>SortBy</code>, if any, as in the previous request.</para></note><para>Valid values include the following elements:</para><ul><li><para><code>CreationTime</code>: The ID of the query logging association.</para></li><li><para><code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the
            value of <code>Error</code> indicates the cause: </para><ul><li><para><code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon
            S3 bucket) was deleted.</para></li><li><para><code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</para></li></ul><para>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code>
            is null.</para></li><li><para><code>Id</code>: The ID of the query logging association</para></li><li><para><code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</para></li><li><para><code>ResourceId</code>: The ID of the VPC that is associated with the query logging
            configuration</para></li><li><para><code>Status</code>: The current status of the configuration. Valid values include
            the following:</para><ul><li><para><code>CREATING</code>: Resolver is creating an association between an Amazon VPC
            and a query logging configuration.</para></li><li><para><code>CREATED</code>: The association between an Amazon VPC and a query logging configuration
            was successfully created. Resolver is logging queries that originate in the specified
            VPC.</para></li><li><para><code>DELETING</code>: Resolver is deleting this query logging association.</para></li><li><para><code>FAILED</code>: Resolver either couldn't create or couldn't delete the query
            logging association. Here are two common causes:</para><ul><li><para>The specified destination (for example, an Amazon S3 bucket) was deleted.</para></li><li><para>Permissions don't allow sending logs to the destination.</para></li></ul></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.SortOrder">
            <summary>
            <para>
            <para>If you specified a value for <code>SortBy</code>, the order that you want query logging
            associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code>
            request and specify the <code>NextToken</code> parameter, you must use the same value
            for <code>SortOrder</code>, if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of query logging associations that you want to return in the response
            to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify
            a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this
            value.</para><para>If there are more than <code>MaxResults</code> query logging associations that match
            the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code>
            request to get the next group of associations. In the next request, specify the value
            of <code>NextToken</code> from the previous response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverQueryLogConfigAssociationsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverQueryLogConfigAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet">
            <summary>
            Lists information about the specified query logging configurations. Each configuration
            defines where you want Resolver to save DNS query logs and specifies the VPCs that
            you want to log queries for.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of query logging configurations.</para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request
            and specify the <code>NextToken</code> parameter, you must use the same values for
            <code>Filters</code>, if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.SortBy">
            <summary>
            <para>
            <para>The element that you want Resolver to sort query logging configurations by. </para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request
            and specify the <code>NextToken</code> parameter, you must use the same value for
            <code>SortBy</code>, if any, as in the previous request.</para></note><para>Valid values include the following elements:</para><ul><li><para><code>Arn</code>: The ARN of the query logging configuration</para></li><li><para><code>AssociationCount</code>: The number of VPCs that are associated with the specified
            configuration </para></li><li><para><code>CreationTime</code>: The date and time that Resolver returned when the configuration
            was created</para></li><li><para><code>CreatorRequestId</code>: The value that was specified for <code>CreatorRequestId</code>
            when the configuration was created</para></li><li><para><code>DestinationArn</code>: The location that logs are sent to</para></li><li><para><code>Id</code>: The ID of the configuration</para></li><li><para><code>Name</code>: The name of the configuration</para></li><li><para><code>OwnerId</code>: The Amazon Web Services account number of the account that
            created the configuration</para></li><li><para><code>ShareStatus</code>: Whether the configuration is shared with other Amazon Web
            Services accounts or shared with the current account by another Amazon Web Services
            account. Sharing is configured through Resource Access Manager (RAM).</para></li><li><para><code>Status</code>: The current status of the configuration. Valid values include
            the following:</para><ul><li><para><code>CREATING</code>: Resolver is creating the query logging configuration.</para></li><li><para><code>CREATED</code>: The query logging configuration was successfully created. Resolver
            is logging queries that originate in the specified VPC.</para></li><li><para><code>DELETING</code>: Resolver is deleting this query logging configuration.</para></li><li><para><code>FAILED</code>: Resolver either couldn't create or couldn't delete the query
            logging configuration. Here are two common causes:</para><ul><li><para>The specified destination (for example, an Amazon S3 bucket) was deleted.</para></li><li><para>Permissions don't allow sending logs to the destination.</para></li></ul></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.SortOrder">
            <summary>
            <para>
            <para>If you specified a value for <code>SortBy</code>, the order that you want query logging
            configurations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</para><note><para>If you submit a second or subsequent <code>ListResolverQueryLogConfigs</code> request
            and specify the <code>NextToken</code> parameter, you must use the same value for
            <code>SortOrder</code>, if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of query logging configurations that you want to return in the
            response to a <code>ListResolverQueryLogConfigs</code> request. If you don't specify
            a value for <code>MaxResults</code>, Resolver returns up to 100 query logging configurations.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverQueryLogConfigs</code> request, omit this value.</para><para>If there are more than <code>MaxResults</code> query logging configurations that match
            the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigs</code>
            request to get the next group of configurations. In the next request, specify the
            value of <code>NextToken</code> from the previous response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverQueryLogConfigsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverQueryLogConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigPolicyCmdlet">
            <summary>
            Gets information about a query logging policy. A query logging policy specifies the
            Resolver query logging operations and resources that you want to allow another Amazon
            Web Services account to be able to use.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigPolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The ARN of the query logging configuration that you want to get the query logging
            policy for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfigPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverQueryLogConfigPolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverQueryLogConfigPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverQueryLogConfigPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleCmdlet">
            <summary>
            Gets information about a specified Resolver rule, such as the domain name that the
            rule forwards DNS queries for and the ID of the outbound Resolver endpoint that the
            rule is associated with.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleCmdlet.ResolverRuleId">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationCmdlet">
            <summary>
            Gets information about an association between a specified Resolver rule and a VPC.
            You associate a Resolver rule and a VPC using <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationCmdlet.ResolverRuleAssociationId">
            <summary>
            <para>
            <para>The ID of the Resolver rule association that you want to get information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRuleAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverRuleAssociationResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverRuleAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet">
            <summary>
            Lists the associations that were created between Resolver rules and VPCs using the
            current Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of Resolver rules, such as Resolver rules
            that are associated with the same VPC ID.</para><note><para>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request
            and specify the <code>NextToken</code> parameter, you must use the same values for
            <code>Filters</code>, if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of rule associations that you want to return in the response to
            a <code>ListResolverRuleAssociations</code> request. If you don't specify a value
            for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</para><para>If you have more than <code>MaxResults</code> rule associations, you can submit another
            <code>ListResolverRuleAssociation</code> request to get the next group of rule associations.
            In the next request, specify the value of <code>NextToken</code> from the previous
            response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRuleAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverRuleAssociationsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverRuleAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet">
            <summary>
            Lists the Resolver rules that were created using the current Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet.Filter">
            <summary>
            <para>
            <para>An optional specification to return a subset of Resolver rules, such as all Resolver
            rules that are associated with the same Resolver endpoint.</para><note><para>If you submit a second or subsequent <code>ListResolverRules</code> request and specify
            the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>,
            if any, as in the previous request.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Resolver rules that you want to return in the response to a
            <code>ListResolverRules</code> request. If you don't specify a value for <code>MaxResults</code>,
            Resolver returns up to 100 Resolver rules.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListResolverRules</code> request, omit this value.</para><para>If you have more than <code>MaxResults</code> Resolver rules, you can submit another
            <code>ListResolverRules</code> request to get the next group of Resolver rules. In
            the next request, specify the value of <code>NextToken</code> from the previous response.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListResolverRulesResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListResolverRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRuleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRulePolicyCmdlet">
            <summary>
            Gets information about the Resolver rule policy for a specified rule. A Resolver rule
            policy includes the rule that you want to share with another account, the account
            that you want to share the rule with, and the Resolver operations that you want to
            allow the account to use.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRulePolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to get the Resolver rule policy for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRulePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRulePolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.GetResolverRulePolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.GetResolverRulePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResolverRulePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet">
            <summary>
            Lists the tags that you associated with the specified resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code>
            request. If you don't specify a value for <code>MaxResults</code>, Resolver returns
            up to 100 tags.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.NextToken">
            <summary>
            <para>
            <para>For the first <code>ListTagsForResource</code> request, omit this value.</para><para>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code>
            request to get the next group of tags for the resource. In the next request, specify
            the value of <code>NextToken</code> from the previous response. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.GetR53RResourceTagListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet">
            <summary>
            Imports domain names from a file into a domain list, for use in a DNS firewall rule
            group. 
            
             
            <para>
            Each domain specification in your domain list must satisfy the following requirements:
            
            </para><ul><li><para>
            It can optionally start with <code>*</code> (asterisk).
            </para></li><li><para>
            With the exception of the optional starting asterisk, it must only contain the following
            characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, <code>-</code> (hyphen).
            </para></li><li><para>
            It must be from 1-255 characters in length. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet.DomainFileUrl">
            <summary>
            <para>
            <para>The fully qualified URL or URI of the file stored in Amazon Simple Storage Service
            (Amazon S3) that contains the list of domains to import.</para><para>The file must be in an S3 bucket that's in the same Region as your DNS Firewall. The
            file must be a text file and must contain a single domain per line.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list that you want to modify with the import operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet.Operation">
            <summary>
            <para>
            <para>What you want DNS Firewall to do with the domains that are listed in the file. This
            must be set to <code>REPLACE</code>, which updates the domain list to exactly match
            the list in the file. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.ImportFirewallDomainsResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.ImportFirewallDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.ImportR53RFirewallDomainListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet">
            <summary>
            Creates an empty firewall domain list for use in DNS Firewall rules. You can populate
            the domains for the new list with a file, using <a>ImportFirewallDomains</a>, or with
            domain strings, using <a>UpdateFirewallDomains</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows you to retry failed requests
            without the risk of running the operation twice. <code>CreatorRequestId</code> can
            be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet.Name">
            <summary>
            <para>
            <para>A name that lets you identify the domain list to manage and use it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the domain list.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallDomainList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateFirewallDomainListResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateFirewallDomainListResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallDomainListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet">
            <summary>
            Creates a single DNS Firewall rule in the specified rule group, using the specified
            domain list.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.Action">
            <summary>
            <para>
            <para>The action that DNS Firewall should take on a DNS query when it matches one of the
            domains in the rule's domain list:</para><ul><li><para><code>ALLOW</code> - Permit the request to go through.</para></li><li><para><code>ALERT</code> - Permit the request and send metrics and logs to Cloud Watch.</para></li><li><para><code>BLOCK</code> - Disallow the request. This option requires additional details
            in the rule's <code>BlockResponse</code>. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.BlockOverrideDnsType">
            <summary>
            <para>
            <para>The DNS record's type. This determines the format of the record value that you provided
            in <code>BlockOverrideDomain</code>. Used for the rule action <code>BLOCK</code> with
            a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para><para>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.BlockOverrideDomain">
            <summary>
            <para>
            <para>The custom DNS record to send back in response to the query. Used for the rule action
            <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para><para>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.BlockOverrideTtl">
            <summary>
            <para>
            <para>The recommended amount of time, in seconds, for the DNS resolver or web browser to
            cache the provided override record. Used for the rule action <code>BLOCK</code> with
            a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</para><para>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.BlockResponse">
            <summary>
            <para>
            <para>The way that you want DNS Firewall to block the request, used with the rule action
            setting <code>BLOCK</code>. </para><ul><li><para><code>NODATA</code> - Respond indicating that the query was successful, but no response
            is available for it.</para></li><li><para><code>NXDOMAIN</code> - Respond indicating that the domain name that's in the query
            doesn't exist.</para></li><li><para><code>OVERRIDE</code> - Provide a custom override in the response. This option requires
            custom handling details in the rule's <code>BlockOverride*</code> settings. </para></li></ul><para>This setting is required if the rule action setting is <code>BLOCK</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows you to retry failed requests
            without the risk of running the operation twice. <code>CreatorRequestId</code> can
            be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list that you want to use in the rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group where you want to create the rule.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.Name">
            <summary>
            <para>
            <para>A name that lets you identify the rule in the rule group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.Priority">
            <summary>
            <para>
            <para>The setting that determines the processing order of the rule in the rule group. DNS
            Firewall processes the rules in a rule group by order of priority, starting from the
            lowest setting.</para><para>You must specify a unique priority for each rule in a rule group. To make it easier
            to insert rules later, leave space between the numbers, for example, use 100, 200,
            and so on. You can change the priority setting for the rules in a rule group at any
            time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateFirewallRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateFirewallRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet">
            <summary>
            Creates an empty DNS Firewall rule group for filtering DNS network traffic in a VPC.
            You can add rules to the new rule group by calling <a>CreateFirewallRule</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string defined by you to identify the request. This allows you to retry failed
            requests without the risk of running the operation twice. This can be any unique string,
            for example, a timestamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet.Name">
            <summary>
            <para>
            <para>A name that lets you identify the rule group, to manage and use it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the rule group.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateFirewallRuleGroupResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateFirewallRuleGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet">
            <summary>
            Associates a <a>FirewallRuleGroup</a> with a VPC, to provide DNS filtering for the
            VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed requests to be
            retried without the risk of running the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.MutationProtection">
            <summary>
            <para>
            <para>If enabled, this setting disallows modification or removal of the association, to
            help prevent against accidentally altering DNS firewall protections. When you create
            the association, the default setting is <code>DISABLED</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.Name">
            <summary>
            <para>
            <para>A name that lets you identify the association, to manage and use it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.Priority">
            <summary>
            <para>
            <para>The setting that determines the processing order of the rule group among the rule
            groups that you associate with the specified VPC. DNS Firewall filters VPC traffic
            starting from the rule group with the lowest numeric priority setting. </para><para>You must specify a unique priority for each rule group that you associate with a single
            VPC. To make it easier to insert rule groups later, leave space between the numbers,
            for example, use 101, 200, and so on. You can change the priority setting for a rule
            group association after you create it.</para><para>The allowed values for <code>Priority</code> are between 100 and 9900.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the rule group association.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.VpcId">
            <summary>
            <para>
            <para>The unique identifier of the VPC that you want to associate with the rule group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.AssociateFirewallRuleGroupResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.AssociateFirewallRuleGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RFirewallRuleGroupAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet">
            <summary>
            Creates a Resolver endpoint. There are two types of Resolver endpoints, inbound and
            outbound:
            
             <ul><li><para>
            An <i>inbound Resolver endpoint</i> forwards DNS queries to the DNS service for a
            VPC from your network.
            </para></li><li><para>
            An <i>outbound Resolver endpoint</i> forwards DNS queries from the DNS service for
            a VPC to your network.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed requests to be
            retried without the risk of running the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.Direction">
            <summary>
            <para>
            <para>Specify the applicable value:</para><ul><li><para><code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC
            from your network</para></li><li><para><code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC
            to your network</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.IpAddress">
            <summary>
            <para>
            <para>The subnets and IP addresses in your VPC that DNS queries originate from (for outbound
            endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet
            ID uniquely identifies a VPC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.Name">
            <summary>
            <para>
            <para>A friendly name that lets you easily find a configuration in the Resolver dashboard
            in the Route 53 console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>The ID of one or more security groups that you want to use to control access to this
            VPC. The security group that you specify must include one or more inbound rules (for
            inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound
            and outbound rules must allow TCP and UDP access. For inbound access, open port 53.
            For outbound access, open the port that you're using for DNS queries on your network.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateResolverEndpointResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateResolverEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet">
            <summary>
            Creates a Resolver query logging configuration, which defines where you want Resolver
            to save DNS query logs that originate in your VPCs. Resolver can log queries only
            for VPCs that are in the same Region as the query logging configuration.
            
             
            <para>
            To specify which VPCs you want to log queries for, you use <code>AssociateResolverQueryLogConfig</code>.
            For more information, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html">AssociateResolverQueryLogConfig</a>.
            
            </para><para>
            You can optionally use Resource Access Manager (RAM) to share a query logging configuration
            with other Amazon Web Services accounts. The other accounts can then associate VPCs
            with the configuration. The query logs that Resolver creates for a configuration include
            all DNS queries that originate in all VPCs that are associated with the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed requests to be
            retried without the risk of running the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.DestinationArn">
            <summary>
            <para>
            <para>The ARN of the resource that you want Resolver to send query logs. You can send query
            logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery
            stream. Examples of valid values include the following:</para><ul><li><para><b>S3 bucket</b>: </para><para><code>arn:aws:s3:::examplebucket</code></para><para>You can optionally append a file prefix to the end of the ARN.</para><para><code>arn:aws:s3:::examplebucket/development/</code></para></li><li><para><b>CloudWatch Logs log group</b>: </para><para><code>arn:aws:logs:us-west-1:123456789012:log-group:/mystack-testgroup-12ABC1AB12A1:*</code></para></li><li><para><b>Kinesis Data Firehose delivery stream</b>:</para><para><code>arn:aws:kinesis:us-east-2:0123456789:stream/my_stream_name</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.Name">
            <summary>
            <para>
            <para>The name that you want to give the query logging configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the query logging
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateResolverQueryLogConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateResolverQueryLogConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverQueryLogConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet">
            <summary>
            For DNS queries that originate in your VPCs, specifies which Resolver endpoint the
            queries pass through, one domain name that you want to forward to your network, and
            the IP addresses of the DNS resolvers in your network.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>A unique string that identifies the request and that allows failed requests to be
            retried without the risk of running the operation twice. <code>CreatorRequestId</code>
            can be any unique string, for example, a date/time stamp. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.DomainName">
            <summary>
            <para>
            <para>DNS queries for this domain name are forwarded to the IP addresses that you specify
            in <code>TargetIps</code>. If a query matches multiple Resolver rules (example.com
            and www.example.com), outbound DNS queries are routed using the Resolver rule that
            contains the most specific domain name (www.example.com).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.Name">
            <summary>
            <para>
            <para>A friendly name that lets you easily find a rule in the Resolver dashboard in the
            Route 53 console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the outbound Resolver endpoint that you want to use to route DNS queries
            to the IP addresses that you specify in <code>TargetIps</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.RuleType">
            <summary>
            <para>
            <para>When you want to forward DNS queries for specified domain name to resolvers on your
            network, specify <code>FORWARD</code>.</para><para>When you have a forwarding rule to forward DNS queries for a domain to your network
            and you want Resolver to process queries for a subdomain of that domain, specify <code>SYSTEM</code>.</para><para>For example, to forward DNS queries for example.com to resolvers on your network,
            you create a rule and specify <code>FORWARD</code> for <code>RuleType</code>. To then
            have Resolver process queries for apex.example.com, you create a rule and specify
            <code>SYSTEM</code> for <code>RuleType</code>.</para><para>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code>
            for <code>RuleType</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tag keys and values that you want to associate with the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.TargetIp">
            <summary>
            <para>
            <para>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4
            addresses. Separate IP addresses with a space.</para><para><code>TargetIps</code> is available only when the value of <code>Rule type</code>
            is <code>FORWARD</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.CreateResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.CreateResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.NewR53RResolverRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallDomainListCmdlet">
            <summary>
            Deletes the specified domain list.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallDomainListCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list that you want to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallDomainList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteFirewallDomainListResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteFirewallDomainListResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallDomainListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallDomainListId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallDomainListId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallDomainListCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleCmdlet">
            <summary>
            Deletes the specified firewall rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleCmdlet.FirewallDomainListId">
            <summary>
            <para>
            <para>The ID of the domain list that's used in the rule. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group that you want to delete the rule
            from. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteFirewallRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteFirewallRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupCmdlet">
            <summary>
            Deletes the specified firewall rule group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupCmdlet.FirewallRuleGroupId">
            <summary>
            <para>
            <para>The unique identifier of the firewall rule group that you want to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteFirewallRuleGroupResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteFirewallRuleGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupAssociationCmdlet">
            <summary>
            Disassociates a <a>FirewallRuleGroup</a> from a VPC, to remove DNS filtering from
            the VPC.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupAssociationCmdlet.FirewallRuleGroupAssociationId">
            <summary>
            <para>
            <para>The identifier of the <a>FirewallRuleGroupAssociation</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FirewallRuleGroupAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DisassociateFirewallRuleGroupResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DisassociateFirewallRuleGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FirewallRuleGroupAssociationId parameter.
            The -PassThru parameter is deprecated, use -Select '^FirewallRuleGroupAssociationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RFirewallRuleGroupAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointCmdlet">
            <summary>
            Deletes a Resolver endpoint. The effect of deleting a Resolver endpoint depends on
            whether it's an inbound or an outbound Resolver endpoint:
            
             <ul><li><para><b>Inbound</b>: DNS queries from your network are no longer routed to the DNS service
            for the specified VPC.
            </para></li><li><para><b>Outbound</b>: DNS queries from a VPC are no longer routed to your network.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteResolverEndpointResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteResolverEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet">
            <summary>
            Removes IP addresses from an inbound or an outbound Resolver endpoint. If you want
            to remove more than one IP address, submit one <code>DisassociateResolverEndpointIpAddress</code>
            request for each IP address.
            
             
            <para>
            To add an IP address to an endpoint, see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverEndpointIpAddress.html">AssociateResolverEndpointIpAddress</a>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet.IpAddress">
            <summary>
            <para>
            <para>The IPv4 address that you want to remove from a Resolver endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to disassociate an IP address from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DisassociateResolverEndpointIpAddressResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DisassociateResolverEndpointIpAddressResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IpAddress parameter.
            The -PassThru parameter is deprecated, use -Select '^IpAddress' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverEndpointIpAddressAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigCmdlet">
            <summary>
            Deletes a query logging configuration. When you delete a configuration, Resolver stops
            logging DNS queries for all of the Amazon VPCs that are associated with the configuration.
            This also applies if the query logging configuration is shared with other Amazon Web
            Services accounts, and the other accounts have associated VPCs with the shared configuration.
            
             
            <para>
            Before you can delete a query logging configuration, you must first disassociate all
            VPCs from the configuration. See <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>.
            </para><para>
            If you used Resource Access Manager (RAM) to share a query logging configuration with
            other accounts, you must stop sharing the configuration before you can delete a configuration.
            The accounts that you shared the configuration with can first disassociate VPCs that
            they associated with the configuration, but that's not necessary. If you stop sharing
            the configuration, those VPCs are automatically disassociated from the configuration.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigCmdlet.ResolverQueryLogConfigId">
            <summary>
            <para>
            <para>The ID of the query logging configuration that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteResolverQueryLogConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteResolverQueryLogConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverQueryLogConfigId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverQueryLogConfigId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigAssociationCmdlet">
            <summary>
            Disassociates a VPC from a query logging configuration.
            
             <note><para>
            Before you can delete a query logging configuration, you must first disassociate all
            VPCs from the configuration. If you used Resource Access Manager (RAM) to share a
            query logging configuration with other accounts, VPCs can be disassociated from the
            configuration in the following ways:
            </para><ul><li><para>
            The accounts that you shared the configuration with can disassociate VPCs from the
            configuration.
            </para></li><li><para>
            You can stop sharing the configuration.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigAssociationCmdlet.ResolverQueryLogConfigId">
            <summary>
            <para>
            <para>The ID of the query logging configuration that you want to disassociate a specified
            VPC from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigAssociationCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the Amazon VPC that you want to disassociate from a specified query logging
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverQueryLogConfigAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DisassociateResolverQueryLogConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DisassociateResolverQueryLogConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverQueryLogConfigAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleCmdlet">
            <summary>
            Deletes a Resolver rule. Before you can delete a Resolver rule, you must disassociate
            it from all the VPCs that you associated the Resolver rule with. For more information,
            see <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html">DisassociateResolverRule</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleCmdlet.ResolverRuleId">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DeleteResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DeleteResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet">
            <summary>
            Removes the association between a specified Resolver rule and a specified VPC.
            
             <important><para>
            If you disassociate a Resolver rule from a VPC, Resolver stops forwarding DNS queries
            for the domain name that you specified in the Resolver rule. 
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet.ResolverRuleId">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to disassociate from the specified VPC.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet.VPCId">
            <summary>
            <para>
            <para>The ID of the VPC that you want to disassociate the Resolver rule from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRuleAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.DisassociateResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.DisassociateResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResolverRuleAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet">
            <summary>
            Removes one or more tags from a specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the resource that you want to remove tags from.
            To get the ARN for a resource, use the applicable <code>Get</code> or <code>List</code>
            command: </para><ul><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRuleAssociation.html">GetResolverRuleAssociation</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a></para></li><li><para><a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tags that you want to remove to the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.RemoveR53RResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet">
            <summary>
            Specifies an Amazon Web Services rule that you want to share with another account,
            the account that you want to share the rule with, and the operations that you want
            the account to be able to perform on the rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the rule that you want to share with another account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet.ResolverRulePolicy">
            <summary>
            <para>
            <para>An Identity and Access Management policy statement that lists the rules that you want
            to share with another Amazon Web Services account and the operations that you want
            the account to be able to perform. You can specify the following operations in the
            <code>Action</code> section of the statement:</para><ul><li><para><code>route53resolver:GetResolverRule</code></para></li><li><para><code>route53resolver:AssociateResolverRule</code></para></li><li><para><code>route53resolver:DisassociateResolverRule</code></para></li><li><para><code>route53resolver:ListResolverRules</code></para></li><li><para><code>route53resolver:ListResolverRuleAssociations</code></para></li></ul><para>In the <code>Resource</code> section of the statement, specify the ARN for the rule
            that you want to share with another account. Specify the same ARN that you specified
            in <code>Arn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.PutResolverRulePolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.PutResolverRulePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRulePolicy parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRulePolicy' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.SetR53RResolverRulePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverConfigCmdlet">
            <summary>
            Updates the behavior configuration of Route 53 Resolver behavior for a single VPC
            from Amazon Virtual Private Cloud.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverConfigCmdlet.AutodefinedReverseFlag">
            <summary>
            <para>
            <para>Indicates whether or not the Resolver will create autodefined rules for reverse DNS
            lookups. This is enabled by default. Disabling this option will also affect EC2-Classic
            instances using ClassicLink. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon EC2 guide</i>.</para><note><para>It can take some time for the status change to be completed.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>Resource ID of the Amazon VPC that you want to update the Resolver configuration for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateResolverConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateResolverConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet">
            <summary>
            Updates an existing DNSSEC validation configuration. If there is no existing DNSSEC
            validation configuration, one is created.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation
            status for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet.Validation">
            <summary>
            <para>
            <para>The new value that you are specifying for DNSSEC validation for the VPC. The value
            can be <code>ENABLE</code> or <code>DISABLE</code>. Be aware that it can take time
            for a validation status change to be completed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverDNSSECConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateResolverDnssecConfigResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateResolverDnssecConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverDnssecConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet">
            <summary>
            Updates the name of an inbound or an outbound Resolver endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Resolver endpoint that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet.ResolverEndpointId">
            <summary>
            <para>
            <para>The ID of the Resolver endpoint that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateResolverEndpointResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateResolverEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverEndpointId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverEndpointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet">
            <summary>
            Updates settings for a specified Resolver rule. <code>ResolverRuleId</code> is required,
            and all other parameters are optional. If you don't specify a parameter, it retains
            its current value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet.Config">
            <summary>
            <para>
            <para>The new settings for the Resolver rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet.ResolverRuleId">
            <summary>
            <para>
            <para>The ID of the Resolver rule that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResolverRule'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.UpdateResolverRuleResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.UpdateResolverRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResolverRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResolverRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.UpdateR53RResolverRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet">
            <summary>
            Specifies an Amazon Web Services account that you want to share a query logging configuration
            with, the query logging configuration that you want to share, and the operations that
            you want the account to be able to perform on the configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet.Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the account that you want to share rules with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet.ResolverQueryLogConfigPolicy">
            <summary>
            <para>
            <para>An Identity and Access Management policy statement that lists the query logging configurations
            that you want to share with another Amazon Web Services account and the operations
            that you want the account to be able to perform. You can specify the following operations
            in the <code>Actions</code> section of the statement:</para><ul><li><para><code>route53resolver:AssociateResolverQueryLogConfig</code></para></li><li><para><code>route53resolver:DisassociateResolverQueryLogConfig</code></para></li><li><para><code>route53resolver:ListResolverQueryLogConfigAssociations</code></para></li><li><para><code>route53resolver:ListResolverQueryLogConfigs</code></para></li></ul><para>In the <code>Resource</code> section of the statement, you specify the ARNs for the
            query logging configurations that you want to share with the account that you specified
            in <code>Arn</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReturnValue'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Route53Resolver.Model.PutResolverQueryLogConfigPolicyResponse).
            Specifying the name of a property of type Amazon.Route53Resolver.Model.PutResolverQueryLogConfigPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.R53R.WriteR53RResolverQueryLogConfigPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
