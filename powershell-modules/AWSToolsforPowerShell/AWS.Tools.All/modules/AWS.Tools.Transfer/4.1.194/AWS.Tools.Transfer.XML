<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Transfer</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet">
            <summary>
            Attaches a key-value pair to a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            There is no response returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet.Arn">
            <summary>
            <para>
            <para>An Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as
            a server, user, or role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs assigned to ARNs that you can use to group and search for resources
            by type. You can attach this metadata to user accounts for any purpose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.AddTFRResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessCmdlet">
            <summary>
            Describes the access that is assigned to the specific file transfer protocol-enabled
            server, as identified by its <code>ServerId</code> property and its <code>ExternalId</code>.
            
             
            <para>
            The response from this call returns the properties of the access that is associated
            with the <code>ServerId</code> value that was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessCmdlet.ExternalId">
            <summary>
            <para>
            <para>A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.</para><para><code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code></para><para>In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.</para><para>The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that has this access assigned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeAccessResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet">
            <summary>
            Lists the details for all the accesses you have on your server.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that has users assigned to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of access SIDs to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you can get additional results from the <code>ListAccesses</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional accesses.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListAccessesResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListAccessesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAccessListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementCmdlet">
            <summary>
            Describes the agreement that's identified by the <code>AgreementId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementCmdlet.AgreementId">
            <summary>
            <para>
            <para>A unique identifier for the agreement. This identifier is returned when you create
            an agreement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementCmdlet.ServerId">
            <summary>
            <para>
            <para>The server identifier that's associated with the agreement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Agreement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeAgreementResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeAgreementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgreementId parameter.
            The -PassThru parameter is deprecated, use -Select '^AgreementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet">
            <summary>
            Returns a list of the agreements for the server that's identified by the <code>ServerId</code>
            that you supply. If you want to limit the results to a certain number, supply a value
            for the <code>MaxResults</code> parameter. If you ran the command previously and received
            a value for <code>NextToken</code>, you can supply that value to continue listing
            agreements from where you left off.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server for which you want a list of agreements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of agreements to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you can get additional results from the <code>ListAgreements</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional agreements.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Agreements'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListAgreementsResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListAgreementsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRAgreementListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateCmdlet">
            <summary>
            Describes the certificate that's identified by the <code>CertificateId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificate'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeCertificateResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateListCmdlet">
            <summary>
            Returns a list of the current certificates that have been imported into Transfer Family.
            If you want to limit the results to a certain number, supply a value for the <code>MaxResults</code>
            parameter. If you ran the command previously and received a value for the <code>NextToken</code>
            parameter, you can supply that value to continue listing certificates from where you
            left off.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of certificates to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you can get additional results from the <code>ListCertificates</code> call, a
            <code>NextToken</code> parameter is returned in the output. You can then pass in a
            subsequent command to the <code>NextToken</code> parameter to continue listing additional
            certificates.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Certificates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListCertificatesResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListCertificatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRCertificateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorCmdlet">
            <summary>
            Describes the connector that's identified by the <code>ConnectorId.</code>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorCmdlet.ConnectorId">
            <summary>
            <para>
            <para>The unique identifier for the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connector'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeConnectorResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeConnectorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorListCmdlet">
            <summary>
            Lists the connectors for the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of connectors to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you can get additional results from the <code>ListConnectors</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional connectors.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connectors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListConnectorsResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListConnectorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRConnectorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionCmdlet">
            <summary>
            You can use <code>DescribeExecution</code> to check the details of the execution of
            the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionCmdlet.ExecutionId">
            <summary>
            <para>
            <para>A unique identifier for the execution of a workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionCmdlet.WorkflowId">
            <summary>
            <para>
            <para>A unique identifier for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeExecutionResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeExecutionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExecutionId parameter.
            The -PassThru parameter is deprecated, use -Select '^ExecutionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet">
            <summary>
            Lists all executions for the specified workflow.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.WorkflowId">
            <summary>
            <para>
            <para>A unique identifier for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of executions to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para><code>ListExecutions</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional executions.</para><para> This is useful for pagination, for instance. If you have 100 executions for a workflow,
            you might only want to list first 10. If so, call the API by specifying the <code>max-results</code>:
            </para><para><code>aws transfer list-executions --max-results 10</code></para><para> This returns details for the first 10 executions, as well as the pointer (<code>NextToken</code>)
            to the eleventh execution. You can now call the API again, supplying the <code>NextToken</code>
            value you received: </para><para><code>aws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult</code></para><para> This call returns the next 10 executions, the 11th through the 20th. You can then
            repeat the call until the details for all 100 executions have been returned. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListExecutionsResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyCmdlet">
            <summary>
            Returns the details of the host key that's specified by the <code>HostKeyId</code>
            and <code>ServerId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyCmdlet.HostKeyId">
            <summary>
            <para>
            <para>The identifier of the host key that you want described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server that contains the host key that you want described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'HostKey'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeHostKeyResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeHostKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet">
            <summary>
            Returns a list of host keys for the server that's specified by the <code>ServerId</code>
            parameter.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server that contains the host keys that you want to view.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of host keys to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.NextToken">
            <summary>
            <para>
            <para>When there are additional results that were not returned, a <code>NextToken</code>
            parameter is returned. You can use that value for a subsequent call to <code>ListHostKeys</code>
            to continue listing results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListHostKeysResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListHostKeysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRHostKeyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileCmdlet">
            <summary>
            Returns the details of the profile that's specified by the <code>ProfileId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileCmdlet.ProfileId">
            <summary>
            <para>
            <para>The identifier of the profile that you want described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Profile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeProfileResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet">
            <summary>
            Returns a list of the profiles for your system. If you want to limit the results to
            a certain number, supply a value for the <code>MaxResults</code> parameter. If you
            ran the command previously and received a value for <code>NextToken</code>, you can
            supply that value to continue listing profiles from where you left off.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.ProfileType">
            <summary>
            <para>
            <para>Indicates whether to list only <code>LOCAL</code> type profiles or only <code>PARTNER</code>
            type profiles. If not supplied in the request, the command lists all types of profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of profiles to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>When there are additional results that were not returned, a <code>NextToken</code>
            parameter is returned. You can use that value for a subsequent call to <code>ListProfiles</code>
            to continue listing results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Profiles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListProfilesResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfileType parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfileType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet">
            <summary>
            Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify.
            The resource can be a user, server, or role.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.Arn">
            <summary>
            <para>
            <para>Requests the tags associated with a particular Amazon Resource Name (ARN). An ARN
            is an identifier for a specific Amazon Web Services resource, such as a server, user,
            or role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the number of tags to return as a response to the <code>ListTagsForResource</code>
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>1000</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you request additional results from the <code>ListTagsForResource</code> operation,
            a <code>NextToken</code> parameter is returned in the input. You can then pass in
            a subsequent command to the <code>NextToken</code> parameter to continue listing additional
            tags.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRResourceTagListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyCmdlet">
            <summary>
            Describes the security policy that is attached to your file transfer protocol-enabled
            server. The response contains a description of the security policy's properties. For
            more information about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working
            with security policies</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyCmdlet.SecurityPolicyName">
            <summary>
            <para>
            <para>Specifies the name of the security policy that is attached to the server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeSecurityPolicyResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeSecurityPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityPolicyName parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityPolicyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyListCmdlet">
            <summary>
            Lists the security policies that are attached to your file transfer protocol-enabled
            servers.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the number of security policies to return as a response to the <code>ListSecurityPolicies</code>
            query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyListCmdlet.NextToken">
            <summary>
            <para>
            <para>When additional results are obtained from the <code>ListSecurityPolicies</code> command,
            a <code>NextToken</code> parameter is returned in the output. You can then pass the
            <code>NextToken</code> parameter in a subsequent command to continue listing additional
            security policies.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityPolicyNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListSecurityPoliciesResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListSecurityPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRSecurityPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerCmdlet">
            <summary>
            Describes a file transfer protocol-enabled server that you specify by passing the
            <code>ServerId</code> parameter.
            
             
            <para>
            The response contains a description of a server's properties. When you set <code>EndpointType</code>
            to VPC, the response will contain the <code>EndpointDetails</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Server'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeServerResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerListCmdlet">
            <summary>
            Lists the file transfer protocol-enabled servers that are associated with your Amazon
            Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the number of servers to return as a response to the <code>ListServers</code>
            query.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>1000</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerListCmdlet.NextToken">
            <summary>
            <para>
            <para>When additional results are obtained from the <code>ListServers</code> command, a
            <code>NextToken</code> parameter is returned in the output. You can then pass the
            <code>NextToken</code> parameter in a subsequent command to continue listing additional
            servers.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Servers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListServersResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListServersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRServerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserCmdlet">
            <summary>
            Describes the user assigned to the specific file transfer protocol-enabled server,
            as identified by its <code>ServerId</code> property.
            
             
            <para>
            The response from this call returns the properties of the user associated with the
            <code>ServerId</code> value that was specified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that has this user assigned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user assigned to one or more servers. User names are part of the sign-in
            credentials to use the Transfer Family service and perform file transfer tasks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet">
            <summary>
            Lists the users for a file transfer protocol-enabled server that you specify by passing
            the <code>ServerId</code> parameter.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that has users assigned to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the number of users to return as a response to the <code>ListUsers</code>
            request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>1000</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>When you can get additional results from the <code>ListUsers</code> call, a <code>NextToken</code>
            parameter is returned in the output. You can then pass in a subsequent command to
            the <code>NextToken</code> parameter to continue listing additional users.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowCmdlet">
            <summary>
            Describes the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowCmdlet.WorkflowId">
            <summary>
            <para>
            <para>A unique identifier for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workflow'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DescribeWorkflowResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.DescribeWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowListCmdlet">
            <summary>
            Lists all of your workflows.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of workflows to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowListCmdlet.NextToken">
            <summary>
            <para>
            <para><code>ListWorkflows</code> returns the <code>NextToken</code> parameter in the output.
            You can then pass the <code>NextToken</code> parameter in a subsequent command to
            continue listing additional workflows.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workflows'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ListWorkflowsResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ListWorkflowsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.GetTFRWorkflowListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet">
            <summary>
            Imports the signing and encryption certificates that you need to create local (AS2)
            profiles and partner profiles.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.ActiveDate">
            <summary>
            <para>
            <para>An optional date that specifies when the certificate becomes active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Certificate">
            <summary>
            <para>
            <para>The file that contains the certificate to import.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.CertificateChain">
            <summary>
            <para>
            <para>An optional list of certificates that make up the chain for the certificate that's
            being imported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Description">
            <summary>
            <para>
            <para>A short description that helps identify the certificate. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.InactiveDate">
            <summary>
            <para>
            <para>An optional date that specifies when the certificate becomes inactive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.PrivateKey">
            <summary>
            <para>
            <para>The file that contains the private key for the certificate that's being imported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Usage">
            <summary>
            <para>
            <para>Specifies whether this certificate is used for signing or encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ImportCertificateResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ImportCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Certificate parameter.
            The -PassThru parameter is deprecated, use -Select '^Certificate' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet">
            <summary>
            Adds a host key to the server that's specified by the <code>ServerId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.Description">
            <summary>
            <para>
            <para>The text description that identifies this host key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.HostKeyBody">
            <summary>
            <para>
            <para>The public key portion of an SSH key pair.</para><para>Transfer Family accepts RSA, ECDSA, and ED25519 keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server that contains the host key that you are importing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for host keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ImportHostKeyResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ImportHostKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRHostKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet">
            <summary>
            Adds a Secure Shell (SSH) public key to a user account identified by a <code>UserName</code>
            value assigned to the specific file transfer protocol-enabled server, identified by
            <code>ServerId</code>.
            
             
            <para>
            The response returns the <code>UserName</code> value, the <code>ServerId</code> value,
            and the name of the <code>SshPublicKeyId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.SshPublicKeyBody">
            <summary>
            <para>
            <para>The public key portion of an SSH key pair.</para><para>Transfer Family accepts RSA, ECDSA, and ED25519 keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user account that is assigned to one or more servers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.ImportSshPublicKeyResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.ImportSshPublicKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SshPublicKeyBody parameter.
            The -PassThru parameter is deprecated, use -Select '^SshPublicKeyBody' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.ImportTFRSshPublicKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet">
            <summary>
            Used by administrators to choose which groups in the directory should have access
            to upload and download files over the enabled protocols using Transfer Family. For
            example, a Microsoft Active Directory might contain 50,000 users, but only a small
            fraction might need the ability to transfer files to the server. An administrator
            can use <code>CreateAccess</code> to limit the access to the correct set of users
            who need this ability.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.ExternalId">
            <summary>
            <para>
            <para>A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.</para><para><code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code></para><para>In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.</para><para>The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.PosixProfile_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.HomeDirectory">
            <summary>
            <para>
            <para>The landing directory (folder) for a user when they log in to the server using the
            client.</para><para>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.HomeDirectoryMapping">
            <summary>
            <para>
            <para>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example.</para><para><code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code></para><para>In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code>
            parameter value.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</para><para><code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.HomeDirectoryType">
            <summary>
            <para>
            <para>The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol
            clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code>
            for how you want to make Amazon S3 or Amazon EFS paths visible to your users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.Policy">
            <summary>
            <para>
            <para>A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</para><note><para>This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.</para><para>For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.</para><para>For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Security Token Service API Reference</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.PosixProfile_SecondaryGid">
            <summary>
            <para>
            <para>The secondary POSIX group IDs used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.PosixProfile_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateAccessResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet">
            <summary>
            Creates an agreement. An agreement is a bilateral trading partner agreement, or partnership,
            between an Transfer Family server and an AS2 process. The agreement defines the file
            and message transfer relationship between the server and the AS2 process. To define
            an agreement, Transfer Family combines a server, local profile, partner profile, certificate,
            and other attributes.
            
             
            <para>
            The partner is identified with the <code>PartnerProfileId</code>, and the AS2 process
            is identified with the <code>LocalProfileId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.AccessRole">
            <summary>
            <para>
            <para>With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.BaseDirectory">
            <summary>
            <para>
            <para>The landing directory (folder) for files transferred by using the AS2 protocol.</para><para>A <code>BaseDirectory</code> example is <i>DOC-EXAMPLE-BUCKET</i>/<i>home</i>/<i>mydirectory</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.Description">
            <summary>
            <para>
            <para>A name or short description to identify the agreement. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.LocalProfileId">
            <summary>
            <para>
            <para>A unique identifier for the AS2 local profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.PartnerProfileId">
            <summary>
            <para>
            <para>A unique identifier for the partner profile used in the agreement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance. This is the specific server
            that the agreement uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.Status">
            <summary>
            <para>
            <para>The status of the agreement. The agreement can be either <code>ACTIVE</code> or <code>INACTIVE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for agreements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AgreementId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateAgreementResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateAgreementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRAgreementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet">
            <summary>
            Creates the connector, which captures the parameters for an outbound connection for
            the AS2 protocol. The connector is required for sending files to an externally hosted
            AS2 server. For more details about connectors, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/create-b2b-server.html#configure-as2-connector">Create
            AS2 connectors</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.AccessRole">
            <summary>
            <para>
            <para>With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_Compression">
            <summary>
            <para>
            <para>Specifies whether the AS2 file is compressed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_EncryptionAlgorithm">
            <summary>
            <para>
            <para>The algorithm that is used to encrypt the file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_LocalProfileId">
            <summary>
            <para>
            <para>A unique identifier for the AS2 local profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.LoggingRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you
            can view connector activity in your CloudWatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_MdnResponse">
            <summary>
            <para>
            <para>Used for outbound requests (from an Transfer Family server to a partner AS2 server)
            to determine whether the partner response for transfers is synchronous or asynchronous.
            Specify either of the following values:</para><ul><li><para><code>SYNC</code>: The system expects a synchronous MDN response, confirming that
            the file was transferred successfully (or not).</para></li><li><para><code>NONE</code>: Specifies that no MDN response is required.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_MdnSigningAlgorithm">
            <summary>
            <para>
            <para>The signing algorithm for the MDN response.</para><note><para>If set to DEFAULT (or not set at all), the value for <code>SigningAlogorithm</code>
            is used.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_MessageSubject">
            <summary>
            <para>
            <para>Used as the <code>Subject</code> HTTP header attribute in AS2 messages that are being
            sent with the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_PartnerProfileId">
            <summary>
            <para>
            <para>A unique identifier for the partner profile for the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.As2Config_SigningAlgorithm">
            <summary>
            <para>
            <para>The algorithm that is used to sign the AS2 messages sent with the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for connectors. Tags are metadata
            attached to connectors for any purpose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.Url">
            <summary>
            <para>
            <para>The URL of the partner's AS2 endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectorId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateConnectorResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateConnectorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRConnectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet">
            <summary>
            Creates the local or partner profile to use for AS2 transfers.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.As2Id">
            <summary>
            <para>
            <para>The <code>As2Id</code> is the <i>AS2-name</i>, as defined in the <a href="https://datatracker.ietf.org/doc/html/rfc4130">RFC
            4130</a>. For inbound transfers, this is the <code>AS2-From</code> header for the
            AS2 messages sent from the partner. For outbound connectors, this is the <code>AS2-To</code>
            header for the AS2 messages sent to the partner using the <code>StartFileTransfer</code>
            API operation. This ID cannot include spaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.CertificateId">
            <summary>
            <para>
            <para>An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.ProfileType">
            <summary>
            <para>
            <para>Determines the type of profile to create:</para><ul><li><para>Specify <code>LOCAL</code> to create a local profile. A local profile represents the
            AS2-enabled Transfer Family server organization or party.</para></li><li><para>Specify <code>PARTNER</code> to create a partner profile. A partner profile represents
            a remote organization, external to Transfer Family.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for AS2 profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfileId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateProfileResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the As2Id parameter.
            The -PassThru parameter is deprecated, use -Select '^As2Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet">
            <summary>
            Instantiates an auto-scaling virtual server based on the selected file transfer protocol
            in Amazon Web Services. When you make updates to your file transfer protocol-enabled
            server or when you work with users, use the service-generated <code>ServerId</code>
            property that is assigned to the newly created server.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointDetails_AddressAllocationId">
            <summary>
            <para>
            <para>A list of address allocation IDs that are required to attach an Elastic IP address
            to your server's endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>
            and it is only valid in the <code>UpdateServer</code> API.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.ProtocolDetails_As2Transport">
            <summary>
            <para>
            <para>Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Certificate">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Certificate Manager (ACM) certificate. Required
            when <code>Protocols</code> is set to <code>FTPS</code>.</para><para>To request a new public certificate, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html">Request
            a public certificate</a> in the <i>Certificate Manager User Guide</i>.</para><para>To import an existing certificate into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            certificates into ACM</a> in the <i>Certificate Manager User Guide</i>.</para><para>To request a private certificate to use FTPS through private IP addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html">Request
            a private certificate</a> in the <i>Certificate Manager User Guide</i>.</para><para>Certificates with the following cryptographic algorithms and key sizes are supported:</para><ul><li><para>2048-bit RSA (RSA_2048)</para></li><li><para>4096-bit RSA (RSA_4096)</para></li><li><para>Elliptic Prime Curve 256 bit (EC_prime256v1)</para></li><li><para>Elliptic Prime Curve 384 bit (EC_secp384r1)</para></li><li><para>Elliptic Prime Curve 521 bit (EC_secp521r1)</para></li></ul><note><para>The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP
            address specified and information about the issuer.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.IdentityProviderDetails_DirectoryId">
            <summary>
            <para>
            <para>The identifier of the Directory Service directory that you want to stop sharing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Domain">
            <summary>
            <para>
            <para>The domain of the storage system that is used for file transfers. There are two domains
            available: Amazon Simple Storage Service (Amazon S3) and Amazon Elastic File System
            (Amazon EFS). The default value is S3.</para><note><para>After the server is created, the domain cannot be changed.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointType">
            <summary>
            <para>
            <para>The type of endpoint that you want your server to use. You can choose to make your
            server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an
            endpoint that is hosted in a VPC, you can restrict access to your server and resources
            only within your VPC or choose to make it internet facing by attaching Elastic IP
            addresses directly to it.</para><note><para> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Services account if your account hasn't already done so before
            May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Services account on or before May 19, 2021, you will not be affected.
            After this date, use <code>EndpointType</code>=<code>VPC</code>.</para><para>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</para><para>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.
            With this endpoint type, you have the option to directly associate up to three Elastic
            IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security
            groups to restrict traffic by the client's public IP address. This is not possible
            with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.IdentityProviderDetails_Function">
            <summary>
            <para>
            <para>The ARN for a lambda function to use for the Identity provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.HostKey">
            <summary>
            <para>
            <para>The RSA, ECDSA, or ED25519 private key to use for your SFTP-enabled server. You can
            add multiple host keys, in case you want to rotate keys, or have a set of active keys
            that use different algorithms.</para><para>Use the following command to generate an RSA 2048 bit key with no passphrase:</para><para><code>ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key</code>.</para><para>Use a minimum value of 2048 for the <code>-b</code> option. You can create a stronger
            key by using 3072 or 4096.</para><para>Use the following command to generate an ECDSA 256 bit key with no passphrase:</para><para><code>ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key</code>.</para><para>Valid values for the <code>-b</code> option for ECDSA are 256, 384, and 521.</para><para>Use the following command to generate an ED25519 key with no passphrase:</para><para><code>ssh-keygen -t ed25519 -N "" -f my-new-server-key</code>.</para><para>For all of these commands, you can replace <i>my-new-server-key</i> with a string
            of your choice.</para><important><para>If you aren't planning to migrate existing users from an existing SFTP-enabled server
            to a new server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.</para></important><para>For more information, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key">Update
            host keys for your SFTP-enabled server</a> in the <i>Transfer Family User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.IdentityProviderType">
            <summary>
            <para>
            <para>The mode of authentication for a server. The default value is <code>SERVICE_MANAGED</code>,
            which allows you to store and access user credentials within the Transfer Family service.</para><para>Use <code>AWS_DIRECTORY_SERVICE</code> to provide access to Active Directory groups
            in Directory Service for Microsoft Active Directory or Microsoft Active Directory
            in your on-premises environment or in Amazon Web Services using AD Connector. This
            option also requires you to provide a Directory ID by using the <code>IdentityProviderDetails</code>
            parameter.</para><para>Use the <code>API_GATEWAY</code> value to integrate with an identity provider of your
            choosing. The <code>API_GATEWAY</code> setting requires you to provide an Amazon API
            Gateway endpoint URL to call for authentication by using the <code>IdentityProviderDetails</code>
            parameter.</para><para>Use the <code>AWS_LAMBDA</code> value to directly use an Lambda function as your identity
            provider. If you choose this value, you must specify the ARN for the Lambda function
            in the <code>Function</code> parameter or the <code>IdentityProviderDetails</code>
            data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.IdentityProviderDetails_InvocationRole">
            <summary>
            <para>
            <para>Provides the type of <code>InvocationRole</code> used to authenticate the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.LoggingRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.WorkflowDetails_OnPartialUpload">
            <summary>
            <para>
            <para>A trigger that starts a workflow if a file is only partially uploaded. You can attach
            a workflow to a server that executes whenever there is a partial upload.</para><para>A <i>partial upload</i> occurs when a file is open when the session disconnects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.WorkflowDetails_OnUpload">
            <summary>
            <para>
            <para>A trigger that starts a workflow: the workflow begins to execute after a file is uploaded.</para><para>To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code>
            object, as in the following example.</para><para><code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details
            '{"OnUpload":[]}'</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.ProtocolDetails_PassiveIp">
            <summary>
            <para>
            <para> Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address,
            such as the public IP address of a firewall, router, or load balancer. For example:
            </para><para><code>aws transfer update-server --protocol-details PassiveIp=0.0.0.0</code></para><para>Replace <code>0.0.0.0</code> in the example above with the actual IP address you want
            to use.</para><note><para> If you change the <code>PassiveIp</code> value, you must stop and then restart your
            Transfer Family server for the change to take effect. For details on using passive
            mode (PASV) in a NAT environment, see <a href="http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/">Configuring
            your FTPS server behind a firewall or NAT with Transfer Family</a>. </para></note><para><i>Special values</i></para><para>The <code>AUTO</code> and <code>0.0.0.0</code> are special values for the <code>PassiveIp</code>
            parameter. The value <code>PassiveIp=AUTO</code> is assigned by default to FTP and
            FTPS type servers. In this case, the server automatically responds with one of the
            endpoint IPs within the PASV response. <code>PassiveIp=0.0.0.0</code> has a more unique
            application for its usage. For example, if you have a High Availability (HA) Network
            Load Balancer (NLB) environment, where you have 3 subnets, you can only specify a
            single IP address using the <code>PassiveIp</code> parameter. This reduces the effectiveness
            of having High Availability. In this case, you can specify <code>PassiveIp=0.0.0.0</code>.
            This tells the client to use the same IP address as the Control connection and utilize
            all AZs for their connections. Note, however, that not all FTP clients support the
            <code>PassiveIp=0.0.0.0</code> response. FileZilla and WinSCP do support it. If you
            are using other clients, check to see if your client supports the <code>PassiveIp=0.0.0.0</code>
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.PostAuthenticationLoginBanner">
            <summary>
            <para>
            <para>Specifies a string to display when users connect to a server. This string is displayed
            after the user authenticates.</para><note><para>The SFTP protocol does not support post-authentication display banners.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.PreAuthenticationLoginBanner">
            <summary>
            <para>
            <para>Specifies a string to display when users connect to a server. This string is displayed
            before the user authenticates. For example, the following banner displays details
            about using the system:</para><para><code>This system is for the use of authorized users only. Individuals using this
            computer system without authority, or in excess of their authority, are subject to
            having all of their activities on this system monitored and recorded by system personnel.</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Protocol">
            <summary>
            <para>
            <para>Specifies the file transfer protocol or protocols over which your file transfer protocol
            client can connect to your server's endpoint. The available protocols are:</para><ul><li><para><code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
            SSH</para></li><li><para><code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption</para></li><li><para><code>FTP</code> (File Transfer Protocol): Unencrypted file transfer</para></li><li><para><code>AS2</code> (Applicability Statement 2): used for transporting structured business-to-business
            data</para></li></ul><note><ul><li><para>If you select <code>FTPS</code>, you must choose a certificate stored in Certificate
            Manager (ACM) which is used to identify your server when clients connect to it over
            FTPS.</para></li><li><para>If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then
            the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code>
            must be <code>AWS_DIRECTORY_SERVICE</code> or <code>API_GATEWAY</code>.</para></li><li><para>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>
            cannot be associated.</para></li><li><para>If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code>
            can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be
            set to <code>SERVICE_MANAGED</code>.</para></li><li><para>If <code>Protocol</code> includes <code>AS2</code>, then the <code>EndpointType</code>
            must be <code>VPC</code>, and domain must be Amazon S3.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointDetails_SecurityGroupId">
            <summary>
            <para>
            <para>A list of security groups IDs that are available to attach to your server's endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para><para>You can edit the <code>SecurityGroupIds</code> property in the <a href="https://docs.aws.amazon.com/transfer/latest/userguide/API_UpdateServer.html">UpdateServer</a>
            API only if you are changing the <code>EndpointType</code> from <code>PUBLIC</code>
            or <code>VPC_ENDPOINT</code> to <code>VPC</code>. To change security groups associated
            with your server's VPC endpoint after creation, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html">ModifyVpcEndpoint</a>
            API.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.SecurityPolicyName">
            <summary>
            <para>
            <para>Specifies the name of the security policy that is attached to the server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.ProtocolDetails_SetStatOption">
            <summary>
            <para>
            <para>Use the <code>SetStatOption</code> to ignore the error that is generated when the
            client attempts to use <code>SETSTAT</code> on a file you are uploading to an S3 bucket.</para><para>Some SFTP file transfer clients can attempt to change the attributes of remote files,
            including timestamp and permissions, using commands, such as <code>SETSTAT</code>
            when uploading the file. However, these commands are not compatible with object storage
            systems, such as Amazon S3. Due to this incompatibility, file uploads from these clients
            can result in errors even when the file is otherwise successfully uploaded.</para><para>Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore
            the <code>SETSTAT</code> command, and upload files without needing to make any changes
            to your SFTP client. While the <code>SetStatOption</code><code>ENABLE_NO_OP</code>
            setting ignores the error, it does generate a log entry in Amazon CloudWatch Logs,
            so you can determine when the client is making a <code>SETSTAT</code> call.</para><note><para>If you want to preserve the original timestamp for your file, and modify other file
            attributes using <code>SETSTAT</code>, you can use Amazon EFS as backend storage with
            Transfer Family.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointDetails_SubnetId">
            <summary>
            <para>
            <para>A list of subnet IDs that are required to host your server endpoint in your VPC.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for servers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.ProtocolDetails_TlsSessionResumptionMode">
            <summary>
            <para>
            <para>A property used with Transfer Family servers that use the FTPS protocol. TLS Session
            Resumption provides a mechanism to resume or share a negotiated secret key between
            the control and data connection for an FTPS session. <code>TlsSessionResumptionMode</code>
            determines whether or not the server resumes recent, negotiated sessions through a
            unique session ID. This property is available during <code>CreateServer</code> and
            <code>UpdateServer</code> calls. If a <code>TlsSessionResumptionMode</code> value
            is not specified during <code>CreateServer</code>, it is set to <code>ENFORCED</code>
            by default.</para><ul><li><para><code>DISABLED</code>: the server does not process TLS session resumption client
            requests and creates a new TLS session for each request. </para></li><li><para><code>ENABLED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server doesn't reject client data connections that do
            not perform the TLS session resumption client processing.</para></li><li><para><code>ENFORCED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server rejects client data connections that do not perform
            the TLS session resumption client processing. Before you set the value to <code>ENFORCED</code>,
            test your clients.</para><note><para>Not all FTPS clients perform TLS session resumption. So, if you choose to enforce
            TLS session resumption, you prevent any connections from FTPS clients that don't perform
            the protocol negotiation. To determine whether or not you can use the <code>ENFORCED</code>
            value, you need to test your clients.</para></note></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.IdentityProviderDetails_Url">
            <summary>
            <para>
            <para>Provides the location of the service endpoint used to authenticate users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointDetails_VpcEndpointId">
            <summary>
            <para>
            <para>The identifier of the VPC endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC_ENDPOINT</code>.</para><para>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.EndpointDetails_VpcId">
            <summary>
            <para>
            <para>The VPC identifier of the VPC in which a server's endpoint will be hosted.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServerId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateServerResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet">
            <summary>
            Creates a user and associates them with an existing file transfer protocol-enabled
            server. You can only create and associate users with servers that have the <code>IdentityProviderType</code>
            set to <code>SERVICE_MANAGED</code>. Using parameters for <code>CreateUser</code>,
            you can specify the user name, set the home directory, store the user's public key,
            and assign the user's Identity and Access Management (IAM) role. You can also optionally
            add a session policy, and assign metadata with tags that can be used to group and
            search for users.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.PosixProfile_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.HomeDirectory">
            <summary>
            <para>
            <para>The landing directory (folder) for a user when they log in to the server using the
            client.</para><para>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.HomeDirectoryMapping">
            <summary>
            <para>
            <para>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example.</para><para><code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code></para><para>In most cases, you can use this value instead of the session policy to lock your user
            down to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the HomeDirectory
            parameter value.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</para><para><code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.HomeDirectoryType">
            <summary>
            <para>
            <para>The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol
            clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code>
            for how you want to make Amazon S3 or Amazon EFS paths visible to your users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.Policy">
            <summary>
            <para>
            <para>A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</para><note><para>This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.</para><para>For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.</para><para>For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web Services Security Token Service API Reference</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.PosixProfile_SecondaryGid">
            <summary>
            <para>
            <para>The secondary POSIX group IDs used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.SshPublicKeyBody">
            <summary>
            <para>
            <para>The public portion of the Secure Shell (SSH) key used to authenticate the user to
            the server.</para><para>Transfer Family accepts RSA, ECDSA, and ED25519 keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for users. Tags are metadata
            attached to users for any purpose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.PosixProfile_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.UserName">
            <summary>
            <para>
            <para>A unique string that identifies a user and is associated with a <code>ServerId</code>.
            This user name must be a minimum of 3 and a maximum of 100 characters long. The following
            are valid characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and at
            sign '@'. The user name can't start with a hyphen, period, or at sign.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateUserResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet">
            <summary>
            Allows you to create a workflow with specified steps and step details the workflow
            invokes after file transfer completes. After creating a workflow, you can associate
            the workflow created with any transfer servers by specifying the <code>workflow-details</code>
            field in <code>CreateServer</code> and <code>UpdateServer</code> operations.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.Description">
            <summary>
            <para>
            <para>A textual description for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.OnExceptionStep">
            <summary>
            <para>
            <para>Specifies the steps (actions) to take if errors are encountered during execution of
            the workflow.</para><note><para>For custom steps, the lambda function needs to send <code>FAILURE</code> to the call
            back API to kick off the exception steps. Additionally, if the lambda does not send
            <code>SUCCESS</code> before it times out, the exception steps are executed.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.Step">
            <summary>
            <para>
            <para>Specifies the details for the steps that are in the specified workflow.</para><para> The <code>TYPE</code> specifies which of the following actions is being taken for
            this step. </para><ul><li><para><i>COPY</i>: Copy the file to another location.</para></li><li><para><i>CUSTOM</i>: Perform a custom step with an Lambda function target.</para></li><li><para><i>DELETE</i>: Delete the file.</para></li><li><para><i>TAG</i>: Add a tag to the file.</para></li></ul><note><para> Currently, copying and tagging are supported only on S3. </para></note><para> For file location, you specify either the S3 bucket and key, or the EFS file system
            ID and path. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that can be used to group and search for workflows. Tags are metadata
            attached to workflows for any purpose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkflowId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.CreateWorkflowResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.CreateWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Description parameter.
            The -PassThru parameter is deprecated, use -Select '^Description' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.NewTFRWorkflowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet">
            <summary>
            Allows you to delete the access specified in the <code>ServerID</code> and <code>ExternalID</code>
            parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet.ExternalId">
            <summary>
            <para>
            <para>A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.</para><para><code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code></para><para>In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.</para><para>The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that has this user assigned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteAccessResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet">
            <summary>
            Delete the agreement that's specified in the provided <code>AgreementId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet.AgreementId">
            <summary>
            <para>
            <para>A unique identifier for the agreement. This identifier is returned when you create
            an agreement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet.ServerId">
            <summary>
            <para>
            <para>The server identifier associated with the agreement that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteAgreementResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgreementId parameter.
            The -PassThru parameter is deprecated, use -Select '^AgreementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRAgreementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRCertificateCmdlet">
            <summary>
            Deletes the certificate that's specified in the <code>CertificateId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The identifier of the certificate object that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRConnectorCmdlet">
            <summary>
            Deletes the agreement that's specified in the provided <code>ConnectorId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRConnectorCmdlet.ConnectorId">
            <summary>
            <para>
            <para>The unique identifier for the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRConnectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteConnectorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRConnectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRConnectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet">
            <summary>
            Deletes the host key that's specified in the <code>HoskKeyId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet.HostKeyId">
            <summary>
            <para>
            <para>The identifier of the host key that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server that contains the host key that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteHostKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRHostKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRProfileCmdlet">
            <summary>
            Deletes the profile that's specified in the <code>ProfileId</code> parameter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRProfileCmdlet.ProfileId">
            <summary>
            <para>
            <para>The identifier of the profile that you are deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet">
            <summary>
            Detaches a key-value pair from a resource, as identified by its Amazon Resource Name
            (ARN). Resources are users, servers, roles, and other entities.
            
             
            <para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet.Arn">
            <summary>
            <para>
            <para>The value of the resource that will have the tag removed. An Amazon Resource Name
            (ARN) is an identifier for a specific Amazon Web Services resource, such as a server,
            user, or role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>TagKeys are key-value pairs assigned to ARNs that can be used to group and search
            for resources by type. This metadata can be attached to resources for any purpose.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Arn parameter.
            The -PassThru parameter is deprecated, use -Select '^Arn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRServerCmdlet">
            <summary>
            Deletes the file transfer protocol-enabled server that you specify.
            
             
            <para>
            No response returns from this operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRServerCmdlet.ServerId">
            <summary>
            <para>
            <para>A unique system-assigned identifier for a server instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteServerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet">
            <summary>
            Deletes a user's Secure Shell (SSH) public key.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a file transfer protocol-enabled server instance
            that has the user assigned to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.SshPublicKeyId">
            <summary>
            <para>
            <para>A unique identifier used to reference your user's specific SSH key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.UserName">
            <summary>
            <para>
            <para>A unique string that identifies a user whose public key is being deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteSshPublicKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SshPublicKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^SshPublicKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRSshPublicKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet">
            <summary>
            Deletes the user belonging to a file transfer protocol-enabled server you specify.
            
             
            <para>
            No response returns from this operation.
            </para><note><para>
            When you delete a user from a server, the user's information is lost.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance that has the user assigned
            to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet.UserName">
            <summary>
            <para>
            <para>A unique string that identifies a user that is being deleted from a server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRWorkflowCmdlet">
            <summary>
            Deletes the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRWorkflowCmdlet.WorkflowId">
            <summary>
            <para>
            <para>A unique identifier for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.DeleteWorkflowResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.RemoveTFRWorkflowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet">
            <summary>
            Sends a callback for asynchronous custom steps.
            
             
            <para>
             The <code>ExecutionId</code>, <code>WorkflowId</code>, and <code>Token</code> are
            passed to the target resource during execution of a custom step of a workflow. You
            must include those with their callback as well as providing a status. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.ExecutionId">
            <summary>
            <para>
            <para>A unique identifier for the execution of a workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.Status">
            <summary>
            <para>
            <para>Indicates whether the specified step succeeded or failed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.Token">
            <summary>
            <para>
            <para>Used to distinguish between multiple callbacks for multiple Lambda steps within the
            same execution.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.WorkflowId">
            <summary>
            <para>
            <para>A unique identifier for the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.SendWorkflowStepStateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkflowId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkflowId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.SendTFRWorkflowStepStateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet">
            <summary>
            Begins an outbound file transfer to a remote AS2 server. You specify the <code>ConnectorId</code>
            and the file paths for where to send the files.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet.ConnectorId">
            <summary>
            <para>
            <para>The unique identifier for the connector. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet.SendFilePath">
            <summary>
            <para>
            <para>An array of strings. Each string represents the absolute path for one outbound file
            transfer. For example, <code><i>DOC-EXAMPLE-BUCKET</i>/<i>myfile.txt</i></code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransferId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.StartFileTransferResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.StartFileTransferResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRFileTransferCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.StartTFRServerCmdlet">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>OFFLINE</code>
            to <code>ONLINE</code>. It has no impact on a server that is already <code>ONLINE</code>.
            An <code>ONLINE</code> server can accept and process file transfer jobs.
            
             
            <para>
            The state of <code>STARTING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully online. The values of <code>START_FAILED</code>
            can indicate an error condition.
            </para><para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRServerCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that you start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.StartServerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StartTFRServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.StopTFRServerCmdlet">
            <summary>
            Changes the state of a file transfer protocol-enabled server from <code>ONLINE</code>
            to <code>OFFLINE</code>. An <code>OFFLINE</code> server cannot accept and process
            file transfer jobs. Information tied to your server, such as server and user properties,
            are not affected by stopping your server.
            
             <note><para>
            Stopping the server does not reduce or impact your file transfer protocol endpoint
            billing; you must delete the server to stop being billed.
            </para></note><para>
            The state of <code>STOPPING</code> indicates that the server is in an intermediate
            state, either not fully able to respond, or not fully offline. The values of <code>STOP_FAILED</code>
            can indicate an error condition.
            </para><para>
            No response is returned from this call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StopTFRServerCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server that you stopped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StopTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.StopServerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StopTFRServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.StopTFRServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet">
            <summary>
            If the <code>IdentityProviderType</code> of a file transfer protocol-enabled server
            is <code>AWS_DIRECTORY_SERVICE</code> or <code>API_Gateway</code>, tests whether your
            identity provider is set up successfully. We highly recommend that you call this operation
            to test your authentication method as soon as you create your server. By doing so,
            you can troubleshoot issues with the identity provider integration to ensure that
            your users can successfully use the service.
            
             
            <para>
             The <code>ServerId</code> and <code>UserName</code> parameters are required. The
            <code>ServerProtocol</code>, <code>SourceIp</code>, and <code>UserPassword</code>
            are all optional. 
            </para><note><para>
             You cannot use <code>TestIdentityProvider</code> if the <code>IdentityProviderType</code>
            of your server is <code>SERVICE_MANAGED</code>. 
            </para></note><ul><li><para>
             If you provide any incorrect values for any parameters, the <code>Response</code>
            field is empty. 
            </para></li><li><para>
             If you provide a server ID for a server that uses service-managed users, you get
            an error: 
            </para><para><code> An error occurred (InvalidRequestException) when calling the TestIdentityProvider
            operation: s-<i>server-ID</i> not configured for external auth </code></para></li><li><para>
             If you enter a Server ID for the <code>--server-id</code> parameter that does not
            identify an actual Transfer server, you receive the following error: 
            </para><para><code>An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider
            operation: Unknown server</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned identifier for a specific server. That server's user authentication
            method is tested with a user name and password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.ServerProtocol">
            <summary>
            <para>
            <para>The type of file transfer protocol to be tested.</para><para>The available protocols are:</para><ul><li><para>Secure Shell (SSH) File Transfer Protocol (SFTP)</para></li><li><para>File Transfer Protocol Secure (FTPS)</para></li><li><para>File Transfer Protocol (FTP)</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.SourceIp">
            <summary>
            <para>
            <para>The source IP address of the user account to be tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user account to be tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.UserPassword">
            <summary>
            <para>
            <para>The password of the user account to be tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.TestIdentityProviderResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.TestIdentityProviderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.TestTFRIdentityProviderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet">
            <summary>
            Allows you to update parameters for the access specified in the <code>ServerID</code>
            and <code>ExternalID</code> parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.ExternalId">
            <summary>
            <para>
            <para>A unique identifier that is required to identify specific groups within your directory.
            The users of the group that you associate have access to your Amazon S3 or Amazon
            EFS resources over the enabled protocols using Transfer Family. If you know the group
            name, you can view the SID values by running the following command using Windows PowerShell.</para><para><code>Get-ADGroup -Filter {samAccountName -like "<i>YourGroupName</i>*"} -Properties
            * | Select SamAccountName,ObjectSid</code></para><para>In that command, replace <i>YourGroupName</i> with the name of your Active Directory
            group.</para><para>The regular expression used to validate this parameter is a string of characters consisting
            of uppercase and lowercase alphanumeric characters with no spaces. You can also include
            underscores or any of the following characters: =,.@:/-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.PosixProfile_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.HomeDirectory">
            <summary>
            <para>
            <para>The landing directory (folder) for a user when they log in to the server using the
            client.</para><para>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.HomeDirectoryMapping">
            <summary>
            <para>
            <para>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example.</para><para><code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code></para><para>In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to <code>/</code> and set <code>Target</code> to the <code>HomeDirectory</code>
            parameter value.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</para><para><code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.HomeDirectoryType">
            <summary>
            <para>
            <para>The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol
            clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code>
            for how you want to make Amazon S3 or Amazon EFS paths visible to your users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.Policy">
            <summary>
            <para>
            <para>A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</para><note><para>This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.</para><para>For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.</para><para>For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html">Example
            session policy</a>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web ServicesSecurity Token Service API Reference</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.PosixProfile_SecondaryGid">
            <summary>
            <para>
            <para>The secondary POSIX group IDs used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance. This is the specific server
            that you added your user to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.PosixProfile_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateAccessResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateAccessResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet">
            <summary>
            Updates some of the parameters for an existing agreement. Provide the <code>AgreementId</code>
            and the <code>ServerId</code> for the agreement that you want to update, along with
            the new values for the parameters to update.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.AccessRole">
            <summary>
            <para>
            <para>With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.AgreementId">
            <summary>
            <para>
            <para>A unique identifier for the agreement. This identifier is returned when you create
            an agreement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.BaseDirectory">
            <summary>
            <para>
            <para>To change the landing directory (folder) for files that are transferred, provide the
            bucket folder that you want to use; for example, <code>/<i>DOC-EXAMPLE-BUCKET</i>/<i>home</i>/<i>mydirectory</i></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.Description">
            <summary>
            <para>
            <para>To replace the existing description, provide a short description for the agreement.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.LocalProfileId">
            <summary>
            <para>
            <para>A unique identifier for the AS2 local profile.</para><para>To change the local profile identifier, provide a new value here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.PartnerProfileId">
            <summary>
            <para>
            <para>A unique identifier for the partner profile. To change the partner profile identifier,
            provide a new value here.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance. This is the specific server
            that the agreement uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.Status">
            <summary>
            <para>
            <para>You can update the status for the agreement, either activating an inactive agreement
            or the reverse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AgreementId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateAgreementResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateAgreementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgreementId parameter.
            The -PassThru parameter is deprecated, use -Select '^AgreementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRAgreementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet">
            <summary>
            Updates the active and inactive dates for a certificate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.ActiveDate">
            <summary>
            <para>
            <para>An optional date that specifies when the certificate becomes active.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.CertificateId">
            <summary>
            <para>
            <para>The identifier of the certificate object that you are updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.Description">
            <summary>
            <para>
            <para>A short description to help identify the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.InactiveDate">
            <summary>
            <para>
            <para>An optional date that specifies when the certificate becomes inactive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateCertificateResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateId parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet">
            <summary>
            Updates some of the parameters for an existing connector. Provide the <code>ConnectorId</code>
            for the connector that you want to update, along with the new values for the parameters
            to update.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.AccessRole">
            <summary>
            <para>
            <para>With AS2, you can send files by calling <code>StartFileTransfer</code> and specifying
            the file paths in the request parameter, <code>SendFilePaths</code>. We use the file’s
            parent directory (for example, for <code>--send-file-paths /bucket/dir/file.txt</code>,
            parent directory is <code>/bucket/dir/</code>) to temporarily store a processed AS2
            message file, store the MDN when we receive them from the partner, and write a final
            JSON file containing relevant metadata of the transmission. So, the <code>AccessRole</code>
            needs to provide read and write access to the parent directory of the file location
            used in the <code>StartFileTransfer</code> request. Additionally, you need to provide
            read and write access to the parent directory of the files that you intend to send
            with <code>StartFileTransfer</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_Compression">
            <summary>
            <para>
            <para>Specifies whether the AS2 file is compressed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.ConnectorId">
            <summary>
            <para>
            <para>The unique identifier for the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_EncryptionAlgorithm">
            <summary>
            <para>
            <para>The algorithm that is used to encrypt the file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_LocalProfileId">
            <summary>
            <para>
            <para>A unique identifier for the AS2 local profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.LoggingRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a connector to turn on CloudWatch logging for Amazon S3 events. When set, you
            can view connector activity in your CloudWatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_MdnResponse">
            <summary>
            <para>
            <para>Used for outbound requests (from an Transfer Family server to a partner AS2 server)
            to determine whether the partner response for transfers is synchronous or asynchronous.
            Specify either of the following values:</para><ul><li><para><code>SYNC</code>: The system expects a synchronous MDN response, confirming that
            the file was transferred successfully (or not).</para></li><li><para><code>NONE</code>: Specifies that no MDN response is required.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_MdnSigningAlgorithm">
            <summary>
            <para>
            <para>The signing algorithm for the MDN response.</para><note><para>If set to DEFAULT (or not set at all), the value for <code>SigningAlogorithm</code>
            is used.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_MessageSubject">
            <summary>
            <para>
            <para>Used as the <code>Subject</code> HTTP header attribute in AS2 messages that are being
            sent with the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_PartnerProfileId">
            <summary>
            <para>
            <para>A unique identifier for the partner profile for the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.As2Config_SigningAlgorithm">
            <summary>
            <para>
            <para>The algorithm that is used to sign the AS2 messages sent with the connector.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.Url">
            <summary>
            <para>
            <para>The URL of the partner's AS2 endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectorId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateConnectorResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateConnectorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRConnectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet">
            <summary>
            Updates the description for the host key that's specified by the <code>ServerId</code>
            and <code>HostKeyId</code> parameters.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.Description">
            <summary>
            <para>
            <para>An updated description for the host key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.HostKeyId">
            <summary>
            <para>
            <para>The identifier of the host key that you are updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.ServerId">
            <summary>
            <para>
            <para>The identifier of the server that contains the host key that you are updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateHostKeyResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateHostKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^HostKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRHostKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet">
            <summary>
            Updates some of the parameters for an existing profile. Provide the <code>ProfileId</code>
            for the profile that you want to update, along with the new values for the parameters
            to update.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet.CertificateId">
            <summary>
            <para>
            <para>An array of identifiers for the imported certificates. You use this identifier for
            working with profiles and partner profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet.ProfileId">
            <summary>
            <para>
            <para>The identifier of the profile object that you are updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfileId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateProfileResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfileId parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfileId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet">
            <summary>
            Updates the file transfer protocol-enabled server's properties after that server has
            been created.
            
             
            <para>
            The <code>UpdateServer</code> call returns the <code>ServerId</code> of the server
            you updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointDetails_AddressAllocationId">
            <summary>
            <para>
            <para>A list of address allocation IDs that are required to attach an Elastic IP address
            to your server's endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>
            and it is only valid in the <code>UpdateServer</code> API.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.ProtocolDetails_As2Transport">
            <summary>
            <para>
            <para>Indicates the transport method for the AS2 messages. Currently, only HTTP is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.Certificate">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate Manager (ACM)
            certificate. Required when <code>Protocols</code> is set to <code>FTPS</code>.</para><para>To request a new public certificate, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-public.html">Request
            a public certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</para><para>To import an existing certificate into ACM, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing
            certificates into ACM</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</para><para>To request a private certificate to use FTPS through private IP addresses, see <a href="https://docs.aws.amazon.com/acm/latest/userguide/gs-acm-request-private.html">Request
            a private certificate</a> in the <i> Amazon Web ServicesCertificate Manager User Guide</i>.</para><para>Certificates with the following cryptographic algorithms and key sizes are supported:</para><ul><li><para>2048-bit RSA (RSA_2048)</para></li><li><para>4096-bit RSA (RSA_4096)</para></li><li><para>Elliptic Prime Curve 256 bit (EC_prime256v1)</para></li><li><para>Elliptic Prime Curve 384 bit (EC_secp384r1)</para></li><li><para>Elliptic Prime Curve 521 bit (EC_secp521r1)</para></li></ul><note><para>The certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP
            address specified and information about the issuer.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.IdentityProviderDetails_DirectoryId">
            <summary>
            <para>
            <para>The identifier of the Directory Service directory that you want to stop sharing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointType">
            <summary>
            <para>
            <para>The type of endpoint that you want your server to use. You can choose to make your
            server's endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an
            endpoint that is hosted in a VPC, you can restrict access to your server and resources
            only within your VPC or choose to make it internet facing by attaching Elastic IP
            addresses directly to it.</para><note><para> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount if your account hasn't already done so before May
            19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code>
            in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected.
            After this date, use <code>EndpointType</code>=<code>VPC</code>.</para><para>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</para><para>It is recommended that you use <code>VPC</code> as the <code>EndpointType</code>.
            With this endpoint type, you have the option to directly associate up to three Elastic
            IPv4 addresses (BYO IP included) with your server's endpoint and use VPC security
            groups to restrict traffic by the client's public IP address. This is not possible
            with <code>EndpointType</code> set to <code>VPC_ENDPOINT</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.IdentityProviderDetails_Function">
            <summary>
            <para>
            <para>The ARN for a lambda function to use for the Identity provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.HostKey">
            <summary>
            <para>
            <para>The RSA, ECDSA, or ED25519 private key to use for your SFTP-enabled server. You can
            add multiple host keys, in case you want to rotate keys, or have a set of active keys
            that use different algorithms.</para><para>Use the following command to generate an RSA 2048 bit key with no passphrase:</para><para><code>ssh-keygen -t rsa -b 2048 -N "" -m PEM -f my-new-server-key</code>.</para><para>Use a minimum value of 2048 for the <code>-b</code> option. You can create a stronger
            key by using 3072 or 4096.</para><para>Use the following command to generate an ECDSA 256 bit key with no passphrase:</para><para><code>ssh-keygen -t ecdsa -b 256 -N "" -m PEM -f my-new-server-key</code>.</para><para>Valid values for the <code>-b</code> option for ECDSA are 256, 384, and 521.</para><para>Use the following command to generate an ED25519 key with no passphrase:</para><para><code>ssh-keygen -t ed25519 -N "" -f my-new-server-key</code>.</para><para>For all of these commands, you can replace <i>my-new-server-key</i> with a string
            of your choice.</para><important><para>If you aren't planning to migrate existing users from an existing SFTP-enabled server
            to a new server, don't update the host key. Accidentally changing a server's host
            key can be disruptive.</para></important><para>For more information, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/edit-server-config.html#configuring-servers-change-host-key">Update
            host keys for your SFTP-enabled server</a> in the <i>Transfer Family User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.IdentityProviderDetails_InvocationRole">
            <summary>
            <para>
            <para>Provides the type of <code>InvocationRole</code> used to authenticate the user account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.LoggingRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFSevents.
            When set, you can view user activity in your CloudWatch logs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.WorkflowDetails_OnPartialUpload">
            <summary>
            <para>
            <para>A trigger that starts a workflow if a file is only partially uploaded. You can attach
            a workflow to a server that executes whenever there is a partial upload.</para><para>A <i>partial upload</i> occurs when a file is open when the session disconnects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.WorkflowDetails_OnUpload">
            <summary>
            <para>
            <para>A trigger that starts a workflow: the workflow begins to execute after a file is uploaded.</para><para>To remove an associated workflow from a server, you can provide an empty <code>OnUpload</code>
            object, as in the following example.</para><para><code>aws transfer update-server --server-id s-01234567890abcdef --workflow-details
            '{"OnUpload":[]}'</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.ProtocolDetails_PassiveIp">
            <summary>
            <para>
            <para> Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4 address,
            such as the public IP address of a firewall, router, or load balancer. For example:
            </para><para><code>aws transfer update-server --protocol-details PassiveIp=0.0.0.0</code></para><para>Replace <code>0.0.0.0</code> in the example above with the actual IP address you want
            to use.</para><note><para> If you change the <code>PassiveIp</code> value, you must stop and then restart your
            Transfer Family server for the change to take effect. For details on using passive
            mode (PASV) in a NAT environment, see <a href="http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/">Configuring
            your FTPS server behind a firewall or NAT with Transfer Family</a>. </para></note><para><i>Special values</i></para><para>The <code>AUTO</code> and <code>0.0.0.0</code> are special values for the <code>PassiveIp</code>
            parameter. The value <code>PassiveIp=AUTO</code> is assigned by default to FTP and
            FTPS type servers. In this case, the server automatically responds with one of the
            endpoint IPs within the PASV response. <code>PassiveIp=0.0.0.0</code> has a more unique
            application for its usage. For example, if you have a High Availability (HA) Network
            Load Balancer (NLB) environment, where you have 3 subnets, you can only specify a
            single IP address using the <code>PassiveIp</code> parameter. This reduces the effectiveness
            of having High Availability. In this case, you can specify <code>PassiveIp=0.0.0.0</code>.
            This tells the client to use the same IP address as the Control connection and utilize
            all AZs for their connections. Note, however, that not all FTP clients support the
            <code>PassiveIp=0.0.0.0</code> response. FileZilla and WinSCP do support it. If you
            are using other clients, check to see if your client supports the <code>PassiveIp=0.0.0.0</code>
            response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.PostAuthenticationLoginBanner">
            <summary>
            <para>
            <para>Specifies a string to display when users connect to a server. This string is displayed
            after the user authenticates.</para><note><para>The SFTP protocol does not support post-authentication display banners.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.PreAuthenticationLoginBanner">
            <summary>
            <para>
            <para>Specifies a string to display when users connect to a server. This string is displayed
            before the user authenticates. For example, the following banner displays details
            about using the system:</para><para><code>This system is for the use of authorized users only. Individuals using this
            computer system without authority, or in excess of their authority, are subject to
            having all of their activities on this system monitored and recorded by system personnel.</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.Protocol">
            <summary>
            <para>
            <para>Specifies the file transfer protocol or protocols over which your file transfer protocol
            client can connect to your server's endpoint. The available protocols are:</para><ul><li><para><code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
            SSH</para></li><li><para><code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS encryption</para></li><li><para><code>FTP</code> (File Transfer Protocol): Unencrypted file transfer</para></li><li><para><code>AS2</code> (Applicability Statement 2): used for transporting structured business-to-business
            data</para></li></ul><note><ul><li><para>If you select <code>FTPS</code>, you must choose a certificate stored in Certificate
            Manager (ACM) which is used to identify your server when clients connect to it over
            FTPS.</para></li><li><para>If <code>Protocol</code> includes either <code>FTP</code> or <code>FTPS</code>, then
            the <code>EndpointType</code> must be <code>VPC</code> and the <code>IdentityProviderType</code>
            must be <code>AWS_DIRECTORY_SERVICE</code> or <code>API_GATEWAY</code>.</para></li><li><para>If <code>Protocol</code> includes <code>FTP</code>, then <code>AddressAllocationIds</code>
            cannot be associated.</para></li><li><para>If <code>Protocol</code> is set only to <code>SFTP</code>, the <code>EndpointType</code>
            can be set to <code>PUBLIC</code> and the <code>IdentityProviderType</code> can be
            set to <code>SERVICE_MANAGED</code>.</para></li><li><para>If <code>Protocol</code> includes <code>AS2</code>, then the <code>EndpointType</code>
            must be <code>VPC</code>, and domain must be Amazon S3.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointDetails_SecurityGroupId">
            <summary>
            <para>
            <para>A list of security groups IDs that are available to attach to your server's endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para><para>You can edit the <code>SecurityGroupIds</code> property in the <a href="https://docs.aws.amazon.com/transfer/latest/userguide/API_UpdateServer.html">UpdateServer</a>
            API only if you are changing the <code>EndpointType</code> from <code>PUBLIC</code>
            or <code>VPC_ENDPOINT</code> to <code>VPC</code>. To change security groups associated
            with your server's VPC endpoint after creation, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyVpcEndpoint.html">ModifyVpcEndpoint</a>
            API.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.SecurityPolicyName">
            <summary>
            <para>
            <para>Specifies the name of the security policy that is attached to the server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance that the user account is
            assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.ProtocolDetails_SetStatOption">
            <summary>
            <para>
            <para>Use the <code>SetStatOption</code> to ignore the error that is generated when the
            client attempts to use <code>SETSTAT</code> on a file you are uploading to an S3 bucket.</para><para>Some SFTP file transfer clients can attempt to change the attributes of remote files,
            including timestamp and permissions, using commands, such as <code>SETSTAT</code>
            when uploading the file. However, these commands are not compatible with object storage
            systems, such as Amazon S3. Due to this incompatibility, file uploads from these clients
            can result in errors even when the file is otherwise successfully uploaded.</para><para>Set the value to <code>ENABLE_NO_OP</code> to have the Transfer Family server ignore
            the <code>SETSTAT</code> command, and upload files without needing to make any changes
            to your SFTP client. While the <code>SetStatOption</code><code>ENABLE_NO_OP</code>
            setting ignores the error, it does generate a log entry in Amazon CloudWatch Logs,
            so you can determine when the client is making a <code>SETSTAT</code> call.</para><note><para>If you want to preserve the original timestamp for your file, and modify other file
            attributes using <code>SETSTAT</code>, you can use Amazon EFS as backend storage with
            Transfer Family.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointDetails_SubnetId">
            <summary>
            <para>
            <para>A list of subnet IDs that are required to host your server endpoint in your VPC.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.ProtocolDetails_TlsSessionResumptionMode">
            <summary>
            <para>
            <para>A property used with Transfer Family servers that use the FTPS protocol. TLS Session
            Resumption provides a mechanism to resume or share a negotiated secret key between
            the control and data connection for an FTPS session. <code>TlsSessionResumptionMode</code>
            determines whether or not the server resumes recent, negotiated sessions through a
            unique session ID. This property is available during <code>CreateServer</code> and
            <code>UpdateServer</code> calls. If a <code>TlsSessionResumptionMode</code> value
            is not specified during <code>CreateServer</code>, it is set to <code>ENFORCED</code>
            by default.</para><ul><li><para><code>DISABLED</code>: the server does not process TLS session resumption client
            requests and creates a new TLS session for each request. </para></li><li><para><code>ENABLED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server doesn't reject client data connections that do
            not perform the TLS session resumption client processing.</para></li><li><para><code>ENFORCED</code>: the server processes and accepts clients that are performing
            TLS session resumption. The server rejects client data connections that do not perform
            the TLS session resumption client processing. Before you set the value to <code>ENFORCED</code>,
            test your clients.</para><note><para>Not all FTPS clients perform TLS session resumption. So, if you choose to enforce
            TLS session resumption, you prevent any connections from FTPS clients that don't perform
            the protocol negotiation. To determine whether or not you can use the <code>ENFORCED</code>
            value, you need to test your clients.</para></note></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.IdentityProviderDetails_Url">
            <summary>
            <para>
            <para>Provides the location of the service endpoint used to authenticate users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointDetails_VpcEndpointId">
            <summary>
            <para>
            <para>The identifier of the VPC endpoint.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC_ENDPOINT</code>.</para><para>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.EndpointDetails_VpcId">
            <summary>
            <para>
            <para>The VPC identifier of the VPC in which a server's endpoint will be hosted.</para><note><para>This property can only be set when <code>EndpointType</code> is set to <code>VPC</code>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ServerId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateServerResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateServerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServerId parameter.
            The -PassThru parameter is deprecated, use -Select '^ServerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRServerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet">
            <summary>
            Assigns new properties to a user. Parameters you pass modify any or all of the following:
            the home directory, role, and policy for the <code>UserName</code> and <code>ServerId</code>
            you specify.
            
             
            <para>
            The response returns the <code>ServerId</code> and the <code>UserName</code> for the
            updated user.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.PosixProfile_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.HomeDirectory">
            <summary>
            <para>
            <para>The landing directory (folder) for a user when they log in to the server using the
            client.</para><para>A <code>HomeDirectory</code> example is <code>/bucket_name/home/mydirectory</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.HomeDirectoryMapping">
            <summary>
            <para>
            <para>Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys
            should be visible to your user and how you want to make them visible. You must specify
            the <code>Entry</code> and <code>Target</code> pair, where <code>Entry</code> shows
            how the path is made visible and <code>Target</code> is the actual Amazon S3 or Amazon
            EFS path. If you only specify a target, it is displayed as is. You also must ensure
            that your Identity and Access Management (IAM) role provides access to paths in <code>Target</code>.
            This value can be set only when <code>HomeDirectoryType</code> is set to <i>LOGICAL</i>.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example.</para><para><code>[ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ]</code></para><para>In most cases, you can use this value instead of the session policy to lock down your
            user to the designated home directory ("<code>chroot</code>"). To do this, you can
            set <code>Entry</code> to '/' and set <code>Target</code> to the HomeDirectory parameter
            value.</para><para>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</para><para><code>[ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.HomeDirectoryType">
            <summary>
            <para>
            <para>The type of landing directory (folder) that you want your users' home directory to
            be when they log in to the server. If you set it to <code>PATH</code>, the user will
            see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol
            clients. If you set it <code>LOGICAL</code>, you need to provide mappings in the <code>HomeDirectoryMappings</code>
            for how you want to make Amazon S3 or Amazon EFS paths visible to your users.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.Policy">
            <summary>
            <para>
            <para>A session policy for your user so that you can use the same Identity and Access Management
            (IAM) role across multiple users. This policy scopes down a user's access to portions
            of their Amazon S3 bucket. Variables that you can use inside this policy include <code>${Transfer:UserName}</code>,
            <code>${Transfer:HomeDirectory}</code>, and <code>${Transfer:HomeBucket}</code>.</para><note><para>This policy applies only when the domain of <code>ServerId</code> is Amazon S3. Amazon
            EFS does not use session policies.</para><para>For session policies, Transfer Family stores the policy as a JSON blob, instead of
            the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and
            pass it in the <code>Policy</code> argument.</para><para>For an example of a session policy, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/session-policy">Creating
            a session policy</a>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html">AssumeRole</a>
            in the <i>Amazon Web Services Security Token Service API Reference</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that
            controls your users' access to your Amazon S3 bucket or Amazon EFS file system. The
            policies attached to this role determine the level of access that you want to provide
            your users when transferring files into and out of your Amazon S3 bucket or Amazon
            EFS file system. The IAM role should also contain a trust relationship that allows
            the server to access your resources when servicing your users' transfer requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.PosixProfile_SecondaryGid">
            <summary>
            <para>
            <para>The secondary POSIX group IDs used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.ServerId">
            <summary>
            <para>
            <para>A system-assigned unique identifier for a server instance that the user account is
            assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.PosixProfile_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all EFS operations by this user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.UserName">
            <summary>
            <para>
            <para>A unique string that identifies a user and is associated with a server as specified
            by the <code>ServerId</code>. This user name must be a minimum of 3 and a maximum
            of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore
            '_', hyphen '-', period '.', and at sign '@'. The user name can't start with a hyphen,
            period, or at sign.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Transfer.Model.UpdateUserResponse).
            Specifying the name of a property of type Amazon.Transfer.Model.UpdateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TFR.UpdateTFRUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
