<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Translate</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet">
            <summary>
            Associates a specific tag with a resource. A tag is a key-value pair that adds as
            a metadata to a resource. For more information, see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html">
            Tagging your resources</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the given Amazon Translate resource to which you
            want to associate the tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Tags being associated with a specific Amazon Translate resource. There can be a maximum
            of 50 tags (both existing and pending) associated with a specific resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.AddTRNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet">
            <summary>
            Translates input text from the source language to the target language. For a list
            of available languages and language codes, see <a href="https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html">Supported
            languages</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.Settings_Formality">
            <summary>
            <para>
            <para>You can optionally specify the desired level of formality for translations to supported
            target languages. The formality setting controls the level of formal language usage
            (also known as <a href="https://en.wikipedia.org/wiki/Register_(sociolinguistics)">register</a>)
            in the translation output. You can set the value to informal or formal. If you don't
            specify a value for formality, or if the target language doesn't support formality,
            the translation will ignore the formality setting.</para><para> If you specify multiple target languages for the job, translate ignores the formality
            setting for any unsupported target language.</para><para>For a list of target languages that support formality, see <a href="https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html">Setting
            Formality</a> in the Amazon Translate Developer Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.Settings_Profanity">
            <summary>
            <para>
            <para>Enable the profanity setting if you want Amazon Translate to mask profane words and
            phrases in your translation output.</para><para>To mask profane words and phrases, Amazon Translate replaces them with the grawlix
            string “?$#@$“. This 5-character sequence is used for each profane word or phrase,
            regardless of the length or number of words.</para><para>Amazon Translate doesn't detect profanity in all of its supported languages. For languages
            that support profanity detection, see <a href="https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-profanity.html">Masking
            profanity</a> in the Amazon Translate Developer Guide.</para><para>If you specify multiple target languages for the job, all the target languages must
            support profanity masking. If any of the target languages don't support profanity
            masking, the translation job won't mask profanity for any target language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.SourceLanguageCode">
            <summary>
            <para>
            <para>The language code for the language of the source text. The language must be a language
            supported by Amazon Translate. For a list of language codes, see <a href="https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html">Supported
            languages</a>.</para><para>To have Amazon Translate determine the source language of your text, you can specify
            <code>auto</code> in the <code>SourceLanguageCode</code> field. If you specify <code>auto</code>,
            Amazon Translate will call <a href="https://docs.aws.amazon.com/comprehend/latest/dg/comprehend-general.html">Amazon
            Comprehend</a> to determine the source language.</para><note><para>If you specify <code>auto</code>, you must send the <code>TranslateText</code> request
            in a region that supports Amazon Comprehend. Otherwise, the request returns an error
            indicating that autodetect is not supported. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.TargetLanguageCode">
            <summary>
            <para>
            <para>The language code requested for the language of the target text. The language must
            be a language supported by Amazon Translate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.TerminologyName">
            <summary>
            <para>
            <para>The name of the terminology list file to be used in the TranslateText request. You
            can use 1 terminology list at most in a <code>TranslateText</code> request. Terminology
            lists can contain a maximum of 256 terms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.Text">
            <summary>
            <para>
            <para>The text to translate. The text string can be a maximum of 5,000 bytes long. Depending
            on your character set, this may be fewer than 5,000 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.TranslateTextResponse).
            Specifying the name of a property of type Amazon.Translate.Model.TranslateTextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ConvertToTRNTargetLanguageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet">
            <summary>
            Provides a list of languages (RFC-5646 codes and names) that Amazon Translate supports.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.DisplayLanguageCode">
            <summary>
            <para>
            <para>The language code for the language to use to display the language names in the response.
            The language code is <code>en</code> by default. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.NextToken">
            <summary>
            <para>
            <para>Include the NextToken value to fetch the next group of supported languages. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ListLanguagesResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ListLanguagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DisplayLanguageCode parameter.
            The -PassThru parameter is deprecated, use -Select '^DisplayLanguageCode' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNLanguageListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataCmdlet">
            <summary>
            Provides information about a parallel data resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataCmdlet.Name">
            <summary>
            <para>
            <para>The name of the parallel data resource that is being retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.GetParallelDataResponse).
            Specifying the name of a property of type Amazon.Translate.Model.GetParallelDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataListCmdlet">
            <summary>
            Provides a list of your parallel data resources in Amazon Translate.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of parallel data resources returned for each request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataListCmdlet.NextToken">
            <summary>
            <para>
            <para>A string that specifies the next page of results to return in a paginated response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ParallelDataPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ListParallelDataResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ListParallelDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNParallelDataListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNResourceTagCmdlet">
            <summary>
            Lists all tags associated with a given Amazon Translate resource. For more information,
            see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html"> Tagging
            your resources</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the given Amazon Translate resource you are querying.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyCmdlet">
            <summary>
            Retrieves a custom terminology.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyCmdlet.Name">
            <summary>
            <para>
            <para>The name of the custom terminology being retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyCmdlet.TerminologyDataFormat">
            <summary>
            <para>
            <para>The data format of the custom terminology being retrieved.</para><para>If you don't specify this parameter, Amazon Translate returns a file with the same
            format as the file that was imported to create the terminology. </para><para>If you specify this parameter when you retrieve a multi-directional terminology resource,
            you must specify the same format as the input file that was imported to create it.
            Otherwise, Amazon Translate throws an error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.GetTerminologyResponse).
            Specifying the name of a property of type Amazon.Translate.Model.GetTerminologyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyListCmdlet">
            <summary>
            Provides a list of custom terminologies associated with your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom terminologies returned per list request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>500</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the request to ListTerminologies was truncated, include the NextToken
            to fetch the next group of custom terminologies. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TerminologyPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ListTerminologiesResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ListTerminologiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTerminologyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobCmdlet">
            <summary>
            Gets the properties associated with an asynchronous batch translation job including
            name, ID, status, source and target languages, input/output S3 buckets, and so on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier that Amazon Translate generated for the job. The <a>StartTextTranslationJob</a>
            operation returns this identifier in its response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TextTranslationJobProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.DescribeTextTranslationJobResponse).
            Specifying the name of a property of type Amazon.Translate.Model.DescribeTextTranslationJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet">
            <summary>
            Gets a list of the batch translation jobs that you have submitted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.Filter_JobName">
            <summary>
            <para>
            <para>Filters the list of jobs by name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.Filter_JobStatus">
            <summary>
            <para>
            <para>Filters the list of jobs based by job status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.Filter_SubmittedAfterTime">
            <summary>
            <para>
            <para>Filters the list of jobs based on the time that the job was submitted for processing
            and returns only the jobs submitted after the specified time. Jobs are returned in
            descending order, newest to oldest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.Filter_SubmittedBeforeTime">
            <summary>
            <para>
            <para>Filters the list of jobs based on the time that the job was submitted for processing
            and returns only the jobs submitted before the specified time. Jobs are returned in
            ascending order, oldest to newest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in each page. The default value is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TextTranslationJobPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ListTextTranslationJobsResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ListTextTranslationJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter_JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter_JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.GetTRNTextTranslationJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet">
            <summary>
            Creates or updates a custom terminology, depending on whether one already exists for
            the given terminology name. Importing a terminology with the same name as an existing
            one will merge the terminologies based on the chosen merge strategy. The only supported
            merge strategy is OVERWRITE, where the imported terminology overwrites the existing
            terminology of the same name.
            
             
            <para>
            If you import a terminology that overwrites an existing one, the new terminology takes
            up to 10 minutes to fully propagate. After that, translations have access to the new
            terminology.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.Description">
            <summary>
            <para>
            <para>The description of the custom terminology being imported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.TerminologyData_Directionality">
            <summary>
            <para>
            <para>The directionality of your terminology resource indicates whether it has one source
            language (uni-directional) or multiple (multi-directional).</para><dl><dt>UNI</dt><dd><para>The terminology resource has one source language (for example, the first column in
            a CSV file), and all of its other languages are target languages. </para></dd><dt>MULTI</dt><dd><para>Any language in the terminology resource can be the source language or a target language.
            A single multi-directional terminology resource can be used for jobs that translate
            different language pairs. For example, if the terminology contains English and Spanish
            terms, it can be used for jobs that translate English to Spanish and Spanish to English.</para></dd></dl><para>When you create a custom terminology resource without specifying the directionality,
            it behaves as uni-directional terminology, although this parameter will have a null
            value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.TerminologyData_File">
            <summary>
            <para>
            <para>The file containing the custom terminology data. Your version of the AWS SDK performs
            a Base64-encoding on this field before sending a request to the AWS service. Users
            of the SDK should not perform Base64-encoding themselves.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.TerminologyData_Format">
            <summary>
            <para>
            <para>The data format of the custom terminology.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.EncryptionKey_Id">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the encryption key being used to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.MergeStrategy">
            <summary>
            <para>
            <para>The merge strategy of the custom terminology being imported. Currently, only the OVERWRITE
            merge strategy is supported. In this case, the imported terminology will overwrite
            an existing terminology of the same name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.Name">
            <summary>
            <para>
            <para>The name of the custom terminology being imported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to be associated with this resource. A tag is a key-value pair that adds metadata
            to a resource. Each tag key for the resource must be unique. For more information,
            see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html"> Tagging
            your resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.EncryptionKey_Type">
            <summary>
            <para>
            <para>The type of encryption key used by Amazon Translate to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TerminologyProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.ImportTerminologyResponse).
            Specifying the name of a property of type Amazon.Translate.Model.ImportTerminologyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.ImportTRNTerminologyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet">
            <summary>
            Creates a parallel data resource in Amazon Translate by importing an input file from
            Amazon S3. Parallel data files contain examples that show how you want segments of
            text to be translated. By adding parallel data, you can influence the style, tone,
            and word choice in your translation output.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.Description">
            <summary>
            <para>
            <para>A custom description for the parallel data resource in Amazon Translate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.ParallelDataConfig_Format">
            <summary>
            <para>
            <para>The format of the parallel data input file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.EncryptionKey_Id">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the encryption key being used to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.Name">
            <summary>
            <para>
            <para>A custom name for the parallel data resource in Amazon Translate. You must assign
            a name that is unique in the account and region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.ParallelDataConfig_S3Uri">
            <summary>
            <para>
            <para>The URI of the Amazon S3 folder that contains the parallel data input file. The folder
            must be in the same Region as the API endpoint you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to be associated with this resource. A tag is a key-value pair that adds metadata
            to a resource. Each tag key for the resource must be unique. For more information,
            see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html"> Tagging
            your resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.EncryptionKey_Type">
            <summary>
            <para>
            <para>The type of encryption key used by Amazon Translate to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique identifier for the request. This token is automatically generated when you
            use Amazon Translate through an AWS SDK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.CreateParallelDataResponse).
            Specifying the name of a property of type Amazon.Translate.Model.CreateParallelDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.NewTRNParallelDataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNParallelDataCmdlet">
            <summary>
            Deletes a parallel data resource in Amazon Translate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNParallelDataCmdlet.Name">
            <summary>
            <para>
            <para>The name of the parallel data resource that is being deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNParallelDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.DeleteParallelDataResponse).
            Specifying the name of a property of type Amazon.Translate.Model.DeleteParallelDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNParallelDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNParallelDataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet">
            <summary>
            Removes a specific tag associated with an Amazon Translate resource. For more information,
            see <a href="https://docs.aws.amazon.com/translate/latest/dg/tagging.html"> Tagging
            your resources</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the given Amazon Translate resource from which
            you want to remove the tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The initial part of a key-value pair that forms a tag being removed from a given resource.
            Keys must be unique and cannot be duplicated for a particular resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNTerminologyCmdlet">
            <summary>
            A synchronous action that deletes a custom terminology.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNTerminologyCmdlet.Name">
            <summary>
            <para>
            <para>The name of the custom terminology being deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNTerminologyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.DeleteTerminologyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNTerminologyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.RemoveTRNTerminologyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet">
            <summary>
            Starts an asynchronous batch translation job. Use batch translation jobs to translate
            large volumes of text across multiple documents at once. For batch translation, the
            input documents must share the same source language. You can specify one or more target
            languages. Batch translation translates each input document into each of the target
            languages. For more information, see <a href="https://docs.aws.amazon.com/translate/latest/dg/async.html">Asynchronous
            batch processing</a><para>
            Batch translation jobs can be described with the <a>DescribeTextTranslationJob</a>
            operation, listed with the <a>ListTextTranslationJobs</a> operation, and stopped with
            the <a>StopTextTranslationJob</a> operation.
            </para><note><para>
            Amazon Translate does not support batch translation of multiple source languages at
            once.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.InputDataConfig_ContentType">
            <summary>
            <para>
            <para>Describes the format of the data that you submit to Amazon Translate as input. You
            can specify one of the following multipurpose internet mail extension (MIME) types:</para><ul><li><para><code>text/html</code>: The input data consists of one or more HTML files. Amazon
            Translate translates only the text that resides in the <code>html</code> element in
            each file.</para></li><li><para><code>text/plain</code>: The input data consists of one or more unformatted text
            files. Amazon Translate translates every character in this type of input.</para></li><li><para><code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code>:
            The input data consists of one or more Word documents (.docx).</para></li><li><para><code>application/vnd.openxmlformats-officedocument.presentationml.presentation</code>:
            The input data consists of one or more PowerPoint Presentation files (.pptx).</para></li><li><para><code>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code>: The
            input data consists of one or more Excel Workbook files (.xlsx).</para></li><li><para><code>application/x-xliff+xml</code>: The input data consists of one or more XML
            Localization Interchange File Format (XLIFF) files (.xlf). Amazon Translate supports
            only XLIFF version 1.2.</para></li></ul><important><para>If you structure your input data as HTML, ensure that you set this parameter to <code>text/html</code>.
            By doing so, you cut costs by limiting the translation to the contents of the <code>html</code>
            element in each file. Otherwise, if you set this parameter to <code>text/plain</code>,
            your costs will cover the translation of every character.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role
            that grants Amazon Translate read access to your input data. For more information,
            see <a href="https://docs.aws.amazon.com/translate/latest/dg/identity-and-access-management.html">Identity
            and access management </a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.Settings_Formality">
            <summary>
            <para>
            <para>You can optionally specify the desired level of formality for translations to supported
            target languages. The formality setting controls the level of formal language usage
            (also known as <a href="https://en.wikipedia.org/wiki/Register_(sociolinguistics)">register</a>)
            in the translation output. You can set the value to informal or formal. If you don't
            specify a value for formality, or if the target language doesn't support formality,
            the translation will ignore the formality setting.</para><para> If you specify multiple target languages for the job, translate ignores the formality
            setting for any unsupported target language.</para><para>For a list of target languages that support formality, see <a href="https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-formality.html">Setting
            Formality</a> in the Amazon Translate Developer Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.EncryptionKey_Id">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the encryption key being used to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the batch translation job to be performed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.ParallelDataName">
            <summary>
            <para>
            <para>The name of a parallel data resource to add to the translation job. This resource
            consists of examples that show how you want segments of text to be translated. If
            you specify multiple target languages for the job, the parallel data file must include
            translations for all the target languages.</para><para>When you add parallel data to a translation job, you create an <i>Active Custom Translation</i>
            job. </para><para>This parameter accepts only one parallel data resource.</para><note><para>Active Custom Translation jobs are priced at a higher rate than other jobs that don't
            use parallel data. For more information, see <a href="http://aws.amazon.com/translate/pricing/">Amazon
            Translate pricing</a>.</para></note><para>For a list of available parallel data resources, use the <a>ListParallelData</a> operation.</para><para>For more information, see <a href="https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-parallel-data.html">
            Customizing your translations with parallel data</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.Settings_Profanity">
            <summary>
            <para>
            <para>Enable the profanity setting if you want Amazon Translate to mask profane words and
            phrases in your translation output.</para><para>To mask profane words and phrases, Amazon Translate replaces them with the grawlix
            string “?$#@$“. This 5-character sequence is used for each profane word or phrase,
            regardless of the length or number of words.</para><para>Amazon Translate doesn't detect profanity in all of its supported languages. For languages
            that support profanity detection, see <a href="https://docs.aws.amazon.com/translate/latest/dg/customizing-translations-profanity.html">Masking
            profanity</a> in the Amazon Translate Developer Guide.</para><para>If you specify multiple target languages for the job, all the target languages must
            support profanity masking. If any of the target languages don't support profanity
            masking, the translation job won't mask profanity for any target language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.InputDataConfig_S3Uri">
            <summary>
            <para>
            <para>The URI of the AWS S3 folder that contains the input files. Amazon Translate translates
            all the files in the folder. The folder must be in the same Region as the API endpoint
            you are calling.</para><note><para>The URI can also point to a single input document, or it can provide the prefix for
            a collection of input documents. For example. if you use the URI <code>S3://bucketName/prefix</code>
            and the prefix is a single file, Amazon Translate uses that files as input. If more
            than one file begins with the prefix, Amazon Translate uses all of them as input.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.OutputDataConfig_S3Uri">
            <summary>
            <para>
            <para>The URI of the S3 folder that contains a translation job's output file. The folder
            must be in the same Region as the API endpoint that you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.SourceLanguageCode">
            <summary>
            <para>
            <para>The language code of the input language. For a list of language codes, see <a href="https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html">Supported
            languages</a>.</para><para>Amazon Translate does not automatically detect a source language during batch translation
            jobs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.TargetLanguageCode">
            <summary>
            <para>
            <para>The target languages of the translation job. Enter up to 10 language codes. Each input
            file is translated into each target language.</para><para>Each language code is two or five characters long. For a list of language codes, see
            <a href="https://docs.aws.amazon.com/translate/latest/dg/what-is-languages.html">Supported
            languages</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.TerminologyName">
            <summary>
            <para>
            <para>The name of a custom terminology resource to add to the translation job. This resource
            lists examples source terms and the desired translation for each term.</para><para>This parameter accepts only one custom terminology resource.</para><para>If you specify multiple target languages for the job, translate uses the designated
            terminology for each requested target language that has an entry for the source term
            in the terminology file.</para><para>For a list of available custom terminology resources, use the <a>ListTerminologies</a>
            operation.</para><para>For more information, see <a href="https://docs.aws.amazon.com/translate/latest/dg/how-custom-terminology.html">Custom
            terminology</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.EncryptionKey_Type">
            <summary>
            <para>
            <para>The type of encryption key used by Amazon Translate to encrypt this object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique identifier for the request. This token is generated for you when using the
            Amazon Translate SDK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.StartTextTranslationJobResponse).
            Specifying the name of a property of type Amazon.Translate.Model.StartTextTranslationJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StartTRNTextTranslationJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.StopTRNTextTranslationJobCmdlet">
            <summary>
            Stops an asynchronous batch translation job that is in progress.
            
             
            <para>
            If the job's state is <code>IN_PROGRESS</code>, the job will be marked for termination
            and put into the <code>STOP_REQUESTED</code> state. If the job completes before it
            can be stopped, it is put into the <code>COMPLETED</code> state. Otherwise, the job
            is put into the <code>STOPPED</code> state.
            </para><para>
            Asynchronous batch translation jobs are started with the <a>StartTextTranslationJob</a>
            operation. You can use the <a>DescribeTextTranslationJob</a> or <a>ListTextTranslationJobs</a>
            operations to get a batch translation job's <code>JobId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StopTRNTextTranslationJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID of the job to be stopped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StopTRNTextTranslationJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.StopTextTranslationJobResponse).
            Specifying the name of a property of type Amazon.Translate.Model.StopTextTranslationJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StopTRNTextTranslationJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.StopTRNTextTranslationJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet">
            <summary>
            Updates a previously created parallel data resource by importing a new input file
            from Amazon S3.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.Description">
            <summary>
            <para>
            <para>A custom description for the parallel data resource in Amazon Translate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.ParallelDataConfig_Format">
            <summary>
            <para>
            <para>The format of the parallel data input file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.Name">
            <summary>
            <para>
            <para>The name of the parallel data resource being updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.ParallelDataConfig_S3Uri">
            <summary>
            <para>
            <para>The URI of the Amazon S3 folder that contains the parallel data input file. The folder
            must be in the same Region as the API endpoint you are calling.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique identifier for the request. This token is automatically generated when you
            use Amazon Translate through an AWS SDK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Translate.Model.UpdateParallelDataResponse).
            Specifying the name of a property of type Amazon.Translate.Model.UpdateParallelDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRN.UpdateTRNParallelDataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
