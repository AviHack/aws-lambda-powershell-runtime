<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.QuickSight</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified Amazon QuickSight resource.
            
            
             
            <para>
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions, by granting a user permission to access or change only resources
            with certain tag values. You can use the <code>TagResource</code> operation with a
            resource that already has tags. If you specify a new tag key for the resource, this
            tag is appended to the list of tags associated with the resource. If you specify a
            tag key that is already associated with the resource, the new tag value that you specify
            replaces the previous value for that tag.
            </para><para>
            You can associate as many as 50 tags with a resource. Amazon QuickSight supports tagging
            on data set, data source, dashboard, and template. 
            </para><para>
            Tagging for Amazon QuickSight works in a similar way to tagging for other Amazon Web
            Services services, except for the following:
            </para><ul><li><para>
            You can't use tags to track costs for Amazon QuickSight. This isn't possible because
            you can't tag the resources that Amazon QuickSight costs are based on, for example
            Amazon QuickSight storage capacity (SPICE), number of users, type of users, and usage
            metrics.
            </para></li><li><para>
            Amazon QuickSight doesn't currently support the tag editor for Resource Groups.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.TagResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.TagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.AddQSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet">
            <summary>
            Use the <code>SearchGroups</code> operation to search groups in a specified Amazon
            QuickSight namespace using the supplied filters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.Filter">
            <summary>
            <para>
            <para>The structure for the search filters that you want to apply to your search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want to search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.SearchGroupsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.SearchGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.FindQSGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet">
            <summary>
            Describes the customizations associated with the provided Amazon Web Services account
            and Amazon Amazon QuickSight namespace in an Amazon Web Services Region. The Amazon
            QuickSight console evaluates which customizations to apply by running this API operation
            with the <code>Resolved</code> flag included. 
            
             
            <para>
            To determine what customizations display when you run this command, it can help to
            visualize the relationship of the entities involved. 
            </para><ul><li><para><code>Amazon Web Services account</code> - The Amazon Web Services account exists
            at the top of the hierarchy. It has the potential to use all of the Amazon Web Services
            Regions and Amazon Web Services Services. When you subscribe to Amazon QuickSight,
            you choose one Amazon Web Services Region to use as your home Region. That's where
            your free SPICE capacity is located. You can use Amazon QuickSight in any supported
            Amazon Web Services Region. 
            </para></li><li><para><code>Amazon Web Services Region</code> - In each Amazon Web Services Region where
            you sign in to Amazon QuickSight at least once, Amazon QuickSight acts as a separate
            instance of the same service. If you have a user directory, it resides in us-east-1,
            which is the US East (N. Virginia). Generally speaking, these users have access to
            Amazon QuickSight in any Amazon Web Services Region, unless they are constrained to
            a namespace. 
            </para><para>
            To run the command in a different Amazon Web Services Region, you change your Region
            settings. If you're using the CLI, you can use one of the following options:
            </para><ul><li><para>
            Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html">command
            line options</a>. 
            </para></li><li><para>
            Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html">named
            profiles</a>. 
            </para></li><li><para>
            Run <code>aws configure</code> to change your default Amazon Web Services Region.
            Use Enter to key the same settings for your keys. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">Configuring
            the CLI</a>.
            </para></li></ul></li><li><para><code>Namespace</code> - A QuickSight namespace is a partition that contains users
            and assets (data sources, datasets, dashboards, and so on). To access assets that
            are in a specific namespace, users and groups must also be part of the same namespace.
            People who share a namespace are completely isolated from users and assets in other
            namespaces, even if they are in the same Amazon Web Services account and Amazon Web
            Services Region.
            </para></li><li><para><code>Applied customizations</code> - Within an Amazon Web Services Region, a set
            of Amazon QuickSight customizations can apply to an Amazon Web Services account or
            to a namespace. Settings that you apply to a namespace override settings that you
            apply to an Amazon Web Services account. All settings are isolated to a single Amazon
            Web Services Region. To apply them in other Amazon Web Services Regions, run the <code>CreateAccountCustomization</code>
            command in each Amazon Web Services Region where you want to apply the same customizations.
            
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to describe Amazon QuickSight
            customizations for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet.Namespace">
            <summary>
            <para>
            <para>The Amazon QuickSight namespace that you want to describe Amazon QuickSight customizations
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet.Resolved">
            <summary>
            <para>
            <para>The <code>Resolved</code> flag works with the other parameters to determine which
            view of Amazon QuickSight customizations is returned. You can add this flag to your
            command to use the same view that Amazon QuickSight uses to identify which customizations
            to apply to the console. Omit this flag, or set it to <code>no-resolved</code>, to
            reveal customizations that are configured at different levels. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeAccountCustomizationResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeAccountCustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountCustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSettingCmdlet">
            <summary>
            Describes the settings that were used when your Amazon QuickSight subscription was
            first created in this Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSettingCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the settings that you want
            to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountSettings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeAccountSettingsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeAccountSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSubscriptionCmdlet">
            <summary>
            Use the DescribeAccountSubscription operation to receive a description of a Amazon
            QuickSight account's subscription. A successful API call returns an <code>AccountInfo</code>
            object that includes an account's name, subscription status, authentication type,
            edition, and notification email address.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSubscriptionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID associated with your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountInfo'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeAccountSubscriptionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeAccountSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAccountSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisCmdlet">
            <summary>
            Provides a summary of the metadata for an analysis.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID of the analysis that you're describing. The ID is part of the URL of the analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analysis. You must be
            using the Amazon Web Services account that the analysis is in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Analysis'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeAnalysisResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet">
            <summary>
            Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analyses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AnalysisSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListAnalysesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListAnalysesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisPermissionCmdlet">
            <summary>
            Provides the read and write permissions for an analysis.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisPermissionCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID of the analysis whose permissions you're describing. The ID is part of the
            analysis URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analysis whose permissions
            you're describing. You must be using the Amazon Web Services account that the analysis
            is in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeAnalysisPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeAnalysisPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSAnalysisPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet">
            <summary>
            Provides a summary for a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number for the dashboard. If a version number isn't passed, the latest
            published dashboard version is described. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Dashboard'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet">
            <summary>
            Generates a temporary session URL and authorization code(bearer token) that you can
            use to embed an Amazon QuickSight read-only dashboard in your website or application.
            Before you use this command, make sure that you have configured the dashboards and
            permissions. 
            
             
            <para>
            Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not
            from the user's browser. The following rules apply to the generated URL:
            </para><ul><li><para>
            They must be used together.
            </para></li><li><para>
            They can be used one time only.
            </para></li><li><para>
            They are valid for 5 minutes after you run this command.
            </para></li><li><para>
            You are charged only when the URL is used or there is interaction with Amazon QuickSight.
            </para></li><li><para>
            The resulting user session is valid for 15 minutes (default) up to 10 hours (maximum).
            You can use the optional <code>SessionLifetimeInMinutes</code> parameter to customize
            session duration.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-deprecated.html">Embedding
            Analytics Using GetDashboardEmbedUrl</a> in the <i>Amazon QuickSight User Guide</i>.
            </para><para>
            For more information about the high-level steps for embedding and for an interactive
            demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon
            QuickSight Developer Portal</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.AdditionalDashboardId">
            <summary>
            <para>
            <para>A list of one or more dashboard IDs that you want anonymous users to have tempporary
            access to. Currently, the <code>IdentityType</code> parameter must be set to <code>ANONYMOUS</code>
            because other identity types authenticate as Amazon QuickSight or IAM users. For example,
            if you set "<code>--dashboard-id dash_id1 --dashboard-id dash_id2 dash_id3 identity-type
            ANONYMOUS</code>", the session can access all three dashboards.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the dashboard that you're
            embedding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the Identity and Access Management (IAM) policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.IdentityType">
            <summary>
            <para>
            <para>The authentication method that the user uses to sign in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.Namespace">
            <summary>
            <para>
            <para>The Amazon QuickSight namespace that contains the dashboard IDs in this request. If
            you're not using a custom namespace, set <code>Namespace = default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.ResetDisabled">
            <summary>
            <para>
            <para>Remove the reset button on the embedded dashboard. The default is FALSE, which enables
            the reset button.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.SessionLifetimeInMinute">
            <summary>
            <para>
            <para>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.StatePersistenceEnabled">
            <summary>
            <para>
            <para>Adds persistence of state for the user session in an embedded dashboard. Persistence
            applies to the sheet and the parameter settings. These are control settings that the
            dashboard subscriber (Amazon QuickSight reader) chooses while viewing the dashboard.
            If this is set to <code>TRUE</code>, the settings are the same when the subscriber
            reopens the same dashboard URL. The state is stored in Amazon QuickSight, not in a
            browser cookie. If this is set to FALSE, the state of the user session is not persisted.
            The default is <code>FALSE</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.UndoRedoDisabled">
            <summary>
            <para>
            <para>Remove the undo/redo button on the embedded dashboard. The default is FALSE, which
            enables the undo/redo button.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.UserArn">
            <summary>
            <para>
            <para>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code>
            identity type. You can use this for any Amazon QuickSight users in your account (readers,
            authors, or admins) authenticated as one of the following:</para><ul><li><para>Active Directory (AD) users or group members</para></li><li><para>Invited nonfederated users</para></li><li><para>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On
            using SAML, OpenID Connect, or IAM federation.</para></li></ul><para>Omit this parameter for users in the third group – IAM users and IAM role-based sessions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EmbedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.GetDashboardEmbedUrlResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.GetDashboardEmbedUrlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardEmbedUrlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet">
            <summary>
            Lists dashboards in an Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboards that you're
            listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDashboardsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDashboardsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet">
            <summary>
            Describes read and write permissions for a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            describing permissions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the IAM policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDashboardPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDashboardPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet">
            <summary>
            Lists all the versions of the dashboards in the Amazon QuickSight subscription.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            listing versions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardVersionSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDashboardVersionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDashboardVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDashboardVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet">
            <summary>
            Describes a dataset. This operation doesn't support datasets that include uploaded
            files as a source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services
            Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSet'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet">
            <summary>
            Lists all of the datasets belonging to the current Amazon Web Services account in
            an Amazon Web Services Region.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSetSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDataSetsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDataSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet">
            <summary>
            Describes the permissions on a dataset.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services
            Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSetPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSetPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSetPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet">
            <summary>
            Describes a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSource'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet">
            <summary>
            Lists data sources in current Amazon Web Services Region that belong to this Amazon
            Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListDataSourcesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListDataSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet">
            <summary>
            Describes the resource permissions for a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeDataSourcePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeDataSourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSDataSourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSFolderCmdlet">
            <summary>
            Describes a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Folder'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeFolderResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet">
            <summary>
            Lists all folders in an account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FolderSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListFoldersResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListFoldersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet">
            <summary>
            List all assets (<code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>)
            in a folder.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FolderMemberList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListFolderMembersResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListFolderMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderMemberListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSFolderPermissionCmdlet">
            <summary>
            Describes permissions for a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderPermissionCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeFolderPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeFolderPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSFolderResolvedPermissionCmdlet">
            <summary>
            Describes the folder resolved permissions. Permissions consists of both folder direct
            permissions and the inherited permissions from the ancestor folders.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderResolvedPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderResolvedPermissionCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderResolvedPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeFolderResolvedPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeFolderResolvedPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSFolderResolvedPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet">
            <summary>
            Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the group that you want described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet">
            <summary>
            Lists all user groups in Amazon QuickSight.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want a list of groups from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListGroupsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet">
            <summary>
            Use the <code>DescribeGroupMembership</code> operation to determine if a user is a
            member of the specified group. If the user exists and is a member of the specified
            group, an associated <code>GroupMember</code> object is returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.MemberName">
            <summary>
            <para>
            <para>The user name of the user that you want to search for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that includes the group you are searching within.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupMember'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeGroupMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeGroupMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet">
            <summary>
            Lists member users in a group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to see a membership list of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the group that you want a list of users from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupMemberList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListGroupMembershipsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListGroupMembershipsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSGroupMembershipListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet">
            <summary>
            Describes an existing IAM policy assignment, as specified by the assignment name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment, also called a rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the assignment that you want
            to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IAMPolicyAssignment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet">
            <summary>
            Lists IAM policy assignments in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains these IAM policy assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace for the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IAMPolicyAssignments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIAMPolicyAssignmentsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIAMPolicyAssignmentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Namespace parameter.
            The -PassThru parameter is deprecated, use -Select '^Namespace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet">
            <summary>
            Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for
            the IAM policies assigned to the specified user and group or groups that the user
            belongs to.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the assignments.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ActiveAssignments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIAMPolicyAssignmentsForUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIAMPolicyAssignmentsForUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIAMPolicyAssignmentsForUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet">
            <summary>
            Describes a SPICE ingestion.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ingestion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet">
            <summary>
            Lists the history of SPICE ingestions for a dataset.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Ingestions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListIngestionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListIngestionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIngestionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSIpRestrictionCmdlet">
            <summary>
            Provides a summary and status of IP rules.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIpRestrictionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the IP rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIpRestrictionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeIpRestrictionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeIpRestrictionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSIpRestrictionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceCmdlet">
            <summary>
            Describes the current namespace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the Amazon QuickSight namespace
            that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Namespace'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeNamespaceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Namespace parameter.
            The -PassThru parameter is deprecated, use -Select '^Namespace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet">
            <summary>
            Lists the namespaces for the specified Amazon Web Services account. This operation
            doesn't list deleted namespaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the Amazon QuickSight namespaces
            that you want to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.NextToken">
            <summary>
            <para>
            <para>A unique pagination token that can be used in a subsequent request. You will receive
            a pagination token in the response body of a previous <code>ListNameSpaces</code>
            API call if there is more data that can be returned. To receive the data, make another
            <code>ListNamespaces</code> API call with the returned token to retrieve the next
            page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code>
            API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code>
            error.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Namespaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListNamespacesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListNamespacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSNamespaceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet">
            <summary>
            Lists the tags assigned to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want a list of tags for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet">
            <summary>
            Generates a session URL and authorization code that you can use to embed the Amazon
            Amazon QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code>
            where you want to provide an authoring portal that allows users to create data sources,
            datasets, analyses, and dashboards. The users who access an embedded Amazon QuickSight
            console need belong to the author or admin security cohort. If you want to restrict
            permissions to some of these features, add a custom permissions profile to the user
            with the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a></code> API operation. Use <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a></code> API operation to add a new user with a custom permission profile attached.
            For more information, see the following sections in the <i>Amazon QuickSight User
            Guide</i>:
            
             <ul><li><para><a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedding
            Analytics</a></para></li><li><para><a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing
            Access to the Amazon QuickSight Console</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account associated with your Amazon QuickSight
            subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.EntryPoint">
            <summary>
            <para>
            <para>The URL you use to access the embedded session. The entry point URL is constrained
            to the following paths:</para><ul><li><para><code>/start</code></para></li><li><para><code>/start/analyses</code></para></li><li><para><code>/start/dashboards</code></para></li><li><para><code>/start/favorites</code></para></li><li><para><code>/dashboards/<i>DashboardId</i></code> - where <code>DashboardId</code> is
            the actual ID key from the Amazon QuickSight console URL of the dashboard</para></li><li><para><code>/analyses/<i>AnalysisId</i></code> - where <code>AnalysisId</code> is the
            actual ID key from the Amazon QuickSight console URL of the analysis</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.SessionLifetimeInMinute">
            <summary>
            <para>
            <para>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.UserArn">
            <summary>
            <para>
            <para>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code>
            identity type. You can use this for any type of Amazon QuickSight users in your account
            (readers, authors, or admins). They need to be authenticated as one of the following:</para><ol><li><para>Active Directory (AD) users or group members</para></li><li><para>Invited nonfederated users</para></li><li><para>Identity and Access Management (IAM) users and IAM role-based sessions authenticated
            through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation</para></li></ol><para>Omit this parameter for users in the third group, IAM users and IAM role-based sessions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EmbedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.GetSessionEmbedUrlResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.GetSessionEmbedUrlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSSessionEmbedUrlCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet">
            <summary>
            Describes a template's metadata.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias of the template that you want to describe. If you name a specific alias,
            you describe the version that the alias points to. You can specify the latest version
            of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.VersionNumber">
            <summary>
            <para>
            <para>(Optional) The number for the version to describe. If a <code>VersionNumber</code>
            parameter value isn't provided, the latest version of the template is described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Template'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet">
            <summary>
            Describes the template alias for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name of the template alias that you want to describe. If you name a specific alias,
            you describe the version that the alias points to. You can specify the latest version
            of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template alias that you're
            describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet">
            <summary>
            Lists all the aliases of a template.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template aliases that
            you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAliasList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplateAliasesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplateAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet">
            <summary>
            Lists all the templates in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the templates that you're
            listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplatesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet">
            <summary>
            Describes read and write permissions on a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeTemplatePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeTemplatePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplatePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet">
            <summary>
            Lists all the versions of the templates in the current Amazon QuickSight account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the templates that you're
            listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateVersionSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListTemplateVersionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListTemplateVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSTemplateVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet">
            <summary>
            Describes a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias of the theme that you want to describe. If you name a specific alias, you
            describe the version that the alias points to. You can specify the latest version
            of the theme by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to themes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number for the version to describe. If a <code>VersionNumber</code> parameter
            value isn't provided, the latest version of the theme is described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Theme'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeThemeResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeThemeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet">
            <summary>
            Describes the alias for a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name of the theme alias that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme alias that you're
            describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeThemeAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeThemeAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet">
            <summary>
            Lists all the aliases of a theme.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme aliases that you're
            listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeAliasList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListThemeAliasesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListThemeAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet">
            <summary>
            Lists all the themes in the current Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the themes that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.Type">
            <summary>
            <para>
            <para>The type of themes that you want to list. Valid options include the following:</para><ul><li><para><code>ALL (default)</code>- Display all existing themes.</para></li><li><para><code>CUSTOM</code> - Display only the themes created by people using Amazon QuickSight.</para></li><li><para><code>QUICKSIGHT</code> - Display only the starting themes defined by Amazon QuickSight.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListThemesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListThemesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemePermissionCmdlet">
            <summary>
            Describes the read and write permissions for a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme that you're describing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemePermissionCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme that you want to describe permissions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeThemePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeThemePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet">
            <summary>
            Lists all the versions of the themes in the current Amazon Web Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the themes that you're listing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeVersionSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListThemeVersionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListThemeVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSThemeVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet">
            <summary>
            Returns information about a user, given the user name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet">
            <summary>
            Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID that the user is in. Currently, you use the ID
            for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to list group memberships for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListUserGroupsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListUserGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet">
            <summary>
            Returns a list of all of the Amazon QuickSight users belonging to this account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return from this request.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.GetQSUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet">
            <summary>
            Creates Amazon QuickSight customizations for the current Amazon Web Services Region.
            Currently, you can add a custom default theme by using the <code>CreateAccountCustomization</code>
            or <code>UpdateAccountCustomization</code> API operation. To further customize Amazon
            QuickSight by removing Amazon QuickSight sample assets and videos for all new users,
            see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html">Customizing
            Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i><para>
            You can create customizations for your Amazon Web Services account or, if you specify
            a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace
            always override customizations that apply to an Amazon Web Services account. To find
            out which customizations apply, use the <code>DescribeAccountCustomization</code>
            API operation.
            </para><para>
            Before you use the <code>CreateAccountCustomization</code> API operation to add a
            theme as the namespace default, make sure that you first share the theme with the
            namespace. If you don't share it with the namespace, the theme isn't visible to your
            users even if you make it the default theme. To check if the theme is shared, view
            the current permissions by using the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeThemePermissions.html">DescribeThemePermissions</a></code> API operation. To share the theme, grant permissions by using the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateThemePermissions.html">UpdateThemePermissions</a></code> API operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.AccountCustomization_DefaultEmailCustomizationTemplate">
            <summary>
            <para>
            <para>The default email customization template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.AccountCustomization_DefaultTheme">
            <summary>
            <para>
            <para>The default theme for this Amazon QuickSight subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.Namespace">
            <summary>
            <para>
            <para>The Amazon QuickSight namespace that you want to add customizations to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.Tag">
            <summary>
            <para>
            <para>A list of the tags that you want to attach to this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateAccountCustomizationResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateAccountCustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountCustomizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet">
            <summary>
            Creates an Amazon QuickSight account, or subscribes to Amazon QuickSight Q.
            
             
            <para>
            The Amazon Web Services Region for the account is derived from what is configured
            in the CLI or SDK. This operation isn't supported in the US East (Ohio) Region, South
            America (Sao Paulo) Region, or Asia Pacific (Singapore) Region. 
            </para><para>
            Before you use this operation, make sure that you can connect to an existing Amazon
            Web Services account. If you don't have an Amazon Web Services account, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/setting-up-aws-sign-up.html">Sign
            up for Amazon Web Services</a> in the <i>Amazon QuickSight User Guide</i>. The person
            who signs up for Amazon QuickSight needs to have the correct Identity and Access Management
            (IAM) permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/iam-policy-examples.html">IAM
            Policy Examples for Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.
            </para><para>
            If your IAM policy includes both the <code>Subscribe</code> and <code>CreateAccountSubscription</code>
            actions, make sure that both actions are set to <code>Allow</code>. If either action
            is set to <code>Deny</code>, the <code>Deny</code> action prevails and your API call
            fails.
            </para><para>
            You can't pass an existing IAM role to access other Amazon Web Services services using
            this API operation. To pass your existing IAM role to Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html#security-create-iam-role">Passing
            IAM roles to Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.
            </para><para>
            You can't set default resource access on the new account from the Amazon QuickSight
            API. Instead, add default resource access from the Amazon QuickSight console. For
            more information about setting default resource access to Amazon Web Services services,
            see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scoping-policies-defaults.html">Setting
            default resource access to Amazon Web Services services</a> in the <i>Amazon QuickSight
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.AccountName">
            <summary>
            <para>
            <para>The name of your Amazon QuickSight account. This name is unique over all of Amazon
            Web Services, and it appears only when users sign in. You can't change <code>AccountName</code>
            value after the Amazon QuickSight account is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.ActiveDirectoryName">
            <summary>
            <para>
            <para>The name of your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code>
            is the selected authentication method of the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.AdminGroup">
            <summary>
            <para>
            <para>The admin group associated with your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code>
            is the selected authentication method of the new Amazon QuickSight account. For more
            information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using
            Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight
            User Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.AuthenticationMethod">
            <summary>
            <para>
            <para>The method that you want to use to authenticate your Amazon QuickSight account. Currently,
            the valid values for this parameter are <code>IAM_AND_QUICKSIGHT</code>, <code>IAM_ONLY</code>,
            and <code>ACTIVE_DIRECTORY</code>.</para><para>If you choose <code>ACTIVE_DIRECTORY</code>, provide an <code>ActiveDirectoryName</code>
            and an <code>AdminGroup</code> associated with your Active Directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.AuthorGroup">
            <summary>
            <para>
            <para>The author group associated with your Active Directory. For more information about
            using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using
            Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight
            User Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID of the account that you're using to create your
            Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.ContactNumber">
            <summary>
            <para>
            <para>A 10-digit phone number for the author of the Amazon QuickSight account to use for
            future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is
            the selected edition of the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The ID of the Active Directory that is associated with your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.Edition">
            <summary>
            <para>
            <para>The edition of Amazon QuickSight that you want your account to have. Currently, you
            can choose from <code>ENTERPRISE</code> or <code>ENTERPRISE_AND_Q</code>.</para><para>If you choose <code>ENTERPRISE_AND_Q</code>, the following parameters are required:</para><ul><li><para><code>FirstName</code></para></li><li><para><code>LastName</code></para></li><li><para><code>EmailAddress</code></para></li><li><para><code>ContactNumber</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.EmailAddress">
            <summary>
            <para>
            <para>The email address of the author of the Amazon QuickSight account to use for future
            communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected
            edition of the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.FirstName">
            <summary>
            <para>
            <para>The first name of the author of the Amazon QuickSight account to use for future communications.
            This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of
            the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.LastName">
            <summary>
            <para>
            <para>The last name of the author of the Amazon QuickSight account to use for future communications.
            This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of
            the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.NotificationEmail">
            <summary>
            <para>
            <para>The email address that you want Amazon QuickSight to send notifications to regarding
            your Amazon QuickSight account or Amazon QuickSight subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.ReaderGroup">
            <summary>
            <para>
            <para>The reader group associated with your Active Direcrtory. For more information about
            using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using
            Active Directory with Amazon QuickSight Enterprise Edition</a> in the <i>Amazon QuickSight
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.Realm">
            <summary>
            <para>
            <para>The realm of the Active Directory that is associated with your Amazon QuickSight account.
            This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication
            method of the new Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateAccountSubscriptionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateAccountSubscriptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAccountSubscriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet">
            <summary>
            Creates an analysis in Amazon QuickSight.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID for the analysis that you're creating. This ID displays in the URL of the analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the source template of an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account where you are creating an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>The dataset references of the source template of an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of date-time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of decimal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of integer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive name for the analysis that you're creating. This name displays for the
            analysis in the Amazon QuickSight console. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Permission">
            <summary>
            <para>
            <para>A structure that describes the principals and the resource-level permissions on an
            analysis. You can use the <code>Permissions</code> structure to grant permissions
            by providing a list of Identity and Access Management (IAM) action information for
            each principal listed by Amazon Resource Name (ARN). </para><para>To specify no permissions, omit <code>Permissions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.ThemeArn">
            <summary>
            <para>
            <para>The ARN for the theme to apply to the analysis that you're creating. To see the theme
            in the Amazon QuickSight console, make sure that you have access to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateAnalysisResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet">
            <summary>
            Creates a dashboard from a template. To first create a template, see the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a></code> API operation.
            
             
            <para>
            A dashboard is an entity in Amazon QuickSight that identifies Amazon QuickSight reports,
            created from analyses. You can share Amazon QuickSight dashboards. With the right
            permissions, you can create scheduled email reports from them. If you have the correct
            permissions, you can create a dashboard from a template that exists in a different
            Amazon Web Services account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.AdHocFilteringOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.ExportToCSVOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account where you want to create the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard, also added to the IAM policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>Dataset references.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of date-time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of decimal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of integer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Name">
            <summary>
            <para>
            <para>The display name of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Permission">
            <summary>
            <para>
            <para>A structure that contains the permissions of the dashboard. You can use this structure
            for granting permissions by providing a list of IAM action information for each principal
            ARN. </para><para>To specify no permissions, omit the permissions list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.ThemeArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard.
            If you add a value for this field, it overrides the value that is used in the source
            entity. The theme ARN must exist in the same Amazon Web Services account where you
            create the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the first version of the dashboard being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.SheetControlsOption_VisibilityState">
            <summary>
            <para>
            <para>Visibility state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet">
            <summary>
            Creates a dataset. This operation doesn't support datasets that include uploaded files
            as a source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.ColumnGroup">
            <summary>
            <para>
            <para>Groupings of columns that work together in certain Amazon QuickSight features. Currently,
            only geospatial hierarchy is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.ColumnLevelPermissionRule">
            <summary>
            <para>
            <para>A set of one or more definitions of a <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>An ID for the dataset that you want to create. This ID is unique per Amazon Web Services
            Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.DataSetUsageConfiguration_DisableUseAsDirectQuerySource">
            <summary>
            <para>
            <para>An option that controls whether a child dataset of a direct query can use this dataset
            as a source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.DataSetUsageConfiguration_DisableUseAsImportedSource">
            <summary>
            <para>
            <para>An option that controls whether a child dataset that's stored in QuickSight can use
            this dataset as a source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.FieldFolder">
            <summary>
            <para>
            <para>The folder that contains fields and nested subfolders for your dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_FormatVersion">
            <summary>
            <para>
            <para>The user or group rules associated with the dataset that contains permissions for
            RLS.</para><para>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code>
            is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required.
            When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and
            <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.ImportMode">
            <summary>
            <para>
            <para>Indicates whether you want to import the data into SPICE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.LogicalTableMap">
            <summary>
            <para>
            <para>Configures the combination and transformation of the data from the physical tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Name">
            <summary>
            <para>
            <para>The display name for the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_Namespace">
            <summary>
            <para>
            <para>The namespace associated with the dataset that contains permissions for RLS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_PermissionPolicy">
            <summary>
            <para>
            <para>The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code>
            is included for backward compatibility only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions on the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.PhysicalTableMap">
            <summary>
            <para>
            <para>Declares the physical tables that are available in the underlying data sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionDataSet_Status">
            <summary>
            <para>
            <para>The status of the row-level security permission dataset. If enabled, the status is
            <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionTagConfiguration_Status">
            <summary>
            <para>
            <para>The status of row-level security tags. If enabled, the status is <code>ENABLED</code>.
            If disabled, the status is <code>DISABLED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.RowLevelPermissionTagConfiguration_TagRule">
            <summary>
            <para>
            <para>A set of rules associated with row-level security, such as the tag names and columns
            that they are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet">
            <summary>
            Creates a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.CredentialPair_AlternateDataSourceParameter">
            <summary>
            <para>
            <para>A set of alternate data source parameters that you want to share for these credentials.
            The credentials are applied in tandem with the data source parameters when you copy
            a data source by using a create or update request. The API operation compares the
            <code>DataSourceParameters</code> structure that's in the request with the structures
            in the <code>AlternateDataSourceParameters</code> allow list. If the structures are
            an exact match, the request is allowed to use the new data source with the existing
            credentials. If the <code>AlternateDataSourceParameters</code> list is null, the <code>DataSourceParameters</code>
            originally used with these <code>Credentials</code> is automatically allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ManifestFileLocation_Bucket">
            <summary>
            <para>
            <para>Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Catalog">
            <summary>
            <para>
            <para>Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_ClusterId">
            <summary>
            <para>
            <para>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code>
            are provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Credentials_CopySourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a data source that has the credential pair that
            you want to use. When <code>CopySourceArn</code> is not null, the credential pair
            from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code>
            structure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Database">
            <summary>
            <para>
            <para>The Amazon Aurora PostgreSQL database to connect to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.OracleParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RdsParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AwsIotAnalyticsParameters_DataSetName">
            <summary>
            <para>
            <para>Dataset name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>An ID for the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SslProperties_DisableSsl">
            <summary>
            <para>
            <para>A Boolean option to control whether SSL should be disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AmazonElasticsearchParameters_Domain">
            <summary>
            <para>
            <para>The OpenSearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AmazonOpenSearchParameters_Domain">
            <summary>
            <para>
            <para>The OpenSearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Host">
            <summary>
            <para>
            <para>The Amazon Aurora PostgreSQL-Compatible host to connect to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ExasolParameters_Host">
            <summary>
            <para>
            <para>The hostname or IP address of the Exasol data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.OracleParameters_Host">
            <summary>
            <para>
            <para>An Oracle host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Host">
            <summary>
            <para>
            <para>Host. This field can be blank if <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SparkParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RdsParameters_InstanceId">
            <summary>
            <para>
            <para>Instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ManifestFileLocation_Key">
            <summary>
            <para>
            <para>Amazon S3 key that identifies an object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TwitterParameters_MaxRow">
            <summary>
            <para>
            <para>Maximum number of rows to query Twitter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.CredentialPair_Password">
            <summary>
            <para>
            <para>Password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AuroraPostgreSqlParameters_Port">
            <summary>
            <para>
            <para>The port that Amazon Aurora PostgreSQL is listening on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ExasolParameters_Port">
            <summary>
            <para>
            <para>The port for the Exasol data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MariaDbParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.MySqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.OracleParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PrestoParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.RedshiftParameters_Port">
            <summary>
            <para>
            <para>Port. This field can be blank if the <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SparkParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SqlServerParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TeradataParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.TwitterParameters_Query">
            <summary>
            <para>
            <para>Twitter query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Credentials_SecretArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon
            Secrets Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.JiraParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>The base URL of the Jira site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.ServiceNowParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>URL of the base site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Type">
            <summary>
            <para>
            <para>The type of the data source. To return a list of all data sources, use <code>ListDataSources</code>.</para><para>Use <code>AMAZON_ELASTICSEARCH</code> for Amazon OpenSearch Service.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.CredentialPair_Username">
            <summary>
            <para>
            <para>User name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.VpcConnectionProperties_VpcConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the VPC connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.SnowflakeParameters_Warehouse">
            <summary>
            <para>
            <para>Warehouse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.AthenaParameters_WorkGroup">
            <summary>
            <para>
            <para>The workgroup that Amazon Athena uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet">
            <summary>
            Generates an embed URL that you can use to embed an Amazon QuickSight dashboard or
            visual in your website, without having to register any reader users. Before you use
            this action, make sure that you have configured the dashboards and permissions.
            
             
            <para>
            The following rules apply to the generated URL:
            </para><ul><li><para>
            It contains a temporary bearer token. It is valid for 5 minutes after it is generated.
            Once redeemed within this period, it cannot be re-used again.
            </para></li><li><para>
            The URL validity period should not be confused with the actual session lifetime that
            can be customized using the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForAnonymousUser.html#QS-GenerateEmbedUrlForAnonymousUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a></code> parameter. The resulting user session is valid for 15 minutes (minimum) to
            10 hours (maximum). The default session duration is 10 hours.
            </para></li><li><para>
            You are charged only when the URL is used or there is interaction with Amazon QuickSight.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded
            Analytics</a> in the <i>Amazon QuickSight User Guide</i>.
            </para><para>
            For more information about the high-level steps for embedding and for an interactive
            demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon
            QuickSight Developer Portal</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.AllowedDomain">
            <summary>
            <para>
            <para>The domains that you want to add to the allow list for access to the generated URL
            that is then embedded. This optional parameter overrides the static domains that are
            configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead,
            it allows only the domains that you include in this parameter. You can list up to
            three domains or subdomains in each API call.</para><para>To include all subdomains under a specific domain to the allow list, use <code>*</code>.
            For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under
            <code>https://sapp.amazon.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.AuthorizedResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user
            is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code>
            embedding experience, pass the list of dashboard ARNs in the account that you want
            the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each
            API call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the dashboard that you're
            embedding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.InitialDashboardVisualId_DashboardId">
            <summary>
            <para>
            <para>The ID of the dashboard that has the visual that you want to embed. The <code>DashboardId</code>
            can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code>
            pane of the visual's on-visual menu of the Amazon QuickSight console. You can also
            get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.Dashboard_InitialDashboardId">
            <summary>
            <para>
            <para>The dashboard ID for the dashboard that you want the user to see first. This ID is
            included in the output URL. When the URL in response is accessed, Amazon QuickSight
            renders this dashboard.</para><para>The Amazon Resource Name (ARN) of this dashboard must be included in the <code>AuthorizedResourceArns</code>
            parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you
            are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.SessionLifetimeInMinute">
            <summary>
            <para>
            <para>How many minutes the session is valid. The session lifetime must be in [15-600] minutes
            range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.SessionTag">
            <summary>
            <para>
            <para>The session tags used for row-level security. Before you use this parameter, make
            sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code>
            parameter so that session tags can be used to provide row-level security.</para><para>These are not the tags used for the Amazon Web Services resource tagging feature.
            For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using
            Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.InitialDashboardVisualId_SheetId">
            <summary>
            <para>
            <para>The ID of the sheet that the has visual that you want to embed. The <code>SheetId</code>
            can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code>
            pane of the visual's on-visual menu of the Amazon QuickSight console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.InitialDashboardVisualId_VisualId">
            <summary>
            <para>
            <para>The ID of the visual that you want to embed. The <code>VisualID</code> can be found
            in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane
            of the visual's on-visual menu of the Amazon QuickSight console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EmbedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.GenerateEmbedUrlForAnonymousUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.GenerateEmbedUrlForAnonymousUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForAnonymousUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet">
            <summary>
            Generates an embed URL that you can use to embed an Amazon QuickSight experience in
            your website. This action can be used for any type of user registered in an Amazon
            QuickSight account. Before you use this action, make sure that you have configured
            the relevant Amazon QuickSight resource and permissions.
            
             
            <para>
            The following rules apply to the generated URL:
            </para><ul><li><para>
            It contains a temporary bearer token. It is valid for 5 minutes after it is generated.
            Once redeemed within this period, it cannot be re-used again.
            </para></li><li><para>
            The URL validity period should not be confused with the actual session lifetime that
            can be customized using the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html#QS-GenerateEmbedUrlForRegisteredUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a></code> parameter.
            </para><para>
            The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum).
            The default session duration is 10 hours.
            </para></li><li><para>
            You are charged only when the URL is used or there is interaction with Amazon QuickSight.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded
            Analytics</a> in the <i>Amazon QuickSight User Guide</i>.
            </para><para>
            For more information about the high-level steps for embedding and for an interactive
            demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon
            QuickSight Developer Portal</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.AllowedDomain">
            <summary>
            <para>
            <para>The domains that you want to add to the allow list for access to the generated URL
            that is then embedded. This optional parameter overrides the static domains that are
            configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead,
            it allows only the domains that you include in this parameter. You can list up to
            three domains or subdomains in each API call.</para><para>To include all subdomains under a specific domain to the allow list, use <code>*</code>.
            For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under
            <code>https://sapp.amazon.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the dashboard that you're
            embedding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.InitialDashboardVisualId_DashboardId">
            <summary>
            <para>
            <para>The ID of the dashboard that has the visual that you want to embed. The <code>DashboardId</code>
            can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code>
            pane of the visual's on-visual menu of the Amazon QuickSight console. You can also
            get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.Dashboard_InitialDashboardId">
            <summary>
            <para>
            <para>The dashboard ID for the dashboard that you want the user to see first. This ID is
            included in the output URL. When the URL in response is accessed, Amazon QuickSight
            renders this dashboard if the user has permissions to view it.</para><para>If the user does not have permission to view this dashboard, they see a permissions
            error message.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.QuickSightConsole_InitialPath">
            <summary>
            <para>
            <para>The initial URL path for the Amazon QuickSight console. <code>InitialPath</code> is
            required.</para><para>The entry point URL is constrained to the following paths:</para><ul><li><para><code>/start</code></para></li><li><para><code>/start/analyses</code></para></li><li><para><code>/start/dashboards</code></para></li><li><para><code>/start/favorites</code></para></li><li><para><code>/dashboards/DashboardId</code>. <i>DashboardId</i> is the actual ID key from
            the Amazon QuickSight console URL of the dashboard.</para></li><li><para><code>/analyses/AnalysisId</code>. <i>AnalysisId</i> is the actual ID key from the
            Amazon QuickSight console URL of the analysis.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.QSearchBar_InitialTopicId">
            <summary>
            <para>
            <para>The ID of the Q topic that you want to make the starting topic in the Q search bar.
            You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight
            application and opening a topic. The ID is in the URL for the topic that you open.</para><para>If you don't specify an initial topic, a list of all shared topics is shown in the
            Q bar for your readers. When you select an initial topic, you can specify whether
            or not readers are allowed to select other topics from the available ones in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.SessionLifetimeInMinute">
            <summary>
            <para>
            <para>How many minutes the session is valid. The session lifetime must be in [15-600] minutes
            range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.InitialDashboardVisualId_SheetId">
            <summary>
            <para>
            <para>The ID of the sheet that the has visual that you want to embed. The <code>SheetId</code>
            can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code>
            pane of the visual's on-visual menu of the Amazon QuickSight console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.UserArn">
            <summary>
            <para>
            <para>The Amazon Resource Name for the registered user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.InitialDashboardVisualId_VisualId">
            <summary>
            <para>
            <para>The ID of the visual that you want to embed. The <code>VisualID</code> can be found
            in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane
            of the visual's on-visual menu of the Amazon QuickSight console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EmbedUrl'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.GenerateEmbedUrlForRegisteredUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.GenerateEmbedUrlForRegisteredUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSEmbedUrlForRegisteredUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet">
            <summary>
            Creates an empty shared folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account where you want to create the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.FolderType">
            <summary>
            <para>
            <para>The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.Name">
            <summary>
            <para>
            <para>The name of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.ParentFolderArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the parent folder.</para><para><code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates
            a root-level folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.Permission">
            <summary>
            <para>
            <para>A structure that describes the principals and the resource-level permissions of a
            folder.</para><para>To specify no permissions, omit <code>Permissions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.Tag">
            <summary>
            <para>
            <para>Tags for the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateFolderResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet">
            <summary>
            Adds an asset, such as a dashboard, analysis, or dataset into a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.MemberId">
            <summary>
            <para>
            <para>The ID of the asset (the dashboard, analysis, or dataset).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.MemberType">
            <summary>
            <para>
            <para>The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and
            <code>DATASET</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FolderMember'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateFolderMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateFolderMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSFolderMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet">
            <summary>
            Use the <code>CreateGroup</code> operation to create a group in Amazon QuickSight.
            You can create up to 10,000 groups in a namespace. If you want to create more than
            10,000 groups in a namespace, contact AWS Support.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:&lt;your-region&gt;:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i></code>.
            </para><para>
            The response is a group object.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Description">
            <summary>
            <para>
            <para>A description for the group that you want to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>A name for the group that you want to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want the group to be a part of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet">
            <summary>
            Adds an Amazon QuickSight user to an Amazon QuickSight group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to add the user to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.MemberName">
            <summary>
            <para>
            <para>The name of the user that you want to add to the group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want the user to be a part of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupMember'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateGroupMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateGroupMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberName parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSGroupMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet">
            <summary>
            Creates an assignment with one specified IAM policy, identified by its Amazon Resource
            Name (ARN). This policy assignment is attached to the specified groups or users of
            Amazon QuickSight. Assignment names are unique per Amazon Web Services account. To
            avoid overwriting rules in other namespaces, use assignment names that are unique.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment, also called a rule. It must be unique within an Amazon
            Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignment. Possible values are as follows:</para><ul><li><para><code>ENABLED</code> - Anything specified in this assignment is used when creating
            the data source.</para></li><li><para><code>DISABLED</code> - This assignment isn't used when creating the data source.</para></li><li><para><code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating
            the data source.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account where you want to assign an IAM policy to
            Amazon QuickSight users or groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Identity">
            <summary>
            <para>
            <para>The Amazon QuickSight users, groups, or both that you want to assign the policy to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.PolicyArn">
            <summary>
            <para>
            <para>The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified
            in this assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet">
            <summary>
            Creates and starts a new SPICE ingestion for a dataset. You can manually refresh datasets
            in an Enterprise edition account 32 times in a 24-hour period. You can manually refresh
            datasets in a Standard edition account 8 times in a 24-hour period. Each 24-hour period
            is measured starting 24 hours before the current date and time.
            
             
            <para>
            Any ingestions operating on tagged datasets inherit the same tags automatically for
            use in access control. For an example, see <a href="http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How
            do I create an IAM policy to control access to Amazon EC2 resources using tags?</a>
            in the Amazon Web Services Knowledge Center. Tags are visible on the tagged dataset,
            but not on the ingestion resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.IngestionType">
            <summary>
            <para>
            <para>The type of ingestion that you want to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSIngestionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet">
            <summary>
            (Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.
            
             
            <para>
            A namespace allows you to isolate the Amazon QuickSight users and groups that are
            registered for that namespace. Users that access the namespace can share assets only
            with other users or groups in the same namespace. They can't see users and groups
            in other namespaces. You can create a namespace after your Amazon Web Services account
            is subscribed to Amazon QuickSight. The namespace must be unique within the Amazon
            Web Services account. By default, there is a limit of 100 namespaces per Amazon Web
            Services account. To increase your limit, create a ticket with Amazon Web Services
            Support. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to create the Amazon QuickSight
            namespace in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.IdentityStore">
            <summary>
            <para>
            <para>Specifies the type of your user identity directory. Currently, this supports users
            with an identity type of <code>QUICKSIGHT</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.Namespace">
            <summary>
            <para>
            <para>The name that you want to use to describe the new namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.Tag">
            <summary>
            <para>
            <para>The tags that you want to associate with the namespace that you're creating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateNamespaceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Namespace parameter.
            The -PassThru parameter is deprecated, use -Select '^Namespace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet">
            <summary>
            Creates a template from an existing Amazon QuickSight analysis or template. You can
            use the resulting template to create a dashboard.
            
             
            <para>
            A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata
            required to create an analysis and that you can use to create s dashboard. A template
            adds a layer of abstraction by using placeholders to replace the dataset associated
            with the analysis. You can use templates to create dashboards by replacing dataset
            placeholders with datasets that follow the same schema that was used to create the
            source analysis and template.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceAnalysis_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. You use the ID for
            the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.SourceAnalysis_DataSetReference">
            <summary>
            <para>
            <para>A structure containing information about the dataset references used as placeholders
            in the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Permission">
            <summary>
            <para>
            <para>A list of resource permissions to be set on the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Tag">
            <summary>
            <para>
            <para>Contains a map of the key-value pairs for the resource tag or tags assigned to the
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template that you want to create. This template is unique per Amazon
            Web Services Region; in each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the current template version being created. This API operation creates
            the first version of the template. Every time <code>UpdateTemplate</code> is called,
            a new version is created. Each version of the template maintains a description of
            the version in the <code>VersionDescription</code> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet">
            <summary>
            Creates a template alias for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name that you want to give to the template alias that you're creating. Don't start
            the alias name with the <code>$</code> character. Alias names that start with <code>$</code>
            are reserved by Amazon QuickSight. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template that you creating
            an alias for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.TemplateVersionNumber">
            <summary>
            <para>
            <para>The version number of the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet">
            <summary>
            Creates a theme.
            
             
            <para>
            A <i>theme</i> is set of configuration options for color and layout. Themes apply
            to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using
            Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Accent">
            <summary>
            <para>
            <para>This color is that applies to selected states and buttons.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_AccentForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            accent color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account where you want to store the new theme. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.BaseThemeId">
            <summary>
            <para>
            <para>The ID of the theme that a custom theme will inherit from. All themes inherit from
            one of the starting themes defined by Amazon QuickSight. For a list of the starting
            themes, use <code>ListThemes</code> or choose <b>Themes</b> from within an analysis.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.DataColorPalette_Color">
            <summary>
            <para>
            <para>The hexadecimal codes for the colors.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Danger">
            <summary>
            <para>
            <para>The color that applies to error messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_DangerForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            error color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Dimension">
            <summary>
            <para>
            <para>The color that applies to the names of fields that are identified as dimensions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_DimensionForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            dimension color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.DataColorPalette_EmptyFillColor">
            <summary>
            <para>
            <para>The hexadecimal code of a color that applies to charts where a lack of data is highlighted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Measure">
            <summary>
            <para>
            <para>The color that applies to the names of fields that are identified as measures.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_MeasureForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            measure color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.DataColorPalette_MinMaxGradient">
            <summary>
            <para>
            <para>The minimum and maximum hexadecimal codes that describe a color gradient. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Permission">
            <summary>
            <para>
            <para>A valid grouping of resource permissions to apply to the new theme. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_PrimaryBackground">
            <summary>
            <para>
            <para>The background color that applies to visuals and other high emphasis UI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_PrimaryForeground">
            <summary>
            <para>
            <para>The color of text and other foreground elements that appear over the primary background
            regions, such as grid lines, borders, table banding, icons, and so on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_SecondaryBackground">
            <summary>
            <para>
            <para>The background color that applies to the sheet background and sheet controls.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_SecondaryForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any sheet title, sheet control text, or UI that
            appears over the secondary background.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Border_Show">
            <summary>
            <para>
            <para>The option to enable display of borders for visuals.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Gutter_Show">
            <summary>
            <para>
            <para>This Boolean value controls whether to display a gutter space between sheet tiles.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Margin_Show">
            <summary>
            <para>
            <para>This Boolean value controls whether to display sheet margins.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Success">
            <summary>
            <para>
            <para>The color that applies to success messages, for example the check mark for a successful
            download.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_SuccessForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            success color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Tag">
            <summary>
            <para>
            <para>A map of the key-value pairs for the resource tag or tags that you want to add to
            the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.ThemeId">
            <summary>
            <para>
            <para>An ID for the theme that you want to create. The theme ID is unique per Amazon Web
            Services Region in each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the first version of the theme that you're creating. Every time <code>UpdateTheme</code>
            is called, a new version is created. Each version of the theme has a description of
            the version in the <code>VersionDescription</code> field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_Warning">
            <summary>
            <para>
            <para>This color that applies to warning and informational messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.UIColorPalette_WarningForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            warning color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateThemeResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateThemeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet">
            <summary>
            Creates a theme alias for a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name that you want to give to the theme alias that you are creating. The alias
            name can't begin with a <code>$</code>. Alias names that start with <code>$</code>
            are reserved by Amazon QuickSight. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme for the new theme
            alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.ThemeId">
            <summary>
            <para>
            <para>An ID for the theme alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.ThemeVersionNumber">
            <summary>
            <para>
            <para>The version number of the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CreateThemeAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CreateThemeAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.NewQSThemeAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet">
            <summary>
            Creates an Amazon QuickSight user, whose identity is associated with the Identity
            and Access Management (IAM) identity or role specified in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.CustomFederationProviderUrl">
            <summary>
            <para>
            <para>The URL of the custom OpenID Connect (OIDC) provider that provides identity to let
            a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM)
            role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code>
            parameter is set to <code>CUSTOM_OIDC</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.CustomPermissionsName">
            <summary>
            <para>
            <para>(Enterprise edition only) The name of the custom permissions profile that you want
            to assign to this user. Customized permissions allows you to control a user's access
            by restricting access the following operations:</para><ul><li><para>Create and update data sources</para></li><li><para>Create and update datasets</para></li><li><para>Create and update email reports</para></li><li><para>Subscribe to email reports</para></li></ul><para>To add custom permissions to an existing user, use <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a></code> instead.</para><para>A set of custom permissions includes any combination of these restrictions. Currently,
            you need to create the profile names for custom permission sets by using the Amazon
            QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign
            the named set of permissions to a Amazon QuickSight user. </para><para>Amazon QuickSight custom permissions are applied through IAM policies. Therefore,
            they override the permissions typically granted by assigning Amazon QuickSight users
            to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</para><para>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the user that you want to register.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.ExternalLoginFederationProviderType">
            <summary>
            <para>
            <para>The type of supported external login provider that provides identity to let a user
            federate into Amazon QuickSight with an associated Identity and Access Management(IAM)
            role. The type of supported external login provider can be one of the following.</para><ul><li><para><code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.
            When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl"
            parameter which is only needed when the external provider is custom.</para></li><li><para><code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code>
            type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom
            OIDC provider URL.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.ExternalLoginId">
            <summary>
            <para>
            <para>The identity ID for a user in the external login provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.IamArn">
            <summary>
            <para>
            <para>The ARN of the IAM user or role that you are registering with Amazon QuickSight. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.IdentityType">
            <summary>
            <para>
            <para>Amazon QuickSight supports several ways of managing the identity of users. This parameter
            accepts two values:</para><ul><li><para><code>IAM</code>: A user whose identity maps to an existing IAM user or role. </para></li><li><para><code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by
            Amazon QuickSight. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.SessionName">
            <summary>
            <para>
            <para>You need to use this parameter only when you register one or more users using an assumed
            IAM role. You don't need to provide the session name for other scenarios, for example
            when you are registering an IAM user or an Amazon QuickSight user. You can register
            multiple users using the same IAM role if each user has a different session name.
            For more information on assuming IAM roles, see <a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html"><code>assume-role</code></a> in the <i>CLI Reference.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to create for the user you are registering.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.UserRole">
            <summary>
            <para>
            <para>The Amazon QuickSight role for the user. The user role can be one of the following:</para><ul><li><para><code>READER</code>: A user who has read-only access to dashboards.</para></li><li><para><code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and
            dashboards.</para></li><li><para><code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight
            settings.</para></li><li><para><code>RESTRICTED_READER</code>: This role isn't currently available for use.</para></li><li><para><code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.RegisterUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.RegisterUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Email parameter.
            The -PassThru parameter is deprecated, use -Select '^Email' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RegisterQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet">
            <summary>
            Deletes all Amazon QuickSight customizations in this Amazon Web Services Region for
            the specified Amazon Web Services account and Amazon QuickSight namespace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to delete Amazon QuickSight
            customizations from in this Amazon Web Services Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet.Namespace">
            <summary>
            <para>
            <para>The Amazon QuickSight namespace that you're deleting the customizations from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteAccountCustomizationResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteAccountCustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAccountCustomizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet">
            <summary>
            Deletes an analysis from Amazon QuickSight. You can optionally include a recovery
            window during which you can restore the analysis. If you don't specify a recovery
            window value, the operation defaults to 30 days. Amazon QuickSight attaches a <code>DeletionTime</code>
            stamp to the response that specifies the end of the recovery window. At the end of
            the recovery window, Amazon QuickSight deletes the analysis permanently.
            
             
            <para>
            At any time before recovery window ends, you can use the <code>RestoreAnalysis</code>
            API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion
            of the analysis. The analysis remains visible in the API until it's deleted, so you
            can describe it but you can't make a template from it.
            </para><para>
            An analysis that's scheduled for deletion isn't accessible in the Amazon QuickSight
            console. To access it in the console, restore it. Deleting an analysis doesn't delete
            the dashboards that you publish from it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID of the analysis that you're deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account where you want to delete an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.ForceDeleteWithoutRecovery">
            <summary>
            <para>
            <para>This option defaults to the value <code>NoForceDeleteWithoutRecovery</code>. To immediately
            delete the analysis, add the <code>ForceDeleteWithoutRecovery</code> option. You can't
            restore an analysis after it's deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.RecoveryWindowInDay">
            <summary>
            <para>
            <para>A value that specifies the number of days that Amazon QuickSight waits before it deletes
            the analysis. You can't use this parameter with the <code>ForceDeleteWithoutRecovery</code>
            option in the same API call. The default value is 30.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteAnalysisResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet">
            <summary>
            Deletes a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number of the dashboard. If the version number property is provided, only
            the specified version of the dashboard is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DashboardId parameter.
            The -PassThru parameter is deprecated, use -Select '^DashboardId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet">
            <summary>
            Deletes a dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services
            Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet">
            <summary>
            Deletes the data source permanently. This operation breaks all the datasets that reference
            the deleted data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet">
            <summary>
            Deletes an empty folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteFolderResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet">
            <summary>
            Removes an asset, such as a dashboard, analysis, or dataset, from a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.FolderId">
            <summary>
            <para>
            <para>The Folder ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.MemberId">
            <summary>
            <para>
            <para>The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.MemberType">
            <summary>
            <para>
            <para>The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and
            <code>DATASET</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteFolderMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteFolderMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSFolderMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet">
            <summary>
            Removes a user group from Amazon QuickSight.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the group that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet">
            <summary>
            Removes a user from a group so that the user is no longer a member of the group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to delete the user from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.MemberName">
            <summary>
            <para>
            <para>The name of the user that you want to delete from the group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the group that you want to remove a user from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteGroupMembershipResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteGroupMembershipResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberName parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSGroupMembershipCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet">
            <summary>
            Deletes an existing IAM policy assignment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID where you want to delete the IAM policy assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that contains the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AssignmentName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet">
            <summary>
            Deletes a namespace and the users and groups that are associated with the namespace.
            This is an asynchronous process. Assets including dashboards, analyses, datasets and
            data sources are not deleted. To delete these assets, you use the API operations for
            the relevant asset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to delete the Amazon QuickSight
            namespace from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteNamespaceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteNamespaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Namespace parameter.
            The -PassThru parameter is deprecated, use -Select '^Namespace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSNamespaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet">
            <summary>
            Removes a tag or tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource that you want to untag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the key-value pairs for the resource tag or tags assigned to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UntagResourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UntagResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet">
            <summary>
            Deletes a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template that you're deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>An ID for the template you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.VersionNumber">
            <summary>
            <para>
            <para>Specifies the version of the template that you want to delete. If you don't provide
            a version number, <code>DeleteTemplate</code> deletes all versions of the template.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet">
            <summary>
            Deletes the item that the specified template alias points to. If you provide a specific
            alias, you delete the version of the template that the alias points to.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name for the template alias. To delete a specific alias, you delete the version
            that the alias points to. You can specify the alias name, or specify the latest version
            of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the item to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template that the specified alias is for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet">
            <summary>
            Deletes a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme that you're deleting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.ThemeId">
            <summary>
            <para>
            <para>An ID for the theme that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version of the theme that you want to delete. </para><para><b>Note:</b> If you don't provide a version number, you're using this call to <code>DeleteTheme</code>
            to delete all versions of the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteThemeResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteThemeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet">
            <summary>
            Deletes the version of the theme that the specified theme alias points to. If you
            provide a specific alias, you delete the version of the theme that the alias points
            to.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The unique name for the theme alias to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme alias to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme that the specified alias is for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteThemeAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteThemeAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSThemeAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet">
            <summary>
            Deletes the Amazon QuickSight user that is associated with the identity of the Identity
            and Access Management (IAM) user or role that's making the call. The IAM user isn't
            deleted as a result of this call.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the user that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet">
            <summary>
            Deletes a user identified by its principal ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.PrincipalId">
            <summary>
            <para>
            <para>The principal ID of the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.DeleteUserByPrincipalIdResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.DeleteUserByPrincipalIdResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PrincipalId parameter.
            The -PassThru parameter is deprecated, use -Select '^PrincipalId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RemoveQSUserByPrincipalIdCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet">
            <summary>
            Restores an analysis.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID of the analysis that you're restoring.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.RestoreAnalysisResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.RestoreAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.RestoreQSAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet">
            <summary>
            Searches for analyses that belong to the user specified in the filter.
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not reflect
            very recent updates and changes.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analyses that you're searching
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.Filter">
            <summary>
            <para>
            <para>The structure for the search filters that you want to apply to your search. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.NextToken">
            <summary>
            <para>
            <para>A pagination token that can be used in a subsequent request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AnalysisSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.SearchAnalysesResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.SearchAnalysesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSAnalysisCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet">
            <summary>
            Searches for dashboards that belong to a user. 
            
             <note><para>
            This operation is eventually consistent. The results are best effort and may not reflect
            very recent updates and changes.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the user whose dashboards
            you're searching for. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Filter">
            <summary>
            <para>
            <para>The filters to apply to the search. Currently, you can search only by user name, for
            example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals",
            "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DashboardSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.SearchDashboardsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.SearchDashboardsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSDashboardCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet">
            <summary>
            Searches the subfolders in a folder.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.Filter">
            <summary>
            <para>
            <para>The filters to apply to the search. Currently, you can search only by the parent folder
            ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals",
            "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to be returned per request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FolderSummaryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.SearchFoldersResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.SearchFoldersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.SearchQSFolderCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet">
            <summary>
            Cancels an ongoing ingestion of data into SPICE.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID of the dataset used in the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.IngestionId">
            <summary>
            <para>
            <para>An ID for the ingestion.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.CancelIngestionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.CancelIngestionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IngestionId parameter.
            The -PassThru parameter is deprecated, use -Select '^IngestionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.StopQSIngestionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet">
            <summary>
            Updates Amazon QuickSight customizations for the current Amazon Web Services Region.
            Currently, the only customization that you can use is a theme.
            
             
            <para>
            You can use customizations for your Amazon Web Services account or, if you specify
            a namespace, for a Amazon QuickSight namespace instead. Customizations that apply
            to a namespace override customizations that apply to an Amazon Web Services account.
            To find out which customizations apply, use the <code>DescribeAccountCustomization</code>
            API operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that you want to update Amazon QuickSight
            customizations for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.AccountCustomization_DefaultEmailCustomizationTemplate">
            <summary>
            <para>
            <para>The default email customization template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.AccountCustomization_DefaultTheme">
            <summary>
            <para>
            <para>The default theme for this Amazon QuickSight subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace that you want to update Amazon QuickSight customizations for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateAccountCustomizationResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateAccountCustomizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountCustomizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet">
            <summary>
            Updates the Amazon QuickSight settings in your Amazon Web Services account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the Amazon QuickSight settings
            that you want to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.DefaultNamespace">
            <summary>
            <para>
            <para>The default namespace for this Amazon Web Services account. Currently, the default
            is <code>default</code>. Identity and Access Management (IAM) users that register
            for the first time with Amazon QuickSight provide an email address that becomes associated
            with the default namespace. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.NotificationEmail">
            <summary>
            <para>
            <para>The email address that you want Amazon QuickSight to send notifications to regarding
            your Amazon Web Services account or Amazon QuickSight subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateAccountSettingsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateAccountSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAccountSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet">
            <summary>
            Updates an analysis in Amazon QuickSight
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID for the analysis that you're updating. This ID displays in the URL of the analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the source template of an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analysis that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>The dataset references of the source template of an analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of date-time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of decimal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of integer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Name">
            <summary>
            <para>
            <para>A descriptive name for the analysis that you're updating. This name displays for the
            analysis in the Amazon QuickSight console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.ThemeArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the theme to apply to the analysis that you're
            creating. To see the theme in the Amazon QuickSight console, make sure that you have
            access to it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateAnalysisResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet">
            <summary>
            Updates the read and write permissions for an analysis.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.AnalysisId">
            <summary>
            <para>
            <para>The ID of the analysis whose permissions you're updating. The ID is part of the analysis
            URL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the analysis whose permissions
            you're updating. You must be using the Amazon Web Services account that the analysis
            is in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A structure that describes the permissions to add and the principal to add them to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A structure that describes the permissions to remove and the principal to remove them
            from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateAnalysisPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateAnalysisPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AnalysisId parameter.
            The -PassThru parameter is deprecated, use -Select '^AnalysisId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSAnalysisPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet">
            <summary>
            Updates a dashboard in an Amazon Web Services account.
            
             <note><para>
            Updating a Dashboard creates a new dashboard version but does not immediately publish
            the new version. You can update the published version of a dashboard by using the
            <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateDashboardPublishedVersion.html">UpdateDashboardPublishedVersion</a></code> API operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.AdHocFilteringOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.ExportToCSVOption_AvailabilityStatus">
            <summary>
            <para>
            <para>Availability status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SourceTemplate_DataSetReference">
            <summary>
            <para>
            <para>Dataset references.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_DateTimeParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of date-time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_DecimalParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of decimal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_IntegerParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of integer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Name">
            <summary>
            <para>
            <para>The display name of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Parameters_StringParameter">
            <summary>
            <para>
            <para>The parameters that have a data type of string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.ThemeArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard.
            If you add a value for this field, it overrides the value that was originally associated
            with the entity. The theme ARN must exist in the same Amazon Web Services account
            where you create the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description for the first version of the dashboard being created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.SheetControlsOption_VisibilityState">
            <summary>
            <para>
            <para>Visibility state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet">
            <summary>
            Updates read and write permissions on a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard whose permissions
            you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.GrantLinkPermission">
            <summary>
            <para>
            <para>Grants link permissions to all users in a defined namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>The permissions that you want to grant on this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.RevokeLinkPermission">
            <summary>
            <para>
            <para>Revokes link permissions from all users in a defined namespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>The permissions that you want to revoke from this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet">
            <summary>
            Updates the published version of a dashboard.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the dashboard that you're
            updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.DashboardId">
            <summary>
            <para>
            <para>The ID for the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.VersionNumber">
            <summary>
            <para>
            <para>The version number of the dashboard.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDashboardPublishedVersionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDashboardPublishedVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDashboardPublishedVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet">
            <summary>
            Updates a dataset. This operation doesn't support datasets that include uploaded files
            as a source. Partial updates are not supported by this operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.ColumnGroup">
            <summary>
            <para>
            <para>Groupings of columns that work together in certain Amazon QuickSight features. Currently,
            only geospatial hierarchy is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.ColumnLevelPermissionRule">
            <summary>
            <para>
            <para>A set of one or more definitions of a <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset that you want to update. This ID is unique per Amazon Web Services
            Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.DataSetUsageConfiguration_DisableUseAsDirectQuerySource">
            <summary>
            <para>
            <para>An option that controls whether a child dataset of a direct query can use this dataset
            as a source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.DataSetUsageConfiguration_DisableUseAsImportedSource">
            <summary>
            <para>
            <para>An option that controls whether a child dataset that's stored in QuickSight can use
            this dataset as a source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.FieldFolder">
            <summary>
            <para>
            <para>The folder that contains fields and nested subfolders for your dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_FormatVersion">
            <summary>
            <para>
            <para>The user or group rules associated with the dataset that contains permissions for
            RLS.</para><para>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code>
            is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required.
            When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and
            <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.ImportMode">
            <summary>
            <para>
            <para>Indicates whether you want to import the data into SPICE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.LogicalTableMap">
            <summary>
            <para>
            <para>Configures the combination and transformation of the data from the physical tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Name">
            <summary>
            <para>
            <para>The display name for the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_Namespace">
            <summary>
            <para>
            <para>The namespace associated with the dataset that contains permissions for RLS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_PermissionPolicy">
            <summary>
            <para>
            <para>The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code>
            is included for backward compatibility only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.PhysicalTableMap">
            <summary>
            <para>
            <para>Declares the physical tables that are available in the underlying data sources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionDataSet_Status">
            <summary>
            <para>
            <para>The status of the row-level security permission dataset. If enabled, the status is
            <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionTagConfiguration_Status">
            <summary>
            <para>
            <para>The status of row-level security tags. If enabled, the status is <code>ENABLED</code>.
            If disabled, the status is <code>DISABLED</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.RowLevelPermissionTagConfiguration_TagRule">
            <summary>
            <para>
            <para>A set of rules associated with row-level security, such as the tag names and columns
            that they are assigned to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSetResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet">
            <summary>
            Updates the permissions on a dataset.
            
             
            <para>
            The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.DataSetId">
            <summary>
            <para>
            <para>The ID for the dataset whose permissions you want to update. This ID is unique per
            Amazon Web Services Region for each Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>The resource permissions that you want to grant to the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>The resource permissions that you want to revoke from the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSetPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSetPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSetPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet">
            <summary>
            Updates a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.CredentialPair_AlternateDataSourceParameter">
            <summary>
            <para>
            <para>A set of alternate data source parameters that you want to share for these credentials.
            The credentials are applied in tandem with the data source parameters when you copy
            a data source by using a create or update request. The API operation compares the
            <code>DataSourceParameters</code> structure that's in the request with the structures
            in the <code>AlternateDataSourceParameters</code> allow list. If the structures are
            an exact match, the request is allowed to use the new data source with the existing
            credentials. If the <code>AlternateDataSourceParameters</code> list is null, the <code>DataSourceParameters</code>
            originally used with these <code>Credentials</code> is automatically allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ManifestFileLocation_Bucket">
            <summary>
            <para>
            <para>Amazon S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Catalog">
            <summary>
            <para>
            <para>Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_ClusterId">
            <summary>
            <para>
            <para>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code>
            are provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Credentials_CopySourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a data source that has the credential pair that
            you want to use. When <code>CopySourceArn</code> is not null, the credential pair
            from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code>
            structure.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Database">
            <summary>
            <para>
            <para>The Amazon Aurora PostgreSQL database to connect to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.OracleParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RdsParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Database">
            <summary>
            <para>
            <para>Database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AwsIotAnalyticsParameters_DataSetName">
            <summary>
            <para>
            <para>Dataset name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SslProperties_DisableSsl">
            <summary>
            <para>
            <para>A Boolean option to control whether SSL should be disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AmazonElasticsearchParameters_Domain">
            <summary>
            <para>
            <para>The OpenSearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AmazonOpenSearchParameters_Domain">
            <summary>
            <para>
            <para>The OpenSearch domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Host">
            <summary>
            <para>
            <para>The Amazon Aurora PostgreSQL-Compatible host to connect to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ExasolParameters_Host">
            <summary>
            <para>
            <para>The hostname or IP address of the Exasol data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.OracleParameters_Host">
            <summary>
            <para>
            <para>An Oracle host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Host">
            <summary>
            <para>
            <para>Host. This field can be blank if <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SparkParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Host">
            <summary>
            <para>
            <para>Host.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RdsParameters_InstanceId">
            <summary>
            <para>
            <para>Instance ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ManifestFileLocation_Key">
            <summary>
            <para>
            <para>Amazon S3 key that identifies an object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TwitterParameters_MaxRow">
            <summary>
            <para>
            <para>Maximum number of rows to query Twitter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Name">
            <summary>
            <para>
            <para>A display name for the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.CredentialPair_Password">
            <summary>
            <para>
            <para>Password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AuroraPostgreSqlParameters_Port">
            <summary>
            <para>
            <para>The port that Amazon Aurora PostgreSQL is listening on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ExasolParameters_Port">
            <summary>
            <para>
            <para>The port for the Exasol data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MariaDbParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.MySqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.OracleParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PostgreSqlParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PrestoParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.RedshiftParameters_Port">
            <summary>
            <para>
            <para>Port. This field can be blank if the <code>ClusterId</code> is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SparkParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SqlServerParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TeradataParameters_Port">
            <summary>
            <para>
            <para>Port.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.TwitterParameters_Query">
            <summary>
            <para>
            <para>Twitter query string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Credentials_SecretArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon
            Secrets Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.JiraParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>The base URL of the Jira site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.ServiceNowParameters_SiteBaseUrl">
            <summary>
            <para>
            <para>URL of the base site.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.CredentialPair_Username">
            <summary>
            <para>
            <para>User name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.VpcConnectionProperties_VpcConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the VPC connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.SnowflakeParameters_Warehouse">
            <summary>
            <para>
            <para>Warehouse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.AthenaParameters_WorkGroup">
            <summary>
            <para>
            <para>The workgroup that Amazon Athena uses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSourceResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet">
            <summary>
            Updates the permissions to a data source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.DataSourceId">
            <summary>
            <para>
            <para>The ID of the data source. This ID is unique per Amazon Web Services Region for each
            Amazon Web Services account. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A list of resource permissions that you want to grant on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A list of resource permissions that you want to revoke on the data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateDataSourcePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateDataSourcePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DataSourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^DataSourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSDataSourcePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet">
            <summary>
            Updates the name of a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.Name">
            <summary>
            <para>
            <para>The name of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateFolderResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateFolderResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet">
            <summary>
            Updates permissions of a folder.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that contains the folder to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.FolderId">
            <summary>
            <para>
            <para>The ID of the folder.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>The permissions that you want to grant on a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>The permissions that you want to revoke from a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateFolderPermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateFolderPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FolderId parameter.
            The -PassThru parameter is deprecated, use -Select '^FolderId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSFolderPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet">
            <summary>
            Changes a group description.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the group is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Description">
            <summary>
            <para>
            <para>The description for the group that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the group that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Group'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateGroupResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet">
            <summary>
            Updates an existing IAM policy assignment. This operation updates only the optional
            parameter or parameters that are specified in the request. This overwrites all of
            the users included in <code>Identities</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AssignmentName">
            <summary>
            <para>
            <para>The name of the assignment, also called a rule. This name must be unique within an
            Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AssignmentStatus">
            <summary>
            <para>
            <para>The status of the assignment. Possible values are as follows:</para><ul><li><para><code>ENABLED</code> - Anything specified in this assignment is used when creating
            the data source.</para></li><li><para><code>DISABLED</code> - This assignment isn't used when creating the data source.</para></li><li><para><code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating
            the data source.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the IAM policy assignment.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Identity">
            <summary>
            <para>
            <para>The Amazon QuickSight users, groups, or both that you want to assign the policy to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace of the assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.PolicyArn">
            <summary>
            <para>
            <para>The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified
            in this assignment.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateIAMPolicyAssignmentResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateIAMPolicyAssignmentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssignmentName parameter.
            The -PassThru parameter is deprecated, use -Select '^AssignmentName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIAMPolicyAssignmentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet">
            <summary>
            Updates the content and status of IP rules. To use this operation, you need to provide
            the entire map of rules. You can use the <code>DescribeIpRestriction</code> operation
            to get the current rule map.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the IP rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.Enabled">
            <summary>
            <para>
            <para>A value that specifies whether IP rules are turned on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.IpRestrictionRuleMap">
            <summary>
            <para>
            <para>A map that describes the updated IP rules with CIDR ranges and descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AwsAccountId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateIpRestrictionResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateIpRestrictionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSIpRestrictionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet">
            <summary>
            Use the <code>UpdatePublicSharingSettings</code> operation to turn on or turn off
            the public sharing settings of an Amazon QuickSight dashboard.
            
             
            <para>
            To use this operation, turn on session capacity pricing for your Amazon QuickSight
            account.
            </para><para>
            Before you can turn on public sharing on your account, make sure to give public sharing
            permissions to an administrative user in the Identity and Access Management (IAM)
            console. For more information on using IAM with Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html">Using
            Amazon QuickSight with IAM</a> in the <i>Amazon QuickSight User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID associated with your Amazon QuickSight subscription.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet.PublicSharingEnabled">
            <summary>
            <para>
            <para>A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight
            account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdatePublicSharingSettingsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdatePublicSharingSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AwsAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AwsAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSPublicSharingSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet">
            <summary>
            Updates a template from an existing Amazon QuickSight analysis or another template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceAnalysis_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceTemplate_Arn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.SourceAnalysis_DataSetReference">
            <summary>
            <para>
            <para>A structure containing information about the dataset references used as placeholders
            in the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Name">
            <summary>
            <para>
            <para>The name for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the current template version that is being updated. Every time you
            call <code>UpdateTemplate</code>, you create a new version of the template. Each version
            of the template maintains a description of the version in the <code>VersionDescription</code>
            field.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplateResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet">
            <summary>
            Updates the template alias of a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias of the template that you want to update. If you name a specific alias, you
            update the version that the alias points to. You can specify the latest version of
            the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code>
            parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template alias that you're
            updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.TemplateVersionNumber">
            <summary>
            <para>
            <para>The version number of the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TemplateAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplateAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplateAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplateAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet">
            <summary>
            Updates the resource permissions for a template.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A list of resource permissions to be granted on the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A list of resource permissions to be revoked from the template. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.TemplateId">
            <summary>
            <para>
            <para>The ID for the template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateTemplatePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateTemplatePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TemplateId parameter.
            The -PassThru parameter is deprecated, use -Select '^TemplateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSTemplatePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet">
            <summary>
            Updates a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Accent">
            <summary>
            <para>
            <para>This color is that applies to selected states and buttons.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_AccentForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            accent color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme that you're updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.BaseThemeId">
            <summary>
            <para>
            <para>The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All
            themes initially inherit from a default Amazon QuickSight theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.DataColorPalette_Color">
            <summary>
            <para>
            <para>The hexadecimal codes for the colors.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Danger">
            <summary>
            <para>
            <para>The color that applies to error messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_DangerForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            error color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Dimension">
            <summary>
            <para>
            <para>The color that applies to the names of fields that are identified as dimensions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_DimensionForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            dimension color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.DataColorPalette_EmptyFillColor">
            <summary>
            <para>
            <para>The hexadecimal code of a color that applies to charts where a lack of data is highlighted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Measure">
            <summary>
            <para>
            <para>The color that applies to the names of fields that are identified as measures.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_MeasureForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            measure color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.DataColorPalette_MinMaxGradient">
            <summary>
            <para>
            <para>The minimum and maximum hexadecimal codes that describe a color gradient. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Name">
            <summary>
            <para>
            <para>The name for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_PrimaryBackground">
            <summary>
            <para>
            <para>The background color that applies to visuals and other high emphasis UI.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_PrimaryForeground">
            <summary>
            <para>
            <para>The color of text and other foreground elements that appear over the primary background
            regions, such as grid lines, borders, table banding, icons, and so on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_SecondaryBackground">
            <summary>
            <para>
            <para>The background color that applies to the sheet background and sheet controls.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_SecondaryForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any sheet title, sheet control text, or UI that
            appears over the secondary background.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Border_Show">
            <summary>
            <para>
            <para>The option to enable display of borders for visuals.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Gutter_Show">
            <summary>
            <para>
            <para>This Boolean value controls whether to display a gutter space between sheet tiles.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Margin_Show">
            <summary>
            <para>
            <para>This Boolean value controls whether to display sheet margins.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Success">
            <summary>
            <para>
            <para>The color that applies to success messages, for example the check mark for a successful
            download.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_SuccessForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            success color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.VersionDescription">
            <summary>
            <para>
            <para>A description of the theme version that you're updating Every time that you call <code>UpdateTheme</code>,
            you create a new version of the theme. Each version of the theme maintains a description
            of the version in <code>VersionDescription</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_Warning">
            <summary>
            <para>
            <para>This color that applies to warning and informational messages.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.UIColorPalette_WarningForeground">
            <summary>
            <para>
            <para>The foreground color that applies to any text or other elements that appear over the
            warning color.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateThemeResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateThemeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet">
            <summary>
            Updates an alias of a theme.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The name of the theme alias that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme alias that you're
            updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.ThemeVersionNumber">
            <summary>
            <para>
            <para>The version number of the theme that the alias should reference.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThemeAlias'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateThemeAliasResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateThemeAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemeAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet">
            <summary>
            Updates the resource permissions for a theme. Permissions apply to the action to grant
            or revoke permissions on, for example <code>"quicksight:DescribeTheme"</code>.
            
             
            <para>
            Theme permissions apply in groupings. Valid groupings include the following for the
            three levels of permissions, which are user, owner, or no permissions: 
            </para><ul><li><para>
            User
            </para><ul><li><para><code>"quicksight:DescribeTheme"</code></para></li><li><para><code>"quicksight:DescribeThemeAlias"</code></para></li><li><para><code>"quicksight:ListThemeAliases"</code></para></li><li><para><code>"quicksight:ListThemeVersions"</code></para></li></ul></li><li><para>
            Owner
            </para><ul><li><para><code>"quicksight:DescribeTheme"</code></para></li><li><para><code>"quicksight:DescribeThemeAlias"</code></para></li><li><para><code>"quicksight:ListThemeAliases"</code></para></li><li><para><code>"quicksight:ListThemeVersions"</code></para></li><li><para><code>"quicksight:DeleteTheme"</code></para></li><li><para><code>"quicksight:UpdateTheme"</code></para></li><li><para><code>"quicksight:CreateThemeAlias"</code></para></li><li><para><code>"quicksight:DeleteThemeAlias"</code></para></li><li><para><code>"quicksight:UpdateThemeAlias"</code></para></li><li><para><code>"quicksight:UpdateThemePermissions"</code></para></li><li><para><code>"quicksight:DescribeThemePermissions"</code></para></li></ul></li><li><para>
            To specify no permissions, omit the permissions list.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services account that contains the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.GrantPermission">
            <summary>
            <para>
            <para>A list of resource permissions to be granted for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.RevokePermission">
            <summary>
            <para>
            <para>A list of resource permissions to be revoked from the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.ThemeId">
            <summary>
            <para>
            <para>The ID for the theme.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateThemePermissionsResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateThemePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThemeId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThemeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSThemePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet">
            <summary>
            Updates an Amazon QuickSight user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.AwsAccountId">
            <summary>
            <para>
            <para>The ID for the Amazon Web Services account that the user is in. Currently, you use
            the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.CustomFederationProviderUrl">
            <summary>
            <para>
            <para>The URL of the custom OpenID Connect (OIDC) provider that provides identity to let
            a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM)
            role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code>
            parameter is set to <code>CUSTOM_OIDC</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.CustomPermissionsName">
            <summary>
            <para>
            <para>(Enterprise edition only) The name of the custom permissions profile that you want
            to assign to this user. Customized permissions allows you to control a user's access
            by restricting access the following operations:</para><ul><li><para>Create and update data sources</para></li><li><para>Create and update datasets</para></li><li><para>Create and update email reports</para></li><li><para>Subscribe to email reports</para></li></ul><para>A set of custom permissions includes any combination of these restrictions. Currently,
            you need to create the profile names for custom permission sets by using the Amazon
            QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign
            the named set of permissions to a Amazon QuickSight user. </para><para>Amazon QuickSight custom permissions are applied through IAM policies. Therefore,
            they override the permissions typically granted by assigning Amazon QuickSight users
            to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</para><para>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the user that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.ExternalLoginFederationProviderType">
            <summary>
            <para>
            <para>The type of supported external login provider that provides identity to let a user
            federate into Amazon QuickSight with an associated Identity and Access Management(IAM)
            role. The type of supported external login provider can be one of the following.</para><ul><li><para><code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.
            When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl"
            parameter which is only needed when the external provider is custom.</para></li><li><para><code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code>
            type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom
            OIDC provider URL.</para></li><li><para><code>NONE</code>: This clears all the previously saved external login information
            for a user. Use the <code><a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeUser.html">DescribeUser</a></code> API operation to check the external login information.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.ExternalLoginId">
            <summary>
            <para>
            <para>The identity ID for a user in the external login provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace. Currently, you should set this to <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon QuickSight role of the user. The role can be one of the following default
            security cohorts:</para><ul><li><para><code>READER</code>: A user who has read-only access to dashboards.</para></li><li><para><code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and
            dashboards.</para></li><li><para><code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight
            settings.</para></li></ul><para>The name of the Amazon QuickSight role is invisible to the user except for the console
            screens dealing with permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.UnapplyCustomPermission">
            <summary>
            <para>
            <para>A flag that you use to indicate that you want to remove all custom permissions from
            this user. Using this parameter resets the user to the state it was in before a custom
            permissions profile was applied. This parameter defaults to NULL and it doesn't accept
            any other value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.UserName">
            <summary>
            <para>
            <para>The Amazon QuickSight user name that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'User'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.QuickSight.Model.UpdateUserResponse).
            Specifying the name of a property of type Amazon.QuickSight.Model.UpdateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserName parameter.
            The -PassThru parameter is deprecated, use -Select '^UserName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.QS.UpdateQSUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
