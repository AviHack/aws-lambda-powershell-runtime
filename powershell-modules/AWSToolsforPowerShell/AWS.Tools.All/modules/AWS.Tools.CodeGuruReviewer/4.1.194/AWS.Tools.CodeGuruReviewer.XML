<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CodeGuruReviewer</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet">
            <summary>
            Adds one or more tags to an associated repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>An array of key-value pairs used to tag an associated repository. A tag is a custom
            attribute label with two parts:</para><ul><li><para>A <i>tag key</i> (for example, <code>CostCenter</code>, <code>Environment</code>,
            <code>Project</code>, or <code>Secret</code>). Tag keys are case sensitive.</para></li><li><para>An optional field known as a <i>tag value</i> (for example, <code>111122223333</code>,
            <code>Production</code>, or a team name). Omitting the tag value is the same as using
            an empty string. Like tag keys, tag values are case sensitive.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.AddCGRResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewCmdlet">
            <summary>
            Returns the metadata associated with the code review along with its status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewCmdlet.CodeReviewArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeReview'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.DescribeCodeReviewResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.DescribeCodeReviewResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CodeReviewArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CodeReviewArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet">
            <summary>
            Lists all the code reviews that the customer has created in the past 90 days.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.ProviderType">
            <summary>
            <para>
            <para>List of provider types for filtering that needs to be applied before displaying the
            result. For example, <code>providerTypes=[GitHub]</code> lists code reviews from GitHub.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.RepositoryName">
            <summary>
            <para>
            <para>List of repository names for filtering that needs to be applied before displaying
            the result.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.State">
            <summary>
            <para>
            <para>List of states for filtering that needs to be applied before displaying the result.
            For example, <code>states=[Pending]</code> lists code reviews in the Pending state.</para><para>The valid code review states are:</para><ul><li><para><code>Completed</code>: The code review is complete.</para></li><li><para><code>Pending</code>: The code review started and has not completed or failed.</para></li><li><para><code>Failed</code>: The code review failed.</para></li><li><para><code>Deleting</code>: The code review is being deleted.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.Type">
            <summary>
            <para>
            <para>The type of code reviews to list in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. The default is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.NextToken">
            <summary>
            <para>
            <para>If <code>nextToken</code> is returned, there are more results available. The value
            of <code>nextToken</code> is a unique pagination token for each page. Make the call
            again using the returned token to retrieve the next page. Keep all other arguments
            unchanged.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeReviewSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.ListCodeReviewsResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.ListCodeReviewsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Type parameter.
            The -PassThru parameter is deprecated, use -Select '^Type' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRCodeReviewListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet">
            <summary>
            Describes the customer feedback for a CodeGuru Reviewer recommendation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet.CodeReviewArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet.RecommendationId">
            <summary>
            <para>
            <para>The recommendation ID that can be used to track the provided recommendations and then
            to collect the feedback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet.UserId">
            <summary>
            <para>
            <para>Optional parameter to describe the feedback for a given user. If this is not supplied,
            it defaults to the user making the request.</para><para> The <code>UserId</code> is an IAM principal that can be specified as an Amazon Web
            Services account ID or an Amazon Resource Name (ARN). For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
            Specifying a Principal</a> in the <i>Amazon Web Services Identity and Access Management
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecommendationFeedback'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.DescribeRecommendationFeedbackResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.DescribeRecommendationFeedbackResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RecommendationId parameter.
            The -PassThru parameter is deprecated, use -Select '^RecommendationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html">RecommendationFeedbackSummary</a>
            objects that contain customer recommendation feedback for all CodeGuru Reviewer users.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.CodeReviewArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.RecommendationId">
            <summary>
            <para>
            <para>Used to query the recommendation feedback for a given recommendation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.UserId">
            <summary>
            <para>
            <para>An Amazon Web Services user's account ID or Amazon Resource Name (ARN). Use this ID
            to query the recommendation feedback for a code review from that user.</para><para> The <code>UserId</code> is an IAM principal that can be specified as an Amazon Web
            Services account ID or an Amazon Resource Name (ARN). For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying">
            Specifying a Principal</a> in the <i>Amazon Web Services Identity and Access Management
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. The default is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.NextToken">
            <summary>
            <para>
            <para>If <code>nextToken</code> is returned, there are more results available. The value
            of <code>nextToken</code> is a unique pagination token for each page. Make the call
            again using the returned token to retrieve the next page. Keep all other arguments
            unchanged.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecommendationFeedbackSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.ListRecommendationFeedbackResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.ListRecommendationFeedbackResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CodeReviewArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CodeReviewArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationFeedbackListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet">
            <summary>
            Returns the list of all recommendations for a completed code review.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.CodeReviewArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results that are returned per call. The default is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Pagination token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RecommendationSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.ListRecommendationsResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.ListRecommendationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CodeReviewArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CodeReviewArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRecommendationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationCmdlet">
            <summary>
            Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object that contains information about the requested repository association.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationCmdlet.AssociationArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.DescribeRepositoryAssociationResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.DescribeRepositoryAssociationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html">RepositoryAssociationSummary</a>
            objects that contain summary information about a repository association. You can filter
            the returned list by <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType">ProviderType</a>,
            <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name">Name</a>,
            <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State">State</a>,
            and <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner">Owner</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.Name">
            <summary>
            <para>
            <para>List of repository names to use as a filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.Owner">
            <summary>
            <para>
            <para>List of owners to use as a filter. For Amazon Web Services CodeCommit, it is the name
            of the CodeCommit account that was used to associate the repository. For other repository
            source providers, such as Bitbucket and GitHub Enterprise Server, this is name of
            the account that was used to associate the repository. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.ProviderType">
            <summary>
            <para>
            <para>List of provider types to use as a filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.State">
            <summary>
            <para>
            <para>List of repository association states to use as a filter.</para><para>The valid repository association states are:</para><ul><li><para><b>Associated</b>: The repository association is complete.</para></li><li><para><b>Associating</b>: CodeGuru Reviewer is:</para><ul><li><para>Setting up pull request notifications. This is required for pull requests to trigger
            a CodeGuru Reviewer review.</para><note><para>If your repository <code>ProviderType</code> is <code>GitHub</code>, <code>GitHub
            Enterprise Server</code>, or <code>Bitbucket</code>, CodeGuru Reviewer creates webhooks
            in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks,
            reviews of code in your repository cannot be triggered.</para></note></li><li><para>Setting up source code access. This is required for CodeGuru Reviewer to securely
            clone code in your repository.</para></li></ul></li><li><para><b>Failed</b>: The repository failed to associate or disassociate.</para></li><li><para><b>Disassociating</b>: CodeGuru Reviewer is removing the repository's pull request
            notifications and source code access.</para></li><li><para><b>Disassociated</b>: CodeGuru Reviewer successfully disassociated the repository.
            You can create a new association with this repository if you want to review source
            code in it later. You can control access to code reviews created in anassociated repository
            with tags after it has been disassociated. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html">Using
            tags to control access to associated repositories</a> in the <i>Amazon CodeGuru Reviewer
            User Guide</i>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of repository association results returned by <code>ListRepositoryAssociations</code>
            in paginated output. When this parameter is used, <code>ListRepositoryAssociations</code>
            only returns <code>maxResults</code> results in a single page with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListRepositoryAssociations</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If this parameter is not used, <code>ListRepositoryAssociations</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListRepositoryAssociations</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. </para><note><para>Treat this token as an opaque identifier that is only used to retrieve the next items
            in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryAssociationSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.ListRepositoryAssociationsResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.ListRepositoryAssociationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRRepositoryAssociationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.GetCGRResourceTagCmdlet">
            <summary>
            Returns the list of tags associated with an associated repository resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.GetCGRResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet">
            <summary>
            Use to create a code review with a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html">CodeReviewType</a>
            of <code>RepositoryAnalysis</code>. This type of code review analyzes all code under
            a specified branch in an associated repository. <code>PullRequest</code> code reviews
            are automatically triggered by a pull request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Type_AnalysisType">
            <summary>
            <para>
            <para>They types of analysis performed during a repository analysis or a pull request review.
            You can specify either <code>Security</code>, <code>CodeQuality</code>, or both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Type_RepositoryAnalysis_RepositoryHead_BranchName">
            <summary>
            <para>
            <para>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code>
            specifies the tip of this branch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Type_RepositoryAnalysis_SourceCodeType_RepositoryHead_BranchName">
            <summary>
            <para>
            <para>The name of the branch in an associated repository. The <code>RepositoryHeadSourceCodeType</code>
            specifies the tip of this branch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Details_BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket used for associating a new S3 repository. It must begin
            with <code>codeguru-reviewer-</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.CodeArtifacts_BuildArtifactsObjectKey">
            <summary>
            <para>
            <para>The S3 object key for a build artifacts .zip file that contains .jar or .class files.
            This is required for a code review with security analysis. For more information, see
            <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/working-with-cicd.html">Create
            code reviews with GitHub Actions</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate
            code reviews if there are failures and retries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.BranchDiff_DestinationBranchName">
            <summary>
            <para>
            <para>The destination branch for a diff in an associated repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.CommitDiff_DestinationCommit">
            <summary>
            <para>
            <para>The SHA of the destination commit used to generate a commit diff. This field is required
            for a pull request code review.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.CommitDiff_MergeBaseCommit">
            <summary>
            <para>
            <para>The SHA of the merge base of a commit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Name">
            <summary>
            <para>
            <para>The name of the code review. The name of each code review in your Amazon Web Services
            account must be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.EventInfo_Name">
            <summary>
            <para>
            <para>The name of the event. The possible names are <code>pull_request</code>, <code>workflow_dispatch</code>,
            <code>schedule</code>, and <code>push</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.S3BucketRepository_Name">
            <summary>
            <para>
            <para>The name of the repository when the <code>ProviderType</code> is <code>S3Bucket</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.RepositoryAssociationArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para><para>A code review can only be created on an associated repository. This is the ARN of
            the associated repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.RequestMetadata_Requester">
            <summary>
            <para>
            <para>An identifier, such as a name or account ID, that is associated with the requester.
            The <code>Requester</code> is used to capture the <code>author/actor</code> name of
            the event request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.RequestMetadata_RequestId">
            <summary>
            <para>
            <para>The ID of the request. This is required for a pull request code review.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.BranchDiff_SourceBranchName">
            <summary>
            <para>
            <para>The source branch for a diff in an associated repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.CodeArtifacts_SourceCodeArtifactsObjectKey">
            <summary>
            <para>
            <para>The S3 object key for a source code .zip file. This is required for all code reviews.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.CommitDiff_SourceCommit">
            <summary>
            <para>
            <para>The SHA of the source commit used to generate a commit diff. This field is required
            for a pull request code review.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.EventInfo_State">
            <summary>
            <para>
            <para>The state of an event. The state might be open, closed, or another state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.RequestMetadata_VendorName">
            <summary>
            <para>
            <para>The name of the repository vendor used to upload code to an S3 bucket for a CI/CD
            code review. For example, if code and artifacts are uploaded to an S3 bucket for a
            CI/CD code review by GitHub scripts from a GitHub repository, then the repository
            association's <code>ProviderType</code> is <code>S3Bucket</code> and the CI/CD repository
            vendor name is GitHub. For more information, see the definition for <code>ProviderType</code>
            in <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CodeReview'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.CreateCodeReviewResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.CreateCodeReviewResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.NewCGRCodeReviewCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet">
            <summary>
            Use to associate an Amazon Web Services CodeCommit repository or a repository managed
            by Amazon Web Services CodeStar Connections with Amazon CodeGuru Reviewer. When you
            associate a repository, CodeGuru Reviewer reviews source code changes in the repository's
            pull requests and provides automatic recommendations. You can view recommendations
            using the CodeGuru Reviewer console. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html">Recommendations
            in Amazon CodeGuru Reviewer</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i><para>
            If you associate a CodeCommit or S3 repository, it must be in the same Amazon Web
            Services Region and Amazon Web Services account where its CodeGuru Reviewer code reviews
            are configured.
            </para><para>
            Bitbucket and GitHub Enterprise Server repositories are managed by Amazon Web Services
            CodeStar Connections to connect to CodeGuru Reviewer. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-associate-repository.html">Associate
            a repository</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i></para><note><para>
            You cannot use the CodeGuru Reviewer SDK or the Amazon Web Services CLI to associate
            a GitHub repository with Amazon CodeGuru Reviewer. To associate a GitHub repository,
            use the console. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html">Getting
            started with CodeGuru Reviewer</a> in the <i>CodeGuru Reviewer User Guide.</i></para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.S3Bucket_BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket used for associating a new S3 repository. It must begin
            with <code>codeguru-reviewer-</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate
            repository associations if there are failures and retries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Bitbucket_ConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection.
            Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>.
            For more information, see <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html">Connection</a>
            in the <i>Amazon Web Services CodeStar Connections API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.GitHubEnterpriseServer_ConnectionArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection.
            Its format is <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>.
            For more information, see <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html">Connection</a>
            in the <i>Amazon Web Services CodeStar Connections API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.KMSKeyDetails_EncryptionOption">
            <summary>
            <para>
            <para>The encryption option for a repository association. It is either owned by Amazon Web
            Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed
            (<code>CUSTOMER_MANAGED_CMK</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.KMSKeyDetails_KMSKeyId">
            <summary>
            <para>
            <para>The ID of the Amazon Web Services KMS key that is associated with a repository association.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Bitbucket_Name">
            <summary>
            <para>
            <para>The name of the third party source repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.CodeCommit_Name">
            <summary>
            <para>
            <para>The name of the Amazon Web Services CodeCommit repository. For more information, see
            <a href="https://docs.aws.amazon.com/codecommit/latest/APIReference/API_GetRepository.html#CodeCommit-GetRepository-request-repositoryName">repositoryName</a>
            in the <i>Amazon Web Services CodeCommit API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.GitHubEnterpriseServer_Name">
            <summary>
            <para>
            <para>The name of the third party source repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.S3Bucket_Name">
            <summary>
            <para>
            <para>The name of the repository in the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Bitbucket_Owner">
            <summary>
            <para>
            <para>The owner of the repository. For a GitHub, GitHub Enterprise, or Bitbucket repository,
            this is the username for the account that owns the repository. For an S3 repository,
            this can be the username or Amazon Web Services account ID </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.GitHubEnterpriseServer_Owner">
            <summary>
            <para>
            <para>The owner of the repository. For a GitHub, GitHub Enterprise, or Bitbucket repository,
            this is the username for the account that owns the repository. For an S3 repository,
            this can be the username or Amazon Web Services account ID </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Tag">
            <summary>
            <para>
            <para>An array of key-value pairs used to tag an associated repository. A tag is a custom
            attribute label with two parts:</para><ul><li><para>A <i>tag key</i> (for example, <code>CostCenter</code>, <code>Environment</code>,
            <code>Project</code>, or <code>Secret</code>). Tag keys are case sensitive.</para></li><li><para>An optional field known as a <i>tag value</i> (for example, <code>111122223333</code>,
            <code>Production</code>, or a team name). Omitting the tag value is the same as using
            an empty string. Like tag keys, tag values are case sensitive.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.AssociateRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.AssociateRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CodeCommit_Name parameter.
            The -PassThru parameter is deprecated, use -Select '^CodeCommit_Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RegisterCGRRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet">
            <summary>
            Removes a tag from an associated repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of the keys for each tag you want to remove from an associated repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.RemoveCGRResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.UnregisterCGRRepositoryCmdlet">
            <summary>
            Removes the association between Amazon CodeGuru Reviewer and a repository.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.UnregisterCGRRepositoryCmdlet.AssociationArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">RepositoryAssociation</a>
            object. You can retrieve this ARN by calling <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.UnregisterCGRRepositoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RepositoryAssociation'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.DisassociateRepositoryResponse).
            Specifying the name of a property of type Amazon.CodeGuruReviewer.Model.DisassociateRepositoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.UnregisterCGRRepositoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AssociationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^AssociationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.UnregisterCGRRepositoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet">
            <summary>
            Stores customer feedback for a CodeGuru Reviewer recommendation. When this API is
            called again with different reactions the previous feedback is overwritten.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.CodeReviewArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a>
            object. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.Reaction">
            <summary>
            <para>
            <para>List for storing reactions. Reactions are utf-8 text code for emojis. If you send
            an empty list it clears all your feedback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.RecommendationId">
            <summary>
            <para>
            <para>The recommendation ID that can be used to track the provided recommendations and then
            to collect the feedback.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruReviewer.Model.PutRecommendationFeedbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RecommendationId parameter.
            The -PassThru parameter is deprecated, use -Select '^RecommendationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGR.WriteCGRRecommendationFeedbackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
