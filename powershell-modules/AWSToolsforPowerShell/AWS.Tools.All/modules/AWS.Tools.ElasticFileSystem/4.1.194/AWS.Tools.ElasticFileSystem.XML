<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ElasticFileSystem</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet">
            <summary>
            Creates a tag for an EFS resource. You can create tags for EFS file systems and access
            points using this API operation.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:TagResource</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID specifying the EFS resource that you want to create a tag for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value
            pair.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.AddEFSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface. For
            more information, see <a>CreateMountTarget</a>. This operation replaces the security
            groups in effect for the network interface associated with a mount target, with the
            <code>SecurityGroups</code> provided in the request. This operation requires that
            the network interface of the mount target has been created and the lifecycle state
            of the mount target is not <code>deleted</code>. 
            </para><para>
            The operation requires permissions for the following actions:
            </para><ul><li><para><code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para></li><li><para><code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target whose security groups you want to modify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>An array of up to five VPC security group IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecurityGroup parameter.
            The -PassThru parameter is deprecated, use -Select '^SecurityGroup' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.EditEFSMountTargetSecurityGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet">
            <summary>
            Returns the description of a specific Amazon EFS access point if the <code>AccessPointId</code>
            is provided. If you provide an EFS <code>FileSystemId</code>, it returns descriptions
            of all access points for that file system. You can provide either an <code>AccessPointId</code>
            or a <code>FileSystemId</code> in the request, but not both. 
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeAccessPoints</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.AccessPointId">
            <summary>
            <para>
            <para>(Optional) Specifies an EFS access point to describe in the response; mutually exclusive
            with <code>FileSystemId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) If you provide a <code>FileSystemId</code>, EFS returns all access points
            for that file system; mutually exclusive with <code>AccessPointId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) When retrieving all access points for a file system, you can optionally
            specify the <code>MaxItems</code> parameter to limit the number of objects returned
            in a response. The default value is 100. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.NextToken">
            <summary>
            <para>
            <para><code>NextToken</code> is present if the response is paginated. You can use <code>NextMarker</code>
            in the subsequent request to fetch the next page of access point descriptions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessPoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeAccessPointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccountPreferenceCmdlet">
            <summary>
            Returns the account preferences settings for the Amazon Web Services account associated
            with the user making the request, in the current Amazon Web Services Region. For more
            information, see <a href="efs/latest/ug/manage-efs-resource-ids.html">Managing Amazon
            EFS resource IDs</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccountPreferenceCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) When retrieving account preferences, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of objects returned in a response. The default value
            is 100. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccountPreferenceCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) You can use <code>NextToken</code> in a subsequent request to fetch the
            next page of Amazon Web Services account preferences if the response payload was paginated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSAccountPreferenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceIdPreference'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeAccountPreferencesResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeAccountPreferencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSBackupPolicyCmdlet">
            <summary>
            Returns the backup policy for the specified EFS file system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSBackupPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies which EFS file system to retrieve the <code>BackupPolicy</code> for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSBackupPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BackupPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeBackupPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeBackupPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSBackupPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise,
            it returns descriptions of all file systems owned by the caller's Amazon Web Services
            account in the Amazon Web Services Region of the endpoint that you're calling.
            
             
            <para>
            When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. Currently, this number
            is automatically set to 10. If more file system descriptions remain, Amazon EFS returns
            a <code>NextMarker</code>, an opaque token, in the response. In this case, you should
            send a subsequent request with the <code>Marker</code> request parameter set to the
            value of <code>NextMarker</code>. 
            </para><para>
            To retrieve a list of your file system descriptions, this operation is used in an
            iterative process, where <code>DescribeFileSystems</code> is called first without
            the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para><para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call and the order of file systems returned across the responses of a multi-call iteration
            is unspecified. 
            </para><para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.CreationToken">
            <summary>
            <para>
            <para>(Optional) Restricts the list to the file system with this creation token (String).
            You specify a creation token when you create an Amazon EFS file system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) ID of the file system whose description you want to retrieve (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code>
            operation (String). If present, specifies to continue the list from where the returning
            call had left off. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) Specifies the maximum number of file systems to return in the response
            (integer). This number is automatically set to 100. The response is paginated at 100
            per page if you have more than 100 file systems. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FileSystems'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet">
            <summary>
            Returns the <code>FileSystemPolicy</code> for the specified EFS file system.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies which EFS file system to retrieve the <code>FileSystemPolicy</code> for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeFileSystemPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet">
            <summary>
            Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon
            EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code>
            object to identify which files to move to the EFS Infrequent Access (IA) storage class.
            For a file system without a <code>LifecycleConfiguration</code> object, the call returns
            an empty array in the response.
            
             
            <para>
            When EFS Intelligent-Tiering is enabled, <code>TransitionToPrimaryStorageClass</code>
            has a value of <code>AFTER_1_ACCESS</code>.
            </para><para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose <code>LifecycleConfiguration</code> object you want
            to retrieve (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecyclePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeLifecycleConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSLifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system ID that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.AccessPointId">
            <summary>
            <para>
            <para>(Optional) The ID of the access point whose mount targets that you want to list. It
            must be included in your request if a <code>FileSystemId</code> or <code>MountTargetId</code>
            is not included in your request. Accepts either an access point ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.FileSystemId">
            <summary>
            <para>
            <para>(Optional) ID of the file system whose mount targets you want to list (String). It
            must be included in your request if an <code>AccessPointId</code> or <code>MountTargetId</code>
            is not included. Accepts either a file system ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.MountTargetId">
            <summary>
            <para>
            <para>(Optional) ID of the mount target that you want to have described (String). It must
            be included in your request if <code>FileSystemId</code> is not included. Accepts
            either a mount target ID or ARN as input.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) Opaque pagination token returned from a previous <code>DescribeMountTargets</code>
            operation (String). If present, it specifies to continue the list from where the previous
            returning call left off.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) Maximum number of mount targets to return in the response. Currently, this
            number is automatically set to 10, and other values are ignored. The response is paginated
            at 100 per page if you have more than 100 mount targets.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MountTargets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the lifecycle
            state of the mount target is not <code>deleted</code>.
            
             
            <para>
            This operation requires permissions for the following actions:
            </para><ul><li><para><code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount
            target's file system. 
            </para></li><li><para><code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network
            interface. 
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target whose security groups you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSMountTargetSecurityGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MountTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^MountTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet">
            <summary>
            Retrieves the replication configuration for a specific file system. If a file system
            is not specified, all of the replication configurations for the Amazon Web Services
            account in an Amazon Web Services Region are retrieved.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet.FileSystemId">
            <summary>
            <para>
            <para>You can retrieve the replication configuration for a specific file system by providing
            its file system ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) To limit the number of objects returned in a response, you can specify
            the <code>MaxItems</code> parameter. The default value is 100. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para><code>NextToken</code> is present if the response is paginated. You can use <code>NextToken</code>
            in a subsequent request to fetch the next page of output.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Replications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeReplicationConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSReplicationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet">
            <summary>
            Lists all tags for a top-level EFS resource. You must provide the ID of the resource
            that you want to retrieve the tags for.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DescribeAccessPoints</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Specifies the EFS resource you want to retrieve tags for. You can retrieve tags for
            EFS file systems and access points using this API endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.MaxResult">
            <summary>
            <para>
            <para>(Optional) Specifies the maximum number of tag objects to return in the response.
            The default value is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>(Optional) You can use <code>NextToken</code> in a subsequent request to fetch the
            next page of access point descriptions if the response payload was paginated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet">
            <summary>
            <note><para>
            DEPRECATED - The <code>DescribeTags</code> action is deprecated and not maintained.
            To view tags associated with EFS resources, use the <code>ListTagsForResource</code>
            API action.
            </para></note><para>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call and the order of tags returned across
            the responses of a multiple-call iteration (when using pagination) is unspecified.
            
            </para><para>
             This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tag set you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.Marker">
            <summary>
            <para>
            <para>(Optional) An opaque pagination token returned from a previous <code>DescribeTags</code>
            operation (String). If present, it specifies to continue the list from where the previous
            call left off.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.MaxItem">
            <summary>
            <para>
            <para>(Optional) The maximum number of file system tags to return in the response. Currently,
            this number is automatically set to 100, and other values are ignored. The response
            is paginated at 100 per page if you have more than 100 tags.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.GetEFSTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet">
            <summary>
            Creates an EFS access point. An access point is an application-specific view into
            an EFS file system that applies an operating system user and group, and a file system
            path, to any file system request made through the access point. The operating system
            user and group override any identity information provided by the NFS client. The file
            system path is exposed as the access point's root directory. Applications using the
            access point can only access data in the application's own directory and any subdirectories.
            To learn more, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html">Mounting
            a file system using EFS access points</a>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:CreateAccessPoint</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the EFS file system that the access point provides access to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_Gid">
            <summary>
            <para>
            <para>The POSIX group ID used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_OwnerGid">
            <summary>
            <para>
            <para>Specifies the POSIX group ID to apply to the <code>RootDirectory</code>. Accepts values
            from 0 to 2^32 (4294967295).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_OwnerUid">
            <summary>
            <para>
            <para>Specifies the POSIX user ID to apply to the <code>RootDirectory</code>. Accepts values
            from 0 to 2^32 (4294967295).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.RootDirectory_Path">
            <summary>
            <para>
            <para>Specifies the path on the EFS file system to expose as the root directory to NFS clients
            using the access point to access the EFS file system. A path can have up to four subdirectories.
            If the specified path does not exist, you are required to provide the <code>CreationInfo</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.CreationInfo_Permission">
            <summary>
            <para>
            <para>Specifies the POSIX permissions to apply to the <code>RootDirectory</code>, in the
            format of an octal number representing the file's mode bits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_SecondaryGid">
            <summary>
            <para>
            <para>Secondary POSIX group IDs used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Tag">
            <summary>
            <para>
            <para>Creates tags associated with the access point. Each tag is a key-value pair, each
            key must be unique. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PosixUser_Uid">
            <summary>
            <para>
            <para>The POSIX user ID used for all file system operations using this access point.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.ClientToken">
            <summary>
            <para>
            <para>A string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateAccessPointResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateAccessPointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSAccessPointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the request
            that Amazon EFS uses to ensure idempotent creation (calling the operation with same
            creation token has no effect). If a file system does not currently exist that is owned
            by the caller's Amazon Web Services account with the specified creation token, this
            operation does the following:
            
             <ul><li><para>
            Creates a new, empty file system. The file system will have an Amazon EFS assigned
            ID, and an initial lifecycle state <code>creating</code>.
            </para></li><li><para>
            Returns with the description of the created file system.
            </para></li></ul><para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para><note><para>
            For basic use cases, you can use a randomly generated UUID for the creation token.
            </para></note><para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/creating-using-create-fs.html#creating-using-create-fs-part1">Creating
            a file system</a> in the <i>Amazon EFS User Guide</i>.
            </para><note><para>
            The <code>CreateFileSystem</code> call returns while the file system's lifecycle state
            is still <code>creating</code>. You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> operation, which among other things returns the file
            system state.
            </para></note><para>
            This operation accepts an optional <code>PerformanceMode</code> parameter that you
            choose for your file system. We recommend <code>generalPurpose</code> performance
            mode for most file systems. File systems using the <code>maxIO</code> performance
            mode can scale to higher levels of aggregate throughput and operations per second
            with a tradeoff of slightly higher latencies for most file operations. The performance
            mode can't be changed after the file system has been created. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html">Amazon
            EFS performance modes</a>.
            </para><para>
            You can set the throughput mode for the file system using the <code>ThroughputMode</code>
            parameter.
            </para><para>
            After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>,
            at which point you can create one or more mount targets for the file system in your
            VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS
            file system on an EC2 instances in your VPC by using the mount target. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS:
            How it Works</a>. 
            </para><para>
             This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.AvailabilityZoneName">
            <summary>
            <para>
            <para>Used to create a file system that uses One Zone storage classes. It specifies the
            Amazon Web Services Availability Zone in which to create the file system. Use the
            format <code>us-east-1a</code> to specify the Availability Zone. For more information
            about One Zone storage classes, see <a href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using
            EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</para><note><para>One Zone storage classes are not available in all Availability Zones in Amazon Web
            Services Regions where Amazon EFS is available.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Backup">
            <summary>
            <para>
            <para>Specifies whether automatic backups are enabled on the file system that you are creating.
            Set the value to <code>true</code> to enable automatic backups. If you are creating
            a file system that uses One Zone storage classes, automatic backups are enabled by
            default. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic
            backups</a> in the <i>Amazon EFS User Guide</i>.</para><para>Default is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>,
            the default is <code>true</code>.</para><note><para>Backup is not available in all Amazon Web Services Regions where Amazon EFS is available.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.CreationToken">
            <summary>
            <para>
            <para>A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Encrypted">
            <summary>
            <para>
            <para>A Boolean value that, if true, creates an encrypted file system. When creating an
            encrypted file system, you have the option of specifying an existing Key Management
            Service key (KMS key). If you don't specify a KMS key, then the default KMS key for
            Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted
            file system. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ID of the KMS key that you want to use to protect the encrypted file system. This
            parameter is required only if you want to use a non-default KMS key. If this parameter
            is not specified, the default KMS key for Amazon EFS is used. You can specify a KMS
            key ID using the following formats:</para><ul><li><para>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</para></li><li><para>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</para></li></ul><para>If you use <code>KmsKeyId</code>, you must set the <a>CreateFileSystemRequest$Encrypted</a>
            parameter to true.</para><important><para>EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with Amazon
            EFS file systems.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.PerformanceMode">
            <summary>
            <para>
            <para>The performance mode of the file system. We recommend <code>generalPurpose</code>
            performance mode for most file systems. File systems using the <code>maxIO</code>
            performance mode can scale to higher levels of aggregate throughput and operations
            per second with a tradeoff of slightly higher latencies for most file operations.
            The performance mode can't be changed after the file system has been created.</para><note><para>The <code>maxIO</code> mode is not supported on file systems using One Zone storage
            classes.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.ProvisionedThroughputInMibp">
            <summary>
            <para>
            <para>The throughput, measured in MiB/s, that you want to provision for a file system that
            you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code>
            is set to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s.
            To increase this limit, contact Amazon Web Services Support. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon
            EFS quotas that you can increase</a> in the <i>Amazon EFS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Tag">
            <summary>
            <para>
            <para>Use to create one or more tags associated with the file system. Each tag is a user-defined
            key-value pair. Name your file system on creation by including a <code>"Key":"Name","Value":"{value}"</code>
            key-value pair. Each key must be unique. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.ThroughputMode">
            <summary>
            <para>
            <para>Specifies the throughput mode for the file system, either <code>bursting</code> or
            <code>provisioned</code>. If you set <code>ThroughputMode</code> to <code>provisioned</code>,
            you must also set a value for <code>ProvisionedThroughputInMibps</code>. After you
            create the file system, you can decrease your file system's throughput in Provisioned
            Throughput mode or change between the throughput modes, as long as it’s been more
            than 24 hours since the last decrease or throughput mode change. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying
            throughput with provisioned mode</a> in the <i>Amazon EFS User Guide</i>. </para><para>Default is <code>bursting</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateFileSystemResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateFileSystemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances by using the mount target.
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system.
            </para><para>
            You can create only one mount target for an EFS file system using One Zone storage
            classes. You must create that mount target in the same Availability Zone in which
            the file system is located. Use the <code>AvailabilityZoneName</code> and <code>AvailabiltyZoneId</code>
            properties in the <a>DescribeFileSystems</a> response object to get this information.
            Use the <code>subnetId</code> associated with the file system's Availability Zone
            when creating the mount target.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a>. 
            </para><para>
            To create a mount target for a file system, the file system's lifecycle state must
            be <code>available</code>. For more information, see <a>DescribeFileSystems</a>.
            </para><para>
            In the request, provide the following:
            </para><ul><li><para>
            The file system ID for which you are creating the mount target.
            </para></li><li><para>
            A subnet ID, which determines the following:
            </para><ul><li><para>
            The VPC in which Amazon EFS creates the mount target
            </para></li><li><para>
            The Availability Zone in which Amazon EFS creates the mount target
            </para></li><li><para>
            The IP address range from which Amazon EFS selects the IP address of the mount target
            (if you don't specify an IP address in the request)
            </para></li></ul></li></ul><para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system by using the mount
            target can resolve the mount target's DNS name to its IP address. For more information,
            see <a href="https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para><para>
            Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the subnet specified in the request
            to add another mount target must meet the following requirements:
            </para><ul><li><para>
            Must belong to the same VPC as the subnets of the existing mount targets
            </para></li><li><para>
            Must not be in the same Availability Zone as any of the subnets of the existing mount
            targets
            </para></li></ul><para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para><ul><li><para>
            Creates a new mount target in the specified subnet.
            </para></li><li><para>
            Also creates a new network interface in the subnet as follows:
            </para><ul><li><para>
            If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address
            to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet
            (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does
            when a request does not specify a primary private IP address).
            </para></li><li><para>
            If the request provides <code>SecurityGroups</code>, this network interface is associated
            with those security groups. Otherwise, it belongs to the default security group for
            the subnet's VPC.
            </para></li><li><para>
            Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i></code> where <code><i>fsmt-id</i></code> is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.
            </para></li><li><para>
            Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>,
            and the <code>requesterId</code> value to <code>EFS</code>.
            </para></li></ul><para>
            Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para></li></ul><note><para>
            The <code>CreateMountTarget</code> call returns only after creating the network interface,
            but while the mount target state is still <code>creating</code>, you can check the
            mount target creation status by calling the <a>DescribeMountTargets</a> operation,
            which among other things returns the mount target state.
            </para></note><para>
            We recommend that you create a mount target in each of the Availability Zones. There
            are cost considerations for using a file system in an Availability Zone through a
            mount target created in another Availability Zone. For more information, see <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a>. In addition, by always using a mount target local to the instance's Availability
            Zone, you eliminate a partial failure scenario. If the Availability Zone in which
            your mount target is created goes down, then you can't access your file system through
            that mount target. 
            </para><para>
            This operation requires permissions for the following action on the file system:
            </para><ul><li><para><code>elasticfilesystem:CreateMountTarget</code></para></li></ul><para>
            This operation also requires permissions for the following Amazon EC2 actions:
            </para><ul><li><para><code>ec2:DescribeSubnets</code></para></li><li><para><code>ec2:DescribeNetworkInterfaces</code></para></li><li><para><code>ec2:CreateNetworkInterface</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system for which to create the mount target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.IpAddress">
            <summary>
            <para>
            <para>Valid IPv4 address within the address range of the specified subnet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must
            be for the same VPC as subnet specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.SubnetId">
            <summary>
            <para>
            <para>The ID of the subnet to add the mount target in. For file systems that use One Zone
            storage classes, use the subnet that is associated with the file system's Availability
            Zone.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateMountTargetResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateMountTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSMountTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet">
            <summary>
            Creates a replication configuration that replicates an existing EFS file system to
            a new, read-only file system. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html">Amazon
            EFS replication</a> in the <i>Amazon EFS User Guide</i>. The replication configuration
            specifies the following:
            
             <ul><li><para><b>Source file system</b> - An existing EFS file system that you want replicated.
            The source file system cannot be a destination file system in an existing replication
            configuration.
            </para></li><li><para><b>Destination file system configuration</b> - The configuration of the destination
            file system to which the source file system will be replicated. There can only be
            one destination file system in a replication configuration. The destination file system
            configuration consists of the following properties:
            </para><ul><li><para><b>Amazon Web Services Region</b> - The Amazon Web Services Region in which the destination
            file system is created. Amazon EFS replication is available in all Amazon Web Services
            Regions that Amazon EFS is available in, except Africa (Cape Town), Asia Pacific (Hong
            Kong), Asia Pacific (Jakarta), Europe (Milan), and Middle East (Bahrain).
            </para></li><li><para><b>Availability Zone</b> - If you want the destination file system to use EFS One
            Zone availability and durability, you must specify the Availability Zone to create
            the file system in. For more information about EFS storage classes, see <a href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">
            Amazon EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.
            </para></li><li><para><b>Encryption</b> - All destination file systems are created with encryption at rest
            enabled. You can specify the Key Management Service (KMS) key that is used to encrypt
            the destination file system. If you don't specify a KMS key, your service-managed
            KMS key for Amazon EFS is used. 
            </para><note><para>
            After the file system is created, you cannot change the KMS key.
            </para></note></li></ul></li></ul><para>
            The following properties are set by default:
            </para><ul><li><para><b>Performance mode</b> - The destination file system's performance mode matches
            that of the source file system, unless the destination file system uses EFS One Zone
            storage. In that case, the General Purpose performance mode is used. The performance
            mode cannot be changed.
            </para></li><li><para><b>Throughput mode</b> - The destination file system uses the Bursting Throughput
            mode by default. After the file system is created, you can modify the throughput mode.
            </para></li></ul><para>
            The following properties are turned off by default:
            </para><ul><li><para><b>Lifecycle management</b> - EFS lifecycle management and EFS Intelligent-Tiering
            are not enabled on the destination file system. After the destination file system
            is created, you can enable EFS lifecycle management and EFS Intelligent-Tiering.
            </para></li><li><para><b>Automatic backups</b> - Automatic daily backups not enabled on the destination
            file system. After the file system is created, you can change this setting.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html">Amazon
            EFS replication</a> in the <i>Amazon EFS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet.Destination">
            <summary>
            <para>
            <para>An array of destination configuration objects. Only one destination configuration
            object is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet.SourceFileSystemId">
            <summary>
            <para>
            <para>Specifies the Amazon EFS file system that you want to replicate. This file system
            cannot already be a source or destination file system in another replication configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateReplicationConfigurationResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.CreateReplicationConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceFileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceFileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSReplicationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet">
            <summary>
            <note><para>
            DEPRECATED - <code>CreateTags</code> is deprecated and not maintained. To create tags
            for EFS resources, use the API action.
            </para></note><para>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the <code>Name</code> tag to your file system, Amazon EFS returns it in the response
            to the <a>DescribeFileSystems</a> operation. 
            </para><para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tags you want to modify (String). This operation modifies
            the tags only, not the file system.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Tag">
            <summary>
            <para>
            <para>An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value
            pair. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.NewEFSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet">
            <summary>
            Deletes the specified access point. After deletion is complete, new clients can no
            longer connect to the access points. Clients connected to the access point at the
            time of deletion will continue to function until they terminate their connection.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteAccessPoint</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.AccessPointId">
            <summary>
            <para>
            <para>The ID of the access point that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteAccessPointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccessPointId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccessPointId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSAccessPointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return, the
            file system no longer exists and you can't access any contents of the deleted file
            system.
            
             
            <para>
            You need to manually delete mount targets attached to a file system before you can
            delete an EFS file system. This step is performed for you when you use the Amazon
            Web Services console to delete a file system.
            </para><note><para>
            You cannot delete a file system that is part of an EFS Replication configuration.
            You need to delete the replication configuration first.
            </para></note><para>
             You can't delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para><note><para>
            The <code>DeleteFileSystem</code> call returns while the file system state is still
            <code>deleting</code>. You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> operation, which returns a list of file systems in your
            account. If you pass file system ID or creation token for the deleted file system,
            the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.
            </para></note><para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteFileSystemResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet">
            <summary>
            Deletes the <code>FileSystemPolicy</code> for the specified file system. The default
            <code>FileSystemPolicy</code> goes into effect once the existing policy is deleted.
            For more information about the default file system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/res-based-policies-efs.html">Using
            Resource-based Policies with EFS</a>.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies the EFS file system for which to delete the <code>FileSystemPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteFileSystemPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSFileSystemPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet">
            <summary>
            Deletes the specified mount target.
            
             
            <para>
            This operation forcibly breaks any mounts of the file system by using the mount target
            that is being deleted, which might disrupt instances or applications using those mounts.
            To avoid applications getting cut off abruptly, you might consider unmounting any
            mounts of the mount target, if feasible. The operation also deletes the associated
            network interface. Uncommitted writes might be lost, but breaking a mount target using
            this operation does not corrupt the file system itself. The file system you created
            remains. You can mount an EC2 instance in your VPC by using another mount target.
            </para><para>
            This operation requires permissions for the following action on the file system:
            </para><ul><li><para><code>elasticfilesystem:DeleteMountTarget</code></para></li></ul><note><para>
            The <code>DeleteMountTarget</code> call returns while the mount target state is still
            <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            operation, which returns a list of mount target descriptions for the given file system.
            
            </para></note><para>
            The operation also requires permissions for the following Amazon EC2 action on the
            mount target's network interface:
            </para><ul><li><para><code>ec2:DeleteNetworkInterface</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.MountTargetId">
            <summary>
            <para>
            <para>The ID of the mount target to delete (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteMountTargetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MountTargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^MountTargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSMountTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSReplicationConfigurationCmdlet">
            <summary>
            Deletes an existing replication configuration. To delete a replication configuration,
            you must make the request from the Amazon Web Services Region in which the destination
            file system is located. Deleting a replication configuration ends the replication
            process. After a replication configuration is deleted, the destination file system
            is no longer read-only. You can write to the destination file system after its status
            becomes <code>Writeable</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSReplicationConfigurationCmdlet.SourceFileSystemId">
            <summary>
            <para>
            <para>The ID of the source file system in the replication configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSReplicationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteReplicationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSReplicationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceFileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceFileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSReplicationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet">
            <summary>
            Removes tags from an EFS resource. You can remove tags from EFS file systems and access
            points using this API operation.
            
             
            <para>
            This operation requires permissions for the <code>elasticfilesystem:UntagResource</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>Specifies the EFS resource that you want to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the key-value tag pairs that you want to remove from the specified EFS
            resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet">
            <summary>
            <note><para>
            DEPRECATED - <code>DeleteTags</code> is deprecated and not maintained. To remove tags
            from EFS resources, use the API action.
            </para></note><para>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an
            error. For more information about tags and related restrictions, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            restrictions</a> in the <i>Billing and Cost Management User Guide</i>.
            </para><para>
            This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para><br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system whose tags you want to delete (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag keys to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.RemoveEFSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet">
            <summary>
            Updates the throughput mode or the amount of provisioned throughput of an existing
            file system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.ProvisionedThroughputInMibp">
            <summary>
            <para>
            <para>(Optional) Sets the amount of provisioned throughput, in MiB/s, for the file system.
            Valid values are 1-1024. If you are changing the throughput mode to provisioned, you
            must also provide the amount of provisioned throughput. Required if <code>ThroughputMode</code>
            is changed to <code>provisioned</code> on update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.ThroughputMode">
            <summary>
            <para>
            <para>(Optional) Updates the file system's throughput mode. If you're not updating your
            throughput mode, you don't need to provide this value in your request. If you are
            changing the <code>ThroughputMode</code> to <code>provisioned</code>, you must also
            set a value for <code>ProvisionedThroughputInMibps</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.UpdateFileSystemResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.UpdateEFSFileSystemCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSAccountPreferenceCmdlet">
            <summary>
            Use this operation to set the account preference in the current Amazon Web Services
            Region to use long 17 character (63 bit) or short 8 character (32 bit) resource IDs
            for new EFS file system and mount target resources. All existing resource IDs are
            not affected by any changes you make. You can set the ID preference during the opt-in
            period as EFS transitions to long resource IDs. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/manage-efs-resource-ids.html">Managing
            Amazon EFS resource IDs</a>.
            
             <note><para>
            Starting in October, 2021, you will receive an error if you try to set the account
            preference to use the short 8 character format resource ID. Contact Amazon Web Services
            support if you receive an error and must use short IDs for file system and mount target
            resources.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSAccountPreferenceCmdlet.ResourceIdType">
            <summary>
            <para>
            <para>Specifies the EFS resource ID preference to set for the user's Amazon Web Services
            account, in the current Amazon Web Services Region, either <code>LONG_ID</code> (17
            characters), or <code>SHORT_ID</code> (8 characters).</para><note><para>Starting in October, 2021, you will receive an error when setting the account preference
            to <code>SHORT_ID</code>. Contact Amazon Web Services support if you receive an error
            and must use short IDs for file system and mount target resources.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSAccountPreferenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceIdPreference'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutAccountPreferencesResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutAccountPreferencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSAccountPreferenceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceIdType parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceIdType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSAccountPreferenceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet">
            <summary>
            Updates the file system's backup policy. Use this action to start or stop automatic
            backups of the file system.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>Specifies which EFS file system to update the backup policy for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet.BackupPolicy_Status">
            <summary>
            <para>
            <para>Describes the status of the file system's backup policy.</para><ul><li><para><b><code>ENABLED</code></b> - EFS is automatically backing up the file system.</para></li><li><para><b><code>ENABLING</code></b> - EFS is turning on automatic backups for the file
            system.</para></li><li><para><b><code>DISABLED</code></b> - Automatic back ups are turned off for the file system.</para></li><li><para><b><code>DISABLING</code></b> - EFS is turning off automatic backups for the file
            system.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BackupPolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutBackupPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutBackupPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSBackupPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet">
            <summary>
            Applies an Amazon EFS <code>FileSystemPolicy</code> to an Amazon EFS file system.
            A file system policy is an IAM resource-based policy and can contain multiple policy
            statements. A file system always has exactly one file system policy, which can be
            the default policy or an explicit policy set or updated using this API operation.
            EFS file system policies have a 20,000 character limit. When an explicit policy is
            set, it overrides the default policy. For more information about the default file
            system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html#default-filesystempolicy">Default
            EFS File System Policy</a>. 
            
             <note><para>
            EFS file system policies have a 20,000 character limit.
            </para></note><para>
            This operation requires permissions for the <code>elasticfilesystem:PutFileSystemPolicy</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>(Optional) A boolean that specifies whether or not to bypass the <code>FileSystemPolicy</code>
            lockout safety check. The lockout safety check determines whether the policy in the
            request will lock out, or prevent, the IAM principal that is making the request from
            making future <code>PutFileSystemPolicy</code> requests on this file system. Set <code>BypassPolicyLockoutSafetyCheck</code>
            to <code>True</code> only when you intend to prevent the IAM principal that is making
            the request from making subsequent <code>PutFileSystemPolicy</code> requests on this
            file system. The default value is <code>False</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the EFS file system that you want to create or update the <code>FileSystemPolicy</code>
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The <code>FileSystemPolicy</code> that you're creating. Accepts a JSON formatted policy
            definition. EFS file system policies have a 20,000 character limit. To find out more
            about the elements that make up a file system policy, see <a href="https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies">EFS
            Resource-based Policies</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutFileSystemPolicyResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutFileSystemPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSFileSystemPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet">
            <summary>
            Use this action to manage EFS lifecycle management and intelligent tiering. A <code>LifecycleConfiguration</code>
            consists of one or more <code>LifecyclePolicy</code> objects that define the following:
            
             <ul><li><para><b>EFS Lifecycle management</b> - When Amazon EFS automatically transitions files
            in a file system into the lower-cost Infrequent Access (IA) storage class.
            </para><para>
            To enable EFS Lifecycle management, set the value of <code>TransitionToIA</code> to
            one of the available options.
            </para></li><li><para><b>EFS Intelligent tiering</b> - When Amazon EFS automatically transitions files
            from IA back into the file system's primary storage class (Standard or One Zone Standard.
            </para><para>
            To enable EFS Intelligent Tiering, set the value of <code>TransitionToPrimaryStorageClass</code>
            to <code>AFTER_1_ACCESS</code>.
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html">EFS
            Lifecycle Management</a>.
            </para><para>
            Each Amazon EFS file system supports one lifecycle configuration, which applies to
            all files in the file system. If a <code>LifecycleConfiguration</code> object already
            exists for the specified file system, a <code>PutLifecycleConfiguration</code> call
            modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call
            with an empty <code>LifecyclePolicies</code> array in the request body deletes any
            existing <code>LifecycleConfiguration</code> and turns off lifecycle management and
            intelligent tiering for the file system.
            </para><para>
            In the request, specify the following: 
            </para><ul><li><para>
            The ID for the file system for which you are enabling, disabling, or modifying lifecycle
            management and intelligent tiering.
            </para></li><li><para>
            A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that
            define when files are moved into IA storage, and when they are moved back to Standard
            storage.
            </para><note><para>
            Amazon EFS requires that each <code>LifecyclePolicy</code> object have only have a
            single transition, so the <code>LifecyclePolicies</code> array needs to be structured
            with separate <code>LifecyclePolicy</code> objects. See the example requests in the
            following section for more information.
            </para></note></li></ul><para>
            This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code>
            operation.
            </para><para>
            To apply a <code>LifecycleConfiguration</code> object to an encrypted file system,
            you need the same Key Management Service permissions as when you created the encrypted
            file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.FileSystemId">
            <summary>
            <para>
            <para>The ID of the file system for which you are creating the <code>LifecycleConfiguration</code>
            object (String).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.LifecyclePolicy">
            <summary>
            <para>
            <para>An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code>
            object. A <code>LifecycleConfiguration</code> object informs EFS lifecycle management
            and EFS Intelligent-Tiering of the following:</para><ul><li><para>When to move files in the file system from primary storage to the IA storage class.</para></li><li><para>When to move files that are in IA storage to primary storage.</para></li></ul><note><para>When using the <code>put-lifecycle-configuration</code> CLI command or the <code>PutLifecycleConfiguration</code>
            API action, Amazon EFS requires that each <code>LifecyclePolicy</code> object have
            only a single transition. This means that in a request body, <code>LifecyclePolicies</code>
            must be structured as an array of <code>LifecyclePolicy</code> objects, one object
            for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>.
            See the example requests in the following section for more information.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecyclePolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse).
            Specifying the name of a property of type Amazon.ElasticFileSystem.Model.PutLifecycleConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FileSystemId parameter.
            The -PassThru parameter is deprecated, use -Select '^FileSystemId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EFS.WriteEFSLifecycleConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
