<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.LookoutEquipment</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet">
            <summary>
            Associates a given tag to a resource in your account. A tag is a key-value pair which
            can be added to an Amazon Lookout for Equipment resource as metadata. Tags can be
            used for organizing your resources as well as helping you to search and filter by
            tag. Multiple tags can be added to a resource, either when you create it, or later.
            Up to 50 tags can be associated with each resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the specific resource to which the tag should be
            associated. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag or tags to be associated with a specific resource. Both the tag key and value
            are specified. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.AddL4EResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobCmdlet">
            <summary>
            Provides information on a specific data ingestion job such as creation time, dataset
            ARN, and status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID of the data ingestion job. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeDataIngestionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet">
            <summary>
            Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location
            of the input data, status, and so on.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset being used for the data ingestion job. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.Status">
            <summary>
            <para>
            <para>Indicates the status of the data ingestion job. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of data ingestion jobs to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>An opaque pagination token indicating where to continue the listing of data ingestion
            jobs. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataIngestionJobSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListDataIngestionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDataIngestionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetCmdlet">
            <summary>
            Provides a JSON description of the data in each time series dataset, including names,
            column names, and data types.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset to be described. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeDatasetResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeDatasetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet">
            <summary>
            Lists all datasets currently available in your account, filtering on the dataset name.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.DatasetNameBeginsWith">
            <summary>
            <para>
            <para>The beginning of the name of the datasets to be listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of datasets to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.NextToken">
            <summary>
            <para>
            <para> An opaque pagination token indicating where to continue the listing of datasets.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListDatasetsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListDatasetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetNameBeginsWith parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetNameBeginsWith' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EDatasetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet">
            <summary>
            Lists all inference events that have been found for the specified inference scheduler.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler for the inference events listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.IntervalEndTime">
            <summary>
            <para>
            <para>Returns all the inference events with an end start time equal to or greater than less
            than the end time given</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.IntervalStartTime">
            <summary>
            <para>
            <para> Lookout for Equipment will return all the inference events with an end time equal
            to or greater than the start time given.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of inference events to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.NextToken">
            <summary>
            <para>
            <para>An opaque pagination token indicating where to continue the listing of inference events.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InferenceEventSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListInferenceEventsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListInferenceEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceEventListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet">
            <summary>
            Lists all inference executions that have been performed by the specified inference
            scheduler.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.DataEndTimeBefore">
            <summary>
            <para>
            <para>The time reference in the inferenced dataset before which Amazon Lookout for Equipment
            stopped the inference execution. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.DataStartTimeAfter">
            <summary>
            <para>
            <para>The time reference in the inferenced dataset after which Amazon Lookout for Equipment
            started the inference execution. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler for the inference execution listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the inference execution. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of inference executions to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.NextToken">
            <summary>
            <para>
            <para>An opaque pagination token indicating where to continue the listing of inference executions.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InferenceExecutionSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListInferenceExecutionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceExecutionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerCmdlet">
            <summary>
            Specifies information about the inference scheduler being used, including name, model,
            status, and associated metadata
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler being described. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeInferenceSchedulerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet">
            <summary>
            Retrieves a list of all inference schedulers currently available for your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.InferenceSchedulerNameBeginsWith">
            <summary>
            <para>
            <para>The beginning of the name of the inference schedulers to be listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the ML model used by the inference scheduler to be listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of inference schedulers to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.NextToken">
            <summary>
            <para>
            <para> An opaque pagination token indicating where to continue the listing of inference
            schedulers. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InferenceSchedulerSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListInferenceSchedulersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EInferenceSchedulerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelCmdlet">
            <summary>
            Returns the name of the label.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> Returns the name of the group containing the label. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelCmdlet.LabelId">
            <summary>
            <para>
            <para> Returns the ID of the label. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeLabelResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeLabelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupCmdlet">
            <summary>
            Returns information about the label group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> Returns the name of the label group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeLabelGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet">
            <summary>
            Returns a list of the label groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.LabelGroupNameBeginsWith">
            <summary>
            <para>
            <para> The beginning of the name of the label groups to be listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of label groups to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para> An opaque pagination token indicating where to continue the listing of label groups.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LabelGroupSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListLabelGroupsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListLabelGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupNameBeginsWith parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupNameBeginsWith' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet">
            <summary>
            Provides a list of labels.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.Equipment">
            <summary>
            <para>
            <para> Lists the labels that pertain to a particular piece of equipment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.FaultCode">
            <summary>
            <para>
            <para> Returns labels with a particular fault code. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.IntervalEndTime">
            <summary>
            <para>
            <para> Returns all labels with a start time earlier than the end time given. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.IntervalStartTime">
            <summary>
            <para>
            <para> Returns all the labels with a end time equal to or later than the start time given.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> Retruns the name of the label group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of labels to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.NextToken">
            <summary>
            <para>
            <para> An opaque pagination token indicating where to continue the listing of label groups.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LabelSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListLabelsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListLabelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ELabelListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelCmdlet">
            <summary>
            Provides a JSON containing the overall information about a specific ML model, including
            model name and ARN, dataset, training and evaluation information, status, and so on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the ML model to be described. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DescribeModelResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.DescribeModelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ModelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ModelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet">
            <summary>
            Generates a list of all models in the account, including model name and ARN, dataset,
            and status.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.DatasetNameBeginsWith">
            <summary>
            <para>
            <para>The beginning of the name of the dataset of the ML models to be listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.ModelNameBeginsWith">
            <summary>
            <para>
            <para>The beginning of the name of the ML models being listed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.Status">
            <summary>
            <para>
            <para>The status of the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.MaxResult">
            <summary>
            <para>
            <para> Specifies the maximum number of ML models to list. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.NextToken">
            <summary>
            <para>
            <para> An opaque pagination token indicating where to continue the listing of ML models.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ModelSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListModelsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListModelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EModelListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4EResourceTagCmdlet">
            <summary>
            Lists all the tags for a specified resource, including key and value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource (such as the dataset or model) that
            is the focus of the <code>ListTagsForResource</code> operation. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4EResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet">
            <summary>
            Lists statistics about the data collected for each of the sensors that have been
            successfully ingested in the particular dataset. Can also be used to retreive Sensor
            Statistics for a previous ingestion job.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.DatasetName">
            <summary>
            <para>
            <para> The name of the dataset associated with the list of Sensor Statistics. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.IngestionJobId">
            <summary>
            <para>
            <para> The ingestion job id associated with the list of Sensor Statistics. To get sensor
            statistics for a particular ingestion job id, both dataset name and ingestion job
            id must be submitted as inputs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Specifies the maximum number of sensors for which to retrieve statistics. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.NextToken">
            <summary>
            <para>
            <para>An opaque pagination token indicating where to continue the listing of sensor statistics.
            </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SensorStatisticsSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.ListSensorStatisticsResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.ListSensorStatisticsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.GetL4ESensorStatisticListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet">
            <summary>
            Creates a container for a collection of data being ingested for analysis. The dataset
            contains the metadata describing where the data is and what the data actually looks
            like. In other words, it contains the location of the data source, the data schema,
            and other information. A dataset also contains any tags associated with the ingested
            data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset being created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.DatasetSchema_InlineDataSchema">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.ServerSideKmsKeyId">
            <summary>
            <para>
            <para>Provides the identifier of the KMS key used to encrypt dataset data by Amazon Lookout
            for Equipment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.Tag">
            <summary>
            <para>
            <para>Any tags associated with the ingested data described in the dataset. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.ClientToken">
            <summary>
            <para>
            <para> A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.CreateDatasetResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.CreateDatasetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EDatasetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet">
            <summary>
            Creates a scheduled inference. Scheduling an inference is setting up a continuous
            real-time inference plan to analyze new measurement data. When setting up the schedule,
            you provide an S3 bucket location for the input data, assign it a delimiter between
            separate entries in the data, set an offset delay if desired, and set the frequency
            of inferencing. You must also provide an S3 bucket location for the output data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.S3InputConfiguration_Bucket">
            <summary>
            <para>
            <para>The bucket containing the input dataset for the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.S3OutputConfiguration_Bucket">
            <summary>
            <para>
            <para> The bucket containing the output results from the inference </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.InferenceInputNameConfiguration_ComponentTimestampDelimiter">
            <summary>
            <para>
            <para>Indicates the delimiter character used between items in the data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.DataDelayOffsetInMinute">
            <summary>
            <para>
            <para>The interval (in minutes) of planned delay at the start of each inference segment.
            For example, if inference is set to run every ten minutes, the delay is set to five
            minutes and the time is 09:08. The inference scheduler will wake up at the configured
            interval (which, without a delay configured, would be 09:10) plus the additional five
            minute delay time (so 09:15) to check your Amazon S3 bucket. The delay provides a
            buffer for you to upload data at the same frequency, so that you don't have to stop
            and restart the scheduler when uploading new data.</para><para>For more information, see <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html">Understanding
            the inference process</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.DataUploadFrequency">
            <summary>
            <para>
            <para> How often data is uploaded to the source Amazon S3 bucket for the input data. The
            value chosen is the length of time between data uploads. For instance, if you select
            5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source
            bucket once every 5 minutes. This frequency also determines how often Amazon Lookout
            for Equipment runs inference on your data.</para><para>For more information, see <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/understanding-inference-process.html">Understanding
            the inference process</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler being created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.DataInputConfiguration_InputTimeZoneOffset">
            <summary>
            <para>
            <para>Indicates the difference between your time zone and Coordinated Universal Time (UTC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.DataOutputConfiguration_KmsKeyId">
            <summary>
            <para>
            <para>The ID number for the AWS KMS key used to encrypt the inference output. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the previously trained ML model being used to create the inference scheduler.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.S3InputConfiguration_Prefix">
            <summary>
            <para>
            <para>The prefix for the S3 bucket used for the input data for the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.S3OutputConfiguration_Prefix">
            <summary>
            <para>
            <para> The prefix for the S3 bucket used for the output results from the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used for the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.ServerSideKmsKeyId">
            <summary>
            <para>
            <para>Provides the identifier of the KMS key used to encrypt inference scheduler data by
            Amazon Lookout for Equipment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.Tag">
            <summary>
            <para>
            <para>Any tags associated with the inference scheduler. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.InferenceInputNameConfiguration_TimestampFormat">
            <summary>
            <para>
            <para>The format of the timestamp, whether Epoch time, or standard, with or without hyphens
            (-). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.ClientToken">
            <summary>
            <para>
            <para> A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.CreateInferenceSchedulerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EInferenceSchedulerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet">
            <summary>
            Creates a label for an event.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.EndTime">
            <summary>
            <para>
            <para> The end time of the labeled event. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.Equipment">
            <summary>
            <para>
            <para> Indicates that a label pertains to a particular piece of equipment. </para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.FaultCode">
            <summary>
            <para>
            <para> Provides additional information about the label. The fault code must be defined in
            the FaultCodes attribute of the label group.</para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> The name of a group of labels. </para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.Note">
            <summary>
            <para>
            <para> Metadata providing additional information about the label. </para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.Rating">
            <summary>
            <para>
            <para> Indicates whether a labeled event represents an anomaly. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.StartTime">
            <summary>
            <para>
            <para> The start time of the labeled event. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.ClientToken">
            <summary>
            <para>
            <para> A unique identifier for the request to create a label. If you do not set the client
            request token, Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LabelId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.CreateLabelResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.CreateLabelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet">
            <summary>
            Creates a group of labels.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.FaultCode">
            <summary>
            <para>
            <para> The acceptable fault codes (indicating the type of anomaly associated with the label)
            that can be used with this label group.</para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> Names a group of labels.</para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.Tag">
            <summary>
            <para>
            <para> Tags that provide metadata about the label group you are creating. </para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.ClientToken">
            <summary>
            <para>
            <para> A unique identifier for the request to create a label group. If you do not set the
            client request token, Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.CreateLabelGroupResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.CreateLabelGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4ELabelGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet">
            <summary>
            Creates an ML model for data inference. 
            
             
            <para>
            A machine-learning (ML) model is a mathematical model that finds patterns in your
            data. In Amazon Lookout for Equipment, the model learns the patterns of normal behavior
            and detects abnormal behavior that could be potential equipment failure (or maintenance
            events). The models are made by analyzing normal data and abnormalities in machine
            behavior that have already occurred.
            </para><para>
            Your model is trained using a portion of the data from your dataset and uses that
            data to learn patterns of normal behavior and abnormal patterns that lead to equipment
            failure. Another portion of the data is used to evaluate the model's accuracy. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.S3InputConfiguration_Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket holding the label data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset for the ML model being created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.EvaluationDataEndTime">
            <summary>
            <para>
            <para> Indicates the time reference in the dataset that should be used to end the subset
            of evaluation data for the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.EvaluationDataStartTime">
            <summary>
            <para>
            <para>Indicates the time reference in the dataset that should be used to begin the subset
            of evaluation data for the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.DatasetSchema_InlineDataSchema">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.LabelsInputConfiguration_LabelGroupName">
            <summary>
            <para>
            <para> The name of the label group to be used for label data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.ModelName">
            <summary>
            <para>
            <para>The name for the ML model to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.OffCondition">
            <summary>
            <para>
            <para>Indicates that the asset associated with this sensor has been shut off. As long as
            this condition is met, Lookout for Equipment will not use data from this asset for
            training, evaluation, or inference.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.S3InputConfiguration_Prefix">
            <summary>
            <para>
            <para> The prefix for the S3 bucket used for the label data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.RoleArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of a role with permission to access the data source
            being used to create the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.ServerSideKmsKeyId">
            <summary>
            <para>
            <para>Provides the identifier of the KMS key used to encrypt model data by Amazon Lookout
            for Equipment. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.Tag">
            <summary>
            <para>
            <para> Any tags associated with the ML model being created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.DataPreProcessingConfiguration_TargetSamplingRate">
            <summary>
            <para>
            <para>The sampling rate of the data after post processing by Amazon Lookout for Equipment.
            For example, if you provide data that has been collected at a 1 second level and you
            want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code>
            is 1 minute.</para><para>When providing a value for the <code>TargetSamplingRate</code>, you must attach the
            prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>,
            the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is
            <i>PT1H</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.TrainingDataEndTime">
            <summary>
            <para>
            <para>Indicates the time reference in the dataset that should be used to end the subset
            of training data for the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.TrainingDataStartTime">
            <summary>
            <para>
            <para>Indicates the time reference in the dataset that should be used to begin the subset
            of training data for the ML model. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique identifier for the request. If you do not set the client request token, Amazon
            Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.CreateModelResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.CreateModelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.NewL4EModelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EDatasetCmdlet">
            <summary>
            Deletes a dataset and associated artifacts. The operation will check to see if any
            inference scheduler or data ingestion job is currently using the dataset, and if there
            isn't, the dataset, its metadata, and any associated data stored in S3 will be deleted.
            This does not affect any models that used this dataset for training and evaluation,
            but does prevent it from being used in the future.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EDatasetCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset to be deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DeleteDatasetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EDatasetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EInferenceSchedulerCmdlet">
            <summary>
            Deletes an inference scheduler that has been set up. Already processed output results
            are not affected.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler to be deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DeleteInferenceSchedulerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EInferenceSchedulerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EInferenceSchedulerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelCmdlet">
            <summary>
            Deletes a label.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> The name of the label group that contains the label that you want to delete. Data
            in this field will be retained for service usage. Follow best practices for the security
            of your data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelCmdlet.LabelId">
            <summary>
            <para>
            <para> The ID of the label that you want to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DeleteLabelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelGroupCmdlet">
            <summary>
            Deletes a group of labels.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelGroupCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> The name of the label group that you want to delete. Data in this field will be retained
            for service usage. Follow best practices for the security of your data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DeleteLabelGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4ELabelGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EModelCmdlet">
            <summary>
            Deletes an ML model currently available for Amazon Lookout for Equipment. This will
            prevent it from being used with an inference scheduler, even one that is already set
            up.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EModelCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the ML model to be deleted. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.DeleteModelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EModelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ModelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ModelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EModelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet">
            <summary>
            Removes a specific tag from a given resource. The tag is specified by its key.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which the tag is currently associated.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>Specifies the key of the tag to be removed from a specified resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.RemoveL4EResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet">
            <summary>
            Starts a data ingestion job. Amazon Lookout for Equipment returns the job status.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.S3InputConfiguration_Bucket">
            <summary>
            <para>
            <para>The name of the S3 bucket used for the input data for the data ingestion. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.DatasetName">
            <summary>
            <para>
            <para>The name of the dataset being used by the data ingestion job. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.S3InputConfiguration_KeyPattern">
            <summary>
            <para>
            <para> Pattern for matching the Amazon S3 files which will be used for ingestion. If no
            KeyPattern is provided, we will use the default hierarchy file structure, which is
            same as KeyPattern {prefix}/{component_name}/* </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.S3InputConfiguration_Prefix">
            <summary>
            <para>
            <para>The prefix for the S3 location being used for the input data for the data ingestion.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.RoleArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the data ingestion job. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.ClientToken">
            <summary>
            <para>
            <para> A unique identifier for the request. If you do not set the client request token,
            Amazon Lookout for Equipment generates one. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.StartDataIngestionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EDataIngestionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.StartL4EInferenceSchedulerCmdlet">
            <summary>
            Starts an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler to be started. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.StartInferenceSchedulerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EInferenceSchedulerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StartL4EInferenceSchedulerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.StopL4EInferenceSchedulerCmdlet">
            <summary>
            Stops an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StopL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler to be stopped. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StopL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse).
            Specifying the name of a property of type Amazon.LookoutEquipment.Model.StopInferenceSchedulerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StopL4EInferenceSchedulerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.StopL4EInferenceSchedulerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet">
            <summary>
            Updates an inference scheduler.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.S3InputConfiguration_Bucket">
            <summary>
            <para>
            <para>The bucket containing the input dataset for the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.S3OutputConfiguration_Bucket">
            <summary>
            <para>
            <para> The bucket containing the output results from the inference </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.InferenceInputNameConfiguration_ComponentTimestampDelimiter">
            <summary>
            <para>
            <para>Indicates the delimiter character used between items in the data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.DataDelayOffsetInMinute">
            <summary>
            <para>
            <para> A period of time (in minutes) by which inference on the data is delayed after the
            data starts. For instance, if you select an offset delay time of five minutes, inference
            will not begin on the data until the first data measurement after the five minute
            mark. For example, if five minutes is selected, the inference scheduler will wake
            up at the configured frequency with the additional five minute delay time to check
            the customer S3 bucket. The customer can upload data at the same frequency and they
            don't need to stop and restart the scheduler when uploading new data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.DataUploadFrequency">
            <summary>
            <para>
            <para>How often data is uploaded to the source S3 bucket for the input data. The value chosen
            is the length of time between data uploads. For instance, if you select 5 minutes,
            Amazon Lookout for Equipment will upload the real-time data to the source bucket once
            every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment
            starts a scheduled inference on your data. In this example, it starts once every 5
            minutes. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.InferenceSchedulerName">
            <summary>
            <para>
            <para>The name of the inference scheduler to be updated. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.DataInputConfiguration_InputTimeZoneOffset">
            <summary>
            <para>
            <para>Indicates the difference between your time zone and Coordinated Universal Time (UTC).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.DataOutputConfiguration_KmsKeyId">
            <summary>
            <para>
            <para>The ID number for the AWS KMS key used to encrypt the inference output. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.S3InputConfiguration_Prefix">
            <summary>
            <para>
            <para>The prefix for the S3 bucket used for the input data for the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.S3OutputConfiguration_Prefix">
            <summary>
            <para>
            <para> The prefix for the S3 bucket used for the output results from the inference. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.RoleArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of a role with permission to access the data source
            for the inference scheduler. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.InferenceInputNameConfiguration_TimestampFormat">
            <summary>
            <para>
            <para>The format of the timestamp, whether Epoch time, or standard, with or without hyphens
            (-). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.UpdateInferenceSchedulerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InferenceSchedulerName parameter.
            The -PassThru parameter is deprecated, use -Select '^InferenceSchedulerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4EInferenceSchedulerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet">
            <summary>
            Updates the label group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet.FaultCode">
            <summary>
            <para>
            <para> Updates the code indicating the type of anomaly associated with the label. </para><para>Data in this field will be retained for service usage. Follow best practices for the
            security of your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet.LabelGroupName">
            <summary>
            <para>
            <para> The name of the label group to be updated. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LookoutEquipment.Model.UpdateLabelGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LabelGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^LabelGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.L4E.UpdateL4ELabelGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
