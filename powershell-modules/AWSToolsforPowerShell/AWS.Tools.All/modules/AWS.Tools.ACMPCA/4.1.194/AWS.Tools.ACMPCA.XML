<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ACMPCA</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet">
            <summary>
            Adds one or more tags to your private CA. Tags are labels that you can use to identify
            and organize your Amazon Web Services resources. Each tag consists of a key and an
            optional value. You specify the private CA on input by its Amazon Resource Name (ARN).
            You specify the tag by using a key-value pair. You can apply a tag to just one private
            CA if you want to identify a specific characteristic of that CA, or you can apply
            the same tag to multiple private CAs if you want to filter for a common relationship
            among those CAs. To remove one or more tags, use the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_UntagCertificateAuthority.html">UntagCertificateAuthority</a>
            action. Call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListTags.html">ListTags</a>
            action to see what tags are associated with your CA.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet.Tag">
            <summary>
            <para>
            <para>List of tags to be associated with the CA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.TagCertificateAuthorityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.AddPCACertificateAuthorityTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateCmdlet">
            <summary>
            Retrieves a certificate from your private CA or one that has been shared with you.
            The ARN of the certificate is returned when you call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_IssueCertificate.html">IssueCertificate</a>
            action. You must specify both the ARN of your private CA and the ARN of the issued
            certificate when calling the <b>GetCertificate</b> action. You can retrieve the certificate
            if it is in the <b>ISSUED</b> state. You can call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthorityAuditReport.html">CreateCertificateAuthorityAuditReport</a>
            action to create a report that contains information about all of the certificates
            issued and revoked by your private CA.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateCmdlet.CertificateArn">
            <summary>
            <para>
            <para>The ARN of the issued certificate. The ARN contains the certificate serial number
            and must be in the following form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i>/certificate/<i>286535153982981100925020015808220737245</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.GetCertificateResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.GetCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCmdlet">
            <summary>
            Lists information about your private certificate authority (CA) or one that has been
            shared with you. You specify the private CA on input by its ARN (Amazon Resource Name).
            The output contains the status of your CA. This can be any of the following: 
            
             <ul><li><para><code>CREATING</code> - ACM Private CA is creating your private certificate authority.
            </para></li><li><para><code>PENDING_CERTIFICATE</code> - The certificate is pending. You must use your
            ACM Private CA-hosted or on-premises root or subordinate CA to sign your private CA
            CSR and then import it into PCA. 
            </para></li><li><para><code>ACTIVE</code> - Your private CA is active.
            </para></li><li><para><code>DISABLED</code> - Your private CA has been disabled.
            </para></li><li><para><code>EXPIRED</code> - Your private CA certificate has expired.
            </para></li><li><para><code>FAILED</code> - Your private CA has failed. Your CA can fail because of problems
            such a network outage or back-end Amazon Web Services failure or other errors. A failed
            CA can never return to the pending state. You must create a new CA. 
            </para></li><li><para><code>DELETED</code> - Your private CA is within the restoration period, after which
            it is permanently deleted. The length of time remaining in the CA's restoration period
            is also included in this action's output.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateAuthority'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.DescribeCertificateAuthorityResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.DescribeCertificateAuthorityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityAuditReportCmdlet">
            <summary>
            Lists information about a specific audit report created by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthorityAuditReport.html">CreateCertificateAuthorityAuditReport</a>
            action. Audit information is created every time the certificate authority (CA) private
            key is used. The private key is used when you call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_IssueCertificate.html">IssueCertificate</a>
            action or the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_RevokeCertificate.html">RevokeCertificate</a>
            action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityAuditReportCmdlet.AuditReportId">
            <summary>
            <para>
            <para>The report ID returned by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthorityAuditReport.html">CreateCertificateAuthorityAuditReport</a>
            action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityAuditReportCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the private CA. This must be of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityAuditReportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.DescribeCertificateAuthorityAuditReportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityAuditReportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AuditReportId parameter.
            The -PassThru parameter is deprecated, use -Select '^AuditReportId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCertificateCmdlet">
            <summary>
            Retrieves the certificate and certificate chain for your private certificate authority
            (CA) or one that has been shared with you. Both the certificate and the chain are
            base64 PEM-encoded. The chain does not include the CA certificate. Each certificate
            in the chain signs the one before it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of your private CA. This is of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.GetCertificateAuthorityCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCsrCmdlet">
            <summary>
            Retrieves the certificate signing request (CSR) for your private certificate authority
            (CA). The CSR is created when you call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action. Sign the CSR with your ACM Private CA-hosted or on-premises root or subordinate
            CA. Then import the signed certificate back into ACM Private CA by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ImportCertificateAuthorityCertificate.html">ImportCertificateAuthorityCertificate</a>
            action. The CSR is returned as a base64 PEM-encoded string.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCsrCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action. This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCsrCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Csr'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.GetCertificateAuthorityCsrResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.GetCertificateAuthorityCsrResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityCsrCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet">
            <summary>
            Lists the private certificate authorities that you created by using the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.ResourceOwner">
            <summary>
            <para>
            <para>Use this parameter to filter the returned set of certificate authorities based on
            their owner. The default is SELF.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Use this parameter when paginating results to specify the maximum number of items
            to return in the response on each page. If additional items exist beyond the number
            you specify, the <code>NextToken</code> element is sent in the response. Use this
            <code>NextToken</code> value in a subsequent request to retrieve additional items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.NextToken">
            <summary>
            <para>
            <para>Use this parameter when paginating results in a subsequent request after you receive
            a response with truncated results. Set it to the value of the <code>NextToken</code>
            parameter from the response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateAuthorities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.ListCertificateAuthoritiesResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.ListCertificateAuthoritiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceOwner parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceOwner' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet">
            <summary>
            Lists the tags, if any, that are associated with your private CA or one that has been
            shared with you. Tags are labels that you can use to identify and organize your CAs.
            Each tag consists of a key and an optional value. Call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_TagCertificateAuthority.html">TagCertificateAuthority</a>
            action to add one or more tags to your CA. Call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_UntagCertificateAuthority.html">UntagCertificateAuthority</a>
            action to remove tags.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action. This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Use this parameter when paginating results to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value
            in a subsequent request to retrieve additional items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.NextToken">
            <summary>
            <para>
            <para>Use this parameter when paginating results in a subsequent request after you receive
            a response with truncated results. Set it to the value of <b>NextToken</b> from the
            response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.ListTagsResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.ListTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCACertificateAuthorityTagListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.ListPermissions<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the private CA to inspect. You can find the ARN
            by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action. This must be of the form: <code>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</code>
            You can get a private CA's ARN by running the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>When paginating results, use this parameter to specify the maximum number of items
            to return in the response. If additional items exist beyond the number you specify,
            the <b>NextToken</b> element is sent in the response. Use this <b>NextToken</b> value
            in a subsequent request to retrieve additional items.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.NextToken">
            <summary>
            <para>
            <para>When paginating results, use this parameter in a subsequent request after you receive
            a response with truncated results. Set it to the value of <b>NextToken</b> from the
            response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Permissions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.ListPermissionsResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.ListPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPermissionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.GetPCAPolicyCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.GetPolicy
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the private CA that will have its policy retrieved.
            You can find the CA's ARN by calling the ListCertificateAuthorities action. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.GetPolicyResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.GetPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.GetPCAPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet">
            <summary>
            Imports a signed private CA certificate into ACM Private CA. This action is used when
            you are using a chain of trust whose root is located outside ACM Private CA. Before
            you can call this action, the following preparations must in place:
            
             <ol><li><para>
            In ACM Private CA, call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action to create the private CA that you plan to back with the imported certificate.
            </para></li><li><para>
            Call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_GetCertificateAuthorityCsr.html">GetCertificateAuthorityCsr</a>
            action to generate a certificate signing request (CSR).
            </para></li><li><para>
            Sign the CSR using a root or intermediate CA hosted by either an on-premises PKI hierarchy
            or by a commercial CA.
            </para></li><li><para>
            Create a certificate chain and copy the signed certificate and the certificate chain
            to your working directory.
            </para></li></ol><para>
            ACM Private CA supports three scenarios for installing a CA certificate:
            </para><ul><li><para>
            Installing a certificate for a root CA hosted by ACM Private CA.
            </para></li><li><para>
            Installing a subordinate CA certificate whose parent authority is hosted by ACM Private
            CA.
            </para></li><li><para>
            Installing a subordinate CA certificate whose parent authority is externally hosted.
            </para></li></ul><para>
            The following additional requirements apply when you import a CA certificate.
            </para><ul><li><para>
            Only a self-signed certificate can be imported as a root CA.
            </para></li><li><para>
            A self-signed certificate cannot be imported as a subordinate CA.
            </para></li><li><para>
            Your certificate chain must not include the private CA certificate that you are importing.
            </para></li><li><para>
            Your root CA must be the last certificate in your chain. The subordinate certificate,
            if any, that your root CA signed must be next to last. The subordinate certificate
            signed by the preceding subordinate CA must come next, and so on until your chain
            is built. 
            </para></li><li><para>
            The chain must be PEM-encoded.
            </para></li><li><para>
            The maximum allowed size of a certificate is 32 KB.
            </para></li><li><para>
            The maximum allowed size of a certificate chain is 2 MB.
            </para></li></ul><para><i>Enforcement of Critical Constraints</i></para><para>
            ACM Private CA allows the following extensions to be marked critical in the imported
            CA certificate or chain.
            </para><ul><li><para>
            Basic constraints (<i>must</i> be marked critical)
            </para></li><li><para>
            Subject alternative names
            </para></li><li><para>
            Key usage
            </para></li><li><para>
            Extended key usage
            </para></li><li><para>
            Authority key identifier
            </para></li><li><para>
            Subject key identifier
            </para></li><li><para>
            Issuer alternative name
            </para></li><li><para>
            Subject directory attributes
            </para></li><li><para>
            Subject information access
            </para></li><li><para>
            Certificate policies
            </para></li><li><para>
            Policy mappings
            </para></li><li><para>
            Inhibit anyPolicy
            </para></li></ul><para>
            ACM Private CA rejects the following extensions when they are marked critical in an
            imported CA certificate or chain.
            </para><ul><li><para>
            Name constraints
            </para></li><li><para>
            Policy constraints
            </para></li><li><para>
            CRL distribution points
            </para></li><li><para>
            Authority information access
            </para></li><li><para>
            Freshest CRL
            </para></li><li><para>
            Any other extension
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.Certificate">
            <summary>
            <para>
            <para>The PEM-encoded certificate for a private CA. This may be a self-signed certificate
            in the case of a root CA, or it may be signed by another CA that you control.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.CertificateChain">
            <summary>
            <para>
            <para>A PEM-encoded file that contains all of your certificates, other than the certificate
            you're importing, chaining up to your root CA. Your ACM Private CA-hosted or on-premises
            root certificate is the last in the chain, and each certificate in the chain signs
            the one preceding. </para><para>This parameter must be supplied when you import a subordinate CA. When you import
            a root CA, there is no chain.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.ImportCertificateAuthorityCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.ImportPCACertificateAuthorityCertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet">
            <summary>
            Uses your private certificate authority (CA), or one that has been shared with you,
            to issue a client certificate. This action returns the Amazon Resource Name (ARN)
            of the certificate. You can retrieve the certificate by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_GetCertificate.html">GetCertificate</a>
            action and specifying the ARN. 
            
             <note><para>
            You cannot use the ACM <b>ListCertificateAuthorities</b> action to retrieve the ARNs
            of the certificates that you issue by using ACM Private CA.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Extensions_CertificatePolicy">
            <summary>
            <para>
            <para>Contains a sequence of one or more policy information terms, each of which consists
            of an object identifier (OID) and optional qualifiers. For more information, see NIST's
            definition of <a href="https://csrc.nist.gov/glossary/term/Object_Identifier">Object
            Identifier (OID)</a>.</para><para>In an end-entity certificate, these terms indicate the policy under which the certificate
            was issued and the purposes for which it may be used. In a CA certificate, these terms
            limit the set of policies for certification paths that include this certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_CommonName">
            <summary>
            <para>
            <para>For CA and end-entity certificates in a private PKI, the common name (CN) can be any
            string within the length limit. </para><para>Note: In publicly trusted certificates, the common name must be a fully qualified
            domain name (FQDN) associated with the certificate subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Country">
            <summary>
            <para>
            <para>Two-digit code that specifies the country in which the certificate subject located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_CRLSign">
            <summary>
            <para>
            <para>Key can be used to sign CRLs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Csr">
            <summary>
            <para>
            <para>The certificate signing request (CSR) for the certificate you want to issue. As an
            example, you can use the following OpenSSL command to create the CSR and a 2048 bit
            RSA private key. </para><para><code>openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem
            -out csr/test_cert_.csr</code></para><para>If you have a configuration file, you can then use the following OpenSSL command.
            The <code>usr_cert</code> block in the configuration file contains your X509 version
            3 extensions. </para><para><code>openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048
            -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr</code></para><para>Note: A CSR must provide either a <i>subject name</i> or a <i>subject alternative
            name</i> or the request will be rejected. </para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_CustomAttribute">
            <summary>
            <para>
            <para>Contains a sequence of one or more X.500 relative distinguished names (RDNs), each
            of which consists of an object identifier (OID) and a value. For more information,
            see NIST’s definition of <a href="https://csrc.nist.gov/glossary/term/Object_Identifier">Object
            Identifier (OID)</a>.</para><note><para>Custom attributes cannot be used in combination with standard attributes.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Extensions_CustomExtension">
            <summary>
            <para>
            <para>Contains a sequence of one or more X.509 extensions, each of which consists of an
            object identifier (OID), a base64-encoded value, and the critical flag. For more information,
            see the <a href="https://oidref.com/2.5.29">Global OID reference database.</a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_DataEncipherment">
            <summary>
            <para>
            <para>Key can be used to decipher data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_DecipherOnly">
            <summary>
            <para>
            <para>Key can be used only to decipher data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_DigitalSignature">
            <summary>
            <para>
            <para> Key can be used for digital signing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_DistinguishedNameQualifier">
            <summary>
            <para>
            <para>Disambiguating information for the certificate subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_EncipherOnly">
            <summary>
            <para>
            <para>Key can be used only to encipher data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Extensions_ExtendedKeyUsage">
            <summary>
            <para>
            <para>Specifies additional purposes for which the certified public key may be used other
            than basic purposes indicated in the <code>KeyUsage</code> extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_GenerationQualifier">
            <summary>
            <para>
            <para>Typically a qualifier appended to the name of an individual. Examples include Jr.
            for junior, Sr. for senior, and III for third.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_GivenName">
            <summary>
            <para>
            <para>First name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>Alphanumeric string that can be used to distinguish between calls to the <b>IssueCertificate</b>
            action. Idempotency tokens for <b>IssueCertificate</b> time out after one minute.
            Therefore, if you call <b>IssueCertificate</b> multiple times with the same idempotency
            token within one minute, ACM Private CA recognizes that you are requesting only one
            certificate and will issue only one. If you change the idempotency token for each
            call, PCA recognizes that you are requesting multiple certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Initial">
            <summary>
            <para>
            <para>Concatenation that typically contains the first letter of the <b>GivenName</b>, the
            first letter of the middle name if one exists, and the first letter of the <b>Surname</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_KeyAgreement">
            <summary>
            <para>
            <para>Key can be used in a key-agreement protocol.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_KeyCertSign">
            <summary>
            <para>
            <para>Key can be used to sign certificates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_KeyEncipherment">
            <summary>
            <para>
            <para>Key can be used to encipher data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Locality">
            <summary>
            <para>
            <para>The locality (such as a city or town) in which the certificate subject is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.KeyUsage_NonRepudiation">
            <summary>
            <para>
            <para>Key can be used for non-repudiation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Organization">
            <summary>
            <para>
            <para>Legal name of the organization with which the certificate subject is affiliated. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_OrganizationalUnit">
            <summary>
            <para>
            <para>A subdivision or unit of the organization (such as sales or finance) with which the
            certificate subject is affiliated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Pseudonym">
            <summary>
            <para>
            <para>Typically a shortened version of a longer <b>GivenName</b>. For example, Jonathan
            is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_SerialNumber">
            <summary>
            <para>
            <para>The certificate serial number.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.SigningAlgorithm">
            <summary>
            <para>
            <para>The name of the algorithm that will be used to sign the certificate to be issued.
            </para><para>This parameter should not be confused with the <code>SigningAlgorithm</code> parameter
            used to sign a CSR in the <code>CreateCertificateAuthority</code> action.</para><note><para>The specified signing algorithm family (RSA or ECDSA) much match the algorithm family
            of the CA's secret key.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_State">
            <summary>
            <para>
            <para>State in which the subject of the certificate is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Extensions_SubjectAlternativeName">
            <summary>
            <para>
            <para>The subject alternative name extension allows identities to be bound to the subject
            of the certificate. These identities may be included in addition to or in place of
            the identity in the subject field of the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Surname">
            <summary>
            <para>
            <para>Family name. In the US and the UK, for example, the surname of an individual is ordered
            last. In Asian cultures the surname is typically ordered first.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.TemplateArn">
            <summary>
            <para>
            <para>Specifies a custom configuration template to use when issuing a certificate. If this
            parameter is not provided, ACM Private CA defaults to the <code>EndEntityCertificate/V1</code>
            template. For CA certificates, you should choose the shortest path length that meets
            your needs. The path length is indicated by the PathLen<i>N</i> portion of the ARN,
            where <i>N</i> is the <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaTerms.html#terms-cadepth">CA
            depth</a>.</para><para>Note: The CA depth configured on a subordinate CA certificate must not exceed the
            limit set by its parents in the CA hierarchy.</para><para>For a list of <code>TemplateArn</code> values supported by ACM Private CA, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html">Understanding
            Certificate Templates</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Subject_Title">
            <summary>
            <para>
            <para>A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the
            certificate subject.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Validity">
            <summary>
            <para>
            <para>Information describing the end of the validity period of the certificate. This parameter
            sets the “Not After” date for the certificate.</para><para>Certificate validity is the period of time during which a certificate is valid. Validity
            can be expressed as an explicit date and time when the certificate expires, or as
            a span of time after issuance, stated in days, months, or years. For more information,
            see <a href="https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.5">Validity</a>
            in RFC 5280. </para><para>This value is unaffected when <code>ValidityNotBefore</code> is also specified. For
            example, if <code>Validity</code> is set to 20 days in the future, the certificate
            will expire 20 days from issuance time regardless of the <code>ValidityNotBefore</code>
            value.</para><para>The end of the validity period configured on a certificate must not exceed the limit
            set on its parents in the CA hierarchy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.ValidityNotBefore">
            <summary>
            <para>
            <para>Information describing the start of the validity period of the certificate. This parameter
            sets the “Not Before" date for the certificate.</para><para>By default, when issuing a certificate, ACM Private CA sets the "Not Before" date
            to the issuance time minus 60 minutes. This compensates for clock inconsistencies
            across computer systems. The <code>ValidityNotBefore</code> parameter can be used
            to customize the “Not Before” value. </para><para>Unlike the <code>Validity</code> parameter, the <code>ValidityNotBefore</code> parameter
            is optional.</para><para>The <code>ValidityNotBefore</code> value is expressed as an explicit date and time,
            using the <code>Validity</code> type value <code>ABSOLUTE</code>. For more information,
            see <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_Validity.html">Validity</a>
            in this API reference and <a href="https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.5">Validity</a>
            in RFC 5280.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.IssueCertificateResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.IssueCertificateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet">
            <summary>
            Creates a root or subordinate private certificate authority (CA). You must specify
            the CA configuration, an optional configuration for Online Certificate Status Protocol
            (OCSP) and/or a certificate revocation list (CRL), the CA type, and an optional idempotency
            token to avoid accidental creation of multiple CAs. The CA configuration specifies
            the name of the algorithm and key size to be used to create the CA private key, the
            type of signing algorithm that the CA uses, and X.500 subject information. The OCSP
            configuration can optionally specify a custom URL for the OCSP responder. The CRL
            configuration specifies the CRL expiration period in days (the validity period of
            the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the
            S3 bucket that is included in certificates issued by the CA. If successful, this action
            returns the Amazon Resource Name (ARN) of the CA.
            
             
            <para>
            ACM Private CA assets that are stored in Amazon S3 can be protected with encryption.
            For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaCreateCa.html#crl-encryption">Encrypting
            Your CRLs</a>.
            </para><note><para>
            Both PCA and the IAM principal must have permission to write to the S3 bucket that
            you specify. If the IAM principal making the call does not have permission to write
            to the bucket, then an exception is thrown. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/crl-planning.html#s3-policies">Access
            policies for CRLs in Amazon S3</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.CertificateAuthorityConfiguration">
            <summary>
            <para>
            <para>Name and bit size of the private key algorithm, the name of the signing algorithm,
            and X.500 certificate subject information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.CertificateAuthorityType">
            <summary>
            <para>
            <para>The type of the certificate authority.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.IdempotencyToken">
            <summary>
            <para>
            <para>Custom string that can be used to distinguish between calls to the <b>CreateCertificateAuthority</b>
            action. Idempotency tokens for <b>CreateCertificateAuthority</b> time out after five
            minutes. Therefore, if you call <b>CreateCertificateAuthority</b> multiple times with
            the same idempotency token within five minutes, ACM Private CA recognizes that you
            are requesting only certificate authority and will issue only one. If you change the
            idempotency token for each call, PCA recognizes that you are requesting multiple certificate
            authorities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.KeyStorageSecurityStandard">
            <summary>
            <para>
            <para>Specifies a cryptographic key management compliance standard used for handling CA
            keys.</para><para>Default: FIPS_140_2_LEVEL_3_OR_HIGHER</para><para><i>Note:</i><code>FIPS_140_2_LEVEL_3_OR_HIGHER</code> is not supported in the following
            Regions:</para><ul><li><para>ap-northeast-3</para></li><li><para>ap-southeast-3</para></li></ul><para>When creating a CA in these Regions, you must provide <code>FIPS_140_2_LEVEL_2_OR_HIGHER</code>
            as the argument for <code>KeyStorageSecurityStandard</code>. Failure to do this results
            in an <code>InvalidArgsException</code> with the message, "A certificate authority
            cannot be created in this region with the specified security standard."</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.RevocationConfiguration">
            <summary>
            <para>
            <para>Contains information to enable Online Certificate Status Protocol (OCSP) support,
            to enable a certificate revocation list (CRL), to enable both, or to enable neither.
            The default is for both certificate validation mechanisms to be disabled. For more
            information, see the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_OcspConfiguration.html">OcspConfiguration</a>
            and <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CrlConfiguration.html">CrlConfiguration</a>
            types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.Tag">
            <summary>
            <para>
            <para>Key-value pairs that will be attached to the new private CA. You can associate up
            to 50 tags with a private CA. For information using tags with IAM to manage permissions,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_iam-tags.html">Controlling
            Access Using IAM Tags</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.UsageMode">
            <summary>
            <para>
            <para>Specifies whether the CA issues general-purpose certificates that typically require
            a revocation mechanism, or short-lived certificates that may optionally omit revocation
            because they expire quickly. Short-lived certificate validity is limited to seven
            days.</para><para>The default value is GENERAL_PURPOSE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CertificateAuthorityArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.CreateCertificateAuthorityResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.CreateCertificateAuthorityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet">
            <summary>
            Creates an audit report that lists every time that your CA private key is used. The
            report is saved in the Amazon S3 bucket that you specify on input. The <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_IssueCertificate.html">IssueCertificate</a>
            and <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_RevokeCertificate.html">RevokeCertificate</a>
            actions use the private key. 
            
             <note><para>
            Both PCA and the IAM principal must have permission to write to the S3 bucket that
            you specify. If the IAM principal making the call does not have permission to write
            to the bucket, then an exception is thrown. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/crl-planning.html#s3-policies">Access
            policies for CRLs in Amazon S3</a>.
            </para></note><para>
            ACM Private CA assets that are stored in Amazon S3 can be protected with encryption.
            For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaAuditReport.html#audit-report-encryption">Encrypting
            Your Audit Reports</a>.
            </para><note><para>
            You can generate a maximum of one report every 30 minutes.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.AuditReportResponseFormat">
            <summary>
            <para>
            <para>The format in which to create the report. This can be either <b>JSON</b> or <b>CSV</b>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the CA to be audited. This is of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.S3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket that will contain the audit report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportResponse).
            Specifying the name of a property of type Amazon.ACMPCA.Model.CreateCertificateAuthorityAuditReportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCACertificateAuthorityAuditReportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.CreatePermission
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.Action">
            <summary>
            <para>
            <para>The actions that the specified Amazon Web Services service principal can use. These
            include <code>IssueCertificate</code>, <code>GetCertificate</code>, and <code>ListPermissions</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the CA that grants the permissions. You can find
            the ARN by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action. This must have the following form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.Principal">
            <summary>
            <para>
            <para>The Amazon Web Services service or identity that receives the permission. At this
            time, the only valid principal is <code>acm.amazonaws.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.SourceAccount">
            <summary>
            <para>
            <para>The ID of the calling account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.CreatePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.NewPCAPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet">
            <summary>
            Deletes a private certificate authority (CA). You must provide the Amazon Resource
            Name (ARN) of the private CA that you want to delete. You can find the ARN by calling
            the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action. 
            
             <note><para>
            Deleting a CA will invalidate other CAs and certificates below it in your CA hierarchy.
            </para></note><para>
            Before you can delete a CA that you have created and activated, you must disable it.
            To do this, call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_UpdateCertificateAuthority.html">UpdateCertificateAuthority</a>
            action and set the <b>CertificateAuthorityStatus</b> parameter to <code>DISABLED</code>.
            
            </para><para>
            Additionally, you can delete a CA if you are waiting for it to be created (that is,
            the status of the CA is <code>CREATING</code>). You can also delete it if the CA has
            been created but you haven't yet imported the signed certificate into ACM Private
            CA (that is, the status of the CA is <code>PENDING_CERTIFICATE</code>). 
            </para><para>
            When you successfully call <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_DeleteCertificateAuthority.html">DeleteCertificateAuthority</a>,
            the CA's status changes to <code>DELETED</code>. However, the CA won't be permanently
            deleted until the restoration period has passed. By default, if you do not set the
            <code>PermanentDeletionTimeInDays</code> parameter, the CA remains restorable for
            30 days. You can set the parameter from 7 to 30 days. The <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_DescribeCertificateAuthority.html">DescribeCertificateAuthority</a>
            action returns the time remaining in the restoration window of a private CA in the
            <code>DELETED</code> state. To restore an eligible CA, call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_RestoreCertificateAuthority.html">RestoreCertificateAuthority</a>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must have the following form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet.PermanentDeletionTimeInDay">
            <summary>
            <para>
            <para>The number of days to make a CA restorable after it has been deleted. This can be
            anywhere from 7 to 30 days, with 30 being the default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.DeleteCertificateAuthorityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet">
            <summary>
            Remove one or more tags from your private CA. A tag consists of a key-value pair.
            If you do not specify the value portion of the tag when calling this action, the tag
            will be removed regardless of value. If you specify a value, the tag is removed only
            if it is associated with the specified value. To add tags to a private CA, use the
            <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_TagCertificateAuthority.html">TagCertificateAuthority</a>.
            Call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListTags.html">ListTags</a>
            action to see what tags are associated with your CA.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>.
            This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet.Tag">
            <summary>
            <para>
            <para>List of tags to be removed from the CA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.UntagCertificateAuthorityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCACertificateAuthorityTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.DeletePermission
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the private CA that issued the permissions. You
            can find the CA's ARN by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action. This must have the following form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.Principal">
            <summary>
            <para>
            <para>The Amazon Web Services service or identity that will have its CA permissions revoked.
            At this time, the only valid service principal is <code>acm.amazonaws.com</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.SourceAccount">
            <summary>
            <para>
            <para>The Amazon Web Services account that calls this action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.DeletePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPolicyCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.DeletePolicy
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the private CA that will have its policy deleted.
            You can find the CA's ARN by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action. The ARN value must have the form <code>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.DeletePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RemovePCAPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RestorePCACertificateAuthorityCmdlet">
            <summary>
            Restores a certificate authority (CA) that is in the <code>DELETED</code> state. You
            can restore a CA during the period that you defined in the <b>PermanentDeletionTimeInDays</b>
            parameter of the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_DeleteCertificateAuthority.html">DeleteCertificateAuthority</a>
            action. Currently, you can specify 7 to 30 days. If you did not specify a <b>PermanentDeletionTimeInDays</b>
            value, by default you can restore the CA at any time in a 30 day period. You can check
            the time remaining in the restoration period of a private CA in the <code>DELETED</code>
            state by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_DescribeCertificateAuthority.html">DescribeCertificateAuthority</a>
            or <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            actions. The status of a restored CA is set to its pre-deletion status when the <b>RestoreCertificateAuthority</b>
            action returns. To change its status to <code>ACTIVE</code>, call the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_UpdateCertificateAuthority.html">UpdateCertificateAuthority</a>
            action. If the private CA was in the <code>PENDING_CERTIFICATE</code> state at deletion,
            you must use the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ImportCertificateAuthorityCertificate.html">ImportCertificateAuthorityCertificate</a>
            action to import a certificate authority into the private CA before it can be activated.
            You cannot restore a CA after the restoration period has ended.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RestorePCACertificateAuthorityCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that was returned when you called the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>
            action. This must be of the form: </para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RestorePCACertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.RestoreCertificateAuthorityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RestorePCACertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RestorePCACertificateAuthorityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet">
            <summary>
            Revokes a certificate that was issued inside ACM Private CA. If you enable a certificate
            revocation list (CRL) when you create or update your private CA, information about
            the revoked certificates will be included in the CRL. ACM Private CA writes the CRL
            to an S3 bucket that you specify. A CRL is typically updated approximately 30 minutes
            after a certificate is revoked. If for any reason the CRL update fails, ACM Private
            CA attempts makes further attempts every 15 minutes. With Amazon CloudWatch, you can
            create alarms for the metrics <code>CRLGenerated</code> and <code>MisconfiguredCRLBucket</code>.
            For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaCloudWatch.html">Supported
            CloudWatch Metrics</a>.
            
             <note><para>
            Both PCA and the IAM principal must have permission to write to the S3 bucket that
            you specify. If the IAM principal making the call does not have permission to write
            to the bucket, then an exception is thrown. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/crl-planning.html#s3-policies">Access
            policies for CRLs in Amazon S3</a>.
            </para></note><para>
            ACM Private CA also writes revocation information to the audit report. For more information,
            see <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthorityAuditReport.html">CreateCertificateAuthorityAuditReport</a>.
            </para><note><para>
            You cannot revoke a root CA self-signed certificate.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked.
            This must be of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.CertificateSerial">
            <summary>
            <para>
            <para>Serial number of the certificate to be revoked. This must be in hexadecimal format.
            You can retrieve the serial number by calling <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_GetCertificate.html">GetCertificate</a>
            with the Amazon Resource Name (ARN) of the certificate you want and the ARN of your
            private CA. The <b>GetCertificate</b> action retrieves the certificate in the PEM
            format. You can use the following OpenSSL command to list the certificate in text
            format and copy the hexadecimal serial number. </para><para><code>openssl x509 -in <i>file_path</i> -text -noout</code></para><para>You can also copy the serial number from the console or use the <a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html">DescribeCertificate</a>
            action in the <i>Certificate Manager API Reference</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.RevocationReason">
            <summary>
            <para>
            <para>Specifies why you revoked the certificate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.RevokeCertificateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.RevokePCACertificateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet">
            <summary>
            Amazon.ACMPCA.IAmazonACMPCA.PutPolicy
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The path and file name of a JSON-formatted IAM policy to attach to the specified private
            CA resource. If this policy does not contain all required statements or if it includes
            any statement that is not allowed, the <code>PutPolicy</code> action returns an <code>InvalidPolicyException</code>.
            For information about IAM policy and statement structure, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json">Overview
            of JSON Policies</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Number (ARN) of the private CA to associate with the policy. The
            ARN of the CA can be found by calling the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_ListCertificateAuthorities.html">ListCertificateAuthorities</a>
            action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.PutPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.SetPCAPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet">
            <summary>
            Updates the status or configuration of a private certificate authority (CA). Your
            private CA must be in the <code>ACTIVE</code> or <code>DISABLED</code> state before
            you can update it. You can disable a private CA that is in the <code>ACTIVE</code>
            state or make a CA that is in the <code>DISABLED</code> state active again.
            
             <note><para>
            Both PCA and the IAM principal must have permission to write to the S3 bucket that
            you specify. If the IAM principal making the call does not have permission to write
            to the bucket, then an exception is thrown. For more information, see <a href="https://docs.aws.amazon.com/acm-pca/latest/userguide/crl-planning.html#s3-policies">Access
            policies for CRLs in Amazon S3</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.CertificateAuthorityArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the private CA that issued the certificate to be revoked.
            This must be of the form:</para><para><code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i></code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.RevocationConfiguration">
            <summary>
            <para>
            <para>Contains information to enable Online Certificate Status Protocol (OCSP) support,
            to enable a certificate revocation list (CRL), to enable both, or to enable neither.
            If this parameter is not supplied, existing capibilites remain unchanged. For more
            information, see the <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_OcspConfiguration.html">OcspConfiguration</a>
            and <a href="https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CrlConfiguration.html">CrlConfiguration</a>
            types.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.Status">
            <summary>
            <para>
            <para>Status of your private CA.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ACMPCA.Model.UpdateCertificateAuthorityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CertificateAuthorityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^CertificateAuthorityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.PCA.UpdatePCACertificateAuthorityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
