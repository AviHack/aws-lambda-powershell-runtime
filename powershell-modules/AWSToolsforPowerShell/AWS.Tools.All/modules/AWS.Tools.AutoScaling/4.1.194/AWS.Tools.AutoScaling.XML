<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.AutoScaling</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet">
            <summary>
            <note><para>
            To attach an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer,
            use the <a>AttachLoadBalancerTargetGroups</a> API operation instead.
            </para></note><para>
            Attaches one or more Classic Load Balancers to the specified Auto Scaling group. Amazon
            EC2 Auto Scaling registers the running instances with these Classic Load Balancers.
            </para><para>
            To describe the load balancers for an Auto Scaling group, call the <a>DescribeLoadBalancers</a>
            API. To detach a load balancer from the Auto Scaling group, call the <a>DetachLoadBalancers</a>
            API.
            </para><para>
            This operation is additive and does not detach existing Classic Load Balancers or
            target groups from the Auto Scaling group.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use
            Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
            group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The names of the load balancers. You can specify up to 10 load balancers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachLoadBalancersResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet">
            <summary>
            Attaches one or more target groups to the specified Auto Scaling group.
            
             
            <para>
            This operation is used with the following load balancer types: 
            </para><ul><li><para>
            Application Load Balancer - Operates at the application layer (layer 7) and supports
            HTTP and HTTPS. 
            </para></li><li><para>
            Network Load Balancer - Operates at the transport layer (layer 4) and supports TCP,
            TLS, and UDP. 
            </para></li><li><para>
            Gateway Load Balancer - Operates at the network layer (layer 3).
            </para></li></ul><para>
            To describe the target groups for an Auto Scaling group, call the <a>DescribeLoadBalancerTargetGroups</a>
            API. To detach the target group from the Auto Scaling group, call the <a>DetachLoadBalancerTargetGroups</a>
            API.
            </para><para>
            This operation is additive and does not detach existing target groups or Classic Load
            Balancers from the Auto Scaling group.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use
            Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
            group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target
            groups. To get the ARN of a target group, use the Elastic Load Balancing <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a>
            API operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachLoadBalancerTargetGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.AddASLoadBalancerTargetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet">
            <summary>
            Completes the lifecycle action for the specified token or instance with the specified
            result.
            
             
            <para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a launch template or launch configuration with a user data script
            that runs while an instance is in a wait state due to a lifecycle hook.
            </para></li><li><para>
            (Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke
            your Lambda function when an instance is put into a wait state due to a lifecycle
            hook.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para>
            Create the lifecycle hook. Specify whether the hook is used when the instances launch
            or terminate.
            </para></li><li><para>
            If you need more time, record the lifecycle action heartbeat to keep the instance
            in a wait state.
            </para></li><li><para><b>If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a>
            API call.</b></para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon
            EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleActionResult">
            <summary>
            <para>
            <para>The action for the group to take. You can specify either <code>CONTINUE</code> or
            <code>ABANDON</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleActionToken">
            <summary>
            <para>
            <para>A universally unique identifier (UUID) that identifies a specific lifecycle action
            associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification
            target you specified when you created the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CompleteLifecycleActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.CompleteASLifecycleActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet">
            <summary>
            Disables group metrics collection for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Metric">
            <summary>
            <para>
            <para>Identifies the metrics to disable.</para><para>You can specify one or more of the following metrics:</para><ul><li><para><code>GroupMinSize</code></para></li><li><para><code>GroupMaxSize</code></para></li><li><para><code>GroupDesiredCapacity</code></para></li><li><para><code>GroupInServiceInstances</code></para></li><li><para><code>GroupPendingInstances</code></para></li><li><para><code>GroupStandbyInstances</code></para></li><li><para><code>GroupTerminatingInstances</code></para></li><li><para><code>GroupTotalInstances</code></para></li><li><para><code>GroupInServiceCapacity</code></para></li><li><para><code>GroupPendingCapacity</code></para></li><li><para><code>GroupStandbyCapacity</code></para></li><li><para><code>GroupTerminatingCapacity</code></para></li><li><para><code>GroupTotalCapacity</code></para></li><li><para><code>WarmPoolDesiredCapacity</code></para></li><li><para><code>WarmPoolWarmedCapacity</code></para></li><li><para><code>WarmPoolPendingCapacity</code></para></li><li><para><code>WarmPoolTerminatingCapacity</code></para></li><li><para><code>WarmPoolTotalCapacity</code></para></li><li><para><code>GroupAndWarmPoolDesiredCapacity</code></para></li><li><para><code>GroupAndWarmPoolTotalCapacity</code></para></li></ul><para>If you omit this property, all metrics are disabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto
            Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DisableMetricsCollectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DisableASMetricsCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet">
            <summary>
            Removes one or more instances from the specified Auto Scaling group.
            
             
            <para>
            After the instances are detached, you can manage them independent of the Auto Scaling
            group.
            </para><para>
            If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto
            Scaling launches instances to replace the ones that are detached.
            </para><para>
            If there is a Classic Load Balancer attached to the Auto Scaling group, the instances
            are deregistered from the load balancer. If there are target groups attached to the
            Auto Scaling group, the instances are deregistered from the target groups.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/detach-instance-asg.html">Detach
            EC2 instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether the Auto Scaling group decrements the desired capacity value by
            the number of instances detached.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachInstancesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DetachInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet">
            <summary>
            Detaches one or more Classic Load Balancers from the specified Auto Scaling group.
            
             
            <para>
            This operation detaches only Classic Load Balancers. If you have Application Load
            Balancers, Network Load Balancers, or Gateway Load Balancer, use the <a>DetachLoadBalancerTargetGroups</a>
            API instead.
            </para><para>
            When you detach a load balancer, it enters the <code>Removing</code> state while deregistering
            the instances in the group. When all instances are deregistered, then you can no longer
            describe the load balancer using the <a>DescribeLoadBalancers</a> API call. The instances
            remain running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>The names of the load balancers. You can specify up to 10 load balancers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachLoadBalancersResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LoadBalancerName parameter.
            The -PassThru parameter is deprecated, use -Select '^LoadBalancerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet">
            <summary>
            Detaches one or more target groups from the specified Auto Scaling group.
            
             
            <para>
            When you detach a target group, it enters the <code>Removing</code> state while deregistering
            the instances in the group. When all instances are deregistered, then you can no longer
            describe the target group using the <a>DescribeLoadBalancerTargetGroups</a> API call.
            The instances remain running.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups. You can specify up to 10 target
            groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DetachLoadBalancerTargetGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.DismountASLoadBalancerTargetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet">
            <summary>
            Enables group metrics collection for the specified Auto Scaling group.
            
             
            <para>
            You can use these metrics to track changes in an Auto Scaling group and to set alarms
            on threshold values. You can view group metrics using the Amazon EC2 Auto Scaling
            console or the CloudWatch console. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html">Monitor
            CloudWatch metrics for your Auto Scaling groups and instances</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Granularity">
            <summary>
            <para>
            <para>The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch.
            The only valid value is <code>1Minute</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Metric">
            <summary>
            <para>
            <para>Identifies the metrics to enable.</para><para>You can specify one or more of the following metrics:</para><ul><li><para><code>GroupMinSize</code></para></li><li><para><code>GroupMaxSize</code></para></li><li><para><code>GroupDesiredCapacity</code></para></li><li><para><code>GroupInServiceInstances</code></para></li><li><para><code>GroupPendingInstances</code></para></li><li><para><code>GroupStandbyInstances</code></para></li><li><para><code>GroupTerminatingInstances</code></para></li><li><para><code>GroupTotalInstances</code></para></li><li><para><code>GroupInServiceCapacity</code></para></li><li><para><code>GroupPendingCapacity</code></para></li><li><para><code>GroupStandbyCapacity</code></para></li><li><para><code>GroupTerminatingCapacity</code></para></li><li><para><code>GroupTotalCapacity</code></para></li><li><para><code>WarmPoolDesiredCapacity</code></para></li><li><para><code>WarmPoolWarmedCapacity</code></para></li><li><para><code>WarmPoolPendingCapacity</code></para></li><li><para><code>WarmPoolTerminatingCapacity</code></para></li><li><para><code>WarmPoolTotalCapacity</code></para></li><li><para><code>GroupAndWarmPoolDesiredCapacity</code></para></li><li><para><code>GroupAndWarmPoolTotalCapacity</code></para></li></ul><para>If you specify <code>Granularity</code> and don't specify any metrics, all metrics
            are enabled.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics">Auto
            Scaling group metrics</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.EnableMetricsCollectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnableASMetricsCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet">
            <summary>
            Moves the specified instances into the standby state.
            
             
            <para>
            If you choose to decrement the desired capacity of the Auto Scaling group, the instances
            can enter standby as long as the desired capacity of the Auto Scaling group after
            the instances are placed into standby is equal to or greater than the minimum capacity
            of the group.
            </para><para>
            If you choose not to decrement the desired capacity of the Auto Scaling group, the
            Auto Scaling group launches new instances to replace the instances on standby.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily
            removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether to decrement the desired capacity of the Auto Scaling group by the
            number of instances moved to <code>Standby</code> mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.EnterStandbyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.EnterStandbyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.EnterASStandbyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet">
            <summary>
            Moves the specified instances out of the standby state.
            
             
            <para>
            After you put the instances back in service, the desired capacity is incremented.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html">Temporarily
            removing instances from your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ExitStandbyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.ExitStandbyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ExitASStandbyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAccountLimitCmdlet">
            <summary>
            Describes the current Amazon EC2 Auto Scaling resource quotas for your account.
            
             
            <para>
            When you establish an Amazon Web Services account, the account has initial quotas
            on the maximum number of Auto Scaling groups and launch configurations that you can
            create in a given Region. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas
            for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAccountLimitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAccountLimitsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAccountLimitsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAdjustmentTypeCmdlet">
            <summary>
            Describes the available adjustment types for step scaling and simple scaling policies.
            
             
            <para>
            The following adjustment types are supported:
            </para><ul><li><para><code>ChangeInCapacity</code></para></li><li><para><code>ExactCapacity</code></para></li><li><para><code>PercentChangeInCapacity</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAdjustmentTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AdjustmentTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAdjustmentTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet">
            <summary>
            Gets information about the Auto Scaling groups in the account and Region.
            
             
            <para>
            If you specify Auto Scaling group names, the output includes information for only
            the specified Auto Scaling groups. If you specify filters, the output includes information
            for only those Auto Scaling groups that meet the filter criteria. If you do not specify
            group names or filters, the output includes information for all Auto Scaling groups.
            
            </para><para>
            This operation also returns information about instances in Auto Scaling groups. To
            retrieve information about the instances in a warm pool, you must call the <a>DescribeWarmPool</a>
            API. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The names of the Auto Scaling groups. By default, you can only specify up to 50 names.
            You can optionally increase this limit using the <code>MaxRecords</code> property.</para><para>If you omit this property, all Auto Scaling groups are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters to limit the results based on specific tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet">
            <summary>
            Gets information about the Auto Scaling instances in the account and Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. If you omit this property, all Auto Scaling instances are
            described. If you specify an ID that does not exist, it is ignored with no error.</para><para>Array Members: Maximum number of 50 items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>50</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingInstances'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingInstancesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingInstanceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingNotificationTypeCmdlet">
            <summary>
            Describes the notification types that are supported by Amazon EC2 Auto Scaling.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASAutoScalingNotificationTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AutoScalingNotificationTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeAutoScalingNotificationTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet">
            <summary>
            Gets information about the instance refreshes for the specified Auto Scaling group.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance
            refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in
            your Auto Scaling group after you make configuration changes.
            </para><para>
            To help you determine the status of an instance refresh, this operation returns information
            about the instance refreshes you previously initiated, including their status, end
            time, the percentage of the instance refresh that is complete, and the number of instances
            remaining to update before the instance refresh is complete.
            </para><para>
            The following are the possible statuses: 
            </para><ul><li><para><code>Pending</code> - The request was created, but the operation has not started.
            </para></li><li><para><code>InProgress</code> - The operation is in progress.
            </para></li><li><para><code>Successful</code> - The operation completed successfully.
            </para></li><li><para><code>Failed</code> - The operation failed to complete. You can troubleshoot using
            the status reason and the scaling activities. 
            </para></li><li><para><code>Cancelling</code> - An ongoing operation is being cancelled. Cancellation does
            not roll back any replacements that have already been completed, but it prevents new
            replacements from being started. 
            </para></li><li><para><code>Cancelled</code> - The operation is cancelled. 
            </para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.InstanceRefreshId">
            <summary>
            <para>
            <para>One or more instance refresh IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceRefreshes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeInstanceRefreshesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeInstanceRefreshesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASInstanceRefreshCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet">
            <summary>
            Gets information about the launch configurations in the account and Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The launch configuration names. If you omit this property, all launch configurations
            are described.</para><para>Array Members: Maximum number of 50 items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LaunchConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLaunchConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLaunchConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet">
            <summary>
            Gets information about the lifecycle hooks for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The names of one or more lifecycle hooks. If you omit this property, all lifecycle
            hooks are described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecycleHooks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLifecycleHooksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookTypeCmdlet">
            <summary>
            Describes the available types of lifecycle hooks.
            
             
            <para>
            The following hook types are supported:
            </para><ul><li><para><code>autoscaling:EC2_INSTANCE_LAUNCHING</code></para></li><li><para><code>autoscaling:EC2_INSTANCE_TERMINATING</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLifecycleHookTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LifecycleHookTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLifecycleHookTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet">
            <summary>
            Gets information about the load balancers for the specified Auto Scaling group.
            
             
            <para>
            This operation describes only Classic Load Balancers. If you have Application Load
            Balancers, Network Load Balancers, or Gateway Load Balancer, use the <a>DescribeLoadBalancerTargetGroups</a>
            API instead.
            </para><para>
            To determine the attachment status of the load balancer, use the <code>State</code>
            element in the response. When you attach a load balancer to an Auto Scaling group,
            the initial <code>State</code> value is <code>Adding</code>. The state transitions
            to <code>Added</code> after all Auto Scaling instances are registered with the load
            balancer. If Elastic Load Balancing health checks are enabled for the Auto Scaling
            group, the state transitions to <code>InService</code> after at least one Auto Scaling
            instance passes the health check. When the load balancer is in the <code>InService</code>
            state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported
            as unhealthy. If no registered instances pass the health checks, the load balancer
            doesn't enter the <code>InService</code> state. 
            </para><para>
            Load balancers also have an <code>InService</code> state if you attach them in the
            <a>CreateAutoScalingGroup</a> API call. If your load balancer state is <code>InService</code>,
            but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a>
            and take any corrective actions necessary.
            </para><para>
            For help with failed health checks, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html">Troubleshooting
            Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use
            Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
            group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLoadBalancersResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLoadBalancersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet">
            <summary>
            Gets information about the Elastic Load Balancing target groups for the specified
            Auto Scaling group.
            
             
            <para>
            To determine the attachment status of the target group, use the <code>State</code>
            element in the response. When you attach a target group to an Auto Scaling group,
            the initial <code>State</code> value is <code>Adding</code>. The state transitions
            to <code>Added</code> after all Auto Scaling instances are registered with the target
            group. If Elastic Load Balancing health checks are enabled for the Auto Scaling group,
            the state transitions to <code>InService</code> after at least one Auto Scaling instance
            passes the health check. When the target group is in the <code>InService</code> state,
            Amazon EC2 Auto Scaling can terminate and replace any instances that are reported
            as unhealthy. If no registered instances pass the health checks, the target group
            doesn't enter the <code>InService</code> state. 
            </para><para>
            Target groups also have an <code>InService</code> state if you attach them in the
            <a>CreateAutoScalingGroup</a> API call. If your target group state is <code>InService</code>,
            but it is not working properly, check the scaling activities by calling <a>DescribeScalingActivities</a>
            and take any corrective actions necessary.
            </para><para>
            For help with failed health checks, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html">Troubleshooting
            Amazon EC2 Auto Scaling: Health checks</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use
            Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
            group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LoadBalancerTargetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeLoadBalancerTargetGroupsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeLoadBalancerTargetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASLoadBalancerTargetGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASMetricCollectionTypeCmdlet">
            <summary>
            Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASMetricCollectionTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeMetricCollectionTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet">
            <summary>
            Gets information about the Amazon SNS notifications that are configured for one or
            more Auto Scaling groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeNotificationConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASNotificationConfigurationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet">
            <summary>
            Gets information about the scaling policies in the account and Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The names of one or more policies. If you omit this property, all policies are described.
            If a group name is provided, the results are limited to that group. If you specify
            an unknown policy name, it is ignored with no error.</para><para>Array Members: Maximum number of 50 items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>One or more policy types. The valid values are <code>SimpleScaling</code>, <code>StepScaling</code>,
            <code>TargetTrackingScaling</code>, and <code>PredictiveScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to be returned with each call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScalingPolicies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribePoliciesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribePoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPolicyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet">
            <summary>
            Retrieves the forecast data for a predictive scaling policy.
            
             
            <para>
            Load forecasts are predictions of the hourly load values using historical load data
            from CloudWatch and an analysis of historical trends. Capacity forecasts are represented
            as predicted values for the minimum capacity that is needed on an hourly basis, based
            on the hourly load forecast.
            </para><para>
            A minimum of 24 hours of data is required to create the initial forecasts. However,
            having a full 14 days of historical data results in more accurate forecasts.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive
            scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.EndTime">
            <summary>
            <para>
            <para>The exclusive end time of the time range for the forecast data to get. The maximum
            time duration between the start and end time is 30 days. </para><para>Although this parameter can accept a date and time that is more than two days in the
            future, the availability of forecast data has limits. Amazon EC2 Auto Scaling only
            issues forecasts for periods of two days in advance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.StartTime">
            <summary>
            <para>
            <para>The inclusive start time of the time range for the forecast data to get. At most,
            the date and time can be one year before the current date and time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.GetPredictiveScalingForecastResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.GetPredictiveScalingForecastResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASPredictiveScalingForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet">
            <summary>
            Gets information about the scaling activities in the account and Region.
            
             
            <para>
            When scaling events occur, you see a record of the scaling activity in the scaling
            activities. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-verify-scaling-activity.html">Verifying
            a scaling activity for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para><para>
            If the scaling event succeeds, the value of the <code>StatusCode</code> element in
            the response is <code>Successful</code>. If an attempt to launch instances failed,
            the <code>StatusCode</code> value is <code>Failed</code> or <code>Cancelled</code>
            and the <code>StatusMessage</code> element in the response indicates the cause of
            the failure. For help interpreting the <code>StatusMessage</code>, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html">Troubleshooting
            Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.ActivityId">
            <summary>
            <para>
            <para>The activity IDs of the desired scaling activities. If you omit this property, all
            activities for the past six weeks are described. If unknown activities are requested,
            they are ignored with no error. If you specify an Auto Scaling group, the results
            are limited to that group.</para><para>Array Members: Maximum number of 50 IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.IncludeDeletedGroup">
            <summary>
            <para>
            <para>Indicates whether to include scaling activity from deleted Auto Scaling groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>100</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScalingActivitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingActivityCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScalingProcessTypeCmdlet">
            <summary>
            Describes the scaling process types for use with the <a>ResumeProcesses</a> and <a>SuspendProcesses</a>
            APIs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScalingProcessTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Processes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScalingProcessTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet">
            <summary>
            Gets information about the scheduled actions that haven't run or that have not reached
            their end time.
            
             
            <para>
            To describe the scaling activities for scheduled actions that have already run, call
            the <a>DescribeScalingActivities</a> API.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The latest scheduled start time to return. If scheduled action names are provided,
            this property is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The names of one or more scheduled actions. If you omit this property, all scheduled
            actions are described. If you specify an unknown scheduled action, it is ignored with
            no error.</para><para>Array Members: Maximum number of 50 actions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The earliest scheduled start time to return. If scheduled action names are provided,
            this property is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The latest scheduled start time to return. If scheduled action names are provided,
            this property is ignored.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The earliest scheduled start time to return. If scheduled action names are provided,
            this property is ignored.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ScheduledUpdateGroupActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeScheduledActionsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeScheduledActionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASScheduledActionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet">
            <summary>
            Describes the specified tags.
            
             
            <para>
            You can use filters to limit the results. For example, you can query for the tags
            for a specific Auto Scaling group. You can specify multiple values for a filter. A
            tag must match at least one of the specified values for it to be included in the results.
            </para><para>
            You can also specify multiple filters. The result includes information for a particular
            tag only if it matches all the filters. If there's no match, no special message is
            returned.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag
            Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.Filter">
            <summary>
            <para>
            <para>One or more filters to scope the tags to return. The maximum number of filters per
            filter type (for example, <code>auto-scaling-group</code>) is 1000.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of items to return with this call. The default value is <code>50</code>
            and the maximum value is <code>100</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of items to return. (You received this token from a previous
            call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASTerminationPolicyTypeCmdlet">
            <summary>
            Describes the termination policies supported by Amazon EC2 Auto Scaling.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work
            with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASTerminationPolicyTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TerminationPolicyTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeTerminationPolicyTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet">
            <summary>
            Gets information about a warm pool and its instances.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm
            pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.MaxRecord">
            <summary>
            <para>
            <para>The maximum number of instances to return with this call. The maximum value is <code>50</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of instances to return. (You received this token from a
            previous call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DescribeWarmPoolResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.DescribeWarmPoolResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.GetASWarmPoolCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet">
            <summary>
            Attaches one or more EC2 instances to the specified Auto Scaling group.
            
             
            <para>
            When you attach instances, Amazon EC2 Auto Scaling increases the desired capacity
            of the group by the number of instances being attached. If the number of instances
            being attached plus the desired capacity of the group exceeds the maximum size of
            the group, the operation fails.
            </para><para>
            If there is a Classic Load Balancer attached to your Auto Scaling group, the instances
            are also registered with the load balancer. If there are target groups attached to
            your Auto Scaling group, the instances are also registered with the target groups.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-instance-asg.html">Attach
            EC2 instances to your Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.InstanceId">
            <summary>
            <para>
            <para>The IDs of the instances. You can specify up to 20 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.AttachInstancesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.MountASInstanceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet">
            <summary>
            <b>We strongly recommend using a launch template when calling this operation to ensure
            full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b><para>
            Creates an Auto Scaling group with the specified name and attributes. 
            </para><para>
            If you exceed your maximum limit of Auto Scaling groups, the call fails. To query
            this limit, call the <a>DescribeAccountLimits</a> API. For information about updating
            this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas
            for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            For introductory exercises for creating an Auto Scaling group, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/GettingStartedTutorial.html">Getting
            started with Amazon EC2 Auto Scaling</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-register-lbs-with-asg.html">Tutorial:
            Set up a scaled and load-balanced application</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html">Auto
            Scaling groups</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            Every Auto Scaling group has three size properties (<code>DesiredCapacity</code>,
            <code>MaxSize</code>, and <code>MinSize</code>). Usually, you set these sizes based
            on a specific number of instances. However, if you configure a mixed instances policy
            that defines weights for the instance types, you must specify these sizes with the
            same units that you use for weighting instances.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group. This name must be unique per Region per account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>A list of Availability Zones where instances in the Auto Scaling group can be created.
            Used for launching into the default VPC subnet in each Availability Zone when not
            using the <code>VPCZoneIdentifier</code> property, or for attaching a network interface
            when an existing network interface ID is specified in a launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.CapacityRebalance">
            <summary>
            <para>
            <para>Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing
            is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts
            to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at
            an elevated risk of interruption. After launching a new instance, it then terminates
            an old instance. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use
            Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Context">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DefaultCooldown">
            <summary>
            <para>
            <para><i>Only needed if you use simple scaling policies.</i></para><para>The amount of time, in seconds, between one scaling activity ending and another one
            starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Default: <code>300</code> seconds</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DefaultInstanceWarmup">
            <summary>
            <para>
            <para>The amount of time, in seconds, until a newly launched instance can contribute to
            the Amazon CloudWatch metrics. This delay lets an instance finish initializing before
            Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage
            data. Set this value equal to the amount of time that it takes for resource consumption
            to become stable after an instance reaches the <code>InService</code> state. For more
            information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set
            the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para><important><para>To manage your warm-up settings at the group level, we recommend that you set the
            default instance warmup, <i>even if its value is set to 0 seconds</i>. This also optimizes
            the performance of scaling policies that scale continuously, such as target tracking
            and step scaling policies. </para><para>If you need to remove a value that you previously set, include the property but specify
            <code>-1</code> for the value. However, we strongly recommend keeping the default
            instance warmup enabled by specifying a minimum value of <code>0</code>.</para></important><para>Default: None </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group at the time
            of its creation and the capacity it attempts to maintain. It can scale beyond this
            capacity if you configure auto scaling. This number must be greater than or equal
            to the minimum size of the group and less than or equal to the maximum size of the
            group. If you do not specify a desired capacity, the default is the minimum size of
            the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.DesiredCapacityType">
            <summary>
            <para>
            <para>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto
            Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type
            selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating
            an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para><para>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates
            into number of instances.</para><para>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.HealthCheckGracePeriod">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking
            the health status of an EC2 instance that has come into service and marking it unhealthy
            due to a failed Elastic Load Balancing or custom health check. This is useful if your
            instances do not immediately pass these health checks after they enter the <code>InService</code>
            state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health
            check grace period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Default: <code>0</code> seconds</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.HealthCheckType">
            <summary>
            <para>
            <para>The service to use for the health checks. The valid values are <code>EC2</code> (default)
            and <code>ELB</code>. If you configure an Auto Scaling group to use load balancer
            (ELB) health checks, it considers the instance unhealthy if it fails either the EC2
            status checks or the load balancer health checks. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health
            checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance used to base the launch configuration on. If specified, Amazon
            EC2 Auto Scaling uses the configuration values from the specified instance to create
            a new launch configuration. To get the instance ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html">DescribeInstances</a>
            API operation. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html">Creating
            an Auto Scaling group using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration to use to launch instances. </para><para>Conditional: You must specify either a launch template (<code>LaunchTemplate</code>
            or <code>MixedInstancesPolicy</code>) or a launch configuration (<code>LaunchConfigurationName</code>
            or <code>InstanceId</code>).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LifecycleHookSpecificationList">
            <summary>
            <para>
            <para>One or more lifecycle hooks to add to the Auto Scaling group before instances are
            launched.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LoadBalancerName">
            <summary>
            <para>
            <para>A list of Classic Load Balancers associated with this Auto Scaling group. For Application
            Load Balancers, Network Load Balancers, and Gateway Load Balancer, specify the <code>TargetGroupARNs</code>
            property instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MaxInstanceLifetime">
            <summary>
            <para>
            <para>The maximum amount of time, in seconds, that an instance can be in service. The default
            is null. If specified, the value must be either 0 or a number equal to or greater
            than 86,400 seconds (1 day). For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing
            Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2
            Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the group.</para><note><para>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling
            may need to go above <code>MaxSize</code> to meet your capacity requirements. In this
            event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than
            your largest instance weight (weights that define how many units each instance contributes
            to the desired capacity of the group).</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.MixedInstancesPolicy">
            <summary>
            <para>
            <para>An embedded object that specifies a mixed instances policy.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto
            Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.NewInstancesProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether newly launched instances are protected from termination by Amazon
            EC2 Auto Scaling when scaling in. For more information about preventing instances
            from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using
            instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.PlacementGroup">
            <summary>
            <para>
            <para>The name of the placement group into which to launch your instances. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><note><para>A <i>cluster</i> placement group is a logical grouping of instances within a single
            Availability Zone. You cannot specify multiple Availability Zones and a cluster placement
            group. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.ServiceLinkedRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group
            uses to call other Amazon Web Services service on your behalf. By default, Amazon
            EC2 Auto Scaling uses a service-linked role named <code>AWSServiceRoleForAutoScaling</code>,
            which it creates if it does not exist. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked
            roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. You can tag your Auto Scaling group and propagate the tags to the
            Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To
            add tags to Amazon EBS volumes, specify the tags in a launch template but use caution.
            If the launch template specifies an instance tag with a key that is also specified
            for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance
            tag with the value specified by the Auto Scaling group. For more information, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag
            Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.TargetGroupARNs">
            <summary>
            <para>
            <para>The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling
            group. Instances are registered as targets with the target groups. The target groups
            receive incoming traffic and route requests to one or more registered targets. For
            more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html">Use
            Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
            group</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.TerminationPolicy">
            <summary>
            <para>
            <para>A policy or a list of policies that are used to select the instance to terminate.
            These policies are executed in the order that you list them. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work
            with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para><para>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code>
            | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code>
            | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version
            number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a>
            API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a>
            API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest
            version of the launch template when launching instances. If the value is <code>$Default</code>,
            Amazon EC2 Auto Scaling selects the default version of the launch template when launching
            instances. The default value is <code>$Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.VPCZoneIdentifier">
            <summary>
            <para>
            <para>A comma-separated list of subnet IDs for a virtual private cloud (VPC) where instances
            in the Auto Scaling group can be created. If you specify <code>VPCZoneIdentifier</code>
            with <code>AvailabilityZones</code>, the subnets that you specify must reside in those
            Availability Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet">
            <summary>
            Creates a launch configuration.
            
             
            <para>
            If you exceed your maximum limit of launch configurations, the call fails. To query
            this limit, call the <a>DescribeAccountLimits</a> API. For information about updating
            this limit, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-quotas.html">Quotas
            for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html">Launch
            configurations</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.AssociatePublicIpAddress">
            <summary>
            <para>
            <para>Specifies whether to assign a public IPv4 address to the group's instances. If the
            instance is launched into a default subnet, the default is to assign a public IPv4
            address, unless you disabled the option to assign a public IPv4 address on the subnet.
            If the instance is launched into a nondefault subnet, the default is not to assign
            a public IPv4 address, unless you enabled the option to assign a public IPv4 address
            on the subnet.</para><para>If you specify <code>true</code>, each instance in the Auto Scaling group receives
            a unique public IPv4 address. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html">Launching
            Auto Scaling instances in a VPC</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>If you specify this property, you must specify at least one subnet for <code>VPCZoneIdentifier</code>
            when you create your group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.BlockDeviceMapping">
            <summary>
            <para>
            <para>The block device mapping entries that define the block devices to attach to the instances
            at launch. By default, the block devices specified in the block device mapping for
            the AMI are used. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block
            device mappings</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ClassicLinkVPCId">
            <summary>
            <para>
            <para><i>EC2-Classic retires on August 15, 2022. This property is not supported after that
            date.</i></para><para>The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html">ClassicLink</a>
            in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ClassicLinkVPCSecurityGroup">
            <summary>
            <para>
            <para><i>EC2-Classic retires on August 15, 2022. This property is not supported after that
            date.</i></para><para>The IDs of one or more security groups for the specified ClassicLink-enabled VPC.</para><para>If you specify the <code>ClassicLinkVPCId</code> property, you must specify <code>ClassicLinkVPCSecurityGroups</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.EbsOptimized">
            <summary>
            <para>
            <para>Specifies whether the launch configuration is optimized for EBS I/O (<code>true</code>)
            or not (<code>false</code>). The optimization provides dedicated throughput to Amazon
            EBS and an optimized configuration stack to provide optimal I/O performance. This
            optimization is not available with all instance types. Additional fees are incurred
            when you enable EBS optimization for an instance type that is not EBS-optimized by
            default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon
            EBS-optimized instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><para>The default value is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceMonitoring_Enabled">
            <summary>
            <para>
            <para>If <code>true</code>, detailed monitoring is enabled. Otherwise, basic monitoring
            is enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.MetadataOptions_HttpEndpoint">
            <summary>
            <para>
            <para>This parameter enables or disables the HTTP metadata endpoint on your instances. If
            the parameter is not specified, the default state is <code>enabled</code>.</para><note><para>If you specify a value of <code>disabled</code>, you will not be able to access your
            instance metadata. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.MetadataOptions_HttpPutResponseHopLimit">
            <summary>
            <para>
            <para>The desired HTTP PUT response hop limit for instance metadata requests. The larger
            the number, the further instance metadata requests can travel.</para><para>Default: 1</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.MetadataOptions_HttpToken">
            <summary>
            <para>
            <para>The state of token usage for your instance metadata requests. If the parameter is
            not specified in the request, the default state is <code>optional</code>.</para><para>If the state is <code>optional</code>, you can choose to retrieve instance metadata
            with or without a signed token header on your request. If you retrieve the IAM role
            credentials without a token, the version 1.0 role credentials are returned. If you
            retrieve the IAM role credentials using a valid signed token, the version 2.0 role
            credentials are returned.</para><para>If the state is <code>required</code>, you must send a signed token header with any
            instance metadata retrieval requests. In this state, retrieving the IAM role credentials
            always returns the version 2.0 credentials; the version 1.0 credentials are not available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.IamInstanceProfile">
            <summary>
            <para>
            <para>The name or the Amazon Resource Name (ARN) of the instance profile associated with
            the IAM role for the instance. The instance profile contains the IAM role. For more
            information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html">IAM
            role for applications that run on Amazon EC2 instances</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.ImageId">
            <summary>
            <para>
            <para>The ID of the Amazon Machine Image (AMI) that was assigned during registration. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html">Finding
            a Linux AMI</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><para>If you specify <code>InstanceId</code>, an <code>ImageId</code> is not required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance to use to create the launch configuration. The new launch configuration
            derives attributes from the instance, except for the block device mapping.</para><para>To create a launch configuration with a block device mapping or override any other
            instance attributes, specify them as part of the same request.</para><para>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html">Creating
            a launch configuration using an EC2 instance</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.InstanceType">
            <summary>
            <para>
            <para>Specifies the instance type of the EC2 instance. For information about available instance
            types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes">Available
            instance types</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><para>If you specify <code>InstanceId</code>, an <code>InstanceType</code> is not required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.KernelId">
            <summary>
            <para>
            <para>The ID of the kernel associated with the AMI.</para><note><para>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User
            provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.KeyName">
            <summary>
            <para>
            <para>The name of the key pair. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon
            EC2 key pairs and Linux instances</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration. This name must be unique per Region per account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.PlacementTenancy">
            <summary>
            <para>
            <para>The tenancy of the instance, either <code>default</code> or <code>dedicated</code>.
            An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware
            and can only be launched into a VPC. To launch dedicated instances into a shared tenancy
            VPC (a VPC with the instance placement tenancy attribute set to <code>default</code>),
            you must set the value of this property to <code>dedicated</code>. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html">Configuring
            instance tenancy with Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para><para>If you specify <code>PlacementTenancy</code>, you must specify at least one subnet
            for <code>VPCZoneIdentifier</code> when you create your group.</para><para>Valid values: <code>default</code> | <code>dedicated</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.RamdiskId">
            <summary>
            <para>
            <para>The ID of the RAM disk to select.</para><note><para>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">User
            provided kernels</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>A list that contains the security group IDs to assign to the instances in the Auto
            Scaling group. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html">Control
            traffic to resources using security groups</a> in the <i>Amazon Virtual Private Cloud
            User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.SpotPrice">
            <summary>
            <para>
            <para>The maximum hourly price to be paid for any Spot Instance launched to fulfill the
            request. Spot Instances are launched when the price you specify exceeds the current
            Spot price. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-template-spot-instances.html">Request
            Spot Instances for fault-tolerant and flexible applications</a> in the <i>Amazon EC2
            Auto Scaling User Guide</i>.</para><para>Valid Range: Minimum value of 0.001</para><note><para>When you change your maximum price by creating a new launch configuration, running
            instances will continue to run as long as the maximum price for those running instances
            is higher than the current Spot price.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.UserData">
            <summary>
            <para>
            <para>The user data to make available to the launched EC2 instances. For more information,
            see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance
            metadata and user data</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html">Instance
            metadata and user data</a> (Windows). If you are using a command line tool, base64-encoding
            is performed for you, and you can load the text from a file. Otherwise, you must provide
            base64-encoded text. User data is limited to 16 KB.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateLaunchConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.NewASLaunchConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet">
            <summary>
            Deletes the specified Auto Scaling group.
            
             
            <para>
            If the group has instances or scaling activities in progress, you must specify the
            option to force the deletion in order for it to succeed.
            </para><para>
            If the group has policies, deleting the group deletes the policies, the underlying
            alarm actions, and any alarm that no longer has an associated action.
            </para><para>
            To remove instances from the Auto Scaling group before deleting it, call the <a>DetachInstances</a>
            API with the list of instances and the option to decrement the desired capacity. This
            ensures that Amazon EC2 Auto Scaling does not launch replacement instances.
            </para><para>
            To terminate all instances before deleting the Auto Scaling group, call the <a>UpdateAutoScalingGroup</a>
            API and set the minimum size and desired capacity of the Auto Scaling group to zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.ForceDelete">
            <summary>
            <para>
            <para>Specifies that the group is to be deleted along with all instances associated with
            the group, without waiting for all instances to be terminated. This action also deletes
            any outstanding lifecycle actions associated with the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet">
            <summary>
            Deletes the specified launch configuration.
            
             
            <para>
            The launch configuration must not be attached to an Auto Scaling group. When this
            call completes, the launch configuration is no longer available for use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteLaunchConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LaunchConfigurationName parameter.
            The -PassThru parameter is deprecated, use -Select '^LaunchConfigurationName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLaunchConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet">
            <summary>
            Deletes the specified lifecycle hook.
            
             
            <para>
            If there are any outstanding lifecycle actions, they are completed first (<code>ABANDON</code>
            for launching instances, <code>CONTINUE</code> for terminating instances).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteLifecycleHookResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASLifecycleHookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet">
            <summary>
            Deletes the specified notification.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.TopicARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteNotificationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASNotificationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet">
            <summary>
            Deletes the specified scaling policy.
            
             
            <para>
            Deleting either a step scaling policy or a simple scaling policy deletes the underlying
            alarm action, but does not delete the alarm, even if it no longer has an associated
            action.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/deleting-scaling-policy.html">Deleting
            a scaling policy</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeletePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet">
            <summary>
            Deletes the specified scheduled action.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of the action to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteScheduledActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet">
            <summary>
            Deletes one or more scheduled actions for the specified Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The names of the scheduled actions to delete. The maximum number allowed is 50. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedScheduledActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.BatchDeleteScheduledActionResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.BatchDeleteScheduledActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASScheduledActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet">
            <summary>
            Deletes the specified tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet">
            <summary>
            Deletes the warm pool for the specified Auto Scaling group.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm
            pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet.ForceDelete">
            <summary>
            <para>
            <para>Specifies that the warm pool is to be deleted along with all of its associated instances,
            without waiting for all instances to be terminated. This parameter also deletes any
            outstanding lifecycle actions associated with the warm pool instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.DeleteWarmPoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.RemoveASWarmPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet">
            <summary>
            Resumes the specified suspended auto scaling processes, or all suspended process,
            for the specified Auto Scaling group.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending
            and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.ScalingProcess">
            <summary>
            <para>
            <para>One or more of the following processes:</para><ul><li><para><code>Launch</code></para></li><li><para><code>Terminate</code></para></li><li><para><code>AddToLoadBalancer</code></para></li><li><para><code>AlarmNotification</code></para></li><li><para><code>AZRebalance</code></para></li><li><para><code>HealthCheck</code></para></li><li><para><code>InstanceRefresh</code></para></li><li><para><code>ReplaceUnhealthy</code></para></li><li><para><code>ScheduledActions</code></para></li></ul><para>If you omit this property, all processes are specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ResumeProcessesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.ResumeASProcessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet">
            <summary>
            Sets the size of the specified Auto Scaling group.
            
             
            <para>
            If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value
            that is lower than the current size of the group, the Auto Scaling group uses its
            termination policy to determine which instances to terminate. 
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-manual-scaling.html">Manual
            scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after this
            operation completes and the capacity it attempts to maintain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.HonorCooldown">
            <summary>
            <para>
            <para>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete
            before initiating a scaling activity to set your Auto Scaling group to its new capacity.
            By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual
            scaling activities.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetDesiredCapacityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASDesiredCapacityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet">
            <summary>
            Sets the health status of the specified instance.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html">Health
            checks for Auto Scaling instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.HealthStatus">
            <summary>
            <para>
            <para>The health status of the instance. Set to <code>Healthy</code> to have the instance
            remain in service. Set to <code>Unhealthy</code> to have the instance be out of service.
            Amazon EC2 Auto Scaling terminates and replaces the unhealthy instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.ShouldRespectGracePeriod">
            <summary>
            <para>
            <para>If the Auto Scaling group of the specified instance has a <code>HealthCheckGracePeriod</code>
            specified for the group, by default, this call respects the grace period. Set this
            to <code>False</code>, to have the call not respect the grace period associated with
            the group.</para><para>For more information about the health check grace period, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CreateAutoScalingGroup.html">CreateAutoScalingGroup</a>
            in the <i>Amazon EC2 Auto Scaling API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetInstanceHealthResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceHealthCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet">
            <summary>
            Updates the instance protection settings of the specified instances. This operation
            cannot be called on instances in a warm pool.
            
             
            <para>
            For more information about preventing instances that are part of an Auto Scaling group
            from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using
            instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            If you exceed your maximum limit of instance IDs, which is 50 per Auto Scaling group,
            the call fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.InstanceId">
            <summary>
            <para>
            <para>One or more instance IDs. You can specify up to 50 instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.ProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether the instance is protected from termination by Amazon EC2 Auto Scaling
            when scaling in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SetInstanceProtectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASInstanceProtectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet">
            <summary>
            Creates or updates one or more scheduled scaling actions for an Auto Scaling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.ScheduledUpdateGroupAction">
            <summary>
            <para>
            <para>One or more scheduled actions. The maximum number allowed is 50.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedScheduledUpdateGroupActions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.BatchPutScheduledUpdateGroupActionResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.BatchPutScheduledUpdateGroupActionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASScheduledUpdateGroupActionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet">
            <summary>
            Creates or updates tags for the specified Auto Scaling group.
            
             
            <para>
            When you specify a tag with a key that already exists, the operation overwrites the
            previous tag definition, and you do not get an error message.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html">Tag
            Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CreateOrUpdateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SetASTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet">
            <summary>
            Starts a new instance refresh operation. An instance refresh performs a rolling replacement
            of all or some instances in an Auto Scaling group. Each instance is terminated first
            and then replaced, which temporarily reduces the capacity available within your Auto
            Scaling group.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance
            refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in
            your Auto Scaling group. This feature is helpful, for example, when you have a new
            AMI or a new user data script. You just need to create a new launch template that
            specifies the new AMI or user data script. Then start an instance refresh to immediately
            begin the process of updating instances in the group. 
            </para><para>
            If the call succeeds, it creates a new instance refresh request with a unique ID that
            you can use to track its progress. To query its status, call the <a>DescribeInstanceRefreshes</a>
            API. To describe the instance refreshes that have already run, call the <a>DescribeInstanceRefreshes</a>
            API. To cancel an instance refresh operation in progress, use the <a>CancelInstanceRefresh</a>
            API. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Preferences_CheckpointDelay">
            <summary>
            <para>
            <para>The amount of time, in seconds, to wait after a checkpoint before continuing. This
            property is optional, but if you specify a value for it, you must also specify a value
            for <code>CheckpointPercentages</code>. If you specify a value for <code>CheckpointPercentages</code>
            and not for <code>CheckpointDelay</code>, the <code>CheckpointDelay</code> defaults
            to <code>3600</code> (1 hour). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Preferences_CheckpointPercentage">
            <summary>
            <para>
            <para>Threshold values for each checkpoint in ascending order. Each number must be unique.
            To replace all instances in the Auto Scaling group, the last number in the array must
            be <code>100</code>.</para><para>For usage examples, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-adding-checkpoints-instance-refresh.html">Adding
            checkpoints to an instance refresh</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Preferences_InstanceWarmup">
            <summary>
            <para>
            <para><i>Not needed if the default instance warmup is defined for the group.</i></para><para>The duration of the instance warmup, in seconds.</para><note><para>The default is to use the value for the default instance warmup defined for the group.
            If default instance warmup is null, then <code>InstanceWarmup</code> falls back to
            the value of the health check grace period.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Preferences_MinHealthyPercentage">
            <summary>
            <para>
            <para>The amount of capacity in the Auto Scaling group that must pass your group's health
            checks to allow the operation to continue. The value is expressed as a percentage
            of the desired capacity of the Auto Scaling group (rounded up to the nearest integer).
            The default is <code>90</code>.</para><para>Setting the minimum healthy percentage to 100 percent limits the rate of replacement
            to one instance at a time. In contrast, setting it to 0 percent has the effect of
            replacing all instances at the same time. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.DesiredConfiguration_MixedInstancesPolicy">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Preferences_SkipMatching">
            <summary>
            <para>
            <para>A boolean value that indicates whether skip matching is enabled. If true, then Amazon
            EC2 Auto Scaling skips replacing instances that match the desired configuration. If
            no desired configuration is specified, then it skips replacing instances that have
            the same configuration that is already set on the group. The default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Strategy">
            <summary>
            <para>
            <para>The strategy to use for the instance refresh. The only valid value is <code>Rolling</code>.</para><para>A rolling update helps you update your instances gradually. A rolling update can fail
            due to failed health checks or if instances are on standby or are protected from scale
            in. If the rolling update process fails, any instances that are replaced are not rolled
            back to their previous configuration. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version
            number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a>
            API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a>
            API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest
            version of the launch template when launching instances. If the value is <code>$Default</code>,
            Amazon EC2 Auto Scaling selects the default version of the launch template when launching
            instances. The default value is <code>$Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceRefreshId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.StartInstanceRefreshResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.StartInstanceRefreshResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASInstanceRefreshCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet">
            <summary>
            Executes the specified policy. This can be useful for testing the design of your scaling
            policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.BreachThreshold">
            <summary>
            <para>
            <para>The breach threshold for the alarm.</para><para>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.HonorCooldown">
            <summary>
            <para>
            <para>Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete
            before executing the policy.</para><para>Valid only if the policy type is <code>SimpleScaling</code>. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.MetricValue">
            <summary>
            <para>
            <para>The metric value to compare to <code>BreachThreshold</code>. This enables you to execute
            a policy of type <code>StepScaling</code> and determine which step adjustment to use.
            For example, if the breach threshold is 50 and you want to use a step adjustment with
            a lower bound of 0 and an upper bound of 10, you can set the metric value to 59.</para><para>If you specify a metric value that doesn't correspond to a step adjustment for the
            policy, the call returns an error.</para><para>Required if the policy type is <code>StepScaling</code> and not supported otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name or ARN of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.ExecutePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StartASPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet">
            <summary>
            Terminates the specified instance and optionally adjusts the desired group size. This
            operation cannot be called on instances in a warm pool.
            
             
            <para>
            This call simply makes a termination request. The instance is not terminated immediately.
            When an instance is terminated, the instance status changes to <code>terminated</code>.
            You can't connect to or start an instance after you've terminated it.
            </para><para>
            If you do not specify the option to decrement the desired capacity, Amazon EC2 Auto
            Scaling launches instances to replace the ones that are terminated. 
            </para><para>
            By default, Amazon EC2 Auto Scaling balances instances across all Availability Zones.
            If you decrement the desired capacity, your Auto Scaling group can become unbalanced
            between Availability Zones. Amazon EC2 Auto Scaling tries to rebalance the group,
            and rebalancing might terminate instances in other zones. For more information, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html#AutoScalingBehavior.InstanceUsage">Rebalancing
            activities</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.ShouldDecrementDesiredCapacity">
            <summary>
            <para>
            <para>Indicates whether terminating the instance also decrements the size of the Auto Scaling
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Activity'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.TerminateInstanceInAutoScalingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the InstanceId parameter.
            The -PassThru parameter is deprecated, use -Select '^InstanceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceInAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.StopASInstanceRefreshCmdlet">
            <summary>
            Cancels an instance refresh operation in progress. Cancellation does not roll back
            any replacements that have already been completed, but it prevents new replacements
            from being started. 
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-refresh.html">instance
            refresh feature</a> in Amazon EC2 Auto Scaling, which helps you update instances in
            your Auto Scaling group after you make configuration changes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceRefreshCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceRefreshCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InstanceRefreshId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.CancelInstanceRefreshResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.CancelInstanceRefreshResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceRefreshCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.StopASInstanceRefreshCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet">
            <summary>
            Suspends the specified auto scaling processes, or all processes, for the specified
            Auto Scaling group.
            
             
            <para>
            If you suspend either the <code>Launch</code> or <code>Terminate</code> process types,
            it can prevent other process types from functioning properly. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html">Suspending
            and resuming scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            To resume processes that have been suspended, call the <a>ResumeProcesses</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.ScalingProcess">
            <summary>
            <para>
            <para>One or more of the following processes:</para><ul><li><para><code>Launch</code></para></li><li><para><code>Terminate</code></para></li><li><para><code>AddToLoadBalancer</code></para></li><li><para><code>AlarmNotification</code></para></li><li><para><code>AZRebalance</code></para></li><li><para><code>HealthCheck</code></para></li><li><para><code>InstanceRefresh</code></para></li><li><para><code>ReplaceUnhealthy</code></para></li><li><para><code>ScheduledActions</code></para></li></ul><para>If you omit this property, all processes are specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.SuspendProcessesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.SuspendASProcessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet">
            <summary>
            <b>We strongly recommend that all Auto Scaling groups use launch templates to ensure
            full functionality for Amazon EC2 Auto Scaling and Amazon EC2.</b><para>
            Updates the configuration for the specified Auto Scaling group.
            </para><para>
            To update an Auto Scaling group, specify the name of the group and the property that
            you want to change. Any properties that you don't specify are not changed by this
            update request. The new settings take effect on any scaling activities after this
            call returns. 
            </para><para>
            If you associate a new launch configuration or template with an Auto Scaling group,
            all new instances will get the updated configuration. Existing instances continue
            to run with the configuration that they were originally launched with. When you update
            a group to specify a mixed instances policy instead of a launch configuration or template,
            existing instances may be replaced to match the new purchasing options that you specified
            in the policy. For example, if the group currently has 100% On-Demand capacity and
            the policy specifies 50% Spot capacity, this means that half of your instances will
            be gradually terminated and relaunched as Spot Instances. When replacing instances,
            Amazon EC2 Auto Scaling launches new instances before terminating the old ones, so
            that updating your group does not compromise the performance or availability of your
            application.
            </para><para>
            Note the following about changing <code>DesiredCapacity</code>, <code>MaxSize</code>,
            or <code>MinSize</code>:
            </para><ul><li><para>
            If a scale-in activity occurs as a result of a new <code>DesiredCapacity</code> value
            that is lower than the current size of the group, the Auto Scaling group uses its
            termination policy to determine which instances to terminate.
            </para></li><li><para>
            If you specify a new value for <code>MinSize</code> without specifying a value for
            <code>DesiredCapacity</code>, and the new <code>MinSize</code> is larger than the
            current size of the group, this sets the group's <code>DesiredCapacity</code> to the
            new <code>MinSize</code> value.
            </para></li><li><para>
            If you specify a new value for <code>MaxSize</code> without specifying a value for
            <code>DesiredCapacity</code>, and the new <code>MaxSize</code> is smaller than the
            current size of the group, this sets the group's <code>DesiredCapacity</code> to the
            new <code>MaxSize</code> value.
            </para></li></ul><para>
            To see which properties have been set, call the <a>DescribeAutoScalingGroups</a> API.
            To view the scaling policies for an Auto Scaling group, call the <a>DescribePolicies</a>
            API. If the group has scaling policies, you can update them by calling the <a>PutScalingPolicy</a>
            API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.AvailabilityZone">
            <summary>
            <para>
            <para>One or more Availability Zones for the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.CapacityRebalance">
            <summary>
            <para>
            <para>Enables or disables Capacity Rebalancing. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html">Use
            Capacity Rebalancing to handle Amazon EC2 Spot Interruptions</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.Context">
            <summary>
            <para>
            <para>Reserved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DefaultCooldown">
            <summary>
            <para>
            <para><i>Only needed if you use simple scaling policies.</i></para><para>The amount of time, in seconds, between one scaling activity ending and another one
            starting due to simple scaling policies. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DefaultInstanceWarmup">
            <summary>
            <para>
            <para>The amount of time, in seconds, until a newly launched instance can contribute to
            the Amazon CloudWatch metrics. This delay lets an instance finish initializing before
            Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage
            data. Set this value equal to the amount of time that it takes for resource consumption
            to become stable after an instance reaches the <code>InService</code> state. For more
            information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html">Set
            the default instance warmup for an Auto Scaling group</a> in the <i>Amazon EC2 Auto
            Scaling User Guide</i>.</para><important><para>To manage your warm-up settings at the group level, we recommend that you set the
            default instance warmup, <i>even if its value is set to 0 seconds</i>. This also optimizes
            the performance of scaling policies that scale continuously, such as target tracking
            and step scaling policies. </para><para>If you need to remove a value that you previously set, include the property but specify
            <code>-1</code> for the value. However, we strongly recommend keeping the default
            instance warmup enabled by specifying a minimum value of <code>0</code>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after this
            operation completes and the capacity it attempts to maintain. This number must be
            greater than or equal to the minimum size of the group and less than or equal to the
            maximum size of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.DesiredCapacityType">
            <summary>
            <para>
            <para>The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto
            Scaling supports <code>DesiredCapacityType</code> for attribute-based instance type
            selection only. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html">Creating
            an Auto Scaling group using attribute-based instance type selection</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para><para>By default, Amazon EC2 Auto Scaling specifies <code>units</code>, which translates
            into number of instances.</para><para>Valid values: <code>units</code> | <code>vcpu</code> | <code>memory-mib</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.HealthCheckGracePeriod">
            <summary>
            <para>
            <para>The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking
            the health status of an EC2 instance that has come into service and marking it unhealthy
            due to a failed Elastic Load Balancing or custom health check. This is useful if your
            instances do not immediately pass these health checks after they enter the <code>InService</code>
            state. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period">Health
            check grace period</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.HealthCheckType">
            <summary>
            <para>
            <para>The service to use for the health checks. The valid values are <code>EC2</code> and
            <code>ELB</code>. If you configure an Auto Scaling group to use <code>ELB</code> health
            checks, it considers the instance unhealthy if it fails either the EC2 status checks
            or the load balancer health checks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchConfigurationName">
            <summary>
            <para>
            <para>The name of the launch configuration. If you specify <code>LaunchConfigurationName</code>
            in your update request, you can't specify <code>LaunchTemplate</code> or <code>MixedInstancesPolicy</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateId">
            <summary>
            <para>
            <para>The ID of the launch template. To get the template ID, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_LaunchTemplateName">
            <summary>
            <para>
            <para>The name of the launch template. To get the template name, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html">DescribeLaunchTemplates</a>
            API operation. New launch templates can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html">CreateLaunchTemplate</a>
            API. </para><para>Conditional: You must specify either a <code>LaunchTemplateId</code> or a <code>LaunchTemplateName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MaxInstanceLifetime">
            <summary>
            <para>
            <para>The maximum amount of time, in seconds, that an instance can be in service. The default
            is null. If specified, the value must be either 0 or a number equal to or greater
            than 86,400 seconds (1 day). To clear a previously set value, specify a new value
            of 0. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html">Replacing
            Auto Scaling instances based on maximum instance lifetime</a> in the <i>Amazon EC2
            Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the Auto Scaling group.</para><note><para>With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling
            may need to go above <code>MaxSize</code> to meet your capacity requirements. In this
            event, Amazon EC2 Auto Scaling will never go above <code>MaxSize</code> by more than
            your largest instance weight (weights that define how many units each instance contributes
            to the desired capacity of the group).</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.MixedInstancesPolicy">
            <summary>
            <para>
            <para>An embedded object that specifies a mixed instances policy. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html">Auto
            Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.NewInstancesProtectedFromScaleIn">
            <summary>
            <para>
            <para>Indicates whether newly launched instances are protected from termination by Amazon
            EC2 Auto Scaling when scaling in. For more information about preventing instances
            from terminating on scale in, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html">Using
            instance scale-in protection</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.PlacementGroup">
            <summary>
            <para>
            <para>The name of an existing placement group into which to launch your instances. For more
            information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html">Placement
            groups</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</para><note><para>A <i>cluster</i> placement group is a logical grouping of instances within a single
            Availability Zone. You cannot specify multiple Availability Zones and a cluster placement
            group. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.ServiceLinkedRoleARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group
            uses to call other Amazon Web Services on your behalf. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html">Service-linked
            roles</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.TerminationPolicy">
            <summary>
            <para>
            <para>A policy or a list of policies that are used to select the instances to terminate.
            The policies are executed in the order that you list them. For more information, see
            <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html">Work
            with Amazon EC2 Auto Scaling termination policies</a> in the <i>Amazon EC2 Auto Scaling
            User Guide</i>.</para><para>Valid values: <code>Default</code> | <code>AllocationStrategy</code> | <code>ClosestToNextInstanceHour</code>
            | <code>NewestInstance</code> | <code>OldestInstance</code> | <code>OldestLaunchConfiguration</code>
            | <code>OldestLaunchTemplate</code> | <code>arn:aws:lambda:region:account-id:function:my-function:my-alias</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The version number, <code>$Latest</code>, or <code>$Default</code>. To get the version
            number, use the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplateVersions.html">DescribeLaunchTemplateVersions</a>
            API operation. New launch template versions can be created using the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplateVersion.html">CreateLaunchTemplateVersion</a>
            API. If the value is <code>$Latest</code>, Amazon EC2 Auto Scaling selects the latest
            version of the launch template when launching instances. If the value is <code>$Default</code>,
            Amazon EC2 Auto Scaling selects the default version of the launch template when launching
            instances. The default value is <code>$Default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.VPCZoneIdentifier">
            <summary>
            <para>
            <para>A comma-separated list of subnet IDs for a virtual private cloud (VPC). If you specify
            <code>VPCZoneIdentifier</code> with <code>AvailabilityZones</code>, the subnets that
            you specify must reside in those Availability Zones.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.UpdateAutoScalingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.UpdateASAutoScalingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet">
            <summary>
            Records a heartbeat for the lifecycle action associated with the specified token or
            instance. This extends the timeout by the length of time defined using the <a>PutLifecycleHook</a>
            API call.
            
             
            <para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a launch template or launch configuration with a user data script
            that runs while an instance is in a wait state due to a lifecycle hook.
            </para></li><li><para>
            (Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke
            your Lambda function when an instance is put into a wait state due to a lifecycle
            hook.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para>
            Create the lifecycle hook. Specify whether the hook is used when the instances launch
            or terminate.
            </para></li><li><para><b>If you need more time, record the lifecycle action heartbeat to keep the instance
            in a wait state.</b></para></li><li><para>
            If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a>
            API call.
            </para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon
            EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.InstanceId">
            <summary>
            <para>
            <para>The ID of the instance.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.LifecycleActionToken">
            <summary>
            <para>
            <para>A token that uniquely identifies a specific lifecycle action associated with an instance.
            Amazon EC2 Auto Scaling sends this token to the notification target that you specified
            when you created the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.RecordLifecycleActionHeartbeatResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleActionHeartbeatCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet">
            <summary>
            Creates or updates a lifecycle hook for the specified Auto Scaling group.
            
             
            <para>
            Lifecycle hooks let you create solutions that are aware of events in the Auto Scaling
            instance lifecycle, and then perform a custom action on instances when the corresponding
            lifecycle event occurs.
            </para><para>
            This step is a part of the procedure for adding a lifecycle hook to an Auto Scaling
            group:
            </para><ol><li><para>
            (Optional) Create a launch template or launch configuration with a user data script
            that runs while an instance is in a wait state due to a lifecycle hook.
            </para></li><li><para>
            (Optional) Create a Lambda function and a rule that allows Amazon EventBridge to invoke
            your Lambda function when an instance is put into a wait state due to a lifecycle
            hook.
            </para></li><li><para>
            (Optional) Create a notification target and an IAM role. The target can be either
            an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling
            to publish lifecycle notifications to the target.
            </para></li><li><para><b>Create the lifecycle hook. Specify whether the hook is used when the instances
            launch or terminate.</b></para></li><li><para>
            If you need more time, record the lifecycle action heartbeat to keep the instance
            in a wait state using the <a>RecordLifecycleActionHeartbeat</a> API call.
            </para></li><li><para>
            If you finish before the timeout period ends, send a callback by using the <a>CompleteLifecycleAction</a>
            API call.
            </para></li></ol><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon
            EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            If you exceed your maximum limit of lifecycle hooks, which by default is 50 per Auto
            Scaling group, the call fails.
            </para><para>
            You can view the lifecycle hooks for an Auto Scaling group using the <a>DescribeLifecycleHooks</a>
            API call. If you are no longer using a lifecycle hook, you can delete it by calling
            the <a>DeleteLifecycleHook</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.DefaultResult">
            <summary>
            <para>
            <para>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or
            if an unexpected failure occurs. The default value is <code>ABANDON</code>.</para><para>Valid values: <code>CONTINUE</code> | <code>ABANDON</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.HeartbeatTimeout">
            <summary>
            <para>
            <para>The maximum time, in seconds, that can elapse before the lifecycle hook times out.
            The range is from <code>30</code> to <code>7200</code> seconds. The default value
            is <code>3600</code> seconds (1 hour).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.LifecycleHookName">
            <summary>
            <para>
            <para>The name of the lifecycle hook.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.LifecycleTransition">
            <summary>
            <para>
            <para>The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.</para><ul><li><para>To create a lifecycle hook for scale-out events, specify <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>.</para></li><li><para>To create a lifecycle hook for scale-in events, specify <code>autoscaling:EC2_INSTANCE_TERMINATING</code>.</para></li></ul><para>Required for new lifecycle hooks, but optional when updating existing hooks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.NotificationMetadata">
            <summary>
            <para>
            <para>Additional information that you want to include any time Amazon EC2 Auto Scaling sends
            a message to the notification target.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.NotificationTargetARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling
            uses to notify you when an instance is in a wait state for the lifecycle hook. You
            can specify either an Amazon SNS topic or an Amazon SQS queue.</para><para>If you specify an empty string, this overrides the current ARN.</para><para>This operation uses the JSON format when sending notifications to an Amazon SQS queue,
            and an email key-value pair format when sending notifications to an Amazon SNS topic.</para><para>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message.
            Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.RoleARN">
            <summary>
            <para>
            <para>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified
            notification target.</para><para>Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.
            Required for new lifecycle hooks, but optional when updating existing hooks.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutLifecycleHookResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASLifecycleHookCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet">
            <summary>
            Configures an Auto Scaling group to send notifications when specified events take
            place. Subscribers to the specified topic can have messages delivered to an endpoint
            such as a web server or an email address.
            
             
            <para>
            This configuration overwrites any existing configuration.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html">Getting
            Amazon SNS notifications when your Auto Scaling group scales</a> in the <i>Amazon
            EC2 Auto Scaling User Guide</i>.
            </para><para>
            If you exceed your maximum limit of SNS topics, which is 10 per Auto Scaling group,
            the call fails.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.NotificationType">
            <summary>
            <para>
            <para>The type of event that causes the notification to be sent. To query the notification
            types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a>
            API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.TopicARN">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon SNS topic.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutNotificationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASNotificationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet">
            <summary>
            Creates or updates a scaling policy for an Auto Scaling group. Scaling policies are
            used to scale an Auto Scaling group based on configurable metrics. If no policies
            are defined, the dynamic scaling and predictive scaling features are not used. 
            
             
            <para>
            For more information about using dynamic scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html">Target
            tracking scaling policies</a> and <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html">Step
            and simple scaling policies</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            For more information about using predictive scaling, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html">Predictive
            scaling for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            You can view the scaling policies for an Auto Scaling group using the <a>DescribePolicies</a>
            API call. If you are no longer using a scaling policy, you can delete it by calling
            the <a>DeletePolicy</a> API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.AdjustmentType">
            <summary>
            <para>
            <para>Specifies how the scaling adjustment is interpreted (for example, an absolute number
            or a percentage). The valid values are <code>ChangeInCapacity</code>, <code>ExactCapacity</code>,
            and <code>PercentChangeInCapacity</code>.</para><para>Required if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>.
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling
            adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Cooldown">
            <summary>
            <para>
            <para>A cooldown period, in seconds, that applies to a specific simple scaling policy. When
            a cooldown period is specified here, it overrides the default cooldown.</para><para>Valid only if the policy type is <code>SimpleScaling</code>. For more information,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html">Scaling
            cooldowns for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><para>Default: None</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Dimension">
            <summary>
            <para>
            <para>The dimensions of the metric.</para><para>Conditional: If you published your metric with dimensions, you must specify the same
            dimensions in your scaling policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.TargetTrackingConfiguration_DisableScaleIn">
            <summary>
            <para>
            <para>Indicates whether scaling in by the target tracking scaling policy is disabled. If
            scaling in is disabled, the target tracking scaling policy doesn't remove instances
            from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove
            instances from the Auto Scaling group. The default is <code>false</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Enabled">
            <summary>
            <para>
            <para>Indicates whether the scaling policy is enabled or disabled. The default is enabled.
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enable-disable-scaling-policy.html">Disabling
            a scaling policy for an Auto Scaling group</a> in the <i>Amazon EC2 Auto Scaling User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.EstimatedInstanceWarmup">
            <summary>
            <para>
            <para><i>Not needed if the default instance warmup is defined for the group.</i></para><para>The estimated time, in seconds, until a newly launched instance can contribute to
            the CloudWatch metrics. This warm-up period applies to instances launched due to a
            specific target tracking or step scaling policy. When a warm-up period is specified
            here, it overrides the default instance warmup.</para><para>Valid only if the policy type is <code>TargetTrackingScaling</code> or <code>StepScaling</code>.</para><note><para>The default is to use the value for the default instance warmup defined for the group.
            If default instance warmup is null, then <code>EstimatedInstanceWarmup</code> falls
            back to the value of default cooldown.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredictiveScalingConfiguration_MaxCapacityBreachBehavior">
            <summary>
            <para>
            <para>Defines the behavior that should be applied if the forecast capacity approaches or
            exceeds the maximum capacity of the Auto Scaling group. Defaults to <code>HonorMaxCapacity</code>
            if not specified.</para><para>The following are possible values:</para><ul><li><para><code>HonorMaxCapacity</code> - Amazon EC2 Auto Scaling cannot scale out capacity
            higher than the maximum capacity. The maximum capacity is enforced as a hard limit.
            </para></li><li><para><code>IncreaseMaxCapacity</code> - Amazon EC2 Auto Scaling can scale out capacity
            higher than the maximum capacity when the forecast capacity is close to or exceeds
            the maximum capacity. The upper limit is determined by the forecasted capacity and
            the value for <code>MaxCapacityBuffer</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredictiveScalingConfiguration_MaxCapacityBuffer">
            <summary>
            <para>
            <para>The size of the capacity buffer to use when the forecast capacity is close to or exceeds
            the maximum capacity. The value is specified as a percentage relative to the forecast
            capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that
            if the forecast capacity is 50, and the maximum capacity is 40, then the effective
            maximum capacity is 55.</para><para>If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity
            to equal but not exceed forecast capacity. </para><para>Required if the <code>MaxCapacityBreachBehavior</code> property is set to <code>IncreaseMaxCapacity</code>,
            and cannot be used otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MetricAggregationType">
            <summary>
            <para>
            <para>The aggregation type for the CloudWatch metrics. The valid values are <code>Minimum</code>,
            <code>Maximum</code>, and <code>Average</code>. If the aggregation type is null, the
            value is treated as <code>Average</code>.</para><para>Valid only if the policy type is <code>StepScaling</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_MetricName">
            <summary>
            <para>
            <para>The name of the metric. To get the exact metric name, namespace, and dimensions, inspect
            the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html">Metric</a>
            object that is returned by a call to <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html">ListMetrics</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredictiveScalingConfiguration_MetricSpecification">
            <summary>
            <para>
            <para>This structure includes the metrics and target utilization to use for predictive scaling.
            </para><para>This is an array, but we currently only support a single metric specification. That
            is, you can specify a target value and a single metric pair, or a target value and
            one scaling metric and one load metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MinAdjustmentMagnitude">
            <summary>
            <para>
            <para>The minimum value to scale by when the adjustment type is <code>PercentChangeInCapacity</code>.
            For example, suppose that you create a step scaling policy to scale out an Auto Scaling
            group by 25 percent and you specify a <code>MinAdjustmentMagnitude</code> of 2. If
            the group has 4 instances and the scaling policy is performed, 25 percent of 4 is
            1. However, because you specified a <code>MinAdjustmentMagnitude</code> of 2, Amazon
            EC2 Auto Scaling scales out the group by 2 instances.</para><para>Valid only if the policy type is <code>StepScaling</code> or <code>SimpleScaling</code>.
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment">Scaling
            adjustment types</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</para><note><para>Some Auto Scaling groups use instance weights. In this case, set the <code>MinAdjustmentMagnitude</code>
            to a value that is at least as large as your largest instance weight.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.MinAdjustmentStep">
            <summary>
            <para>
            <para>Available for backward compatibility. Use <code>MinAdjustmentMagnitude</code> instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredictiveScalingConfiguration_Mode">
            <summary>
            <para>
            <para>The predictive scaling mode. Defaults to <code>ForecastOnly</code> if not specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Namespace">
            <summary>
            <para>
            <para>The namespace of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>One of the following policy types: </para><ul><li><para><code>TargetTrackingScaling</code></para></li><li><para><code>StepScaling</code></para></li><li><para><code>SimpleScaling</code> (default)</para></li><li><para><code>PredictiveScaling</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredefinedMetricSpecification_PredefinedMetricType">
            <summary>
            <para>
            <para>The metric type. The following predefined metrics are available:</para><ul><li><para><code>ASGAverageCPUUtilization</code> - Average CPU utilization of the Auto Scaling
            group.</para></li><li><para><code>ASGAverageNetworkIn</code> - Average number of bytes received on all network
            interfaces by the Auto Scaling group.</para></li><li><para><code>ASGAverageNetworkOut</code> - Average number of bytes sent out on all network
            interfaces by the Auto Scaling group.</para></li><li><para><code>ALBRequestCountPerTarget</code> - Average Application Load Balancer request
            count per target for your Auto Scaling group.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredefinedMetricSpecification_ResourceLabel">
            <summary>
            <para>
            <para>A label that uniquely identifies a specific Application Load Balancer target group
            from which to determine the average request count served by your Auto Scaling group.
            You can't specify a resource label unless the target group is attached to the Auto
            Scaling group.</para><para>You create the resource label by appending the final portion of the load balancer
            ARN and the final portion of the target group ARN into a single value, separated by
            a forward slash (/). The format of the resource label is:</para><para><code>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</code>.</para><para>Where:</para><ul><li><para>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the final portion of the
            load balancer ARN</para></li><li><para>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is the final portion
            of the target group ARN.</para></li></ul><para>To find the ARN for an Application Load Balancer, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a>
            API operation. To find the ARN for the target group, use the <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html">DescribeTargetGroups</a>
            API operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.ScalingAdjustment">
            <summary>
            <para>
            <para>The amount by which to scale, based on the specified adjustment type. A positive value
            adds to the current capacity while a negative number removes from the current capacity.
            For exact capacity, you must specify a positive value.</para><para>Required if the policy type is <code>SimpleScaling</code>. (Not used with any other
            policy type.) </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PredictiveScalingConfiguration_SchedulingBufferTime">
            <summary>
            <para>
            <para>The amount of time, in seconds, by which the instance launch time can be advanced.
            For example, the forecast says to add capacity at 10:00 AM, and you choose to pre-launch
            instances by 5 minutes. In that case, the instances will be launched at 9:55 AM. The
            intention is to give resources time to be provisioned. It can take a few minutes to
            launch an EC2 instance. The actual amount of time required depends on several factors,
            such as the size of the instance and whether there are startup scripts to complete.
            </para><para>The value must be less than the forecast interval duration of 3600 seconds (60 minutes).
            Defaults to 300 seconds if not specified. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Statistic">
            <summary>
            <para>
            <para>The statistic of the metric.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.StepAdjustment">
            <summary>
            <para>
            <para>A set of adjustments that enable you to scale based on the size of the alarm breach.</para><para>Required if the policy type is <code>StepScaling</code>. (Not used with any other
            policy type.) </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.TargetTrackingConfiguration_TargetValue">
            <summary>
            <para>
            <para>The target value for the metric.</para><note><para>Some metrics are based on a count instead of a percentage, such as the request count
            for an Application Load Balancer or the number of messages in an SQS queue. If the
            scaling policy specifies one of these metrics, specify the target utilization as the
            optimal average request or message count per instance during any one-minute interval.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.CustomizedMetricSpecification_Unit">
            <summary>
            <para>
            <para>The unit of the metric. For a complete list of the units that CloudWatch supports,
            see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">MetricDatum</a>
            data type in the <i>Amazon CloudWatch API Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutScalingPolicyResponse).
            Specifying the name of a property of type Amazon.AutoScaling.Model.PutScalingPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScalingPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet">
            <summary>
            Creates or updates a scheduled scaling action for an Auto Scaling group.
            
             
            <para>
            For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html">Scheduled
            scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            </para><para>
            You can view the scheduled actions for an Auto Scaling group using the <a>DescribeScheduledActions</a>
            API call. If you are no longer using a scheduled action, you can delete it by calling
            the <a>DeleteScheduledAction</a> API.
            </para><para>
            If you try to schedule your action in the past, Amazon EC2 Auto Scaling returns an
            error message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.DesiredCapacity">
            <summary>
            <para>
            <para>The desired capacity is the initial capacity of the Auto Scaling group after the scheduled
            action runs and the capacity it attempts to maintain. It can scale beyond this capacity
            if you add more scaling conditions. </para><note><para>You must specify at least one of the following properties: <code>MaxSize</code>, <code>MinSize</code>,
            or <code>DesiredCapacity</code>. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcEndTime">
            <summary>
            <para>
            <para>The date and time for the recurring schedule to end, in UTC. For example, <code>"2021-06-01T00:00:00Z"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.MaxSize">
            <summary>
            <para>
            <para>The maximum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.MinSize">
            <summary>
            <para>
            <para>The minimum size of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Recurrence">
            <summary>
            <para>
            <para>The recurring schedule for this action. This format consists of five fields separated
            by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The
            value must be in quotes (for example, <code>"30 0 1 1,6,12 *"</code>). For more information
            about this format, see <a href="http://crontab.org">Crontab</a>.</para><para>When <code>StartTime</code> and <code>EndTime</code> are specified with <code>Recurrence</code>,
            they form the boundaries of when the recurring action starts and stops.</para><para>Cron expressions use Universal Coordinated Time (UTC) by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.ScheduledActionName">
            <summary>
            <para>
            <para>The name of this scaling action.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcStartTime">
            <summary>
            <para>
            <para>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
            only and in quotes (for example, <code>"2021-06-01T00:00:00Z"</code>).</para><para>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto
            Scaling performs the action at this time, and then performs the action based on the
            specified recurrence.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.UtcTime">
            <summary>
            <para>
            <para>This property is no longer used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.TimeZone">
            <summary>
            <para>
            <para>Specifies the time zone for a cron expression. If a time zone is not provided, UTC
            is used by default. </para><para>Valid values are the canonical names of the IANA time zones, derived from the IANA
            Time Zone Database (such as <code>Etc/GMT+9</code> or <code>Pacific/Tahiti</code>).
            For more information, see <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.EndTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use EndTimeUtc instead. Setting either EndTime or EndTimeUtc
            results in both EndTime and EndTimeUtc being assigned, the latest assignment to either
            one of the two property is reflected in the value of both. EndTime is provided for
            backwards compatibility only and assigning a non-Utc DateTime to it results in the
            wrong timestamp being passed to the service.</para><para>The date and time for the recurring schedule to end, in UTC. For example, <code>"2021-06-01T00:00:00Z"</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.StartTime">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use StartTimeUtc instead. Setting either StartTime or
            StartTimeUtc results in both StartTime and StartTimeUtc being assigned, the latest
            assignment to either one of the two property is reflected in the value of both. StartTime
            is provided for backwards compatibility only and assigning a non-Utc DateTime to it
            results in the wrong timestamp being passed to the service.</para><para>The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT
            only and in quotes (for example, <code>"2021-06-01T00:00:00Z"</code>).</para><para>If you specify <code>Recurrence</code> and <code>StartTime</code>, Amazon EC2 Auto
            Scaling performs the action at this time, and then performs the action based on the
            specified recurrence.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Time">
            <summary>
            <para>
            <para>This property is deprecated. Setting this property results in non-UTC DateTimes not
            being marshalled correctly. Use TimeUtc instead. Setting either Time or TimeUtc results
            in both Time and TimeUtc being assigned, the latest assignment to either one of the
            two property is reflected in the value of both. Time is provided for backwards compatibility
            only and assigning a non-Utc DateTime to it results in the wrong timestamp being passed
            to the service.</para><para>This property is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutScheduledUpdateGroupActionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASScheduledUpdateGroupActionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet">
            <summary>
            Creates or updates a warm pool for the specified Auto Scaling group. A warm pool is
            a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group.
            Whenever your application needs to scale out, the Auto Scaling group can draw on the
            warm pool to meet its new desired capacity. For more information and example configurations,
            see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html">Warm
            pools for Amazon EC2 Auto Scaling</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
            
             
            <para>
            This operation must be called from the Region in which the Auto Scaling group was
            created. This operation cannot be called on an Auto Scaling group that has a mixed
            instances policy or a launch template or launch configuration that requests Spot Instances.
            </para><para>
            You can view the instances in the warm pool using the <a>DescribeWarmPool</a> API
            call. If you are no longer using a warm pool, you can delete it by calling the <a>DeleteWarmPool</a>
            API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.AutoScalingGroupName">
            <summary>
            <para>
            <para>The name of the Auto Scaling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.MaxGroupPreparedCapacity">
            <summary>
            <para>
            <para>Specifies the maximum number of instances that are allowed to be in the warm pool
            or in any state except <code>Terminated</code> for the Auto Scaling group. This is
            an optional property. Specify it only if you do not want the warm pool size to be
            determined by the difference between the group's maximum capacity and its desired
            capacity. </para><important><para>If a value for <code>MaxGroupPreparedCapacity</code> is not specified, Amazon EC2
            Auto Scaling launches and maintains the difference between the group's maximum capacity
            and its desired capacity. If you specify a value for <code>MaxGroupPreparedCapacity</code>,
            Amazon EC2 Auto Scaling uses the difference between the <code>MaxGroupPreparedCapacity</code>
            and the desired capacity instead. </para><para>The size of the warm pool is dynamic. Only when <code>MaxGroupPreparedCapacity</code>
            and <code>MinSize</code> are set to the same value does the warm pool have an absolute
            size.</para></important><para>If the desired capacity of the Auto Scaling group is higher than the <code>MaxGroupPreparedCapacity</code>,
            the capacity of the warm pool is 0, unless you specify a value for <code>MinSize</code>.
            To remove a value that you previously set, include the property but specify -1 for
            the value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.MinSize">
            <summary>
            <para>
            <para>Specifies the minimum number of instances to maintain in the warm pool. This helps
            you to ensure that there is always a certain number of warmed instances available
            to handle traffic spikes. Defaults to 0 if not specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.PoolState">
            <summary>
            <para>
            <para>Sets the instance state to transition to after the lifecycle actions are complete.
            Default is <code>Stopped</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.InstanceReusePolicy_ReuseOnScaleIn">
            <summary>
            <para>
            <para>Specifies whether instances in the Auto Scaling group can be returned to the warm
            pool on scale in. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.AutoScaling.Model.PutWarmPoolResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AutoScalingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^AutoScalingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.AS.WriteASWarmPoolCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
