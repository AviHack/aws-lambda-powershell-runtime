<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.MQ</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerCmdlet">
            <summary>
            Returns information about the specified broker.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeBrokerResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeBrokerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerId parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet">
            <summary>
            Describe available engine types and versions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.EngineType">
            <summary>
            <para>
            <para>Filter response by engine type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BrokerEngineTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeBrokerEngineTypesResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeBrokerEngineTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EngineType parameter.
            The -PassThru parameter is deprecated, use -Select '^EngineType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerEngineTypeCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet">
            <summary>
            Describe available broker instance options.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.EngineType">
            <summary>
            <para>
            <para>Filter response by engine type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.HostInstanceType">
            <summary>
            <para>
            <para>Filter response by host instance type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.StorageType">
            <summary>
            <para>
            <para>Filter response by storage type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BrokerInstanceOptions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeBrokerInstanceOptionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HostInstanceType parameter.
            The -PassThru parameter is deprecated, use -Select '^HostInstanceType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerInstanceOptionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerListCmdlet">
            <summary>
            Returns a list of all brokers.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BrokerSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.ListBrokersResponse).
            Specifying the name of a property of type Amazon.MQ.Model.ListBrokersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQBrokerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationCmdlet">
            <summary>
            Returns information about the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeConfigurationResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationListCmdlet">
            <summary>
            Returns a list of all configurations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.ListConfigurationsResponse).
            Specifying the name of a property of type Amazon.MQ.Model.ListConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionCmdlet">
            <summary>
            Returns the specified configuration revision for the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionCmdlet.ConfigurationRevision">
            <summary>
            <para>
            <para>The revision of the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeConfigurationRevisionResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeConfigurationRevisionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationRevision parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationRevision' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet">
            <summary>
            Returns a list of all revisions for the specified configuration.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Revisions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.ListConfigurationRevisionsResponse).
            Specifying the name of a property of type Amazon.MQ.Model.ListConfigurationRevisionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConfigurationId parameter.
            The -PassThru parameter is deprecated, use -Select '^ConfigurationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQConfigurationRevisionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQTagListCmdlet">
            <summary>
            Lists tags for a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQTagListCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.ListTagsResponse).
            Specifying the name of a property of type Amazon.MQ.Model.ListTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQUserCmdlet">
            <summary>
            Returns information about an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserCmdlet.Username">
            <summary>
            <para>
            <para>The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet">
            <summary>
            Returns a list of all ActiveMQ users.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of brokers that Amazon MQ can return per page (20 by default).
            This value must be an integer from 5 to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>20</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that specifies the next page of results Amazon MQ should return. To request
            the first page, leave nextToken empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.MQ.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerId parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.GetMQUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet">
            <summary>
            Creates a broker. Note: This API is asynchronous.
            
             
            <para>
            To create a broker, you must either use the AmazonMQFullAccess IAM policy or include
            the following EC2 permissions in your IAM policy.
            </para><ul><li><para>
            ec2:CreateNetworkInterface
            </para><para>
            This permission is required to allow Amazon MQ to create an elastic network interface
            (ENI) on behalf of your account.
            </para></li><li><para>
            ec2:CreateNetworkInterfacePermission
            </para><para>
            This permission is required to attach the ENI to the broker instance.
            </para></li><li><para>
            ec2:DeleteNetworkInterface
            </para></li><li><para>
            ec2:DeleteNetworkInterfacePermission
            </para></li><li><para>
            ec2:DetachNetworkInterface
            </para></li><li><para>
            ec2:DescribeInternetGateways
            </para></li><li><para>
            ec2:DescribeNetworkInterfaces
            </para></li><li><para>
            ec2:DescribeNetworkInterfacePermissions
            </para></li><li><para>
            ec2:DescribeRouteTables
            </para></li><li><para>
            ec2:DescribeSecurityGroups
            </para></li><li><para>
            ec2:DescribeSubnets
            </para></li><li><para>
            ec2:DescribeVpcs
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/amazon-mq-setting-up.html#create-iam-user">Create
            an IAM User and Get Your AWS Credentials</a> and <a href="https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/connecting-to-amazon-mq.html#never-modify-delete-elastic-network-interface">Never
            Modify or Delete the Amazon MQ Elastic Network Interface</a> in the <i>Amazon MQ Developer
            Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Logs_Audit">
            <summary>
            <para>
            <para>Enables audit logging. Every user management action made using JMX or the ActiveMQ
            Web Console is logged. Does not apply to RabbitMQ brokers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.AuthenticationStrategy">
            <summary>
            <para>
            <para>Optional. The authentication strategy used to secure the broker. The default is SIMPLE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>Enables automatic upgrades to new minor versions for brokers, as new versions are
            released and supported by Amazon MQ. Automatic upgrades occur during the scheduled
            maintenance window of the broker or after a manual broker reboot. Set to true by default,
            if no value is specified.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.BrokerName">
            <summary>
            <para>
            <para>Required. The broker's name. This value must be unique in your AWS account, 1-50 characters
            long, must contain only letters, numbers, dashes, and underscores, and must not contain
            white spaces, brackets, wildcard characters, or special characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Configuration">
            <summary>
            <para>
            <para>A list of information about the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.CreatorRequestId">
            <summary>
            <para>
            <para>The unique ID that the requester receives for the created broker. Amazon MQ passes
            your ID with the API action. Note: We recommend using a Universally Unique Identifier
            (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application
            doesn't require idempotency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.DeploymentMode">
            <summary>
            <para>
            <para>Required. The broker's deployment mode.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.EngineType">
            <summary>
            <para>
            <para>Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.EngineVersion">
            <summary>
            <para>
            <para>Required. The broker engine's version. For a list of supported engine versions, see
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Logs_General">
            <summary>
            <para>
            <para>Enables general logging.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.HostInstanceType">
            <summary>
            <para>
            <para>Required. The broker's instance type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_Host">
            <summary>
            <para>
            <para>Specifies the location of the LDAP server such as AWS Directory Service for Microsoft
            Active Directory . Optional failover server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.EncryptionOptions_KmsKeyId">
            <summary>
            <para>
            <para>The customer master key (CMK) to use for the AWS Key Management Service (KMS). This
            key is used to encrypt your data at rest. If not provided, Amazon MQ will use a default
            CMK to encrypt your data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.MaintenanceWindowStartTime">
            <summary>
            <para>
            <para>The parameters that determine the WeeklyStartTime.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.PubliclyAccessible">
            <summary>
            <para>
            <para>Enables connections from applications outside of the VPC that hosts the broker's subnets.
            Set to false by default, if no value is provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_RoleBase">
            <summary>
            <para>
            <para>The distinguished name of the node in the directory information tree (DIT) to search
            for roles or groups. For example, ou=group, ou=corp, dc=corp,                  dc=example,
            dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_RoleName">
            <summary>
            <para>
            <para>Specifies the LDAP attribute that identifies the group name attribute in the object
            returned from the group membership query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_RoleSearchMatching">
            <summary>
            <para>
            <para>The LDAP search filter used to find roles within the roleBase. The distinguished name
            of the user matched by userSearchMatching is substituted into the {0} placeholder
            in the search filter. The client's username is substituted into the {1} placeholder.
            For example, if you set this option to (member=uid={1})for the user janedoe, the search
            filter becomes (member=uid=janedoe) after string substitution. It matches all role
            entries that have a member attribute equal to uid=janedoe under the subtree selected
            by the roleBase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_RoleSearchSubtree">
            <summary>
            <para>
            <para>The directory search scope for the role. If set to true, scope is to search the entire
            subtree.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_ServiceAccountPassword">
            <summary>
            <para>
            <para>Service account password. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_ServiceAccountUsername">
            <summary>
            <para>
            <para>Service account username. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.StorageType">
            <summary>
            <para>
            <para>The broker's storage type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.SubnetId">
            <summary>
            <para>
            <para>The list of groups that define which subnets and IP ranges the broker can use from
            different Availability Zones. If you specify more than one subnet, the subnets must
            be in different Availability Zones. Amazon MQ will not be able to create VPC endpoints
            for your broker with multiple subnets in the same Availability Zone. A SINGLE_INSTANCE
            deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ
            Amazon MQ for ActiveMQ deployment requires two subnets. A CLUSTER_MULTI_AZ Amazon
            MQ for RabbitMQ deployment has no subnet requirements when deployed with public accessibility.
            Deployment without public accessibility requires at least one subnet.</para><important><para>If you specify subnets in a <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html">shared
            VPC</a> for a RabbitMQ broker, the associated VPC to which the specified subnets belong
            must be owned by your AWS account. Amazon MQ will not be able to create VPC endpoints
            in VPCs that are not owned by your AWS account.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Tag">
            <summary>
            <para>
            <para>Create tags when creating the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.EncryptionOptions_UseAwsOwnedKey">
            <summary>
            <para>
            <para>Enables the use of an AWS owned CMK using AWS Key Management Service (KMS). Set to
            true by default, if no value is provided, for example, for RabbitMQ brokers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_UserBase">
            <summary>
            <para>
            <para>Select a particular subtree of the directory information tree (DIT) to search for
            user entries. The subtree is specified by a DN, which specifies the base node of the
            subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp,       
                      dc=example, dc=com, the search for user entries is restricted to the subtree
            beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_UserRoleName">
            <summary>
            <para>
            <para>Specifies the name of the LDAP attribute for the user group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.User">
            <summary>
            <para>
            <para>Required. The list of broker users (persons or applications) who can access queues
            and topics. This value can contain only alphanumeric characters, dashes, periods,
            underscores, and tildes (- . _ ~). This value must be 2-100 characters long.</para><important><title>Amazon MQ for RabbitMQ</title><para>When you create an Amazon MQ for RabbitMQ broker, one and only one administrative
            user is accepted and created when a broker is first provisioned. All subsequent broker
            users are created by making RabbitMQ API calls directly to brokers or via the RabbitMQ
            web console.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_UserSearchMatching">
            <summary>
            <para>
            <para>The LDAP search filter used to find users within the userBase. The client's username
            is substituted into the {0} placeholder in the search filter. For example, if this
            option is set to (uid={0}) and the received username is janedoe, the search filter
            becomes (uid=janedoe) after string substitution. It will result in matching an entry
            like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example,                  dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.LdapServerMetadata_UserSearchSubtree">
            <summary>
            <para>
            <para>The directory search scope for the user. If set to true, scope is to search the entire
            subtree.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.CreateBrokerResponse).
            Specifying the name of a property of type Amazon.MQ.Model.CreateBrokerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerName parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQBrokerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet">
            <summary>
            Creates a new configuration for the specified configuration name. Amazon MQ uses the
            default configuration (the engine type and version).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.AuthenticationStrategy">
            <summary>
            <para>
            <para>Optional. The authentication strategy associated with the configuration. The default
            is SIMPLE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.EngineType">
            <summary>
            <para>
            <para>Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.EngineVersion">
            <summary>
            <para>
            <para>Required. The broker engine's version. For a list of supported engine versions, see
            <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>Required. The name of the configuration. This value can contain only alphanumeric
            characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be
            1-150 characters long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.Tag">
            <summary>
            <para>
            <para>Create tags when creating the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.CreateConfigurationResponse).
            Specifying the name of a property of type Amazon.MQ.Model.CreateConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet">
            <summary>
            Add a tag to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet.Tag">
            <summary>
            <para>
            <para>The key-value pair for the resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet">
            <summary>
            Creates an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.ConsoleAccess">
            <summary>
            <para>
            <para>Enables access to the ActiveMQ Web Console for the ActiveMQ user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.Group">
            <summary>
            <para>
            <para>The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.Password">
            <summary>
            <para>
            <para>Required. The password of the user. This value must be at least 12 characters long,
            must contain at least 4 unique characters, and must not contain commas, colons, or
            equal signs (,:=).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.Username">
            <summary>
            <para>
            <para>The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.CreateUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.NewMQUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.RemoveMQBrokerCmdlet">
            <summary>
            Deletes a broker. Note: This API is asynchronous.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQBrokerCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQBrokerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BrokerId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DeleteBrokerResponse).
            Specifying the name of a property of type Amazon.MQ.Model.DeleteBrokerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQBrokerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerId parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQBrokerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet">
            <summary>
            Removes a tag from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet.TagKey">
            <summary>
            <para>
            <para>An array of tag keys to delete</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet">
            <summary>
            Deletes an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet.Username">
            <summary>
            <para>
            <para>The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RemoveMQUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.RestartMQBrokerCmdlet">
            <summary>
            Reboots a broker. Note: This API is asynchronous.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RestartMQBrokerCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RestartMQBrokerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.RebootBrokerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RestartMQBrokerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerId parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.RestartMQBrokerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet">
            <summary>
            Adds a pending configuration change to a broker.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.Logs_Audit">
            <summary>
            <para>
            <para>Enables audit logging. Every user management action made using JMX or the ActiveMQ
            Web Console is logged. Does not apply to RabbitMQ brokers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.AuthenticationStrategy">
            <summary>
            <para>
            <para>Optional. The authentication strategy used to secure the broker. The default is SIMPLE.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.AutoMinorVersionUpgrade">
            <summary>
            <para>
            <para>Enables automatic upgrades to new minor versions for brokers, as new versions are
            released and supported by Amazon MQ. Automatic upgrades occur during the scheduled
            maintenance window of the broker or after a manual broker reboot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.Configuration">
            <summary>
            <para>
            <para>A list of information about the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.EngineVersion">
            <summary>
            <para>
            <para>The broker engine version. For a list of supported engine versions, see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html">Supported
            engines</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.Logs_General">
            <summary>
            <para>
            <para>Enables general logging.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.HostInstanceType">
            <summary>
            <para>
            <para>The broker's host instance type to upgrade to. For a list of supported instance types,
            see <a href="https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types">Broker
            instance types</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_Host">
            <summary>
            <para>
            <para>Specifies the location of the LDAP server such as AWS Directory Service for Microsoft
            Active Directory . Optional failover server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.MaintenanceWindowStartTime">
            <summary>
            <para>
            <para>The parameters that determine the WeeklyStartTime.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_RoleBase">
            <summary>
            <para>
            <para>The distinguished name of the node in the directory information tree (DIT) to search
            for roles or groups. For example, ou=group, ou=corp, dc=corp,                  dc=example,
            dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_RoleName">
            <summary>
            <para>
            <para>Specifies the LDAP attribute that identifies the group name attribute in the object
            returned from the group membership query.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_RoleSearchMatching">
            <summary>
            <para>
            <para>The LDAP search filter used to find roles within the roleBase. The distinguished name
            of the user matched by userSearchMatching is substituted into the {0} placeholder
            in the search filter. The client's username is substituted into the {1} placeholder.
            For example, if you set this option to (member=uid={1})for the user janedoe, the search
            filter becomes (member=uid=janedoe) after string substitution. It matches all role
            entries that have a member attribute equal to uid=janedoe under the subtree selected
            by the roleBase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_RoleSearchSubtree">
            <summary>
            <para>
            <para>The directory search scope for the role. If set to true, scope is to search the entire
            subtree.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.SecurityGroup">
            <summary>
            <para>
            <para>The list of security groups (1 minimum, 5 maximum) that authorizes connections to
            brokers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_ServiceAccountPassword">
            <summary>
            <para>
            <para>Service account password. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_ServiceAccountUsername">
            <summary>
            <para>
            <para>Service account username. A service account is an account in your LDAP server that
            has access to initiate a connection. For example, cn=admin,dc=corp, dc=example,  
                           dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_UserBase">
            <summary>
            <para>
            <para>Select a particular subtree of the directory information tree (DIT) to search for
            user entries. The subtree is specified by a DN, which specifies the base node of the
            subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp,       
                      dc=example, dc=com, the search for user entries is restricted to the subtree
            beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_UserRoleName">
            <summary>
            <para>
            <para>Specifies the name of the LDAP attribute for the user group membership.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_UserSearchMatching">
            <summary>
            <para>
            <para>The LDAP search filter used to find users within the userBase. The client's username
            is substituted into the {0} placeholder in the search filter. For example, if this
            option is set to (uid={0}) and the received username is janedoe, the search filter
            becomes (uid=janedoe) after string substitution. It will result in matching an entry
            like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example,                  dc=com.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.LdapServerMetadata_UserSearchSubtree">
            <summary>
            <para>
            <para>The directory search scope for the user. If set to true, scope is to search the entire
            subtree.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.UpdateBrokerResponse).
            Specifying the name of a property of type Amazon.MQ.Model.UpdateBrokerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BrokerId parameter.
            The -PassThru parameter is deprecated, use -Select '^BrokerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQBrokerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet">
            <summary>
            Updates the specified configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.ConfigurationId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.Data">
            <summary>
            <para>
            <para>Required. The base64-encoded XML configuration.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter to Base64 before supplying to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>The description of the configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.UpdateConfigurationResponse).
            Specifying the name of a property of type Amazon.MQ.Model.UpdateConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Data parameter.
            The -PassThru parameter is deprecated, use -Select '^Data' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet">
            <summary>
            Updates the information for an ActiveMQ user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.BrokerId">
            <summary>
            <para>
            <para>The unique ID that Amazon MQ generates for the broker.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.ConsoleAccess">
            <summary>
            <para>
            <para>Enables access to the the ActiveMQ Web Console for the ActiveMQ user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.Group">
            <summary>
            <para>
            <para>The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can
            contain only alphanumeric characters, dashes, periods, underscores, and tildes (-
            . _ ~). This value must be 2-100 characters long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.Password">
            <summary>
            <para>
            <para>The password of the user. This value must be at least 12 characters long, must contain
            at least 4 unique characters, and must not contain commas, colons, or equal signs
            (,:=).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.Username">
            <summary>
            <para>
            <para>The username of the ActiveMQ user. This value can contain only alphanumeric characters,
            dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters
            long.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.MQ.Model.UpdateUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Username parameter.
            The -PassThru parameter is deprecated, use -Select '^Username' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.MQ.UpdateMQUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
