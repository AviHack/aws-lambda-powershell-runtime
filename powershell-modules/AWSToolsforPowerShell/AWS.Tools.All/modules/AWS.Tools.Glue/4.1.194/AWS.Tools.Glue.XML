<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Glue</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet">
            <summary>
            Adds tags to a resource. A tag is a label you can assign to an Amazon Web Services
            resource. In Glue, you can tag only certain resources. For information about what
            resources you can tag, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon
            Web Services Tags in Glue</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the Glue resource to which to add the tags. For more information about
            Glue resource ARNs, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-aws-glue-arn-id">Glue
            ARN string pattern</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet.TagsToAdd">
            <summary>
            <para>
            <para>Tags to add to this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.AddGLUEResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet">
            <summary>
            Queries for the schema version metadata information.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.MetadataList">
            <summary>
            <para>
            <para>Search key-value pairs for metadata, if they are not provided all the metadata information
            will be fetched.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaVersionId">
            <summary>
            <para>
            <para>The unique version ID of the schema version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results required per page. If the value is not supplied, this will
            be defaulted to 25 per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.QuerySchemaVersionMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.QuerySchemaVersionMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUESchemaVersionMetadataCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet">
            <summary>
            Searches a set of tables based on properties in the table metadata as well as on the
            parent database. You can search against text or filter conditions. 
            
             
            <para>
            You can only get tables that you have access to based on the security policies defined
            in Lake Formation. You need at least a read-only access to the table for it to be
            returned. If you do not have access to all the columns in the table, these columns
            will not be searched against when returning the list of tables back to you. If you
            have access to the columns but not the data in the columns, those columns and the
            associated metadata for those columns will be included in the search. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.CatalogId">
            <summary>
            <para>
            <para>A unique identifier, consisting of <code><i>account_id</i></code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.Filter">
            <summary>
            <para>
            <para>A list of key-value pairs, and a comparator used to filter the search results. Returns
            all entities matching the predicate.</para><para>The <code>Comparator</code> member of the <code>PropertyPredicate</code> struct is
            used only for time fields, and can be omitted for other field types. Also, when comparing
            string values, such as when <code>Key=Name</code>, a fuzzy match algorithm is used.
            The <code>Key</code> field (for example, the value of the <code>Name</code> field)
            is split on certain punctuation characters, for example, -, :, #, etc. into tokens.
            Then each token is exact-match compared with the <code>Value</code> member of <code>PropertyPredicate</code>.
            For example, if <code>Key=Name</code> and <code>Value=link</code>, tables named <code>customer-link</code>
            and <code>xx-link-yy</code> are returned, but <code>xxlinkyy</code> is not returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.ResourceShareType">
            <summary>
            <para>
            <para>Allows you to specify that you want to search the tables shared with your account.
            The allowable values are <code>FOREIGN</code> or <code>ALL</code>. </para><ul><li><para>If set to <code>FOREIGN</code>, will search the tables shared with your account. </para></li><li><para>If set to <code>ALL</code>, will search the tables shared with your account, as well
            as the tables in yor local account. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.SearchText">
            <summary>
            <para>
            <para>A string used for a text search.</para><para>Specifying a value in quotes filters based on an exact match to the value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.SortCriterion">
            <summary>
            <para>
            <para>A list of criteria for sorting the results by a field name, in an ascending or descending
            order.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of tables to return in a single response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, included if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.SearchTablesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.SearchTablesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.FindGLUETableCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet">
            <summary>
            Retrieves the details of a blueprint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet.IncludeBlueprint">
            <summary>
            <para>
            <para>Specifies whether or not to include the blueprint in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet.IncludeParameterSpec">
            <summary>
            <para>
            <para>Specifies whether or not to include the parameter specification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet.Name">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Blueprint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetBlueprintResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetBlueprintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet">
            <summary>
            Retrieves information about a list of blueprints.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet.IncludeBlueprint">
            <summary>
            <para>
            <para>Specifies whether or not to include the blueprint in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet.IncludeParameterSpec">
            <summary>
            <para>
            <para>Specifies whether or not to include the parameters, as a JSON string, for the blueprint
            in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet.Name">
            <summary>
            <para>
            <para>A list of blueprint names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetBlueprintsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetBlueprintsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet">
            <summary>
            Lists all the blueprint names in an account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet.Tag">
            <summary>
            <para>
            <para>Filters the list by an Amazon Web Services resource tag.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Blueprints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListBlueprintsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListBlueprintsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunCmdlet">
            <summary>
            Retrieves the details of a blueprint run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunCmdlet.BlueprintName">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunCmdlet.RunId">
            <summary>
            <para>
            <para>The run ID for the blueprint run you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BlueprintRun'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetBlueprintRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetBlueprintRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BlueprintName parameter.
            The -PassThru parameter is deprecated, use -Select '^BlueprintName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet">
            <summary>
            Retrieves the details of blueprint runs for a specified blueprint.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.BlueprintName">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'BlueprintRuns'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetBlueprintRunsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetBlueprintRunsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BlueprintName parameter.
            The -PassThru parameter is deprecated, use -Select '^BlueprintName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEBlueprintRunListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECatalogImportStatusCmdlet">
            <summary>
            Retrieves the status of a migration operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECatalogImportStatusCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the catalog to migrate. Currently, this should be the Amazon Web Services
            account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECatalogImportStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImportStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetCatalogImportStatusResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetCatalogImportStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECatalogImportStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierCmdlet">
            <summary>
            Retrieve a classifier by name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierCmdlet.Name">
            <summary>
            <para>
            <para>Name of the classifier to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Classifier'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetClassifierResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetClassifierResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierListCmdlet">
            <summary>
            Lists all classifier objects in the Data Catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The size of the list to return (optional).</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierListCmdlet.NextToken">
            <summary>
            <para>
            <para>An optional continuation token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Classifiers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetClassifiersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetClassifiersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEClassifierListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet">
            <summary>
            Retrieves partition statistics of columns.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>GetPartition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.ColumnName">
            <summary>
            <para>
            <para>A list of the column names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.PartitionValue">
            <summary>
            <para>
            <para>A list of partition values identifying the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetColumnStatisticsForPartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetColumnStatisticsForPartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet">
            <summary>
            Retrieves table statistics of columns.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>GetTable</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet.ColumnName">
            <summary>
            <para>
            <para>A list of the column names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEColumnStatisticsForTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetColumnStatisticsForTableResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetColumnStatisticsForTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet">
            <summary>
            Retrieves a connection definition from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the connection resides. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet.HidePassword">
            <summary>
            <para>
            <para>Allows you to retrieve the connection metadata without returning the password. For
            instance, the Glue console uses this flag to retrieve the connection, and does not
            display the password. Set this parameter when the caller might not have permission
            to use the KMS key to decrypt the password, but it does have permission to access
            the rest of the connection properties.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection definition to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connection'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetConnectionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet">
            <summary>
            Retrieves a list of connection definitions from the Data Catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the connections reside. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.Filter">
            <summary>
            <para>
            <para>A filter that controls which connections are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.HidePassword">
            <summary>
            <para>
            <para>Allows you to retrieve the connection metadata without returning the password. For
            instance, the Glue console uses this flag to retrieve the connection, and does not
            display the password. Set this parameter when the caller might not have permission
            to use the KMS key to decrypt the password, but it does have permission to access
            the rest of the connection properties.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of connections to return in one response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectionList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetConnectionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEConnectionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerCmdlet">
            <summary>
            Retrieves metadata for a specified crawler.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the crawler to retrieve metadata for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Crawler'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetCrawlerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetCrawlerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerBatchCmdlet">
            <summary>
            Returns a list of resource metadata for a given list of crawler names. After calling
            the <code>ListCrawlers</code> operation, you can call this operation to access the
            data to which you have been granted permissions. This operation supports all IAM permissions,
            including permission conditions that uses tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerBatchCmdlet.CrawlerName">
            <summary>
            <para>
            <para>A list of crawler names, which might be the names returned from the <code>ListCrawlers</code>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetCrawlersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetCrawlersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerListCmdlet">
            <summary>
            Retrieves metadata for all crawlers defined in the customer account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of crawlers to return on each call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Crawlers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetCrawlersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetCrawlersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet">
            <summary>
            Retrieves metrics about specified crawlers.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.CrawlerNameList">
            <summary>
            <para>
            <para>A list of the names of crawlers about which to retrieve metrics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CrawlerMetricsList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetCrawlerMetricsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetCrawlerMetricsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CrawlerNameList parameter.
            The -PassThru parameter is deprecated, use -Select '^CrawlerNameList' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerMetricListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet">
            <summary>
            Retrieves the names of all crawler resources in this Amazon Web Services account,
            or the resources with the specified tag. This operation allows you to see which resources
            are available in your account, and their names.
            
             
            <para>
            This operation takes the optional <code>Tags</code> field, which you can use as a
            filter on the response so that tagged resources can be retrieved as a group. If you
            choose to use tags filtering, only resources with the tag are retrieved.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.Tag">
            <summary>
            <para>
            <para>Specifies to return only these tagged resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CrawlerNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListCrawlersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListCrawlersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlerNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet">
            <summary>
            Returns all the crawls of a specified crawler. Returns only the crawls that have occurred
            since the launch date of the crawler history feature, and only retains up to 12 months
            of crawls. Older crawls will not be returned.
            
             
            <para>
            You may use this API to:
            </para><ul><li><para>
            Retrive all the crawls of a specified crawler.
            </para></li><li><para>
            Retrieve all the crawls of a specified crawler within a limited count.
            </para></li><li><para>
            Retrieve all the crawls of a specified crawler in a specific time range.
            </para></li><li><para>
            Retrieve all the crawls of a specified crawler with a particular state, crawl ID,
            or DPU hour value.
            </para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.CrawlerName">
            <summary>
            <para>
            <para>The name of the crawler whose runs you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters the crawls by the criteria you specify in a list of <code>CrawlsFilter</code>
            objects.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return. The default is 20, and maximum is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Crawls'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListCrawlsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListCrawlsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CrawlerName parameter.
            The -PassThru parameter is deprecated, use -Select '^CrawlerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECrawlListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeCmdlet">
            <summary>
            Retrieves the details of a custom pattern by specifying its name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the custom pattern that you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetCustomEntityTypeResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetCustomEntityTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeListCmdlet">
            <summary>
            Lists all the custom patterns that have been created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeListCmdlet.NextToken">
            <summary>
            <para>
            <para>A paginated token to offset the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomEntityTypes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListCustomEntityTypesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListCustomEntityTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUECustomEntityTypeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseCmdlet">
            <summary>
            Retrieves the definition of a specified database.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the database resides. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseCmdlet.Name">
            <summary>
            <para>
            <para>The name of the database to retrieve. For Hive compatibility, this should be all lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Database'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDatabaseResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDatabaseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet">
            <summary>
            Retrieves all databases defined in a given Data Catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog from which to retrieve <code>Databases</code>. If none
            is provided, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.ResourceShareType">
            <summary>
            <para>
            <para>Allows you to specify that you want to list the databases shared with your account.
            The allowable values are <code>FOREIGN</code> or <code>ALL</code>. </para><ul><li><para>If set to <code>FOREIGN</code>, will list the databases shared with your account.
            </para></li><li><para>If set to <code>ALL</code>, will list the databases shared with your account, as well
            as the databases in yor local account. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of databases to return in one response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatabaseList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDatabasesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDatabasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDatabaseListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataCatalogEncryptionSettingCmdlet">
            <summary>
            Retrieves the security configuration for a specified catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataCatalogEncryptionSettingCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog to retrieve the security configuration for. If none is
            provided, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataCatalogEncryptionSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DataCatalogEncryptionSettings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDataCatalogEncryptionSettingsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDataCatalogEncryptionSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataCatalogEncryptionSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataflowGraphCmdlet">
            <summary>
            Transforms a Python script into a directed acyclic graph (DAG).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataflowGraphCmdlet.PythonScript">
            <summary>
            <para>
            <para>The Python script to transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataflowGraphCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDataflowGraphResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDataflowGraphResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDataflowGraphCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PythonScript parameter.
            The -PassThru parameter is deprecated, use -Select '^PythonScript' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointCmdlet">
            <summary>
            Retrieves information about a specified development endpoint.
            
             <note><para>
            When you create a development endpoint in a virtual private cloud (VPC), Glue returns
            only a private IP address, and the public IP address field is not populated. When
            you create a non-VPC development endpoint, Glue returns only a public IP address.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointCmdlet.EndpointName">
            <summary>
            <para>
            <para>Name of the <code>DevEndpoint</code> to retrieve information for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevEndpoint'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDevEndpointResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDevEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointName parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointBatchCmdlet">
            <summary>
            Returns a list of resource metadata for a given list of development endpoint names.
            After calling the <code>ListDevEndpoints</code> operation, you can call this operation
            to access the data to which you have been granted permissions. This operation supports
            all IAM permissions, including permission conditions that uses tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointBatchCmdlet.DevEndpointName">
            <summary>
            <para>
            <para>The list of <code>DevEndpoint</code> names, which might be the names returned from
            the <code>ListDevEndpoint</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetDevEndpointsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetDevEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointListCmdlet">
            <summary>
            Retrieves all the development endpoints in this AWS account.
            
             <note><para>
            When you create a development endpoint in a virtual private cloud (VPC), Glue returns
            only a private IP address and the public IP address field is not populated. When you
            create a non-VPC development endpoint, Glue returns only a public IP address.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of information to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevEndpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetDevEndpointsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetDevEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet">
            <summary>
            Retrieves the names of all <code>DevEndpoint</code> resources in this Amazon Web Services
            account, or the resources with the specified tag. This operation allows you to see
            which resources are available in your account, and their names.
            
             
            <para>
            This operation takes the optional <code>Tags</code> field, which you can use as a
            filter on the response so that tagged resources can be retrieved as a group. If you
            choose to use tags filtering, only resources with the tag are retrieved.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.Tag">
            <summary>
            <para>
            <para>Specifies to return only these tagged resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DevEndpointNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListDevEndpointsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListDevEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEDevEndpointNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGetCustomEntityTypeCmdlet">
            <summary>
            Retrieves the details for the custom patterns specified by a list of names.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGetCustomEntityTypeCmdlet.Name">
            <summary>
            <para>
            <para>A list of names of the custom patterns that you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGetCustomEntityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetCustomEntityTypesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetCustomEntityTypesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGluePolicyListCmdlet">
            <summary>
            Retrieves the resource policies set on individual resources by Resource Access Manager
            during cross-account permission grants. Also retrieves the Data Catalog resource policy.
            
             
            <para>
            If you enabled metadata encryption in Data Catalog settings, and you do not have permission
            on the KMS key, the operation can't return the Data Catalog resource policy.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGluePolicyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGluePolicyListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGluePolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GetResourcePoliciesResponseList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetResourcePoliciesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetResourcePoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEGluePolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobCmdlet">
            <summary>
            Retrieves an existing job definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Job'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetJobResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBatchCmdlet">
            <summary>
            Returns a list of resource metadata for a given list of job names. After calling the
            <code>ListJobs</code> operation, you can call this operation to access the data to
            which you have been granted permissions. This operation supports all IAM permissions,
            including permission conditions that uses tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBatchCmdlet.JobName">
            <summary>
            <para>
            <para>A list of job names, which might be the names returned from the <code>ListJobs</code>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetJobsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBookmarkCmdlet">
            <summary>
            Returns information on a job bookmark entry.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBookmarkCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job in question.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBookmarkCmdlet.RunId">
            <summary>
            <para>
            <para>The unique run identifier associated with this job run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBookmarkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobBookmarkEntry'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetJobBookmarkResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetJobBookmarkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobBookmarkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobListCmdlet">
            <summary>
            Retrieves all current job definitions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetJobsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet">
            <summary>
            Retrieves the names of all job resources in this Amazon Web Services account, or the
            resources with the specified tag. This operation allows you to see which resources
            are available in your account, and their names.
            
             
            <para>
            This operation takes the optional <code>Tags</code> field, which you can use as a
            filter on the response so that tagged resources can be retrieved as a group. If you
            choose to use tags filtering, only resources with the tag are retrieved.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.Tag">
            <summary>
            <para>
            <para>Specifies to return only these tagged resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListJobsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Tag parameter.
            The -PassThru parameter is deprecated, use -Select '^Tag' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet">
            <summary>
            Retrieves the metadata for a given job run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet.JobName">
            <summary>
            <para>
            <para>Name of the job definition being run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet.PredecessorsIncluded">
            <summary>
            <para>
            <para>True if a list of predecessor runs should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the job run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobRun'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetJobRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetJobRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet">
            <summary>
            Retrieves metadata for all runs of a given job definition.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition for which to retrieve all job runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobRuns'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetJobRunsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetJobRunsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEJobRunListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet">
            <summary>
            Creates mappings.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet.Location">
            <summary>
            <para>
            <para>Parameters for the mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet.Sink">
            <summary>
            <para>
            <para>A list of target tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet.Source">
            <summary>
            <para>
            <para>Specifies the source table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Mapping'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetMappingResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetMappingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMappingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Source parameter.
            The -PassThru parameter is deprecated, use -Select '^Source' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunCmdlet">
            <summary>
            Gets details for a specific task run on a machine learning transform. Machine learning
            task runs are asynchronous tasks that Glue runs on your behalf as part of various
            machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code>
            with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunCmdlet.TaskRunId">
            <summary>
            <para>
            <para>The unique identifier of the task run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetMLTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetMLTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskRunId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskRunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet">
            <summary>
            Gets a list of runs for a machine learning transform. Machine learning task runs are
            asynchronous tasks that Glue runs on your behalf as part of various machine learning
            workflows. You can get a sortable, filterable list of machine learning task runs by
            calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code>
            and other optional parameters as documented in this section.
            
             
            <para>
            This operation returns a list of historic runs and must be paginated.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Sort_Column">
            <summary>
            <para>
            <para>The column to be used to sort the list of task runs for the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Sort_SortDirection">
            <summary>
            <para>
            <para>The sort direction to be used to sort the list of task runs for the machine learning
            transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Filter_StartedAfter">
            <summary>
            <para>
            <para>Filter on task runs started after this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Filter_StartedBefore">
            <summary>
            <para>
            <para>Filter on task runs started before this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Filter_Status">
            <summary>
            <para>
            <para>The current status of the task run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Filter_TaskRunType">
            <summary>
            <para>
            <para>The type of task run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return. </para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token for pagination of the results. The default is empty.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskRuns'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetMLTaskRunsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetMLTaskRunsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTaskRunListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformCmdlet">
            <summary>
            Gets an Glue machine learning transform artifact and all its corresponding metadata.
            Machine learning transforms are a special type of transform that use machine learning
            to learn the details of the transformation to be performed by learning from examples
            provided by humans. These transformations are then saved by Glue. You can retrieve
            their metadata by calling <code>GetMLTransform</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the transform, generated at the time that the transform was
            created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetMLTransformResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetMLTransformResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet">
            <summary>
            Retrieves a sortable, filterable list of existing Glue machine learning transforms
            in this Amazon Web Services account, or the resources with the specified tag. This
            operation takes the optional <code>Tags</code> field, which you can use as a filter
            of the responses so that tagged resources can be retrieved as a group. If you choose
            to use tag filtering, only resources with the tags are retrieved.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Sort_Column">
            <summary>
            <para>
            <para>The column to be used in the sorting criteria that are associated with the machine
            learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_CreatedAfter">
            <summary>
            <para>
            <para>The time and date after which the transforms were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_CreatedBefore">
            <summary>
            <para>
            <para>The time and date before which the transforms were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_GlueVersion">
            <summary>
            <para>
            <para>This value determines which version of Glue this machine learning transform is compatible
            with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue
            compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue
            Versions</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_LastModifiedAfter">
            <summary>
            <para>
            <para>Filter on transforms last modified after this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_LastModifiedBefore">
            <summary>
            <para>
            <para>Filter on transforms last modified before this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_Name">
            <summary>
            <para>
            <para>A unique transform name that is used to filter the machine learning transforms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_Schema">
            <summary>
            <para>
            <para>Filters on datasets with a specific schema. The <code>Map&lt;Column, Type&gt;</code>
            object is an array of key-value pairs representing the schema this transform accepts,
            where <code>Column</code> is the name of a column, and <code>Type</code> is the type
            of the data such as an integer or string. Has an upper bound of 100 columns.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Sort_SortDirection">
            <summary>
            <para>
            <para>The sort direction to be used in the sorting criteria that are associated with the
            machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_Status">
            <summary>
            <para>
            <para>Filters the list of machine learning transforms by the last known status of the transforms
            (to indicate whether a transform can be used or not). One of "NOT_READY", "READY",
            or "DELETING".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Tag">
            <summary>
            <para>
            <para>Specifies to return only these tagged resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Filter_TransformType">
            <summary>
            <para>
            <para>The type of machine learning transform that is used to filter the machine learning
            transforms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransformIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListMLTransformsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListMLTransformsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformIdentifierCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet">
            <summary>
            Gets a sortable, filterable list of existing Glue machine learning transforms. Machine
            learning transforms are a special type of transform that use machine learning to learn
            the details of the transformation to be performed by learning from examples provided
            by humans. These transformations are then saved by Glue, and you can retrieve their
            metadata by calling <code>GetMLTransforms</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Sort_Column">
            <summary>
            <para>
            <para>The column to be used in the sorting criteria that are associated with the machine
            learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_CreatedAfter">
            <summary>
            <para>
            <para>The time and date after which the transforms were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_CreatedBefore">
            <summary>
            <para>
            <para>The time and date before which the transforms were created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_GlueVersion">
            <summary>
            <para>
            <para>This value determines which version of Glue this machine learning transform is compatible
            with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue
            compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue
            Versions</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_LastModifiedAfter">
            <summary>
            <para>
            <para>Filter on transforms last modified after this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_LastModifiedBefore">
            <summary>
            <para>
            <para>Filter on transforms last modified before this date.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_Name">
            <summary>
            <para>
            <para>A unique transform name that is used to filter the machine learning transforms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_Schema">
            <summary>
            <para>
            <para>Filters on datasets with a specific schema. The <code>Map&lt;Column, Type&gt;</code>
            object is an array of key-value pairs representing the schema this transform accepts,
            where <code>Column</code> is the name of a column, and <code>Type</code> is the type
            of the data such as an integer or string. Has an upper bound of 100 columns.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Sort_SortDirection">
            <summary>
            <para>
            <para>The sort direction to be used in the sorting criteria that are associated with the
            machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_Status">
            <summary>
            <para>
            <para>Filters the list of machine learning transforms by the last known status of the transforms
            (to indicate whether a transform can be used or not). One of "NOT_READY", "READY",
            or "DELETING".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Filter_TransformType">
            <summary>
            <para>
            <para>The type of machine learning transform that is used to filter the machine learning
            transforms.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.NextToken">
            <summary>
            <para>
            <para>A paginated token to offset the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Transforms'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetMLTransformsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetMLTransformsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEMLTransformListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet">
            <summary>
            Retrieves information about a specified partition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partition in question resides. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partition resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.PartitionValue">
            <summary>
            <para>
            <para>The values that define the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partition's table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Partition'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetPartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetPartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet">
            <summary>
            Retrieves partitions in a batch request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.PartitionsToGet">
            <summary>
            <para>
            <para>A list of partition values identifying the partitions to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetPartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetPartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet">
            <summary>
            Retrieves the partition indexes associated with a table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.CatalogId">
            <summary>
            <para>
            <para>The catalog ID where the table resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.DatabaseName">
            <summary>
            <para>
            <para>Specifies the name of a database from which you want to retrieve partition indexes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.TableName">
            <summary>
            <para>
            <para>Specifies the name of a table for which you want to retrieve the partition indexes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, included if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PartitionIndexDescriptorList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetPartitionIndexesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetPartitionIndexesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionIndexCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet">
            <summary>
            Retrieves information about the partitions in a table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.ExcludeColumnSchema">
            <summary>
            <para>
            <para>When true, specifies not returning the partition column schema. Useful when you are
            interested only in other partition attributes such as partition values or location.
            This approach avoids the problem of a large response by not returning duplicate data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.Expression">
            <summary>
            <para>
            <para>An expression that filters the partitions to be returned.</para><para>The expression uses SQL syntax similar to the SQL <code>WHERE</code> filter clause.
            The SQL statement parser <a href="http://jsqlparser.sourceforge.net/home.php">JSQLParser</a>
            parses the expression. </para><para><i>Operators</i>: The following are the operators that you can use in the <code>Expression</code>
            API call:</para><dl><dt>=</dt><dd><para>Checks whether the values of the two operands are equal; if yes, then the condition
            becomes true.</para><para>Example: Assume 'variable a' holds 10 and 'variable b' holds 20. </para><para>(a = b) is not true.</para></dd><dt>&lt; &gt;</dt><dd><para>Checks whether the values of two operands are equal; if the values are not equal,
            then the condition becomes true.</para><para>Example: (a &lt; &gt; b) is true.</para></dd><dt>&gt;</dt><dd><para>Checks whether the value of the left operand is greater than the value of the right
            operand; if yes, then the condition becomes true.</para><para>Example: (a &gt; b) is not true.</para></dd><dt>&lt;</dt><dd><para>Checks whether the value of the left operand is less than the value of the right operand;
            if yes, then the condition becomes true.</para><para>Example: (a &lt; b) is true.</para></dd><dt>&gt;=</dt><dd><para>Checks whether the value of the left operand is greater than or equal to the value
            of the right operand; if yes, then the condition becomes true.</para><para>Example: (a &gt;= b) is not true.</para></dd><dt>&lt;=</dt><dd><para>Checks whether the value of the left operand is less than or equal to the value of
            the right operand; if yes, then the condition becomes true.</para><para>Example: (a &lt;= b) is true.</para></dd><dt>AND, OR, IN, BETWEEN, LIKE, NOT, IS NULL</dt><dd><para>Logical operators.</para></dd></dl><para><i>Supported Partition Key Types</i>: The following are the supported partition keys.</para><ul><li><para><code>string</code></para></li><li><para><code>date</code></para></li><li><para><code>timestamp</code></para></li><li><para><code>int</code></para></li><li><para><code>bigint</code></para></li><li><para><code>long</code></para></li><li><para><code>tinyint</code></para></li><li><para><code>smallint</code></para></li><li><para><code>decimal</code></para></li></ul><para>If an type is encountered that is not valid, an exception is thrown. </para><para>The following list shows the valid operators on each type. When you define a crawler,
            the <code>partitionKey</code> type is created as a <code>STRING</code>, to be compatible
            with the catalog partitions. </para><para><i>Sample API Call</i>: </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.QueryAsOfTime">
            <summary>
            <para>
            <para>The time as of when to read the partition contents. If not set, the most recent transaction
            commit time will be used. Cannot be specified along with <code>TransactionId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.Segment">
            <summary>
            <para>
            <para>The segment of the table's partitions to scan in this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to read the partition contents.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of partitions to return in a single response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is not the first call to retrieve these partitions.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Partitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetPartitionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetPartitionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPartitionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet">
            <summary>
            Gets code to perform a specified mapping.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.AdditionalPlanOptionsMap">
            <summary>
            <para>
            <para>A map to hold additional optional key-value parameters.</para><para>Currently, these key-value pairs are supported:</para><ul><li><para><code>inferSchema</code>  —  Specifies whether to set <code>inferSchema</code> to
            true or false for the default script generated by an Glue job. For example, to set
            <code>inferSchema</code> to true, pass the following key value pair:</para><para><code>--additional-plan-options-map '{"inferSchema":"true"}'</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Language">
            <summary>
            <para>
            <para>The programming language of the code to perform the mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Location">
            <summary>
            <para>
            <para>The parameters for the mapping.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Mapping">
            <summary>
            <para>
            <para>The list of mappings from a source table to target tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Sink">
            <summary>
            <para>
            <para>The target tables.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Source">
            <summary>
            <para>
            <para>The source table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetPlanResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetPlanResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEPlanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Source parameter.
            The -PassThru parameter is deprecated, use -Select '^Source' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryCmdlet">
            <summary>
            Describes the specified registry in detail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryCmdlet.RegistryId_RegistryArn">
            <summary>
            <para>
            <para>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryCmdlet.RegistryId_RegistryName">
            <summary>
            <para>
            <para>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetRegistryResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetRegistryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RegistryId_RegistryArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RegistryId_RegistryArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryListCmdlet">
            <summary>
            Returns a list of registries that you have created, with minimal registry information.
            Registries in the <code>Deleting</code> status will not be included in the results.
            Empty results will be returned if there are no registries available.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results required per page. If the value is not supplied, this will
            be defaulted to 25 per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Registries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListRegistriesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListRegistriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUERegistryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEResourcePolicyCmdlet">
            <summary>
            Retrieves a specified resource policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEResourcePolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the Glue resource for which to retrieve the resource policy. If not supplied,
            the Data Catalog resource policy is returned. Use <code>GetResourcePolicies</code>
            to view all existing resource policies. For more information see <a href="https://docs.aws.amazon.com/glue/latest/dg/glue-specifying-resource-arns.html">Specifying
            Glue Resource ARNs</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetResourcePolicyResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet">
            <summary>
            Describes the specified schema in detail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSchemaResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaId_SchemaArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaId_SchemaArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet">
            <summary>
            Retrieves a schema by the <code>SchemaDefinition</code>. The schema definition is
            sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within
            the scope of the <code>SchemaName</code> or ARN (or the default registry, if none
            is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error
            is returned. Schema versions in <code>Deleted</code> statuses will not be included
            in the results.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.SchemaDefinition">
            <summary>
            <para>
            <para>The definition of the schema for which schema details are required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSchemaByDefinitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSchemaByDefinitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaByDefinitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaDefinition parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaDefinition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet">
            <summary>
            Returns a list of schemas with minimal details. Schemas in Deleting status will not
            be included in the results. Empty results will be returned if there are no schemas
            available.
            
             
            <para>
            When the <code>RegistryId</code> is not provided, all the schemas across registries
            will be part of the API response.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.RegistryId_RegistryArn">
            <summary>
            <para>
            <para>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.RegistryId_RegistryName">
            <summary>
            <para>
            <para>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results required per page. If the value is not supplied, this will
            be defaulted to 25 per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Schemas'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListSchemasResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListSchemasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet">
            <summary>
            Get the specified schema by its unique ID assigned when a version of the schema is
            created or registered. Schema versions in Deleted status will not be included in the
            results.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaVersionId">
            <summary>
            <para>
            <para>The <code>SchemaVersionId</code> of the schema version. This field is required for
            fetching by schema ID. Either this or the <code>SchemaId</code> wrapper has to be
            provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.SchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSchemaVersionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSchemaVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet">
            <summary>
            Returns a list of schema versions that you have created, with minimal information.
            Schema versions in Deleted status will not be included in the results. Empty results
            will be returned if there are no schema versions available.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results required per page. If the value is not supplied, this will
            be defaulted to 25 per page.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Schemas'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListSchemaVersionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListSchemaVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaId_SchemaArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaId_SchemaArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet">
            <summary>
            Fetches the schema version difference in the specified difference type between two
            stored schema versions in the Schema Registry.
            
             
            <para>
            This API allows you to compare two schema versions between two schema definitions
            under the same schema.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.FirstSchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SecondSchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SchemaDiffType">
            <summary>
            <para>
            <para>Refers to <code>SYNTAX_DIFF</code>, which is the currently supported diff type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.FirstSchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.SecondSchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Diff'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSchemaVersionsDiffResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSchemaVersionsDiffResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionsDiffCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaDiffType parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaDiffType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionValidityCmdlet">
            <summary>
            Validates the supplied schema. This call has no side effects, it simply validates
            using the supplied schema using <code>DataFormat</code> as the format. Since it does
            not take a schema set name, no compatibility checks are performed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionValidityCmdlet.DataFormat">
            <summary>
            <para>
            <para>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code>
            and <code>PROTOBUF</code> are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionValidityCmdlet.SchemaDefinition">
            <summary>
            <para>
            <para>The definition of the schema that has to be validated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionValidityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CheckSchemaVersionValidityResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CheckSchemaVersionValidityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESchemaVersionValidityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaDefinition parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaDefinition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationCmdlet">
            <summary>
            Retrieves a specified security configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the security configuration to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSecurityConfigurationResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSecurityConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationListCmdlet">
            <summary>
            Retrieves a list of all security configurations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecurityConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSecurityConfigurationsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSecurityConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESecurityConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionCmdlet">
            <summary>
            Retrieves the session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the session. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Session'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetSessionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet">
            <summary>
            Retrieve a list of sessions.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.Tag">
            <summary>
            <para>
            <para>Tags belonging to the session. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results, or null if there are no more result. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListSessionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListSessionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RequestOrigin parameter.
            The -PassThru parameter is deprecated, use -Select '^RequestOrigin' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUESessionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet">
            <summary>
            Retrieves the statement.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet.Id">
            <summary>
            <para>
            <para>The Id of the statement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet.SessionId">
            <summary>
            <para>
            <para>The Session ID of the statement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statement'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetStatementResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetStatementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet">
            <summary>
            Lists statements for the session.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request to list statements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.SessionId">
            <summary>
            <para>
            <para>The Session ID of the statements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Statements'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListStatementsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListStatementsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SessionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SessionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEStatementListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet">
            <summary>
            Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the table resides. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the database in the catalog in which the table resides. For Hive compatibility,
            this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.Name">
            <summary>
            <para>
            <para>The name of the table for which to retrieve the definition. For Hive compatibility,
            this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.QueryAsOfTime">
            <summary>
            <para>
            <para>The time as of when to read the table contents. If not set, the most recent transaction
            commit time will be used. Cannot be specified along with <code>TransactionId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to read the table contents. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Table'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTableResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet">
            <summary>
            Retrieves the definitions of some or all of the tables in a given <code>Database</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database in the catalog whose tables to list. For Hive compatibility, this name
            is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.Expression">
            <summary>
            <para>
            <para>A regular expression pattern. If present, only those tables whose names match the
            pattern are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.QueryAsOfTime">
            <summary>
            <para>
            <para>The time as of when to read the table contents. If not set, the most recent transaction
            commit time will be used. Cannot be specified along with <code>TransactionId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to read the table contents.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of tables to return in a single response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, included if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTablesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTablesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet">
            <summary>
            Retrieves a specified version of a table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database in the catalog in which the table resides. For Hive compatibility, this
            name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table. For Hive compatibility, this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID value of the table version to be retrieved. A <code>VersionID</code> is a string
            representation of an integer. Each version is incremented by 1. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableVersion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTableVersionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTableVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet">
            <summary>
            Retrieves a list of strings that identify available versions of a specified table.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database in the catalog in which the table resides. For Hive compatibility, this
            name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table. For Hive compatibility, this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of table versions to return in one response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is not the first call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TableVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTableVersionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTableVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETableVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETagCmdlet">
            <summary>
            Retrieves a list of tags associated with a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource for which to retrieve tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTagsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerCmdlet">
            <summary>
            Retrieves the definition of a trigger.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Trigger'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerBatchCmdlet">
            <summary>
            Returns a list of resource metadata for a given list of trigger names. After calling
            the <code>ListTriggers</code> operation, you can call this operation to access the
            data to which you have been granted permissions. This operation supports all IAM permissions,
            including permission conditions that uses tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerBatchCmdlet.TriggerName">
            <summary>
            <para>
            <para>A list of trigger names, which may be the names returned from the <code>ListTriggers</code>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetTriggersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet">
            <summary>
            Gets all the triggers associated with a job.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet.DependentJobName">
            <summary>
            <para>
            <para>The name of the job to retrieve triggers for. The trigger that can start this job
            is returned, and if there is no such trigger, all triggers are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Triggers'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetTriggersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet">
            <summary>
            Retrieves the names of all trigger resources in this Amazon Web Services account,
            or the resources with the specified tag. This operation allows you to see which resources
            are available in your account, and their names.
            
             
            <para>
            This operation takes the optional <code>Tags</code> field, which you can use as a
            filter on the response so that tagged resources can be retrieved as a group. If you
            choose to use tags filtering, only resources with the tag are retrieved.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.DependentJobName">
            <summary>
            <para>
            <para> The name of the job for which to retrieve triggers. The trigger that can start this
            job is returned. If there is no such trigger, all triggers are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.Tag">
            <summary>
            <para>
            <para>Specifies to return only these tagged resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TriggerNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListTriggersResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListTriggersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DependentJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^DependentJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUETriggerNameListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet" -->
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.AuditContext_AdditionalAuditContext">
            <summary>
            <para>
            <para>The context for the audit..</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.AuditContext_AllColumnsRequested">
            <summary>
            <para>
            <para>All columns request for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.CatalogId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.DatabaseName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.PartitionValue">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.AuditContext_RequestedColumn">
            <summary>
            <para>
            <para>The requested columns for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.SupportedPermissionType">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.TableName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetUnfilteredPartitionMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetUnfilteredPartitionMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet">
            <summary>
            <br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.AuditContext_AdditionalAuditContext">
            <summary>
            <para>
            <para>The context for the audit..</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.AuditContext_AllColumnsRequested">
            <summary>
            <para>
            <para>All columns request for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.CatalogId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.DatabaseName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.Expression">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.AuditContext_RequestedColumn">
            <summary>
            <para>
            <para>The requested columns for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.Segment">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.SupportedPermissionType">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.TableName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.MaxResult">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.NextToken">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnfilteredPartitions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetUnfilteredPartitionsMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetUnfilteredPartitionsMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredPartitionsMetadataCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet" -->
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.AuditContext_AdditionalAuditContext">
            <summary>
            <para>
            <para>The context for the audit..</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.AuditContext_AllColumnsRequested">
            <summary>
            <para>
            <para>All columns request for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.CatalogId">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.DatabaseName">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.Name">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.AuditContext_RequestedColumn">
            <summary>
            <para>
            <para>The requested columns for audit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.SupportedPermissionType">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetUnfilteredTableMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetUnfilteredTableMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUnfilteredTableMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet">
            <summary>
            Retrieves a specified function definition from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the function to be retrieved is located. If none
            is provided, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the function is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet.FunctionName">
            <summary>
            <para>
            <para>The name of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserDefinedFunction'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetUserDefinedFunctionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetUserDefinedFunctionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet">
            <summary>
            Retrieves multiple function definitions from the Data Catalog.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the functions to be retrieved are located. If none
            is provided, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the functions are located. If none is provided,
            functions from all the databases across the catalog will be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.Pattern">
            <summary>
            <para>
            <para>An optional function-name pattern string that filters the function definitions returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of functions to return in one response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation call.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserDefinedFunctions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetUserDefinedFunctionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetUserDefinedFunctionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEUserDefinedFunctionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowCmdlet">
            <summary>
            Retrieves resource metadata for a workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowCmdlet.IncludeGraph">
            <summary>
            <para>
            <para>Specifies whether to include a graph when returning the workflow resource metadata.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowCmdlet.Name">
            <summary>
            <para>
            <para>The name of the workflow to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workflow'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetWorkflowResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowBatchCmdlet">
            <summary>
            Returns a list of resource metadata for a given list of workflow names. After calling
            the <code>ListWorkflows</code> operation, you can call this operation to access the
            data to which you have been granted permissions. This operation supports all IAM permissions,
            including permission conditions that uses tags.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowBatchCmdlet.IncludeGraph">
            <summary>
            <para>
            <para>Specifies whether to include a graph when returning the workflow resource metadata.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowBatchCmdlet.Name">
            <summary>
            <para>
            <para>A list of workflow names, which may be the names returned from the <code>ListWorkflows</code>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchGetWorkflowsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchGetWorkflowsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowListCmdlet">
            <summary>
            Lists names of workflows created in the account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum size of a list to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowListCmdlet.NextToken">
            <summary>
            <para>
            <para>A continuation token, if this is a continuation request.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workflows'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ListWorkflowsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ListWorkflowsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet">
            <summary>
            Retrieves the metadata for a given workflow run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet.IncludeGraph">
            <summary>
            <para>
            <para>Specifies whether to include the workflow graph in response or not.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow being run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the workflow run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Run'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetWorkflowRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetWorkflowRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet">
            <summary>
            Retrieves metadata for all runs of a given workflow.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.IncludeGraph">
            <summary>
            <para>
            <para>Specifies whether to include the workflow graph in response or not.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow whose metadata of runs should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of workflow runs to be included in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.NextToken">
            <summary>
            <para>
            <para>The maximum size of the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Runs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetWorkflowRunsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetWorkflowRunsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunPropertyCmdlet">
            <summary>
            Retrieves the workflow run properties which were set during the run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunPropertyCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow which was run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunPropertyCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the workflow run whose run properties should be returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RunProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.GetWorkflowRunPropertiesResponse).
            Specifying the name of a property of type Amazon.Glue.Model.GetWorkflowRunPropertiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.GetGLUEWorkflowRunPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.ImportGLUECatalogCmdlet">
            <summary>
            Imports an existing Amazon Athena Data Catalog to Glue.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ImportGLUECatalogCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the catalog to import. Currently, this should be the Amazon Web Services
            account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ImportGLUECatalogCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ImportCatalogToGlueResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ImportGLUECatalogCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ImportGLUECatalogCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet">
            <summary>
            Executes the statement.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.Code">
            <summary>
            <para>
            <para>The statement code to be run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.SessionId">
            <summary>
            <para>
            <para>The Session Id of the statement to be run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Id'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.RunStatementResponse).
            Specifying the name of a property of type Amazon.Glue.Model.RunStatementResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Code parameter.
            The -PassThru parameter is deprecated, use -Select '^Code' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.InvokeGLUEStatementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet">
            <summary>
            Registers a blueprint with Glue.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.BlueprintLocation">
            <summary>
            <para>
            <para>Specifies a path in Amazon S3 where the blueprint is published.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.Description">
            <summary>
            <para>
            <para>A description of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.Name">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be applied to this blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateBlueprintResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateBlueprintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEBlueprintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet">
            <summary>
            Creates a classifier in the user's account. This can be a <code>GrokClassifier</code>,
            an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>,
            depending on which field of the request is present.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_AllowSingleColumn">
            <summary>
            <para>
            <para>Enables the processing of files that contain only one column.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_ContainsHeader">
            <summary>
            <para>
            <para>Indicates whether the CSV file contains a header.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_Delimiter">
            <summary>
            <para>
            <para>A custom symbol to denote what separates each column entry in the row.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_DisableValueTrimming">
            <summary>
            <para>
            <para>Specifies not to trim values before identifying the type of column values. The default
            value is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.GrokClassifier">
            <summary>
            <para>
            <para>A <code>GrokClassifier</code> object specifying the classifier to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_Header">
            <summary>
            <para>
            <para>A list of strings representing column names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.JsonClassifier_JsonPath">
            <summary>
            <para>
            <para>A <code>JsonPath</code> string defining the JSON data for the classifier to classify.
            Glue supports a subset of JsonPath, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing
            JsonPath Custom Classifiers</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_Name">
            <summary>
            <para>
            <para>The name of the classifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.JsonClassifier_Name">
            <summary>
            <para>
            <para>The name of the classifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.CsvClassifier_QuoteSymbol">
            <summary>
            <para>
            <para>A custom symbol to denote what combines content into a single column value. Must be
            different from the column delimiter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.XMLClassifier">
            <summary>
            <para>
            <para>An <code>XMLClassifier</code> object specifying the classifier to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateClassifierResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet">
            <summary>
            Creates a connection definition in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which to create the connection. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.ConnectionInput">
            <summary>
            <para>
            <para>A <code>ConnectionInput</code> object defining the connection to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.Tag">
            <summary>
            <para>
            <para>The tags you assign to the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionInput parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet">
            <summary>
            Creates a new crawler with specified targets, role, configuration, and optional schedule.
            At least one crawl target must be specified, in the <code>s3Targets</code> field,
            the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.LakeFormationConfiguration_AccountId">
            <summary>
            <para>
            <para>Required for cross account crawls. For same account crawls as the target data, this
            can be left as null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Classifier">
            <summary>
            <para>
            <para>A list of custom classifiers that the user has registered. By default, all built-in
            classifiers are included in a crawl, but these custom classifiers always override
            the default classifiers for a given classification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Configuration">
            <summary>
            <para>
            <para>Crawler configuration information. This versioned JSON string allows users to specify
            aspects of a crawler's behavior. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring
            a Crawler</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.LineageConfiguration_CrawlerLineageSetting">
            <summary>
            <para>
            <para>Specifies whether data lineage is enabled for the crawler. Valid values are:</para><ul><li><para>ENABLE: enables data lineage for the crawler</para></li><li><para>DISABLE: disables data lineage for the crawler</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.CrawlerSecurityConfiguration">
            <summary>
            <para>
            <para>The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The Glue database where results are written, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Description">
            <summary>
            <para>
            <para>A description of the new crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>Name of the new crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.RecrawlPolicy_RecrawlBehavior">
            <summary>
            <para>
            <para>Specifies whether to crawl the entire dataset again or to crawl only folders that
            were added since the last crawler run.</para><para>A value of <code>CRAWL_EVERYTHING</code> specifies crawling the entire dataset again.</para><para>A value of <code>CRAWL_NEW_FOLDERS_ONLY</code> specifies crawling only folders that
            were added since the last crawler run.</para><para>A value of <code>CRAWL_EVENT_MODE</code> specifies crawling only the changes identified
            by Amazon S3 events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Role">
            <summary>
            <para>
            <para>The IAM role or Amazon Resource Name (ARN) of an IAM role used by the new crawler
            to access customer resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Schedule">
            <summary>
            <para>
            <para>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based
            Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15
            UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.SchemaChangePolicy">
            <summary>
            <para>
            <para>The policy for the crawler's update and deletion behavior.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.TablePrefix">
            <summary>
            <para>
            <para>The table prefix used for catalog tables that are created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to use with this crawler request. You may use tags to limit access to the
            crawler. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon
            Web Services Tags in Glue</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Target">
            <summary>
            <para>
            <para>A list of collection of targets to crawl.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.LakeFormationConfiguration_UseLakeFormationCredential">
            <summary>
            <para>
            <para>Specifies whether to use Lake Formation credentials for the crawler instead of the
            IAM role credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateCrawlerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECrawlerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet">
            <summary>
            Creates a custom pattern that is used to detect sensitive data across the columns
            and rows of your structured data.
            
             
            <para>
            Each custom pattern you create specifies a regular expression and an optional list
            of context words. If no context words are passed only a regular expression is checked.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.ContextWord">
            <summary>
            <para>
            <para>A list of context words. If none of these context words are found within the vicinity
            of the regular expression the data will not be detected as sensitive data.</para><para>If no context words are passed only a regular expression is checked.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.Name">
            <summary>
            <para>
            <para>A name for the custom pattern that allows it to be retrieved or deleted later. This
            name must be unique per Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.RegexString">
            <summary>
            <para>
            <para>A regular expression string that is used for detecting sensitive data in a custom
            pattern.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateCustomEntityTypeResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateCustomEntityTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUECustomEntityTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet">
            <summary>
            Creates a new database in a Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which to create the database. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.DatabaseInput">
            <summary>
            <para>
            <para>The metadata for the database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.Tag">
            <summary>
            <para>
            <para>The tags you assign to the database.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateDatabaseResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseInput parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet">
            <summary>
            Creates a new development endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.Argument">
            <summary>
            <para>
            <para>A map of arguments used to configure the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.EndpointName">
            <summary>
            <para>
            <para>The name to be assigned to the new <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.ExtraJarsS3Path">
            <summary>
            <para>
            <para>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be
            loaded in your <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.ExtraPythonLibsS3Path">
            <summary>
            <para>
            <para>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded
            in your <code>DevEndpoint</code>. Multiple values must be complete paths separated
            by a comma.</para><note><para>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries
            that rely on C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a>
            Python data analysis library, are not yet supported.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.GlueVersion">
            <summary>
            <para>
            <para>Glue version determines the versions of Apache Spark and Python that Glue supports.
            The Python version indicates the version supported for running your ETL scripts on
            development endpoints. </para><para>For more information about the available Glue versions and corresponding Spark and
            Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue
            version</a> in the developer guide.</para><para>Development endpoints that are created without specifying a Glue version default to
            Glue 0.9.</para><para>You can specify a version of Python support for development endpoints by using the
            <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code>
            APIs. If no arguments are provided, the version defaults to Python 2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.NumberOfNode">
            <summary>
            <para>
            <para>The number of Glue Data Processing Units (DPUs) to allocate to this <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>workerType</code> that are allocated to the
            development endpoint.</para><para>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149
            for <code>G.2X</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.PublicKey">
            <summary>
            <para>
            <para>The public key to be used by this <code>DevEndpoint</code> for authentication. This
            attribute is provided for backward compatibility because the recommended attribute
            to use is public keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.PublicKeyList">
            <summary>
            <para>
            <para>A list of public keys to be used by the development endpoints for authentication.
            The use of this attribute is preferred over a single public key because the public
            keys allow you to have a different private key per client.</para><note><para>If you previously created an endpoint with a public key, you must remove that key
            to be able to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API
            with the public key content in the <code>deletePublicKeys</code> attribute, and the
            list of new keys in the <code>addPublicKeys</code> attribute.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.RoleArn">
            <summary>
            <para>
            <para>The IAM role for the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.SecurityConfiguration">
            <summary>
            <para>
            <para>The name of the <code>SecurityConfiguration</code> structure to be used with this
            <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.SecurityGroupId">
            <summary>
            <para>
            <para>Security group IDs for the security groups to be used by the new <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.SubnetId">
            <summary>
            <para>
            <para>The subnet ID for the new <code>DevEndpoint</code> to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint.
            For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon
            Web Services Tags in Glue</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated to the development endpoint. Accepts
            a value of Standard, G.1X, or G.2X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of
            memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li><li><para>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of
            memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li></ul><para>Known issue: when a development endpoint is created with the <code>G.2X</code><code>WorkerType</code>
            configuration, the Spark drivers for the development endpoint will run on 4 vCPU,
            16 GB of memory, and a 64 GB disk. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateDevEndpointResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateDevEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PublicKey parameter.
            The -PassThru parameter is deprecated, use -Select '^PublicKey' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEDevEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet">
            <summary>
            Creates a new job definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_AuthStrategy">
            <summary>
            <para>
            <para>The type of authentication, which can be an authentication token stored in Amazon
            Web Services Secrets Manager, or a personal access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_AuthToken">
            <summary>
            <para>
            <para>The value of an authorization token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_Branch">
            <summary>
            <para>
            <para>An optional branch in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.CodeGenConfigurationNode">
            <summary>
            <para>
            <para>The representation of a directed acyclic graph on which both the Glue Studio visual
            component and Glue Studio code generation is based.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Command">
            <summary>
            <para>
            <para>The <code>JobCommand</code> that runs this job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Connections_Connection">
            <summary>
            <para>
            <para>A list of connections used by the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.DefaultArgument">
            <summary>
            <para>
            <para>The default arguments for this job.</para><para>You can specify arguments here that your own job-execution script consumes, as well
            as arguments that Glue itself consumes.</para><para>Job arguments may be logged. Do not pass plaintext secrets as arguments. Retrieve
            secrets from a Glue Connection, Secrets Manager or other secret management mechanism
            if you intend to keep them within the Job. </para><para>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling
            Glue APIs in Python</a> topic in the developer guide.</para><para>For information about the key-value pairs that Glue consumes to set up your job, see
            the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special
            Parameters Used by Glue</a> topic in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Description">
            <summary>
            <para>
            <para>Description of the job being defined.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.ExecutionClass">
            <summary>
            <para>
            <para>Indicates whether the job is run with a standard or flexible execution class. The
            standard execution-class is ideal for time-sensitive workloads that require fast job
            startup and dedicated resources.</para><para>The flexible execution class is appropriate for time-insensitive jobs whose start
            and completion times may vary. </para><para>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will
            be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution
            class is available for Spark jobs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_Folder">
            <summary>
            <para>
            <para>An optional folder in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.GlueVersion">
            <summary>
            <para>
            <para>Glue version determines the versions of Apache Spark and Python that Glue supports.
            The Python version indicates the version supported for jobs of type Spark. </para><para>For more information about the available Glue versions and corresponding Spark and
            Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue
            version</a> in the developer guide.</para><para>Jobs that are created without specifying a Glue version default to Glue 0.9.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_LastCommitId">
            <summary>
            <para>
            <para>The last commit ID for a commit in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.LogUri">
            <summary>
            <para>
            <para>This field is reserved for future use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.MaxCapacity">
            <summary>
            <para>
            <para>For Glue version 1.0 or earlier jobs, using the standard worker type, the number of
            Glue data processing units (DPUs) that can be allocated when this job runs. A DPU
            is a relative measure of processing power that consists of 4 vCPUs of compute capacity
            and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue
            pricing page</a>.</para><para>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</para><para>The value that can be allocated for <code>MaxCapacity</code> depends on whether you
            are running a Python shell job or an Apache Spark ETL job:</para><ul><li><para>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"),
            you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</para></li><li><para>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl")
            or Apache Spark streaming ETL job (<code>JobCommand.Name</code>="gluestreaming"),
            you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot
            have a fractional DPU allocation.</para></li></ul><para>For Glue version 2.0 jobs, you cannot instead specify a <code>Maximum capacity</code>.
            Instead, you should specify a <code>Worker type</code> and the <code>Number of workers</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.ExecutionProperty_MaxConcurrentRun">
            <summary>
            <para>
            <para>The maximum number of concurrent runs allowed for the job. The default is 1. An error
            is returned when this threshold is reached. The maximum value you can specify is controlled
            by a service limit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.MaxRetry">
            <summary>
            <para>
            <para>The maximum number of times to retry this job if it fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Name">
            <summary>
            <para>
            <para>The name you assign to this job definition. It must be unique in your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.NonOverridableArgument">
            <summary>
            <para>
            <para>Non-overridable arguments for this job, specified as name-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.NotificationProperty_NotifyDelayAfter">
            <summary>
            <para>
            <para>After a job run starts, the number of minutes to wait before sending a job run delay
            notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>workerType</code> that are allocated when
            a job runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_Owner">
            <summary>
            <para>
            <para>The owner of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_Provider">
            <summary>
            <para>
            <para>The provider for the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SourceControlDetails_Repository">
            <summary>
            <para>
            <para>The name of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Role">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the IAM role associated with this job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.SecurityConfiguration">
            <summary>
            <para>
            <para>The name of the <code>SecurityConfiguration</code> structure to be used with this
            job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to use with this job. You may use tags to limit access to the job. For more
            information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon
            Web Services Tags in Glue</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Timeout">
            <summary>
            <para>
            <para>The job timeout in minutes. This is the maximum time that a job run can consume resources
            before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880
            minutes (48 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated when a job runs. Accepts a value of
            Standard, G.1X, G.2X, or G.025X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of
            memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li><li><para>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of
            memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li><li><para>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB
            of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for low volume streaming jobs. This worker type is only available for Glue version
            3.0 streaming jobs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.AllocatedCapacity">
            <summary>
            <para>
            <para>This parameter is deprecated. Use <code>MaxCapacity</code> instead.</para><para>The number of Glue data processing units (DPUs) to allocate to this Job. You can allocate
            a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing
            power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information,
            see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateJobResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Command parameter.
            The -PassThru parameter is deprecated, use -Select '^Command' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet">
            <summary>
            Creates an Glue machine learning transform. This operation creates the transform and
            all the necessary parameters to train it.
            
             
            <para>
            Call this operation as the first step in the process of using a machine learning transform
            (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide
            an optional <code>Description</code>, in addition to the parameters that you want
            to use for your algorithm.
            </para><para>
            You must also specify certain parameters for the tasks that Glue runs on your behalf
            as part of learning from your data and creating a high-quality machine learning transform.
            These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>,
            <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html">Jobs</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.FindMatchesParameters_AccuracyCostTradeoff">
            <summary>
            <para>
            <para>The value that is selected when tuning your transform for a balance between accuracy
            and cost. A value of 0.5 means that the system balances accuracy and cost concerns.
            A value of 1.0 means a bias purely for accuracy, which typically results in a higher
            cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost,
            which results in a less accurate <code>FindMatches</code> transform, sometimes with
            unacceptable accuracy.</para><para>Accuracy measures how well the transform finds true positives and true negatives.
            Increasing accuracy requires more machine resources and cost. But it also results
            in increased recall. </para><para>Cost measures how many compute resources, and thus money, are consumed to run the
            transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Description">
            <summary>
            <para>
            <para>A description of the machine learning transform that is being defined. The default
            is an empty string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.FindMatchesParameters_EnforceProvidedLabel">
            <summary>
            <para>
            <para>The value to switch on or off to force the output to match the provided labels from
            users. If the value is <code>True</code>, the <code>find matches</code> transform
            forces the output to match the provided labels. The results override the normal conflation
            results. If the value is <code>False</code>, the <code>find matches</code> transform
            does not ensure all the labels provided are respected, and the results rely on the
            trained model.</para><para>Note that setting this value to true may increase the conflation execution time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.GlueVersion">
            <summary>
            <para>
            <para>This value determines which version of Glue this machine learning transform is compatible
            with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue
            compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue
            Versions</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.InputRecordTable">
            <summary>
            <para>
            <para>A list of Glue table definitions used by the transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.MlUserDataEncryption_KmsKeyId">
            <summary>
            <para>
            <para>The ID for the customer-provided KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.MaxCapacity">
            <summary>
            <para>
            <para>The number of Glue data processing units (DPUs) that are allocated to task runs for
            this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a
            relative measure of processing power that consists of 4 vCPUs of compute capacity
            and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue
            pricing page</a>. </para><para><code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code>
            and <code>WorkerType</code>.</para><ul><li><para>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code>
            cannot be set.</para></li><li><para>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code>
            can be set.</para></li><li><para>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and
            vice versa).</para></li><li><para><code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</para></li></ul><para>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>,
            the <code>MaxCapacity</code> field is set automatically and becomes read-only.</para><para>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>,
            the <code>MaxCapacity</code> field is set automatically and becomes read-only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.MaxRetry">
            <summary>
            <para>
            <para>The maximum number of times to retry a task for this transform after a task run fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.MlUserDataEncryption_MlUserDataEncryptionMode">
            <summary>
            <para>
            <para>The encryption mode applied to user data. Valid values are:</para><ul><li><para>DISABLED: encryption is disabled</para></li><li><para>SSEKMS: use of server-side encryption with Key Management Service (SSE-KMS) for user
            data stored in Amazon S3.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Name">
            <summary>
            <para>
            <para>The unique name that you give the transform when you create it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>workerType</code> that are allocated when
            this task runs.</para><para>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and
            vice versa).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.FindMatchesParameters_PrecisionRecallTradeoff">
            <summary>
            <para>
            <para>The value selected when tuning your transform for a balance between precision and
            recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for
            precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff,
            choosing values close to 1.0 means very low recall, and choosing values close to 0.0
            results in very low precision.</para><para>The precision metric indicates how often your model is correct when it predicts a
            match. </para><para>The recall metric indicates that for an actual match, how often your model predicts
            the match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.FindMatchesParameters_PrimaryKeyColumnName">
            <summary>
            <para>
            <para>The name of a column that uniquely identifies rows in the source table. Used to help
            identify matching records.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Role">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.
            The required permissions include both Glue service role permissions to Glue resources,
            and Amazon S3 permissions required by the transform. </para><ul><li><para>This role needs Glue service role permissions to allow access to resources in Glue.
            See <a href="https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html">Attach
            a Policy to IAM Users That Access Glue</a>.</para></li><li><para>This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources,
            targets, temporary directory, scripts, and any libraries used by the task run for
            this transform.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to use with this machine learning transform. You may use tags to limit access
            to the machine learning transform. For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon Web Services
            Tags in Glue</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.TransformEncryption_TaskRunSecurityConfigurationName">
            <summary>
            <para>
            <para>The name of the security configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Timeout">
            <summary>
            <para>
            <para>The timeout of the task run for this transform in minutes. This is the maximum time
            that a task run for this transform can consume resources before it is terminated and
            enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Parameters_TransformType">
            <summary>
            <para>
            <para>The type of machine learning transform.</para><para>For information about the types of machine learning transforms, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html">Creating
            Machine Learning Transforms</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated when this task runs. Accepts a value
            of Standard, G.1X, or G.2X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 64GB disk, and 1 executor per worker.</para></li><li><para>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory
            and a 128GB disk, and 1 executor per worker.</para></li></ul><para><code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code>
            and <code>WorkerType</code>.</para><ul><li><para>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code>
            cannot be set.</para></li><li><para>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code>
            can be set.</para></li><li><para>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and
            vice versa).</para></li><li><para><code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransformId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateMLTransformResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateMLTransformResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEMLTransformCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet">
            <summary>
            Creates a new partition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The Amazon Web Services account ID of the catalog in which the partition is to be
            created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the metadata database in which the partition is to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.PartitionInput">
            <summary>
            <para>
            <para>A <code>PartitionInput</code> structure defining the partition to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the metadata table in which the partition is to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreatePartitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PartitionInput parameter.
            The -PassThru parameter is deprecated, use -Select '^PartitionInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet">
            <summary>
            Creates one or more partitions in a batch operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the catalog in which the partition is to be created. Currently, this should
            be the Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the metadata database in which the partition is to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.PartitionInputList">
            <summary>
            <para>
            <para>A list of <code>PartitionInput</code> structures that define the partitions to be
            created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the metadata table in which the partition is to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchCreatePartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchCreatePartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet">
            <summary>
            Creates a specified partition index in an existing table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.CatalogId">
            <summary>
            <para>
            <para>The catalog ID where the table resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.DatabaseName">
            <summary>
            <para>
            <para>Specifies the name of a database in which you want to create a partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.PartitionIndex_IndexName">
            <summary>
            <para>
            <para>The name of the partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.PartitionIndex_Key">
            <summary>
            <para>
            <para>The keys for the partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.TableName">
            <summary>
            <para>
            <para>Specifies the name of a table in which you want to create a partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreatePartitionIndexResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEPartitionIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet">
            <summary>
            Creates a new registry which may be used to hold a collection of schemas.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.Description">
            <summary>
            <para>
            <para>A description of the registry. If description is not provided, there will not be any
            default value for this.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.RegistryName">
            <summary>
            <para>
            <para>Name of the registry to be created of max length of 255, and may only contain letters,
            numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.Tag">
            <summary>
            <para>
            <para>Amazon Web Services tags that contain a key value pair and may be searched by console,
            command line, or API.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateRegistryResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateRegistryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RegistryName parameter.
            The -PassThru parameter is deprecated, use -Select '^RegistryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUERegistryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet">
            <summary>
            Creates a new schema set and registers the schema definition. Returns an error if
            the schema set already exists without actually registering the version.
            
             
            <para>
            When the schema set is created, a version checkpoint will be set to the first version.
            Compatibility mode "DISABLED" restricts any additional schema versions from being
            added after the first schema version. For all other compatibility modes, validation
            of compatibility settings will be applied only from the second version onwards when
            the <code>RegisterSchemaVersion</code> API is used.
            </para><para>
            When this API is called without a <code>RegistryId</code>, this will create an entry
            for a "default-registry" in the registry database tables, if it is not already present.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.Compatibility">
            <summary>
            <para>
            <para>The compatibility mode of the schema. The possible values are:</para><ul><li><para><i>NONE</i>: No compatibility mode applies. You can use this choice in development
            scenarios or if you do not know the compatibility mode that you want to apply to schemas.
            Any new version added will be accepted without undergoing a compatibility check.</para></li><li><para><i>DISABLED</i>: This compatibility choice prevents versioning for a particular schema.
            You can use this choice to prevent future versioning of a schema.</para></li><li><para><i>BACKWARD</i>: This compatibility choice is recommended as it allows data receivers
            to read both the current and one previous schema version. This means that for instance,
            a new schema version cannot drop data fields or change the type of these fields, so
            they can't be read by readers using the previous version.</para></li><li><para><i>BACKWARD_ALL</i>: This compatibility choice allows data receivers to read both
            the current and all previous schema versions. You can use this choice when you need
            to delete fields or add optional fields, and check compatibility against all previous
            schema versions. </para></li><li><para><i>FORWARD</i>: This compatibility choice allows data receivers to read both the
            current and one next schema version, but not necessarily later versions. You can use
            this choice when you need to add fields or delete optional fields, but only check
            compatibility against the last schema version.</para></li><li><para><i>FORWARD_ALL</i>: This compatibility choice allows data receivers to read written
            by producers of any new registered schema. You can use this choice when you need to
            add fields or delete optional fields, and check compatibility against all previous
            schema versions.</para></li><li><para><i>FULL</i>: This compatibility choice allows data receivers to read data written
            by producers using the previous or next version of the schema, but not necessarily
            earlier or later versions. You can use this choice when you need to add or remove
            optional fields, but only check compatibility against the last schema version.</para></li><li><para><i>FULL_ALL</i>: This compatibility choice allows data receivers to read data written
            by producers using all previous schema versions. You can use this choice when you
            need to add or remove optional fields, and check compatibility against all previous
            schema versions.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.DataFormat">
            <summary>
            <para>
            <para>The data format of the schema definition. Currently <code>AVRO</code>, <code>JSON</code>
            and <code>PROTOBUF</code> are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.Description">
            <summary>
            <para>
            <para>An optional description of the schema. If description is not provided, there will
            not be any automatic default value for this.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.RegistryId_RegistryArn">
            <summary>
            <para>
            <para>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.RegistryId_RegistryName">
            <summary>
            <para>
            <para>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.SchemaDefinition">
            <summary>
            <para>
            <para>The schema definition using the <code>DataFormat</code> setting for <code>SchemaName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.SchemaName">
            <summary>
            <para>
            <para>Name of the schema to be created of max length of 255, and may only contain letters,
            numbers, hyphen, underscore, dollar sign, or hash mark. No whitespace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.Tag">
            <summary>
            <para>
            <para>Amazon Web Services tags that contain a key value pair and may be searched by console,
            command line, or API. If specified, follows the Amazon Web Services tags-on-create
            pattern.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateSchemaResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateSchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaName parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESchemaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet">
            <summary>
            Transforms a directed acyclic graph (DAG) into code.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet.DagEdge">
            <summary>
            <para>
            <para>A list of the edges in the DAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet.DagNode">
            <summary>
            <para>
            <para>A list of the nodes in the DAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet.Language">
            <summary>
            <para>
            <para>The programming language of the resulting code from the DAG.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateScriptResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateScriptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEScriptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet">
            <summary>
            Creates a new security configuration. A security configuration is a set of security
            properties that can be used by Glue. You can use a security configuration to encrypt
            data at rest. For information about using security configurations in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html">Encrypting
            Data Written by Crawlers, Jobs, and Development Endpoints</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.CloudWatchEncryption_CloudWatchEncryptionMode">
            <summary>
            <para>
            <para>The encryption mode to use for CloudWatch data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.JobBookmarksEncryption_JobBookmarksEncryptionMode">
            <summary>
            <para>
            <para>The encryption mode to use for job bookmarks data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.CloudWatchEncryption_KmsKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.JobBookmarksEncryption_KmsKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>The name for the new security configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.EncryptionConfiguration_S3Encryption">
            <summary>
            <para>
            <para>The encryption configuration for Amazon Simple Storage Service (Amazon S3) data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateSecurityConfigurationResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateSecurityConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESecurityConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet">
            <summary>
            Creates a new session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Connections_Connection">
            <summary>
            <para>
            <para>A list of connections used by the job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.DefaultArgument">
            <summary>
            <para>
            <para>A map array of key-value pairs. Max is 75 pairs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Description">
            <summary>
            <para>
            <para>The description of the session. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.GlueVersion">
            <summary>
            <para>
            <para>The Glue version determines the versions of Apache Spark and Python that Glue supports.
            The GlueVersion must be greater than 2.0. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the session request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.IdleTimeout">
            <summary>
            <para>
            <para>The number of seconds when idle before request times out. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.MaxCapacity">
            <summary>
            <para>
            <para>The number of Glue data processing units (DPUs) that can be allocated when the job
            runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of
            compute capacity and 16 GB memory. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Command_Name">
            <summary>
            <para>
            <para>Specifies the name of the SessionCommand. Can be 'glueetl' or 'gluestreaming'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>WorkerType</code> to use for the session.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Command_PythonVersion">
            <summary>
            <para>
            <para>Specifies the Python version. The Python version indicates the version supported for
            jobs of type Spark.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Role">
            <summary>
            <para>
            <para>The IAM Role ARN </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.SecurityConfiguration">
            <summary>
            <para>
            <para>The name of the SecurityConfiguration structure to be used with the session </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Tag">
            <summary>
            <para>
            <para>The map of key value pairs (tags) belonging to the session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Timeout">
            <summary>
            <para>
            <para>The number of seconds before request times out. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated to use for the session. Accepts a
            value of Standard, G.1X, G.2X, or G.025X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of
            memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li><li><para>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of
            memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker
            type for memory-intensive jobs.</para></li><li><para>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB
            of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for low volume streaming jobs. This worker type is only available for Glue version
            3.0 streaming jobs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Session'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateSessionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUESessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet">
            <summary>
            Creates a new table definition in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which to create the <code>Table</code>. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The catalog database in which to create the new table. For Hive compatibility, this
            name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.PartitionIndex">
            <summary>
            <para>
            <para>A list of partition indexes, <code>PartitionIndex</code> structures, to create in
            the table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.TableInput">
            <summary>
            <para>
            <para>The <code>TableInput</code> object that defines the metadata table to create in the
            catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.TransactionId">
            <summary>
            <para>
            <para>The ID of the transaction.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableInput parameter.
            The -PassThru parameter is deprecated, use -Select '^TableInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet">
            <summary>
            Creates a new trigger.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Action">
            <summary>
            <para>
            <para>The actions initiated by this trigger when it fires.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.EventBatchingCondition_BatchSize">
            <summary>
            <para>
            <para>Number of events that must be received from Amazon EventBridge before EventBridge
            event trigger fires.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.EventBatchingCondition_BatchWindow">
            <summary>
            <para>
            <para>Window of time in seconds after which EventBridge event trigger fires. Window starts
            when first event is received.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Description">
            <summary>
            <para>
            <para>A description of the new trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Predicate">
            <summary>
            <para>
            <para>A predicate to specify when the new trigger should fire.</para><para>This field is required when the trigger type is <code>CONDITIONAL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Schedule">
            <summary>
            <para>
            <para>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based
            Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15
            UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</para><para>This field is required when the trigger type is SCHEDULED.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.StartOnCreation">
            <summary>
            <para>
            <para>Set to <code>true</code> to start <code>SCHEDULED</code> and <code>CONDITIONAL</code>
            triggers when created. True is not supported for <code>ON_DEMAND</code> triggers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to use with this trigger. You may use tags to limit access to the trigger.
            For more information about tags in Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">Amazon
            Web Services Tags in Glue</a> in the developer guide. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Type">
            <summary>
            <para>
            <para>The type of the new trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.WorkflowName">
            <summary>
            <para>
            <para>The name of the workflow associated with the trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUETriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet">
            <summary>
            Creates a new function definition in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which to create the function. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which to create the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.FunctionInput">
            <summary>
            <para>
            <para>A <code>FunctionInput</code> object that defines the function to create in the Data
            Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateUserDefinedFunctionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionInput parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEUserDefinedFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet">
            <summary>
            Creates a new workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.DefaultRunProperty">
            <summary>
            <para>
            <para>A collection of properties to be used as part of each execution of the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.Description">
            <summary>
            <para>
            <para>A description of the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.MaxConcurrentRun">
            <summary>
            <para>
            <para>You can use this parameter to prevent unwanted multiple updates to data, to control
            costs, or in some cases, to prevent exceeding the maximum number of concurrent runs
            of any of the component jobs. If you leave this parameter blank, there is no limit
            to the number of concurrent workflow runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.Name">
            <summary>
            <para>
            <para>The name to be assigned to the workflow. It should be unique within your account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be used with this workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CreateWorkflowResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CreateWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.NewGLUEWorkflowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet">
            <summary>
            Adds a new version to the existing schema. Returns an error if new version of schema
            does not meet the compatibility requirements of the schema set. This API will not
            create a new schema set and will return a 404 error if the schema set is not already
            present in the Schema Registry.
            
             
            <para>
            If this is the first schema definition to be registered in the Schema Registry, this
            API will store the schema version and return immediately. Otherwise, this call has
            the potential to run longer than other operations due to compatibility modes. You
            can call the <code>GetSchemaVersion</code> API with the <code>SchemaVersionId</code>
            to check compatibility modes.
            </para><para>
            If the same schema definition is already stored in Schema Registry as a version, the
            schema ID of the existing schema is returned to the caller.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.SchemaDefinition">
            <summary>
            <para>
            <para>The schema definition using the <code>DataFormat</code> setting for the <code>SchemaName</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.RegisterSchemaVersionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.RegisterSchemaVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaDefinition parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaDefinition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RegisterGLUESchemaVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEBlueprintCmdlet">
            <summary>
            Deletes an existing blueprint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEBlueprintCmdlet.Name">
            <summary>
            <para>
            <para>The name of the blueprint to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEBlueprintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteBlueprintResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteBlueprintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEBlueprintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEBlueprintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEClassifierCmdlet">
            <summary>
            Removes a classifier from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEClassifierCmdlet.Name">
            <summary>
            <para>
            <para>Name of the classifier to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteClassifierResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEClassifierCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet">
            <summary>
            Delete the partition column statistics of a column.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>DeletePartition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.ColumnName">
            <summary>
            <para>
            <para>Name of the column.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.PartitionValue">
            <summary>
            <para>
            <para>A list of partition values identifying the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteColumnStatisticsForPartitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForPartitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet">
            <summary>
            Retrieves table statistics of columns.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>DeleteTable</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.ColumnName">
            <summary>
            <para>
            <para>The name of the column.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteColumnStatisticsForTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEColumnStatisticsForTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet">
            <summary>
            Deletes a connection from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the connection resides. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet.ConnectionName">
            <summary>
            <para>
            <para>The name of the connection to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet">
            <summary>
            Deletes a list of connection definitions from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the connections reside. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet.ConnectionNameList">
            <summary>
            <para>
            <para>A list of names of the connections to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchDeleteConnectionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchDeleteConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionNameList parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionNameList' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEConnectionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECrawlerCmdlet">
            <summary>
            Removes a specified crawler from the Glue Data Catalog, unless the crawler state is
            <code>RUNNING</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the crawler to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteCrawlerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECrawlerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECustomEntityTypeCmdlet">
            <summary>
            Deletes a custom pattern by specifying its name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECustomEntityTypeCmdlet.Name">
            <summary>
            <para>
            <para>The name of the custom pattern that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECustomEntityTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteCustomEntityTypeResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteCustomEntityTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECustomEntityTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUECustomEntityTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet">
            <summary>
            Removes a specified database from a Data Catalog.
            
             <note><para>
            After completing this operation, you no longer have access to the tables (and all
            table versions and partitions that might belong to the tables) and the user-defined
            functions in the deleted database. Glue deletes these "orphaned" resources asynchronously
            in a timely manner, at the discretion of the service.
            </para><para>
            To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>,
            use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code>
            or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and
            <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources
            that belong to the database.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the database resides. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet.Name">
            <summary>
            <para>
            <para>The name of the database to delete. For Hive compatibility, this must be all lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteDatabaseResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDevEndpointCmdlet">
            <summary>
            Deletes a specified development endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDevEndpointCmdlet.EndpointName">
            <summary>
            <para>
            <para>The name of the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDevEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteDevEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDevEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointName parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEDevEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEJobCmdlet">
            <summary>
            Deletes a specified job definition. If the job definition is not found, no exception
            is thrown.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEJobCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteJobResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEMLTransformCmdlet">
            <summary>
            Deletes an Glue machine learning transform. Machine learning transforms are a special
            type of transform that use machine learning to learn the details of the transformation
            to be performed by learning from examples provided by humans. These transformations
            are then saved by Glue. If you no longer need a transform, you can delete it by calling
            <code>DeleteMLTransforms</code>. However, any Glue jobs that still reference the deleted
            transform will no longer succeed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEMLTransformCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the transform to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEMLTransformCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransformId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteMLTransformResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteMLTransformResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEMLTransformCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEMLTransformCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet">
            <summary>
            Deletes a specified partition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partition to be deleted resides. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the table in question resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.PartitionValue">
            <summary>
            <para>
            <para>The values that define the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table that contains the partition to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeletePartitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableName parameter.
            The -PassThru parameter is deprecated, use -Select '^TableName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet">
            <summary>
            Deletes one or more partitions in a batch operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partition to be deleted resides. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the table in question resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.PartitionsToDelete">
            <summary>
            <para>
            <para>A list of <code>PartitionInput</code> structures that define the partitions to be
            deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table that contains the partitions to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchDeletePartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchDeletePartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PartitionsToDelete parameter.
            The -PassThru parameter is deprecated, use -Select '^PartitionsToDelete' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet">
            <summary>
            Deletes a specified partition index from an existing table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.CatalogId">
            <summary>
            <para>
            <para>The catalog ID where the table resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.DatabaseName">
            <summary>
            <para>
            <para>Specifies the name of a database from which you want to delete a partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the partition index to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.TableName">
            <summary>
            <para>
            <para>Specifies the name of a table from which you want to delete a partition index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeletePartitionIndexResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEPartitionIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet">
            <summary>
            Delete the entire registry including schema and all of its versions. To get the status
            of the delete operation, you can call the <code>GetRegistry</code> API after the asynchronous
            call. Deleting a registry will deactivate all online operations for the registry such
            as the <code>UpdateRegistry</code>, <code>CreateSchema</code>, <code>UpdateSchema</code>,
            and <code>RegisterSchemaVersion</code> APIs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet.RegistryId_RegistryArn">
            <summary>
            <para>
            <para>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet.RegistryId_RegistryName">
            <summary>
            <para>
            <para>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteRegistryResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteRegistryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RegistryId_RegistryArn parameter.
            The -PassThru parameter is deprecated, use -Select '^RegistryId_RegistryArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUERegistryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet">
            <summary>
            Deletes a specified policy.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet.PolicyHashCondition">
            <summary>
            <para>
            <para>The hash value returned when this policy was set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The ARN of the Glue resource for the resource policy to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteResourcePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyHashCondition parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyHashCondition' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet">
            <summary>
            Removes tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which to remove the tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet.TagsToRemove">
            <summary>
            <para>
            <para>Tags to remove from this resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet">
            <summary>
            Deletes the entire schema set, including the schema set and all of its versions. To
            get the status of the delete operation, you can call <code>GetSchema</code> API after
            the asynchronous call. Deleting a registry will deactivate all online operations for
            the schema, such as the <code>GetSchemaByDefinition</code>, and <code>RegisterSchemaVersion</code>
            APIs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteSchemaResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteSchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaId_SchemaArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaId_SchemaArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet">
            <summary>
            Remove versions from the specified schema. A version number or range may be supplied.
            If the compatibility mode forbids deleting of a version that is necessary, such as
            BACKWARDS_FULL, an error is returned. Calling the <code>GetSchemaVersions</code> API
            after this call will list the status of the deleted versions.
            
             
            <para>
            When the range of version numbers contain check pointed version, the API will return
            a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint
            first using the <code>DeleteSchemaCheckpoint</code> API before using this API.
            </para><para>
            You cannot use the <code>DeleteSchemaVersions</code> API to delete the first schema
            version in the schema set. The first schema version can only be deleted by the <code>DeleteSchema</code>
            API. This operation will also delete the attached <code>SchemaVersionMetadata</code>
            under the schema versions. Hard deletes will be enforced on the database.
            </para><para>
            If the compatibility mode forbids deleting of a version that is necessary, such as
            BACKWARDS_FULL, an error is returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.Version">
            <summary>
            <para>
            <para>A version range may be supplied which may be of the format:</para><ul><li><para>a single version number, 5</para></li><li><para>a range, 5-8 : deletes versions 5, 6, 7, 8</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SchemaVersionErrors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteSchemaVersionsResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteSchemaVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Version parameter.
            The -PassThru parameter is deprecated, use -Select '^Version' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet">
            <summary>
            Removes a key value pair from the schema version metadata for the specified schema
            version ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.MetadataKeyValue_MetadataKey">
            <summary>
            <para>
            <para>A metadata key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.MetadataKeyValue_MetadataValue">
            <summary>
            <para>
            <para>A metadata key’s corresponding value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaVersionId">
            <summary>
            <para>
            <para>The unique version ID of the schema version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.RemoveSchemaVersionMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.RemoveSchemaVersionMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESchemaVersionMetadataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESecurityConfigurationCmdlet">
            <summary>
            Deletes a specified security configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESecurityConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the security configuration to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESecurityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteSecurityConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESecurityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESecurityConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet">
            <summary>
            Deletes the session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the session to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The name of the origin of the delete session request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Id'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteSessionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUESessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet">
            <summary>
            Removes a table definition from the Data Catalog.
            
             <note><para>
            After completing this operation, you no longer have access to the table versions and
            partitions that belong to the deleted table. Glue deletes these "orphaned" resources
            asynchronously in a timely manner, at the discretion of the service.
            </para><para>
            To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>,
            use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code>
            or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the table resides. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the table resides. For Hive compatibility,
            this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.Name">
            <summary>
            <para>
            <para>The name of the table to be deleted. For Hive compatibility, this name is entirely
            lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to delete the table contents.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet">
            <summary>
            Deletes multiple tables at once.
            
             <note><para>
            After completing this operation, you no longer have access to the table versions and
            partitions that belong to the deleted table. Glue deletes these "orphaned" resources
            asynchronously in a timely manner, at the discretion of the service.
            </para><para>
            To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>,
            use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code>
            or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the table resides. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the tables to delete reside. For Hive compatibility,
            this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.TablesToDelete">
            <summary>
            <para>
            <para>A list of the table to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to delete the table contents.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchDeleteTableResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchDeleteTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TablesToDelete parameter.
            The -PassThru parameter is deprecated, use -Select '^TablesToDelete' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet">
            <summary>
            Deletes a specified version of a table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database in the catalog in which the table resides. For Hive compatibility, this
            name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table. For Hive compatibility, this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.VersionId">
            <summary>
            <para>
            <para>The ID of the table version to be deleted. A <code>VersionID</code> is a string representation
            of an integer. Each version is incremented by 1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteTableVersionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet">
            <summary>
            Deletes a specified batch of versions of a table.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the tables reside. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The database in the catalog in which the table resides. For Hive compatibility, this
            name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table. For Hive compatibility, this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.VersionId">
            <summary>
            <para>
            <para>A list of the IDs of versions to be deleted. A <code>VersionId</code> is a string
            representation of an integer. Each version is incremented by 1.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchDeleteTableVersionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchDeleteTableVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETableVersionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETriggerCmdlet">
            <summary>
            Deletes a specified trigger. If the trigger is not found, no exception is thrown.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUETriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet">
            <summary>
            Deletes an existing function definition from the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the function to be deleted is located. If none is
            supplied, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the function is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.FunctionName">
            <summary>
            <para>
            <para>The name of the function definition to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteUserDefinedFunctionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEUserDefinedFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEWorkflowCmdlet">
            <summary>
            Deletes a workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEWorkflowCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.DeleteWorkflowResponse).
            Specifying the name of a property of type Amazon.Glue.Model.DeleteWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.RemoveGLUEWorkflowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet">
            <summary>
            Resets a bookmark entry.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job in question.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet.RunId">
            <summary>
            <para>
            <para>The unique run identifier associated with this job run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobBookmarkEntry'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ResetJobBookmarkResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ResetJobBookmarkResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResetGLUEJobBookmarkCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet">
            <summary>
            Restarts selected nodes of a previous partially completed workflow run and resumes
            the workflow run. The selected nodes and all nodes that are downstream from the selected
            nodes are run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.Name">
            <summary>
            <para>
            <para>The name of the workflow to resume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.NodeId">
            <summary>
            <para>
            <para>A list of the node IDs for the nodes you want to restart. The nodes that are to be
            restarted must have a run attempt in the original run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the workflow run to resume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.ResumeWorkflowRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.ResumeWorkflowRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.ResumeGLUEWorkflowRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet">
            <summary>
            Sets the security configuration for a specified catalog. After the configuration has
            been set, the specified encryption is applied to every catalog write thereafter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.ConnectionPasswordEncryption_AwsKmsKeyId">
            <summary>
            <para>
            <para>An KMS key that is used to encrypt the connection password. </para><para>If connection password protection is enabled, the caller of <code>CreateConnection</code>
            and <code>UpdateConnection</code> needs at least <code>kms:Encrypt</code> permission
            on the specified KMS key, to encrypt passwords before storing them in the Data Catalog.
            </para><para>You can set the decrypt permission to enable or restrict access on the password key
            according to your security requirements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.EncryptionAtRest_CatalogEncryptionMode">
            <summary>
            <para>
            <para>The encryption-at-rest mode for encrypting Data Catalog data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog to set the security configuration for. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.ConnectionPasswordEncryption_ReturnConnectionPasswordEncrypted">
            <summary>
            <para>
            <para>When the <code>ReturnConnectionPasswordEncrypted</code> flag is set to "true", passwords
            remain encrypted in the responses of <code>GetConnection</code> and <code>GetConnections</code>.
            This encryption takes effect independently from catalog encryption. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.EncryptionAtRest_SseAwsKmsKeyId">
            <summary>
            <para>
            <para>The ID of the KMS key to use for encryption at rest.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.PutDataCatalogEncryptionSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CatalogId parameter.
            The -PassThru parameter is deprecated, use -Select '^CatalogId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEDataCatalogEncryptionSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet">
            <summary>
            Sets the Data Catalog resource policy for access control.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.EnableHybrid">
            <summary>
            <para>
            <para>If <code>'TRUE'</code>, indicates that you are using both methods to grant cross-account
            access to Data Catalog resources:</para><ul><li><para>By directly updating the resource policy with <code>PutResourePolicy</code></para></li><li><para>By using the <b>Grant permissions</b> command on the Amazon Web Services Management
            Console.</para></li></ul><para>Must be set to <code>'TRUE'</code> if you have already used the Management Console
            to grant cross-account access, otherwise the call fails. Default is 'FALSE'.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.PolicyExistsCondition">
            <summary>
            <para>
            <para>A value of <code>MUST_EXIST</code> is used to update a policy. A value of <code>NOT_EXIST</code>
            is used to create a new policy. If a value of <code>NONE</code> or a null value is
            used, the call does not depend on the existence of a policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.PolicyHashCondition">
            <summary>
            <para>
            <para>The hash value returned when the previous policy was set using <code>PutResourcePolicy</code>.
            Its purpose is to prevent concurrent modifications of a policy. Do not use this parameter
            if no previous policy has been set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.PolicyInJson">
            <summary>
            <para>
            <para>Contains the policy document to set, in JSON format.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Do not use. For internal use only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyHash'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.PutResourcePolicyResponse).
            Specifying the name of a property of type Amazon.Glue.Model.PutResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyInJson parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyInJson' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.SetGLUEResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet">
            <summary>
            Starts a new run of the specified blueprint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.BlueprintName">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.Parameter">
            <summary>
            <para>
            <para>Specifies the parameters as a <code>BlueprintParameters</code> object.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.RoleArn">
            <summary>
            <para>
            <para>Specifies the IAM role used to create the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartBlueprintRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartBlueprintRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BlueprintName parameter.
            The -PassThru parameter is deprecated, use -Select '^BlueprintName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEBlueprintRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerCmdlet">
            <summary>
            Starts a crawl using the specified crawler, regardless of what is scheduled. If the
            crawler is already running, returns a <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException">CrawlerRunningException</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>Name of the crawler to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartCrawlerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerScheduleCmdlet">
            <summary>
            Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless
            the crawler is already running or the schedule state is already <code>SCHEDULED</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerScheduleCmdlet.CrawlerName">
            <summary>
            <para>
            <para>Name of the crawler to schedule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartCrawlerScheduleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CrawlerName parameter.
            The -PassThru parameter is deprecated, use -Select '^CrawlerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUECrawlerScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet">
            <summary>
            Begins an asynchronous task to export all labeled data for a particular transform.
            This task is the only label-related API call that is not part of the typical active
            learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you
            want to work with all of your existing labels at the same time, such as when you want
            to remove or change labels that were previously submitted as truth. This API operation
            accepts the <code>TransformId</code> whose labels you want to export and an Amazon
            Simple Storage Service (Amazon S3) path to export the labels to. The operation returns
            a <code>TaskRunId</code>. You can check on the status of your task run by calling
            the <code>GetMLTaskRun</code> API.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet.OutputS3Path">
            <summary>
            <para>
            <para>The Amazon S3 path where you export the labels.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskRunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartExportLabelsTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartExportLabelsTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEExportLabelsTaskRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet">
            <summary>
            Enables you to provide additional labels (examples of truth) to be used to teach the
            machine learning transform and improve its quality. This API operation is generally
            used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code>
            call and that ultimately results in improving the quality of your machine learning
            transform. 
            
             
            <para>
            After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine
            learning will have generated a series of questions for humans to answer. (Answering
            these questions is often called 'labeling' in the machine learning workflows). In
            the case of the <code>FindMatches</code> transform, these questions are of the form,
            “What is the correct way to group these rows together into groups composed entirely
            of matching records?” After the labeling process is finished, users upload their answers/labels
            with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code>
            finishes, all future runs of the machine learning transform use the new and improved
            labels and perform a higher-quality transformation.
            </para><para>
            By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from
            and combines all labels that you upload unless you set <code>Replace</code> to true.
            If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes
            and forgets all previously uploaded labels and learns only from the exact set that
            you upload. Replacing labels can be helpful if you realize that you previously uploaded
            incorrect labels, and you believe that they are having a negative effect on your transform
            quality.
            </para><para>
            You can check on the status of your task run by calling the <code>GetMLTaskRun</code>
            operation. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.InputS3Path">
            <summary>
            <para>
            <para>The Amazon Simple Storage Service (Amazon S3) path from where you import the labels.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.ReplaceAllLabel">
            <summary>
            <para>
            <para>Indicates whether to overwrite your existing labels.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskRunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartImportLabelsTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartImportLabelsTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEImportLabelsTaskRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet">
            <summary>
            Starts a job run using a job definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.Argument">
            <summary>
            <para>
            <para>The job arguments specifically for this run. For this job run, they replace the default
            arguments set in the job definition itself.</para><para>You can specify arguments here that your own job-execution script consumes, as well
            as arguments that Glue itself consumes.</para><para>Job arguments may be logged. Do not pass plaintext secrets as arguments. Retrieve
            secrets from a Glue Connection, Secrets Manager or other secret management mechanism
            if you intend to keep them within the Job. </para><para>For information about how to specify and consume your own Job arguments, see the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html">Calling
            Glue APIs in Python</a> topic in the developer guide.</para><para>For information about the key-value pairs that Glue consumes to set up your job, see
            the <a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html">Special
            Parameters Used by Glue</a> topic in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.ExecutionClass">
            <summary>
            <para>
            <para>Indicates whether the job is run with a standard or flexible execution class. The
            standard execution-class is ideal for time-sensitive workloads that require fast job
            startup and dedicated resources.</para><para>The flexible execution class is appropriate for time-insensitive jobs whose start
            and completion times may vary. </para><para>Only jobs with Glue version 3.0 and above and command type <code>glueetl</code> will
            be allowed to set <code>ExecutionClass</code> to <code>FLEX</code>. The flexible execution
            class is available for Spark jobs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.JobRunId">
            <summary>
            <para>
            <para>The ID of a previous <code>JobRun</code> to retry.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.MaxCapacity">
            <summary>
            <para>
            <para>The number of Glue data processing units (DPUs) that can be allocated when this job
            runs. A DPU is a relative measure of processing power that consists of 4 vCPUs of
            compute capacity and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue
            pricing page</a>.</para><para>Do not set <code>Max Capacity</code> if using <code>WorkerType</code> and <code>NumberOfWorkers</code>.</para><para>The value that can be allocated for <code>MaxCapacity</code> depends on whether you
            are running a Python shell job, or an Apache Spark ETL job:</para><ul><li><para>When you specify a Python shell job (<code>JobCommand.Name</code>="pythonshell"),
            you can allocate either 0.0625 or 1 DPU. The default is 0.0625 DPU.</para></li><li><para>When you specify an Apache Spark ETL job (<code>JobCommand.Name</code>="glueetl"),
            you can allocate a minimum of 2 DPUs. The default is 10 DPUs. This job type cannot
            have a fractional DPU allocation.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.NotificationProperty_NotifyDelayAfter">
            <summary>
            <para>
            <para>After a job run starts, the number of minutes to wait before sending a job run delay
            notification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>workerType</code> that are allocated when
            a job runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.SecurityConfiguration">
            <summary>
            <para>
            <para>The name of the <code>SecurityConfiguration</code> structure to be used with this
            job run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.Timeout">
            <summary>
            <para>
            <para>The <code>JobRun</code> timeout in minutes. This is the maximum time that a job run
            can consume resources before it is terminated and enters <code>TIMEOUT</code> status.
            This value overrides the timeout value set in the parent job.</para><para>Streaming jobs do not have a timeout. The default for non-streaming jobs is 2,880
            minutes (48 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated when a job runs. Accepts a value of
            Standard, G.1X, G.2X, or G.025X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 64GB disk, and 1 executor per worker.</para></li><li><para>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory
            and a 128GB disk, and 1 executor per worker.</para></li><li><para>For the <code>G.025X</code> worker type, each worker maps to 0.25 DPU (2 vCPU, 4 GB
            of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker
            type for low volume streaming jobs. This worker type is only available for Glue version
            3.0 streaming jobs.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.AllocatedCapacity">
            <summary>
            <para>
            <para>This field is deprecated. Use <code>MaxCapacity</code> instead.</para><para>The number of Glue data processing units (DPUs) to allocate to this JobRun. You can
            allocate a minimum of 2 DPUs; the default is 10. A DPU is a relative measure of processing
            power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more information,
            see the <a href="https://aws.amazon.com/glue/pricing/">Glue pricing page</a>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobRunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartJobRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartJobRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobName parameter.
            The -PassThru parameter is deprecated, use -Select '^JobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEJobRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLEvaluationTaskRunCmdlet">
            <summary>
            Starts a task to estimate the quality of the transform. 
            
             
            <para>
            When you provide label sets as examples of truth, Glue machine learning uses some
            of those examples to learn from them. The rest of the labels are used as a test to
            estimate quality.
            </para><para>
            Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to
            get more information about the stats of the <code>EvaluationTaskRun</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLEvaluationTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLEvaluationTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskRunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartMLEvaluationTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartMLEvaluationTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLEvaluationTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLEvaluationTaskRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet">
            <summary>
            Starts the active learning workflow for your machine learning transform to improve
            the transform's quality by generating label sets and adding labels.
            
             
            <para>
            When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have
            generated a "labeling set" or a set of questions for humans to answer.
            </para><para>
            In the case of the <code>FindMatches</code> transform, these questions are of the
            form, “What is the correct way to group these rows together into groups composed entirely
            of matching records?” 
            </para><para>
            After the labeling process is finished, you can upload your labels with a call to
            <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code>
            finishes, all future runs of the machine learning transform will use the new and improved
            labels and perform a higher-quality transformation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet.OutputS3Path">
            <summary>
            <para>
            <para>The Amazon Simple Storage Service (Amazon S3) path where you generate the labeling
            set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TaskRunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartMLLabelingSetGenerationTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartMLLabelingSetGenerationTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEMLLabelingSetGenerationTaskRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUETriggerCmdlet">
            <summary>
            Starts an existing trigger. See <a href="https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html">Triggering
            Jobs</a> for information about how different types of trigger are started.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUETriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet">
            <summary>
            Starts a new run of the specified workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet.Name">
            <summary>
            <para>
            <para>The name of the workflow to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet.RunProperty">
            <summary>
            <para>
            <para>The workflow run properties for the new workflow run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RunId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StartWorkflowRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StartWorkflowRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StartGLUEWorkflowRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerCmdlet">
            <summary>
            If the specified crawler is running, stops the crawl.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>Name of the crawler to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StopCrawlerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerScheduleCmdlet">
            <summary>
            Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but
            does not stop the crawler if it is already running.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerScheduleCmdlet.CrawlerName">
            <summary>
            <para>
            <para>Name of the crawler whose schedule state to set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StopCrawlerScheduleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CrawlerName parameter.
            The -PassThru parameter is deprecated, use -Select '^CrawlerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUECrawlerScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet">
            <summary>
            Stops one or more job runs for a specified job definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition for which to stop job runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet.JobRunId">
            <summary>
            <para>
            <para>A list of the <code>JobRunIds</code> that should be stopped for that job definition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchStopJobRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchStopJobRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobRunId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobRunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEJobRunBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet">
            <summary>
            Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that
            Glue runs on your behalf as part of various machine learning workflows. You can cancel
            a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with
            a task run's parent transform's <code>TransformID</code> and the task run's <code>TaskRunId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet.TaskRunId">
            <summary>
            <para>
            <para>A unique identifier for the task run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet.TransformId">
            <summary>
            <para>
            <para>The unique identifier of the machine learning transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CancelMLTaskRunResponse).
            Specifying the name of a property of type Amazon.Glue.Model.CancelMLTaskRunResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TaskRunId parameter.
            The -PassThru parameter is deprecated, use -Select '^TaskRunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEMLTaskRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet">
            <summary>
            Stops the session.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the session to be stopped.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Id'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StopSessionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StopSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUESessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet">
            <summary>
            Cancels the statement.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.Id">
            <summary>
            <para>
            <para>The ID of the statement to be cancelled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.RequestOrigin">
            <summary>
            <para>
            <para>The origin of the request to cancel the statement.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.SessionId">
            <summary>
            <para>
            <para>The Session ID of the statement to be cancelled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.CancelStatementResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEStatementCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUETriggerCmdlet">
            <summary>
            Stops a specified trigger.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StopTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.StopTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUETriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet">
            <summary>
            Stops the execution of the specified workflow run.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet.Name">
            <summary>
            <para>
            <para>The name of the workflow to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the workflow run to stop.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.StopWorkflowRunResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.StopGLUEWorkflowRunCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet">
            <summary>
            Updates a registered blueprint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.BlueprintLocation">
            <summary>
            <para>
            <para>Specifies a path in Amazon S3 where the blueprint is published.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.Description">
            <summary>
            <para>
            <para>A description of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.Name">
            <summary>
            <para>
            <para>The name of the blueprint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateBlueprintResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateBlueprintResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEBlueprintCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet">
            <summary>
            Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>,
            a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which
            field is present).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_AllowSingleColumn">
            <summary>
            <para>
            <para>Enables the processing of files that contain only one column.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_ContainsHeader">
            <summary>
            <para>
            <para>Indicates whether the CSV file contains a header.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_Delimiter">
            <summary>
            <para>
            <para>A custom symbol to denote what separates each column entry in the row.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_DisableValueTrimming">
            <summary>
            <para>
            <para>Specifies not to trim values before identifying the type of column values. The default
            value is true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.GrokClassifier">
            <summary>
            <para>
            <para>A <code>GrokClassifier</code> object with updated fields.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_Header">
            <summary>
            <para>
            <para>A list of strings representing column names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.JsonClassifier_JsonPath">
            <summary>
            <para>
            <para>A <code>JsonPath</code> string defining the JSON data for the classifier to classify.
            Glue supports a subset of JsonPath, as described in <a href="https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json">Writing
            JsonPath Custom Classifiers</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_Name">
            <summary>
            <para>
            <para>The name of the classifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.JsonClassifier_Name">
            <summary>
            <para>
            <para>The name of the classifier.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.CsvClassifier_QuoteSymbol">
            <summary>
            <para>
            <para>A custom symbol to denote what combines content into a single column value. It must
            be different from the column delimiter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.XMLClassifier">
            <summary>
            <para>
            <para>An <code>XMLClassifier</code> object with updated fields.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateClassifierResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEClassifierCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet">
            <summary>
            Creates or updates partition statistics of columns.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>UpdatePartition</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.ColumnStatisticsList">
            <summary>
            <para>
            <para>A list of the column statistics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.PartitionValue">
            <summary>
            <para>
            <para>A list of partition values identifying the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateColumnStatisticsForPartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateColumnStatisticsForPartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForPartitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet">
            <summary>
            Creates or updates table statistics of columns.
            
             
            <para>
            The Identity and Access Management (IAM) permission required for this operation is
            <code>UpdateTable</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partitions in question reside. If none is supplied,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.ColumnStatisticsList">
            <summary>
            <para>
            <para>A list of the column statistics.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the partitions reside.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the partitions' table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateColumnStatisticsForTableResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateColumnStatisticsForTableResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEColumnStatisticsForTableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet">
            <summary>
            Updates a connection definition in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the connection resides. If none is provided, the
            Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.ConnectionInput">
            <summary>
            <para>
            <para>A <code>ConnectionInput</code> object that redefines the connection in question.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection definition to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateConnectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionInput parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet">
            <summary>
            Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code>
            before updating it.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.LakeFormationConfiguration_AccountId">
            <summary>
            <para>
            <para>Required for cross account crawls. For same account crawls as the target data, this
            can be left as null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Classifier">
            <summary>
            <para>
            <para>A list of custom classifiers that the user has registered. By default, all built-in
            classifiers are included in a crawl, but these custom classifiers always override
            the default classifiers for a given classification.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Configuration">
            <summary>
            <para>
            <para>Crawler configuration information. This versioned JSON string allows users to specify
            aspects of a crawler's behavior. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring
            a Crawler</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.LineageConfiguration_CrawlerLineageSetting">
            <summary>
            <para>
            <para>Specifies whether data lineage is enabled for the crawler. Valid values are:</para><ul><li><para>ENABLE: enables data lineage for the crawler</para></li><li><para>DISABLE: disables data lineage for the crawler</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.CrawlerSecurityConfiguration">
            <summary>
            <para>
            <para>The name of the <code>SecurityConfiguration</code> structure to be used by this crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The Glue database where results are stored, such as: <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Description">
            <summary>
            <para>
            <para>A description of the new crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Name">
            <summary>
            <para>
            <para>Name of the new crawler.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.RecrawlPolicy_RecrawlBehavior">
            <summary>
            <para>
            <para>Specifies whether to crawl the entire dataset again or to crawl only folders that
            were added since the last crawler run.</para><para>A value of <code>CRAWL_EVERYTHING</code> specifies crawling the entire dataset again.</para><para>A value of <code>CRAWL_NEW_FOLDERS_ONLY</code> specifies crawling only folders that
            were added since the last crawler run.</para><para>A value of <code>CRAWL_EVENT_MODE</code> specifies crawling only the changes identified
            by Amazon S3 events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Role">
            <summary>
            <para>
            <para>The IAM role or Amazon Resource Name (ARN) of an IAM role that is used by the new
            crawler to access customer resources.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Schedule">
            <summary>
            <para>
            <para>A <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based
            Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15
            UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.SchemaChangePolicy">
            <summary>
            <para>
            <para>The policy for the crawler's update and deletion behavior.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.TablePrefix">
            <summary>
            <para>
            <para>The table prefix used for catalog tables that are created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Target">
            <summary>
            <para>
            <para>A list of targets to crawl.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.LakeFormationConfiguration_UseLakeFormationCredential">
            <summary>
            <para>
            <para>Specifies whether to use Lake Formation credentials for the crawler instead of the
            IAM role credentials.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateCrawlerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet">
            <summary>
            Updates the schedule of a crawler using a <code>cron</code> expression.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet.CrawlerName">
            <summary>
            <para>
            <para>The name of the crawler whose schedule to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet.Schedule">
            <summary>
            <para>
            <para>The updated <code>cron</code> expression used to specify the schedule (see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html">Time-Based
            Schedules for Jobs and Crawlers</a>. For example, to run something every day at 12:15
            UTC, you would specify: <code>cron(15 12 * * ? *)</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateCrawlerScheduleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Schedule parameter.
            The -PassThru parameter is deprecated, use -Select '^Schedule' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUECrawlerScheduleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet">
            <summary>
            Updates an existing database definition in a Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog in which the metadata database resides. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.DatabaseInput">
            <summary>
            <para>
            <para>A <code>DatabaseInput</code> object specifying the new definition of the metadata
            database in the catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.Name">
            <summary>
            <para>
            <para>The name of the database to update in the catalog. For Hive compatibility, this is
            folded to lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateDatabaseResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatabaseInput parameter.
            The -PassThru parameter is deprecated, use -Select '^DatabaseInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDatabaseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet">
            <summary>
            Updates a specified development endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.AddArgument">
            <summary>
            <para>
            <para>The map of arguments to add the map of arguments used to configure the <code>DevEndpoint</code>.</para><para>Valid arguments are:</para><ul><li><para><code>"--enable-glue-datacatalog": ""</code></para></li></ul><para>You can specify a version of Python support for development endpoints by using the
            <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code>
            APIs. If no arguments are provided, the version defaults to Python 2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.AddPublicKey">
            <summary>
            <para>
            <para>The list of public keys for the <code>DevEndpoint</code> to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.CustomLibrary">
            <summary>
            <para>
            <para>Custom Python or Java libraries to be loaded in the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.DeleteArgument">
            <summary>
            <para>
            <para>The list of argument keys to be deleted from the map of arguments used to configure
            the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.DeletePublicKey">
            <summary>
            <para>
            <para>The list of public keys to be deleted from the <code>DevEndpoint</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.EndpointName">
            <summary>
            <para>
            <para>The name of the <code>DevEndpoint</code> to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.PublicKey">
            <summary>
            <para>
            <para>The public key for the <code>DevEndpoint</code> to use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.UpdateEtlLibrary">
            <summary>
            <para>
            <para><code>True</code> if the list of custom libraries to be loaded in the development
            endpoint needs to be updated, or <code>False</code> if otherwise.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateDevEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EndpointName parameter.
            The -PassThru parameter is deprecated, use -Select '^EndpointName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEDevEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet">
            <summary>
            Updates an existing job definition. The previous job definition is completely overwritten
            by this information.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the job definition to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet.JobUpdate">
            <summary>
            <para>
            <para>Specifies the values with which to update the job definition. Unspecified configuration
            is removed or reset to default values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateJobResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobUpdate parameter.
            The -PassThru parameter is deprecated, use -Select '^JobUpdate' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet">
            <summary>
            Synchronizes a job from the source control repository. This operation takes the job
            artifacts that are located in the remote repository and updates the Glue internal
            stores with these artifacts.
            
             
            <para>
            This API supports optional parameters which take in the repository information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.AuthStrategy">
            <summary>
            <para>
            <para>The type of authentication, which can be an authentication token stored in Amazon
            Web Services Secrets Manager, or a personal access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.AuthToken">
            <summary>
            <para>
            <para>The value of the authorization token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.BranchName">
            <summary>
            <para>
            <para>An optional branch in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.CommitId">
            <summary>
            <para>
            <para>A commit ID for a commit in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.Folder">
            <summary>
            <para>
            <para>An optional folder in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the Glue job to be synchronized to or from the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.Provider">
            <summary>
            <para>
            <para>The provider for the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.RepositoryOwner">
            <summary>
            <para>
            <para>The owner of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateJobFromSourceControlResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateJobFromSourceControlResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEJobFromSourceControlCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet">
            <summary>
            Updates an existing machine learning transform. Call this operation to tune the algorithm
            parameters to achieve better results.
            
             
            <para>
            After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code>
            operation to assess how well your new parameters achieved your goals (such as improving
            the quality of your machine learning transform, or making it more cost-effective).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.FindMatchesParameters_AccuracyCostTradeoff">
            <summary>
            <para>
            <para>The value that is selected when tuning your transform for a balance between accuracy
            and cost. A value of 0.5 means that the system balances accuracy and cost concerns.
            A value of 1.0 means a bias purely for accuracy, which typically results in a higher
            cost, sometimes substantially higher. A value of 0.0 means a bias purely for cost,
            which results in a less accurate <code>FindMatches</code> transform, sometimes with
            unacceptable accuracy.</para><para>Accuracy measures how well the transform finds true positives and true negatives.
            Increasing accuracy requires more machine resources and cost. But it also results
            in increased recall. </para><para>Cost measures how many compute resources, and thus money, are consumed to run the
            transform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Description">
            <summary>
            <para>
            <para>A description of the transform. The default is an empty string.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.FindMatchesParameters_EnforceProvidedLabel">
            <summary>
            <para>
            <para>The value to switch on or off to force the output to match the provided labels from
            users. If the value is <code>True</code>, the <code>find matches</code> transform
            forces the output to match the provided labels. The results override the normal conflation
            results. If the value is <code>False</code>, the <code>find matches</code> transform
            does not ensure all the labels provided are respected, and the results rely on the
            trained model.</para><para>Note that setting this value to true may increase the conflation execution time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.GlueVersion">
            <summary>
            <para>
            <para>This value determines which version of Glue this machine learning transform is compatible
            with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue
            compatibility defaults to Glue 0.9. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">Glue
            Versions</a> in the developer guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.MaxCapacity">
            <summary>
            <para>
            <para>The number of Glue data processing units (DPUs) that are allocated to task runs for
            this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a
            relative measure of processing power that consists of 4 vCPUs of compute capacity
            and 16 GB of memory. For more information, see the <a href="https://aws.amazon.com/glue/pricing/">Glue
            pricing page</a>. </para><para>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>,
            the <code>MaxCapacity</code> field is set automatically and becomes read-only.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.MaxRetry">
            <summary>
            <para>
            <para>The maximum number of times to retry a task for this transform after a task run fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Name">
            <summary>
            <para>
            <para>The unique name that you gave the transform when you created it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.NumberOfWorker">
            <summary>
            <para>
            <para>The number of workers of a defined <code>workerType</code> that are allocated when
            this task runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.FindMatchesParameters_PrecisionRecallTradeoff">
            <summary>
            <para>
            <para>The value selected when tuning your transform for a balance between precision and
            recall. A value of 0.5 means no preference; a value of 1.0 means a bias purely for
            precision, and a value of 0.0 means a bias for recall. Because this is a tradeoff,
            choosing values close to 1.0 means very low recall, and choosing values close to 0.0
            results in very low precision.</para><para>The precision metric indicates how often your model is correct when it predicts a
            match. </para><para>The recall metric indicates that for an actual match, how often your model predicts
            the match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.FindMatchesParameters_PrimaryKeyColumnName">
            <summary>
            <para>
            <para>The name of a column that uniquely identifies rows in the source table. Used to help
            identify matching records.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Role">
            <summary>
            <para>
            <para>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Timeout">
            <summary>
            <para>
            <para>The timeout for a task run for this transform in minutes. This is the maximum time
            that a task run for this transform can consume resources before it is terminated and
            enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.TransformId">
            <summary>
            <para>
            <para>A unique identifier that was generated when the transform was created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Parameters_TransformType">
            <summary>
            <para>
            <para>The type of machine learning transform.</para><para>For information about the types of machine learning transforms, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html">Creating
            Machine Learning Transforms</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.WorkerType">
            <summary>
            <para>
            <para>The type of predefined worker that is allocated when this task runs. Accepts a value
            of Standard, G.1X, or G.2X.</para><ul><li><para>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 50GB disk, and 2 executors per worker.</para></li><li><para>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory
            and a 64GB disk, and 1 executor per worker.</para></li><li><para>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory
            and a 128GB disk, and 1 executor per worker.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TransformId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateMLTransformResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateMLTransformResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TransformId parameter.
            The -PassThru parameter is deprecated, use -Select '^TransformId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEMLTransformCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet">
            <summary>
            Updates a partition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the partition to be updated resides. If none is provided,
            the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the table in question resides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.PartitionInput">
            <summary>
            <para>
            <para>The new partition object to update the partition to.</para><para>The <code>Values</code> property can't be changed. If you want to change the partition
            key values for a partition, delete and recreate the partition.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.PartitionValueList">
            <summary>
            <para>
            <para>List of partition key values that define the partition to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the table in which the partition to be updated is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdatePartitionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PartitionInput parameter.
            The -PassThru parameter is deprecated, use -Select '^PartitionInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet">
            <summary>
            Updates one or more partitions in a batch operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the catalog in which the partition is to be updated. Currently, this should
            be the Amazon Web Services account ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the metadata database in which the partition is to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.Entry">
            <summary>
            <para>
            <para>A list of up to 100 <code>BatchUpdatePartitionRequestEntry</code> objects to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.TableName">
            <summary>
            <para>
            <para>The name of the metadata table in which the partition is to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Errors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.BatchUpdatePartitionResponse).
            Specifying the name of a property of type Amazon.Glue.Model.BatchUpdatePartitionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Entry parameter.
            The -PassThru parameter is deprecated, use -Select '^Entry' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEPartitionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet">
            <summary>
            Updates an existing registry which is used to hold a collection of schemas. The updated
            properties relate to the registry, and do not modify any of the schemas within the
            registry.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.Description">
            <summary>
            <para>
            <para>A description of the registry. If description is not provided, this field will not
            be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.RegistryId_RegistryArn">
            <summary>
            <para>
            <para>Arn of the registry to be updated. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.RegistryId_RegistryName">
            <summary>
            <para>
            <para>Name of the registry. Used only for lookup. One of <code>RegistryArn</code> or <code>RegistryName</code>
            has to be provided. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateRegistryResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateRegistryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Description parameter.
            The -PassThru parameter is deprecated, use -Select '^Description' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUERegistryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet">
            <summary>
            Updates the description, compatibility setting, or version checkpoint for a schema
            set.
            
             
            <para>
            For updating the compatibility setting, the call will not validate compatibility for
            the entire set of schema versions with the new compatibility setting. If the value
            for <code>Compatibility</code> is provided, the <code>VersionNumber</code> (a checkpoint)
            is also required. The API will validate the checkpoint version number for consistency.
            </para><para>
            If the value for the <code>VersionNumber</code> (checkpoint) is provided, <code>Compatibility</code>
            is optional and this can be used to set/reset a checkpoint for the schema.
            </para><para>
            This update will happen only if the schema is in the AVAILABLE state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.Compatibility">
            <summary>
            <para>
            <para>The new compatibility setting for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.Description">
            <summary>
            <para>
            <para>The new description for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.SchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.SchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateSchemaResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateSchemaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaId_SchemaArn parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaId_SchemaArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESchemaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet">
            <summary>
            Synchronizes a job to the source control repository. This operation takes the job
            artifacts from the Glue internal stores and makes a commit to the remote repository
            that is configured on the job.
            
             
            <para>
            This API supports optional parameters which take in the repository information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.AuthStrategy">
            <summary>
            <para>
            <para>The type of authentication, which can be an authentication token stored in Amazon
            Web Services Secrets Manager, or a personal access token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.AuthToken">
            <summary>
            <para>
            <para>The value of the authorization token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.BranchName">
            <summary>
            <para>
            <para>An optional branch in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.CommitId">
            <summary>
            <para>
            <para>A commit ID for a commit in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.Folder">
            <summary>
            <para>
            <para>An optional folder in the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.JobName">
            <summary>
            <para>
            <para>The name of the Glue job to be synchronized to or from the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.Provider">
            <summary>
            <para>
            <para>The provider for the remote repository.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.RepositoryName">
            <summary>
            <para>
            <para>The name of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.RepositoryOwner">
            <summary>
            <para>
            <para>The owner of the remote repository that contains the job artifacts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobName'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateSourceControlFromJobResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateSourceControlFromJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUESourceControlFromJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet">
            <summary>
            Updates a metadata table in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the table resides. If none is provided, the Amazon
            Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database in which the table resides. For Hive compatibility,
            this name is entirely lowercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.SkipArchive">
            <summary>
            <para>
            <para>By default, <code>UpdateTable</code> always creates an archived version of the table
            before updating it. However, if <code>skipArchive</code> is set to true, <code>UpdateTable</code>
            does not create the archived version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.TableInput">
            <summary>
            <para>
            <para>An updated <code>TableInput</code> object to define the metadata table in the catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.TransactionId">
            <summary>
            <para>
            <para>The transaction ID at which to update the table contents. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.VersionId">
            <summary>
            <para>
            <para>The version ID at which to update the table contents. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateTableResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TableInput parameter.
            The -PassThru parameter is deprecated, use -Select '^TableInput' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETableCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet">
            <summary>
            Updates a trigger definition.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet.Name">
            <summary>
            <para>
            <para>The name of the trigger to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet.TriggerUpdate">
            <summary>
            <para>
            <para>The new values with which to update the trigger.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Trigger'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateTriggerResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateTriggerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TriggerUpdate parameter.
            The -PassThru parameter is deprecated, use -Select '^TriggerUpdate' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUETriggerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet">
            <summary>
            Updates an existing function definition in the Data Catalog.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.CatalogId">
            <summary>
            <para>
            <para>The ID of the Data Catalog where the function to be updated is located. If none is
            provided, the Amazon Web Services account ID is used by default.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.DatabaseName">
            <summary>
            <para>
            <para>The name of the catalog database where the function to be updated is located.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.FunctionInput">
            <summary>
            <para>
            <para>A <code>FunctionInput</code> object that redefines the function in the Data Catalog.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.FunctionName">
            <summary>
            <para>
            <para>The name of the function.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateUserDefinedFunctionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FunctionName parameter.
            The -PassThru parameter is deprecated, use -Select '^FunctionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEUserDefinedFunctionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet">
            <summary>
            Updates an existing workflow.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.DefaultRunProperty">
            <summary>
            <para>
            <para>A collection of properties to be used as part of each execution of the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.Description">
            <summary>
            <para>
            <para>The description of the workflow.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.MaxConcurrentRun">
            <summary>
            <para>
            <para>You can use this parameter to prevent unwanted multiple updates to data, to control
            costs, or in some cases, to prevent exceeding the maximum number of concurrent runs
            of any of the component jobs. If you leave this parameter blank, there is no limit
            to the number of concurrent workflow runs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.UpdateWorkflowResponse).
            Specifying the name of a property of type Amazon.Glue.Model.UpdateWorkflowResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.UpdateGLUEWorkflowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet">
            <summary>
            Puts the metadata key value pair for a specified schema version ID. A maximum of 10
            key value pairs will be allowed per schema version. They can be added over one or
            more calls.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_LatestVersion">
            <summary>
            <para>
            <para>The latest version available for the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.MetadataKeyValue_MetadataKey">
            <summary>
            <para>
            <para>A metadata key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.MetadataKeyValue_MetadataValue">
            <summary>
            <para>
            <para>A metadata key’s corresponding value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaId_RegistryName">
            <summary>
            <para>
            <para>The name of the schema registry that contains the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code>
            has to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaId_SchemaName">
            <summary>
            <para>
            <para>The name of the schema. One of <code>SchemaArn</code> or <code>SchemaName</code> has
            to be provided.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaVersionId">
            <summary>
            <para>
            <para>The unique version ID of the schema version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.SchemaVersionNumber_VersionNumber">
            <summary>
            <para>
            <para>The version number of the schema.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.PutSchemaVersionMetadataResponse).
            Specifying the name of a property of type Amazon.Glue.Model.PutSchemaVersionMetadataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SchemaVersionId parameter.
            The -PassThru parameter is deprecated, use -Select '^SchemaVersionId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUESchemaVersionMetadataCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet">
            <summary>
            Puts the specified workflow run properties for the given workflow run. If a property
            already exists for the specified run, then it overrides the value otherwise adds the
            property to existing properties.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.Name">
            <summary>
            <para>
            <para>Name of the workflow which was run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.RunId">
            <summary>
            <para>
            <para>The ID of the workflow run for which the run properties should be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.RunProperty">
            <summary>
            <para>
            <para>The properties to put for the specified run.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Glue.Model.PutWorkflowRunPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the RunId parameter.
            The -PassThru parameter is deprecated, use -Select '^RunId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GLUE.WriteGLUEWorkflowRunPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
