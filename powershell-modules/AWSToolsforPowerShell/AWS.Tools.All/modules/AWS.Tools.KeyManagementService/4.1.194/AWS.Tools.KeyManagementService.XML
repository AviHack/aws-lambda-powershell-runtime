<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.KeyManagementService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet">
            <summary>
            Adds or edits tags on a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a>.
            
             <note><para>
            Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para></note><para>
            Each tag consists of a tag key and a tag value, both of which are case-sensitive strings.
            The tag value can be an empty (null) string. To add a tag, specify a new tag key and
            a tag value. To edit a tag, specify an existing tag key and a new tag value.
            </para><para>
            You can use this operation to tag a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a>, but you cannot tag an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed key</a>, an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk">Amazon
            Web Services owned key</a>, a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#keystore-concept">custom
            key store</a>, or an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#alias-concept">alias</a>.
            </para><para>
            You can also add tags to a KMS key while creating it (<a>CreateKey</a>) or replicating
            it (<a>ReplicateKey</a>).
            </para><para>
            For information about using tags in KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            keys</a>. For general information about tags, including the format and syntax, see
            <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon
            Web Services resources</a> in the <i>Amazon Web Services General Reference</i>. 
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:TagResource</a>
            (key policy)
            </para><para><b>Related operations</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>ListResourceTags</a></para></li><li><para><a>ReplicateKey</a></para></li><li><para><a>UntagResource</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies a customer managed key in the account and Region.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags. </para><para>Each tag consists of a tag key and a tag value. The tag value can be an empty (null)
            string. </para><para>You cannot have more than one tag on a KMS key with the same tag key. If you specify
            an existing tag key with a different tag value, KMS replaces the current tag value
            with the specified one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.AddKMSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet">
            <summary>
            Connects or reconnects a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> to its associated CloudHSM cluster.
            
             
            <para>
            The custom key store must be connected before you can create KMS keys in the key store
            or use the KMS keys it contains. You can disconnect and reconnect a custom key store
            at any time.
            </para><para>
            To connect a custom key store, its associated CloudHSM cluster must have at least
            one active HSM. To get the number of active HSMs in a cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation. To add HSMs to the cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_CreateHsm.html">CreateHsm</a>
            operation. Also, the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user</a> (CU) must not be logged into the cluster. This
            prevents KMS from using this account to log in.
            </para><para>
            The connection process can take an extended amount of time to complete; up to 20 minutes.
            This operation starts the connection process, but it does not wait for it to complete.
            When it succeeds, this operation quickly returns an HTTP 200 response and a JSON object
            with no properties. However, this response does not indicate that the custom key store
            is connected. To get the connection state of the custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.
            </para><para>
            During the connection process, KMS finds the CloudHSM cluster that is associated with
            the custom key store, creates the connection infrastructure, connects to the cluster,
            logs into the CloudHSM client as the <code>kmsuser</code> CU, and rotates its password.
            </para><para>
            The <code>ConnectCustomKeyStore</code> operation might fail for various reasons. To
            find the reason, use the <a>DescribeCustomKeyStores</a> operation and see the <code>ConnectionErrorCode</code>
            in the response. For help interpreting the <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
            </para><para>
            To fix the failure, use the <a>DisconnectCustomKeyStore</a> operation to disconnect
            the custom key store, correct the error, use the <a>UpdateCustomKeyStore</a> operation
            if necessary, and then use <code>ConnectCustomKeyStore</code> again.
            </para><para>
            If you are having trouble connecting or disconnecting a custom key store, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            a Custom Key Store</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ConnectCustomKeyStore</a>
            (IAM policy)
            </para><para><b>Related operations</b></para><ul><li><para><a>CreateCustomKeyStore</a></para></li><li><para><a>DeleteCustomKeyStore</a></para></li><li><para><a>DescribeCustomKeyStores</a></para></li><li><para><a>DisconnectCustomKeyStore</a></para></li><li><para><a>UpdateCustomKeyStore</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the key store ID of the custom key store that you want to connect. To find the
            ID of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ConnectCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ConnectKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet">
            <summary>
            Deletes a grant. Typically, you retire a grant when you no longer need its permissions.
            To identify the grant to retire, use a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">grant
            token</a>, or both the grant ID and a key identifier (key ID or key ARN) of the KMS
            key. The <a>CreateGrant</a> operation returns both values.
            
             
            <para>
            This operation can be called by the <i>retiring principal</i> for a grant, by the
            <i>grantee principal</i> if the grant allows the <code>RetireGrant</code> operation,
            and by the Amazon Web Services account in which the grant is created. It can also
            be called by principals to whom permission for retiring a grant is delegated. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#grant-delete">Retiring
            and revoking grants</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            For detailed information about grants, including grant terminology, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants
            in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>. For examples
            of working with grants in several programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html">Programming
            grants</a>. 
            </para><para><b>Cross-account use</b>: Yes. You can retire a grant on a KMS key in a different
            Amazon Web Services account.
            </para><para><b>Required permissions:</b>:Permission to retire a grant is determined primarily
            by the grant. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#grant-delete">Retiring
            and revoking grants</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateGrant</a></para></li><li><para><a>ListGrants</a></para></li><li><para><a>ListRetirableGrants</a></para></li><li><para><a>RevokeGrant</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.GrantId">
            <summary>
            <para>
            <para>Identifies the grant to retire. To get the grant ID, use <a>CreateGrant</a>, <a>ListGrants</a>,
            or <a>ListRetirableGrants</a>.</para><ul><li><para>Grant ID Example - 0123456789012345678901234567890123456789012345678901234567890123</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.GrantToken">
            <summary>
            <para>
            <para>Identifies the grant to be retired. You can use a grant token to identify a new grant
            even before it has achieved eventual consistency.</para><para>Only the <a>CreateGrant</a> operation returns a grant token. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#terms-eventual-consistency">Eventual
            consistency</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>The key ARN KMS key associated with the grant. To find the key ARN, use the <a>ListKeys</a>
            operation.</para><para>For example: <code>arn:aws:kms:us-east-2:444455556666:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.RetireGrantResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet">
            <summary>
            Sets the state of a KMS key to disabled. This change temporarily prevents use of the
            KMS key for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. 
            
             
            <para>
            For more information about how key state affects the use of a KMS key, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DisableKey</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>EnableKey</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key to disable.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisableKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet">
            <summary>
            Disables <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> of the specified symmetric encryption KMS key.
            
             
            <para>
            Automatic key rotation is supported only on symmetric encryption KMS keys. You cannot
            enable or disable automatic rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">asymmetric
            KMS keys</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            KMS keys</a>, KMS keys with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or KMS keys in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. The key rotation status of these KMS keys is always <code>false</code>.
            To enable or disable automatic rotation of a set of related <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate">multi-Region
            keys</a>, set the property on the primary key.
            </para><para>
            You can enable (<a>EnableKeyRotation</a>) and disable automatic rotation of the key
            material in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed KMS keys</a>. Key material rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed KMS keys</a> is not configurable. KMS always rotates the key
            material for every year. Rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk">Amazon
            Web Services owned KMS keys</a> varies.
            </para><note><para>
            In May 2022, KMS changed the rotation schedule for Amazon Web Services managed keys
            from every three years to every year. For details, see <a>EnableKeyRotation</a>.
            </para></note><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DisableKeyRotation</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>EnableKeyRotation</a></para></li><li><para><a>GetKeyRotationStatus</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies a symmetric encryption KMS key. You cannot enable or disable automatic
            rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html#asymmetric-cmks">asymmetric
            KMS keys</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            KMS keys</a>, KMS keys with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or KMS keys in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisableKeyRotationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisableKMSKeyRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet">
            <summary>
            Disconnects the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> from its associated CloudHSM cluster. While a custom key store is disconnected,
            you can manage the custom key store and its KMS keys, but you cannot create or use
            KMS keys in the custom key store. You can reconnect the custom key store at any time.
            
             <note><para>
            While a custom key store is disconnected, all attempts to create KMS keys in the custom
            key store or to use existing KMS keys in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> will fail. This action can prevent users from storing and accessing
            sensitive data.
            </para></note><para>
            To find the connection state of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation. To reconnect a custom key store, use the <a>ConnectCustomKeyStore</a> operation.
            </para><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DisconnectCustomKeyStore</a>
            (IAM policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ConnectCustomKeyStore</a></para></li><li><para><a>CreateCustomKeyStore</a></para></li><li><para><a>DeleteCustomKeyStore</a></para></li><li><para><a>DescribeCustomKeyStores</a></para></li><li><para><a>UpdateCustomKeyStore</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the ID of the custom key store you want to disconnect. To find the ID of a custom
            key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DisconnectCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.DisconnectKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet">
            <summary>
            Sets the key state of a KMS key to enabled. This allows you to use the KMS key for
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. 
            
             
            <para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:EnableKey</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>DisableKey</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key to enable.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EnableKeyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet">
            <summary>
            Enables <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> of the specified symmetric encryption KMS key. 
            
             
            <para>
            When you enable automatic rotation of a<a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed KMS key</a>, KMS rotates the key material of the KMS key one year (approximately
            365 days) from the enable date and every year thereafter. You can monitor rotation
            of the key material for your KMS keys in CloudTrail and Amazon CloudWatch. To disable
            rotation of the key material in a customer managed KMS key, use the <a>DisableKeyRotation</a>
            operation.
            </para><para>
            Automatic key rotation is supported only on <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#symmetric-cmks">symmetric
            encryption KMS keys</a>. You cannot enable or disable automatic rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">asymmetric
            KMS keys</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            KMS keys</a>, KMS keys with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or KMS keys in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. The key rotation status of these KMS keys is always <code>false</code>.
            To enable or disable automatic rotation of a set of related <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate">multi-Region
            keys</a>, set the property on the primary key. 
            </para><para>
            You cannot enable or disable automatic rotation <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed KMS keys</a>. KMS always rotates the key material of Amazon Web
            Services managed keys every year. Rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk">Amazon
            Web Services owned KMS keys</a> varies.
            </para><note><para>
            In May 2022, KMS changed the rotation schedule for Amazon Web Services managed keys
            from every three years (approximately 1,095 days) to every year (approximately 365
            days).
            </para><para>
            New Amazon Web Services managed keys are automatically rotated one year after they
            are created, and approximately every year thereafter. 
            </para><para>
            Existing Amazon Web Services managed keys are automatically rotated one year after
            their most recent rotation, and every year thereafter.
            </para></note><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:EnableKeyRotation</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>DisableKeyRotation</a></para></li><li><para><a>GetKeyRotationStatus</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies a symmetric encryption KMS key. You cannot enable or disable automatic
            rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">asymmetric
            KMS keys</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            KMS keys</a>, KMS keys with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or KMS keys in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. The key rotation status of these KMS keys is always <code>false</code>.
            To enable or disable automatic rotation of a set of related <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate">multi-Region
            keys</a>, set the property on the primary key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EnableKeyRotationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.EnableKMSKeyRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet">
            <summary>
            Gets a list of aliases in the caller's Amazon Web Services account and region. For
            more information about aliases, see <a>CreateAlias</a>.
            
             
            <para>
            By default, the <code>ListAliases</code> operation returns all aliases in the account
            and region. To get only the aliases associated with a particular KMS key, use the
            <code>KeyId</code> parameter.
            </para><para>
            The <code>ListAliases</code> response can include aliases that you created and associated
            with your customer managed keys, and aliases that Amazon Web Services created and
            associated with Amazon Web Services managed keys in your account. You can recognize
            Amazon Web Services aliases because their names have the format <code>aws/&lt;service-name&gt;</code>,
            such as <code>aws/dynamodb</code>.
            </para><para>
            The response might also include aliases that have no <code>TargetKeyId</code> field.
            These are predefined aliases that Amazon Web Services has created but has not yet
            associated with a KMS key. Aliases that Amazon Web Services creates in your account,
            including predefined aliases, do not count against your <a href="https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#aliases-limit">KMS
            aliases quota</a>.
            </para><para><b>Cross-account use</b>: No. <code>ListAliases</code> does not return aliases in
            other Amazon Web Services accounts.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListAliases</a>
            (IAM policy)
            </para><para>
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access">Controlling
            access to aliases</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>UpdateAlias</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.KeyId">
            <summary>
            <para>
            <para>Lists only aliases that are associated with the specified KMS key. Enter a KMS key
            in your Amazon Web Services account. </para><para>This parameter is optional. If you omit it, <code>ListAliases</code> returns all aliases
            in the account and Region.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Aliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListAliasesResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet">
            <summary>
            Gets information about <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key stores</a> in the account and Region.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.
            </para><para>
            By default, this operation returns information about all custom key stores in the
            account and Region. To get only information about a particular custom key store, use
            either the <code>CustomKeyStoreName</code> or <code>CustomKeyStoreId</code> parameter
            (but not both).
            </para><para>
            To determine whether the custom key store is connected to its CloudHSM cluster, use
            the <code>ConnectionState</code> element in the response. If an attempt to connect
            the custom key store failed, the <code>ConnectionState</code> value is <code>FAILED</code>
            and the <code>ConnectionErrorCode</code> element in the response indicates the cause
            of the failure. For help interpreting the <code>ConnectionErrorCode</code>, see <a>CustomKeyStoresListEntry</a>.
            </para><para>
            Custom key stores have a <code>DISCONNECTED</code> connection state if the key store
            has never been connected or you use the <a>DisconnectCustomKeyStore</a> operation
            to disconnect it. If your custom key store state is <code>CONNECTED</code> but you
            are having trouble using it, make sure that its associated CloudHSM cluster is active
            and contains the minimum number of HSMs required for the operation, if any.
            </para><para>
             For help repairing your custom key store, see the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            Custom Key Stores</a> topic in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DescribeCustomKeyStores</a>
            (IAM policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ConnectCustomKeyStore</a></para></li><li><para><a>CreateCustomKeyStore</a></para></li><li><para><a>DeleteCustomKeyStore</a></para></li><li><para><a>DisconnectCustomKeyStore</a></para></li><li><para><a>UpdateCustomKeyStore</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Gets only information about the specified custom key store. Enter the key store ID.</para><para>By default, this operation gets information about all custom key stores in the account
            and Region. To limit the output to a particular custom key store, you can use either
            the <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code> parameter, but
            not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.CustomKeyStoreName">
            <summary>
            <para>
            <para>Gets only information about the specified custom key store. Enter the friendly name
            of the custom key store.</para><para>By default, this operation gets information about all custom key stores in the account
            and Region. To limit the output to a particular custom key store, you can use either
            the <code>CustomKeyStoreId</code> or <code>CustomKeyStoreName</code> parameter, but
            not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomKeyStores'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DescribeCustomKeyStoresResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DescribeCustomKeyStoresResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSCustomKeyStoreCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet">
            <summary>
            Gets a list of all grants for the specified KMS key. 
            
             
            <para>
            You must specify the KMS key in all requests. You can filter the grant list by grant
            ID or grantee principal.
            </para><para>
            For detailed information about grants, including grant terminology, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants
            in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>. For examples
            of working with grants in several programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html">Programming
            grants</a>. 
            </para><note><para>
            The <code>GranteePrincipal</code> field in the <code>ListGrants</code> response usually
            contains the user or role designated as the grantee principal in the grant. However,
            when the grantee principal in the grant is an Amazon Web Services service, the <code>GranteePrincipal</code>
            field contains the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services">service
            principal</a>, which might represent several different grantee principals.
            </para></note><para><b>Cross-account use</b>: Yes. To perform this operation on a KMS key in a different
            Amazon Web Services account, specify the key ARN in the value of the <code>KeyId</code>
            parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListGrants</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateGrant</a></para></li><li><para><a>ListRetirableGrants</a></para></li><li><para><a>RetireGrant</a></para></li><li><para><a>RevokeGrant</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.GranteePrincipal">
            <summary>
            <para>
            <para>Returns only grants where the specified principal is the grantee principal for the
            grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.GrantId">
            <summary>
            <para>
            <para>Returns only the grant with the specified grant ID. The grant ID uniquely identifies
            the grant. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.KeyId">
            <summary>
            <para>
            <para>Returns only grants for the specified KMS key. This parameter is required.</para><para>Specify the key ID or key ARN of the KMS key. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListGrantsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSGrantListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet">
            <summary>
            Provides detailed information about a KMS key. You can run <code>DescribeKey</code>
            on a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a> or an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed key</a>.
            
             
            <para>
            This detailed information includes the key ARN, creation date (and deletion date,
            if applicable), the key state, and the origin and expiration date (if any) of the
            key material. It includes fields, like <code>KeySpec</code>, that help you distinguish
            different types of KMS keys. It also displays the key usage (encryption, signing,
            or generating and verifying MACs) and the algorithms that the KMS key supports. For
            KMS keys in custom key stores, it includes information about the custom key store,
            such as the key store ID and the CloudHSM cluster ID. For multi-Region keys, it displays
            the primary key and all related replica keys. 
            </para><para><code>DescribeKey</code> does not return the following information:
            </para><ul><li><para>
            Aliases associated with the KMS key. To get this information, use <a>ListAliases</a>.
            </para></li><li><para>
            Whether automatic key rotation is enabled on the KMS key. To get this information,
            use <a>GetKeyRotationStatus</a>. Also, some key states prevent a KMS key from being
            automatically rotated. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-how-it-works">How
            Automatic Key Rotation Works</a> in the <i>Key Management Service Developer Guide</i>.
            </para></li><li><para>
            Tags on the KMS key. To get this information, use <a>ListResourceTags</a>.
            </para></li><li><para>
            Key policies and grants on the KMS key. To get this information, use <a>GetKeyPolicy</a>
            and <a>ListGrants</a>.
            </para></li></ul><para>
            In general, <code>DescribeKey</code> is a non-mutating operation. It returns data
            about KMS keys, but doesn't change them. However, Amazon Web Services services use
            <code>DescribeKey</code> to create <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed keys</a> from a <i>predefined Amazon Web Services alias</i> with
            no key ID.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DescribeKey</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>GetKeyPolicy</a></para></li><li><para><a>GetKeyRotationStatus</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>ListGrants</a></para></li><li><para><a>ListKeys</a></para></li><li><para><a>ListResourceTags</a></para></li><li><para><a>ListRetirableGrants</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Describes the specified KMS key. </para><para>If you specify a predefined Amazon Web Services alias (an Amazon Web Services alias
            with no key ID), KMS associates the alias with an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html##aws-managed-cmk">Amazon
            Web Services managed key</a> and returns its <code>KeyId</code> and <code>Arn</code>
            in the response.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DescribeKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DescribeKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet">
            <summary>
            Gets a list of all KMS keys in the caller's Amazon Web Services account and Region.
            
             
            <para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListKeys</a>
            (IAM policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>DescribeKey</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>ListResourceTags</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 1000, inclusive.
            If you do not include a value, it defaults to 100.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Keys'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListKeysResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListKeysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet">
            <summary>
            Gets a key policy attached to the specified KMS key.
            
             
            <para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GetKeyPolicy</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>PutKeyPolicy</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.KeyId">
            <summary>
            <para>
            <para>Gets the key policy for the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>Specifies the name of the key policy. The only valid name is <code>default</code>.
            To get the names of key policies, use <a>ListKeyPolicies</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetKeyPolicyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetKeyPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet">
            <summary>
            Gets the names of the key policies that are attached to a KMS key. This operation
            is designed to get policy names that you can use in a <a>GetKeyPolicy</a> operation.
            However, the only valid policy name is <code>default</code>. 
            
             
            <para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListKeyPolicies</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>GetKeyPolicy</a></para></li><li><para><a>PutKeyPolicy</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.KeyId">
            <summary>
            <para>
            <para>Gets the names of key policies for the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 1000, inclusive.
            If you do not include a value, it defaults to 100.</para><para>Only one policy can be attached to a key.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PolicyNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListKeyPoliciesResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListKeyPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet">
            <summary>
            Gets a Boolean value that indicates whether <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            rotation of the key material</a> is enabled for the specified KMS key.
            
             
            <para>
            When you enable automatic rotation for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed KMS keys</a>, KMS rotates the key material of the KMS key one year (approximately
            365 days) from the enable date and every year thereafter. You can monitor rotation
            of the key material for your KMS keys in CloudTrail and Amazon CloudWatch.
            </para><para>
            Automatic key rotation is supported only on <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#symmetric-cmks">symmetric
            encryption KMS keys</a>. You cannot enable or disable automatic rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">asymmetric
            KMS keys</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            KMS keys</a>, KMS keys with <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">imported
            key material</a>, or KMS keys in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. The key rotation status of these KMS keys is always <code>false</code>.
            To enable or disable automatic rotation of a set of related <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-rotate">multi-Region
            keys</a>, set the property on the primary key..
            </para><para>
            You can enable (<a>EnableKeyRotation</a>) and disable automatic rotation (<a>DisableKeyRotation</a>)
            of the key material in customer managed KMS keys. Key material rotation of <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed KMS keys</a> is not configurable. KMS always rotates the key
            material in Amazon Web Services managed KMS keys every year. The key rotation status
            for Amazon Web Services managed KMS keys is always <code>true</code>.
            </para><note><para>
            In May 2022, KMS changed the rotation schedule for Amazon Web Services managed keys
            from every three years to every year. For details, see <a>EnableKeyRotation</a>.
            </para></note><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><ul><li><para>
            Disabled: The key rotation status does not change when you disable a KMS key. However,
            while the KMS key is disabled, KMS does not rotate the key material. When you re-enable
            the KMS key, rotation resumes. If the key material in the re-enabled KMS key hasn't
            been rotated in one year, KMS rotates it immediately, and every year thereafter. If
            it's been less than a year since the key material in the re-enabled KMS key was rotated,
            the KMS key resumes its prior rotation schedule.
            </para></li><li><para>
            Pending deletion: While a KMS key is pending deletion, its key rotation status is
            <code>false</code> and KMS does not rotate the key material. If you cancel the deletion,
            the original key rotation status returns to <code>true</code>.
            </para></li></ul><para><b>Cross-account use</b>: Yes. To perform this operation on a KMS key in a different
            Amazon Web Services account, specify the key ARN in the value of the <code>KeyId</code>
            parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GetKeyRotationStatus</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>DisableKeyRotation</a></para></li><li><para><a>EnableKeyRotation</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.KeyId">
            <summary>
            <para>
            <para>Gets the rotation status for the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyRotationEnabled'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetKeyRotationStatusResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetKeyRotationStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSKeyRotationStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet">
            <summary>
            Returns the items you need to import key material into a symmetric encryption KMS
            key. For more information about importing key material into KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            key material</a> in the <i>Key Management Service Developer Guide</i>.
            
             
            <para>
            This operation returns a public key and an import token. Use the public key to encrypt
            the symmetric key material. Store the import token to send with a subsequent <a>ImportKeyMaterial</a>
            request.
            </para><para>
            You must specify the key ID of the symmetric encryption KMS key into which you will
            import key material. This KMS key's <code>Origin</code> must be <code>EXTERNAL</code>.
            You must also specify the wrapping algorithm and type of wrapping key (public key)
            that you will use to encrypt the key material. You cannot perform this operation on
            an asymmetric KMS key, an HMAC KMS key, or on any KMS key in a different Amazon Web
            Services account.
            </para><para>
            To import key material, you must use the public key and import token from the same
            response. These items are valid for 24 hours. The expiration date and time appear
            in the <code>GetParametersForImport</code> response. You cannot use an expired token
            in an <a>ImportKeyMaterial</a> request. If your key and token expire, send another
            <code>GetParametersForImport</code> request.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GetParametersForImport</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ImportKeyMaterial</a></para></li><li><para><a>DeleteImportedKeyMaterial</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.KeyId">
            <summary>
            <para>
            <para>The identifier of the symmetric encryption KMS key into which you will import key
            material. The <code>Origin</code> of the KMS key must be <code>EXTERNAL</code>.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.WrappingAlgorithm">
            <summary>
            <para>
            <para>The algorithm you will use to encrypt the key material before importing it with <a>ImportKeyMaterial</a>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys-encrypt-key-material.html">Encrypt
            the Key Material</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.WrappingKeySpec">
            <summary>
            <para>
            <para>The type of wrapping key (public key) to return in the response. Only 2048-bit RSA
            public keys are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetParametersForImportResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetParametersForImportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSParametersForImportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet">
            <summary>
            Returns the public key of an asymmetric KMS key. Unlike the private key of a asymmetric
            KMS key, which never leaves KMS unencrypted, callers with <code>kms:GetPublicKey</code>
            permission can download the public key of an asymmetric KMS key. You can share the
            public key to allow others to encrypt messages and verify signatures outside of KMS.
            For information about asymmetric KMS keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            
             
            <para>
            You do not need to download the public key. Instead, you can use the public key within
            KMS by calling the <a>Encrypt</a>, <a>ReEncrypt</a>, or <a>Verify</a> operations with
            the identifier of an asymmetric KMS key. When you use the public key within KMS, you
            benefit from the authentication, authorization, and logging that are part of every
            KMS operation. You also reduce of risk of encrypting data that cannot be decrypted.
            These features are not effective outside of KMS.
            </para><para>
            To verify a signature outside of KMS with an SM2 public key (China Regions only),
            you must specify the distinguishing ID. By default, KMS uses <code>1234567812345678</code>
            as the distinguishing ID. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-sm-offline-verification">Offline
            verification with SM2 key pairs</a>.
            </para><para>
            To help you use the public key safely outside of KMS, <code>GetPublicKey</code> returns
            important information about the public key in the response, including:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-KeySpec">KeySpec</a>:
            The type of key material in the public key, such as <code>RSA_4096</code> or <code>ECC_NIST_P521</code>.
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-KeyUsage">KeyUsage</a>:
            Whether the key is used for encryption or signing.
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-EncryptionAlgorithms">EncryptionAlgorithms</a>
            or <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GetPublicKey.html#KMS-GetPublicKey-response-SigningAlgorithms">SigningAlgorithms</a>:
            A list of the encryption algorithms or the signing algorithms for the key.
            </para></li></ul><para>
            Although KMS cannot enforce these restrictions on external operations, it is crucial
            that you use this information to prevent the public key from being used improperly.
            For example, you can prevent a public signing key from being used encrypt data, or
            prevent a public key from being used with an encryption algorithm that is not supported
            by KMS. You can also avoid errors, such as using the wrong signing algorithm in a
            verification operation.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GetPublicKey</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>CreateKey</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the asymmetric KMS key that includes the public key.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GetPublicKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GetPublicKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSPublicKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet">
            <summary>
            Returns all tags on the specified KMS key.
            
             
            <para>
            For general information about tags, including the format and syntax, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging
            Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference</i>.
            For information about using tags in KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            keys</a>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListResourceTags</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>ReplicateKey</a></para></li><li><para><a>TagResource</a></para></li><li><para><a>UntagResource</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>Gets tags on the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 50, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para><para>Do not attempt to construct this value. Use only the value of <code>NextMarker</code>
            from the truncated response you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListResourceTagsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListResourceTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet">
            <summary>
            Returns information about all grants in the Amazon Web Services account and Region
            that have the specified retiring principal. 
            
             
            <para>
            You can specify any principal in your Amazon Web Services account. The grants that
            are returned include grants for KMS keys in your Amazon Web Services account and other
            Amazon Web Services accounts. You might use this operation to determine which grants
            you may retire. To retire a grant, use the <a>RetireGrant</a> operation.
            </para><para>
            For detailed information about grants, including grant terminology, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants
            in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>. For examples
            of working with grants in several programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html">Programming
            grants</a>. 
            </para><para><b>Cross-account use</b>: You must specify a principal in your Amazon Web Services
            account. However, this operation can return grants in any Amazon Web Services account.
            You do not need <code>kms:ListRetirableGrants</code> permission (or any other additional
            permission) in any Amazon Web Services account other than your own.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ListRetirableGrants</a>
            (IAM policy) in your Amazon Web Services account.
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateGrant</a></para></li><li><para><a>ListGrants</a></para></li><li><para><a>RetireGrant</a></para></li><li><para><a>RevokeGrant</a></para></li></ul><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.RetiringPrincipal">
            <summary>
            <para>
            <para>The retiring principal for which to list grants. Enter a principal in your Amazon
            Web Services account.</para><para>To specify the retiring principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an Amazon Web Services principal. Valid Amazon Web Services
            principals include Amazon Web Services accounts (root), IAM users, federated users,
            and assumed role users. For examples of the ARN syntax for specifying a principal,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">Amazon
            Web Services Identity and Access Management (IAM)</a> in the Example ARNs section
            of the <i>Amazon Web Services General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Limit">
            <summary>
            <para>
            <para>Use this parameter to specify the maximum number of items to return. When this value
            is present, KMS does not return more than the specified number of items, but it might
            return fewer.</para><para>This value is optional. If you include a value, it must be between 1 and 100, inclusive.
            If you do not include a value, it defaults to 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Marker">
            <summary>
            <para>
            <para>Use this parameter in a subsequent request after you receive a response with truncated
            results. Set it to the value of <code>NextMarker</code> from the truncated response
            you just received.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-Marker $null' for the first call and '-Marker $AWSHistory.LastServiceResponse.NextMarker' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ListRetirableGrantsResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ListRetirableGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.GetKMSRetirableGrantCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of Marker
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet">
            <summary>
            Imports key material into an existing symmetric encryption KMS key that was created
            without key material. After you successfully import key material into a KMS key, you
            can <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#reimport-key-material">reimport
            the same key material</a> into that KMS key, but you cannot import different key material.
            
            
             
            <para>
            You cannot perform this operation on an asymmetric KMS key, an HMAC KMS key, or on
            any KMS key in a different Amazon Web Services account. For more information about
            creating KMS keys with no key material and then importing key material, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            Before using this operation, call <a>GetParametersForImport</a>. Its response includes
            a public key and an import token. Use the public key to encrypt the key material.
            Then, submit the import token from the same <code>GetParametersForImport</code> response.
            </para><para>
            When calling this operation, you must specify the following values:
            </para><ul><li><para>
            The key ID or key ARN of a KMS key with no key material. Its <code>Origin</code> must
            be <code>EXTERNAL</code>.
            </para><para>
            To create a KMS key with no key material, call <a>CreateKey</a> and set the value
            of its <code>Origin</code> parameter to <code>EXTERNAL</code>. To get the <code>Origin</code>
            of a KMS key, call <a>DescribeKey</a>.)
            </para></li><li><para>
            The encrypted key material. To get the public key to encrypt the key material, call
            <a>GetParametersForImport</a>.
            </para></li><li><para>
            The import token that <a>GetParametersForImport</a> returned. You must use a public
            key and token from the same <code>GetParametersForImport</code> response.
            </para></li><li><para>
            Whether the key material expires and if so, when. If you set an expiration date, KMS
            deletes the key material from the KMS key on the specified date, and the KMS key becomes
            unusable. To use the KMS key again, you must reimport the same key material. The only
            way to change an expiration date is by reimporting the same key material and specifying
            a new expiration date. 
            </para></li></ul><para>
            When this operation is successful, the key state of the KMS key changes from <code>PendingImport</code>
            to <code>Enabled</code>, and you can use the KMS key.
            </para><para>
            If this operation fails, use the exception to help determine the problem. If the error
            is related to the key material, the import token, or wrapping key, use <a>GetParametersForImport</a>
            to get a new public key and import token for the KMS key and repeat the import procedure.
            For help, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#importing-keys-overview">How
            To Import Key Material</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ImportKeyMaterial</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>DeleteImportedKeyMaterial</a></para></li><li><para><a>GetParametersForImport</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.EncryptedKeyMaterial">
            <summary>
            <para>
            <para>The encrypted key material to import. The key material must be encrypted with the
            public wrapping key that <a>GetParametersForImport</a> returned, using the wrapping
            algorithm that you specified in the same <code>GetParametersForImport</code> request.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ExpirationModel">
            <summary>
            <para>
            <para>Specifies whether the key material expires. The default is <code>KEY_MATERIAL_EXPIRES</code>,
            in which case you must include the <code>ValidTo</code> parameter. When this parameter
            is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>, you must omit the <code>ValidTo</code>
            parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ImportToken">
            <summary>
            <para>
            <para>The import token that you received in the response to a previous <a>GetParametersForImport</a>
            request. It must be from the same response that contained the public key that you
            used to encrypt the key material.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.KeyId">
            <summary>
            <para>
            <para>The identifier of the symmetric encryption KMS key that receives the imported key
            material. This must be the same KMS key specified in the <code>KeyID</code> parameter
            of the corresponding <a>GetParametersForImport</a> request. The <code>Origin</code>
            of the KMS key must be <code>EXTERNAL</code>. You cannot perform this operation on
            an asymmetric KMS key, an HMAC KMS key, a KMS key in a custom key store, or on a KMS
            key in a different Amazon Web Services account</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.ValidTo">
            <summary>
            <para>
            <para>The time at which the imported key material expires. When the key material expires,
            KMS deletes the key material and the KMS key becomes unusable. You must omit this
            parameter when the <code>ExpirationModel</code> parameter is set to <code>KEY_MATERIAL_DOES_NOT_EXPIRE</code>.
            Otherwise it is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ImportKeyMaterialResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.ImportKMSKeyMaterialCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet">
            <summary>
            Decrypts ciphertext that was encrypted by a KMS key using any of the following operations:
            
             <ul><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>GenerateDataKeyWithoutPlaintext</a></para></li><li><para><a>GenerateDataKeyPairWithoutPlaintext</a></para></li></ul><para>
            You can use this operation to decrypt ciphertext that was encrypted under a symmetric
            encryption KMS key or an asymmetric encryption KMS key. When the KMS key is asymmetric,
            you must specify the KMS key and the encryption algorithm that was used to encrypt
            the ciphertext. For information about asymmetric KMS keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The <code>Decrypt</code> operation also decrypts ciphertext that was encrypted outside
            of KMS by the public key in an KMS asymmetric KMS key. However, it cannot decrypt
            ciphertext produced by other libraries, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">Amazon
            Web Services Encryption SDK</a> or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a>. These libraries return a ciphertext format that is
            incompatible with KMS.
            </para><para>
            If the ciphertext was encrypted under a symmetric encryption KMS key, the <code>KeyId</code>
            parameter is optional. KMS can get this information from metadata that it adds to
            the symmetric ciphertext blob. This feature adds durability to your implementation
            by ensuring that authorized users can decrypt ciphertext decades after it was encrypted,
            even if they've lost track of the key ID. However, specifying the KMS key is always
            recommended as a best practice. When you use the <code>KeyId</code> parameter to specify
            a KMS key, KMS only uses the KMS key you specify. If the ciphertext was encrypted
            under a different KMS key, the <code>Decrypt</code> operation fails. This practice
            ensures that you use the KMS key that you intend.
            </para><para>
            Whenever possible, use key policies to give users permission to call the <code>Decrypt</code>
            operation on a particular KMS key, instead of using IAM policies. Otherwise, you might
            create an IAM user policy that gives the user <code>Decrypt</code> permission on all
            KMS keys. This user could decrypt ciphertext that was encrypted by KMS keys in other
            accounts if the key policy for the cross-account KMS key permits it. If you must use
            an IAM policy for <code>Decrypt</code> permissions, limit the user to particular KMS
            keys or particular trusted accounts. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html#iam-policies-best-practices">Best
            practices for IAM policies</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            Applications in Amazon Web Services Nitro Enclaves can call this operation by using
            the <a href="https://github.com/aws/aws-nitro-enclaves-sdk-c">Amazon Web Services
            Nitro Enclaves Development Kit</a>. For information about the supporting parameters,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/services-nitro-enclaves.html">How
            Amazon Web Services Nitro Enclaves use KMS</a> in the <i>Key Management Service Developer
            Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:Decrypt</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>ReEncrypt</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.CiphertextBlob">
            <summary>
            <para>
            <para>Ciphertext to be decrypted. The blob includes metadata.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.EncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that will be used to decrypt the ciphertext. Specify
            the same algorithm that was used to encrypt the data. If you specify a different algorithm,
            the <code>Decrypt</code> operation fails.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            KMS key. The default value, <code>SYMMETRIC_DEFAULT</code>, represents the only supported
            algorithm that is valid for symmetric encryption KMS keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context to use when decrypting the data. An encryption context
            is valid only for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> with a symmetric encryption KMS key. The standard asymmetric encryption
            algorithms and HMAC algorithms that KMS uses do not support an encryption context.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens. </para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the KMS key that KMS uses to decrypt the ciphertext.</para><para>Enter a key ID of the KMS key that was used to encrypt the ciphertext. If you identify
            a different KMS key, the <code>Decrypt</code> operation throws an <code>IncorrectKeyException</code>.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            KMS key. If you used a symmetric encryption KMS key, KMS can get the KMS key from
            metadata that it adds to the symmetric ciphertext blob. However, it is always recommended
            as a best practice. This practice ensures that you use the KMS key that you intend.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSDecryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DecryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.DecryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet">
            <summary>
            Encrypts plaintext of up to 4,096 bytes using a KMS key. You can use a symmetric or
            asymmetric KMS key with a <code>KeyUsage</code> of <code>ENCRYPT_DECRYPT</code>.
            
             
            <para>
            You can use this operation to encrypt small amounts of arbitrary data, such as a personal
            identifier or database password, or other sensitive information. You don't need to
            use the <code>Encrypt</code> operation to encrypt a data key. The <a>GenerateDataKey</a>
            and <a>GenerateDataKeyPair</a> operations return a plaintext data key and an encrypted
            copy of that data key.
            </para><para>
            If you use a symmetric encryption KMS key, you can use an encryption context to add
            additional security to your encryption operation. If you specify an <code>EncryptionContext</code>
            when encrypting data, you must specify the same encryption context (a case-sensitive
            exact match) when decrypting the data. Otherwise, the request to decrypt fails with
            an <code>InvalidCiphertextException</code>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            If you specify an asymmetric KMS key, you must also specify the encryption algorithm.
            The algorithm must be compatible with the KMS key spec.
            </para><important><para>
            When you use an asymmetric KMS key to encrypt or reencrypt data, be sure to record
            the KMS key and encryption algorithm that you choose. You will be required to provide
            the same KMS key and encryption algorithm when you decrypt the data. If the KMS key
            and algorithm do not match the values used to encrypt the data, the decrypt operation
            fails.
            </para><para>
            You are not required to supply the key ID and encryption algorithm when you decrypt
            with symmetric encryption KMS keys because KMS stores this information in the ciphertext
            blob. KMS cannot store metadata in ciphertext generated with asymmetric keys. The
            standard format for asymmetric key ciphertext does not include configurable fields.
            </para></important><para>
            The maximum size of the data that you can encrypt varies with the type of KMS key
            and the encryption algorithm that you choose.
            </para><ul><li><para>
            Symmetric encryption KMS keys
            </para><ul><li><para><code>SYMMETRIC_DEFAULT</code>: 4096 bytes
            </para></li></ul></li><li><para><code>RSA_2048</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 214 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 190 bytes
            </para></li></ul></li><li><para><code>RSA_3072</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 342 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 318 bytes
            </para></li></ul></li><li><para><code>RSA_4096</code></para><ul><li><para><code>RSAES_OAEP_SHA_1</code>: 470 bytes
            </para></li><li><para><code>RSAES_OAEP_SHA_256</code>: 446 bytes
            </para></li></ul></li><li><para><code>SM2PKE</code>: 1024 bytes (China Regions only)
            </para></li></ul><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:Encrypt</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.EncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that KMS will use to encrypt the plaintext message.
            The algorithm must be compatible with the KMS key that you specify.</para><para>This parameter is required only for asymmetric KMS keys. The default value, <code>SYMMETRIC_DEFAULT</code>,
            is the algorithm used for symmetric encryption KMS keys. If you are using an asymmetric
            KMS key, we recommend RSAES_OAEP_SHA_256.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used to encrypt the data. An encryption
            context is valid only for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> with a symmetric encryption KMS key. The standard asymmetric encryption
            algorithms and HMAC algorithms that KMS uses do not support an encryption context.
            </para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key to use in the encryption operation. The KMS key must have a
            <code>KeyUsage</code> of <code>ENCRYPT_DECRYPT</code>. To find the <code>KeyUsage</code>
            of a KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Plaintext">
            <summary>
            <para>
            <para>Data to be encrypted.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.EncryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.EncryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSEncryptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet">
            <summary>
            Decrypts ciphertext and then reencrypts it entirely within KMS. You can use this operation
            to change the KMS key under which data is encrypted, such as when you <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-manually">manually
            rotate</a> a KMS key or change the KMS key that protects a ciphertext. You can also
            use it to reencrypt ciphertext under the same KMS key, such as to change the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption
            context</a> of a ciphertext.
            
             
            <para>
            The <code>ReEncrypt</code> operation can decrypt ciphertext that was encrypted by
            using a KMS key in an KMS operation, such as <a>Encrypt</a> or <a>GenerateDataKey</a>.
            It can also decrypt ciphertext that was encrypted by using the public key of an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html#asymmetric-cmks">asymmetric
            KMS key</a> outside of KMS. However, it cannot decrypt ciphertext produced by other
            libraries, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">Amazon
            Web Services Encryption SDK</a> or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a>. These libraries return a ciphertext format that is
            incompatible with KMS.
            </para><para>
            When you use the <code>ReEncrypt</code> operation, you need to provide information
            for the decrypt operation and the subsequent encrypt operation.
            </para><ul><li><para>
            If your ciphertext was encrypted under an asymmetric KMS key, you must use the <code>SourceKeyId</code>
            parameter to identify the KMS key that encrypted the ciphertext. You must also supply
            the encryption algorithm that was used. This information is required to decrypt the
            data.
            </para></li><li><para>
            If your ciphertext was encrypted under a symmetric encryption KMS key, the <code>SourceKeyId</code>
            parameter is optional. KMS can get this information from metadata that it adds to
            the symmetric ciphertext blob. This feature adds durability to your implementation
            by ensuring that authorized users can decrypt ciphertext decades after it was encrypted,
            even if they've lost track of the key ID. However, specifying the source KMS key is
            always recommended as a best practice. When you use the <code>SourceKeyId</code> parameter
            to specify a KMS key, KMS uses only the KMS key you specify. If the ciphertext was
            encrypted under a different KMS key, the <code>ReEncrypt</code> operation fails. This
            practice ensures that you use the KMS key that you intend.
            </para></li><li><para>
            To reencrypt the data, you must use the <code>DestinationKeyId</code> parameter specify
            the KMS key that re-encrypts the data after it is decrypted. If the destination KMS
            key is an asymmetric KMS key, you must also provide the encryption algorithm. The
            algorithm that you choose must be compatible with the KMS key.
            </para><important><para>
            When you use an asymmetric KMS key to encrypt or reencrypt data, be sure to record
            the KMS key and encryption algorithm that you choose. You will be required to provide
            the same KMS key and encryption algorithm when you decrypt the data. If the KMS key
            and algorithm do not match the values used to encrypt the data, the decrypt operation
            fails.
            </para><para>
            You are not required to supply the key ID and encryption algorithm when you decrypt
            with symmetric encryption KMS keys because KMS stores this information in the ciphertext
            blob. KMS cannot store metadata in ciphertext generated with asymmetric keys. The
            standard format for asymmetric key ciphertext does not include configurable fields.
            </para></important></li></ul><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. The source KMS key and destination KMS key can be
            in different Amazon Web Services accounts. Either or both KMS keys can be in a different
            account than the caller. To specify a KMS key in a different account, you must use
            its key ARN or alias ARN.
            </para><para><b>Required permissions</b>:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ReEncryptFrom</a>
            permission on the source KMS key (key policy)
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:ReEncryptTo</a>
            permission on the destination KMS key (key policy)
            </para></li></ul><para>
            To permit reencryption from or to a KMS key, include the <code>"kms:ReEncrypt*"</code>
            permission in your <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key
            policy</a>. This permission is automatically included in the key policy when you use
            the console to create a KMS key. But you must include it manually when you create
            a KMS key programmatically or when you use the <a>PutKeyPolicy</a> operation to set
            a key policy.
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.CiphertextBlob">
            <summary>
            <para>
            <para>Ciphertext of the data to reencrypt.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationEncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that KMS will use to reecrypt the data after it
            has decrypted it. The default value, <code>SYMMETRIC_DEFAULT</code>, represents the
            encryption algorithm used for symmetric encryption KMS keys.</para><para>This parameter is required only when the destination KMS key is an asymmetric KMS
            key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationEncryptionContext">
            <summary>
            <para>
            <para>Specifies that encryption context to use when the reencrypting the data.</para><para>A destination encryption context is valid only when the destination KMS key is a symmetric
            encryption KMS key. The standard ciphertext format for asymmetric KMS keys does not
            include fields for metadata.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.DestinationKeyId">
            <summary>
            <para>
            <para>A unique identifier for the KMS key that is used to reencrypt the data. Specify a
            symmetric encryption KMS key or an asymmetric KMS key with a <code>KeyUsage</code>
            value of <code>ENCRYPT_DECRYPT</code>. To find the <code>KeyUsage</code> value of
            a KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceEncryptionAlgorithm">
            <summary>
            <para>
            <para>Specifies the encryption algorithm that KMS will use to decrypt the ciphertext before
            it is reencrypted. The default value, <code>SYMMETRIC_DEFAULT</code>, represents the
            algorithm used for symmetric encryption KMS keys.</para><para>Specify the same algorithm that was used to encrypt the ciphertext. If you specify
            a different algorithm, the decrypt attempt fails.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceEncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context to use to decrypt the ciphertext. Enter the same
            encryption context that was used to encrypt the ciphertext.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.SourceKeyId">
            <summary>
            <para>
            <para>Specifies the KMS key that KMS will use to decrypt the ciphertext before it is re-encrypted.</para><para>Enter a key ID of the KMS key that was used to encrypt the ciphertext. If you identify
            a different KMS key, the <code>ReEncrypt</code> operation throws an <code>IncorrectKeyException</code>.</para><para>This parameter is required only when the ciphertext was encrypted under an asymmetric
            KMS key. If you used a symmetric encryption KMS key, KMS can get the KMS key from
            metadata that it adds to the symmetric ciphertext blob. However, it is always recommended
            as a best practice. This practice ensures that you use the KMS key that you intend.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ReEncryptResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ReEncryptResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSReEncryptCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet">
            <summary>
            Creates a <a href="https://en.wikipedia.org/wiki/Digital_signature">digital signature</a>
            for a message or message digest by using the private key in an asymmetric signing
            KMS key. To verify the signature, use the <a>Verify</a> operation, or use the public
            key in the same asymmetric KMS key outside of KMS. For information about asymmetric
            KMS keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            
             
            <para>
            Digital signatures are generated and verified by using asymmetric key pair, such as
            an RSA or ECC pair that is represented by an asymmetric KMS key. The key owner (or
            an authorized user) uses their private key to sign a message. Anyone with the public
            key can verify that the message was signed with that particular private key and that
            the message hasn't changed since it was signed. 
            </para><para>
            To use the <code>Sign</code> operation, provide the following information:
            </para><ul><li><para>
            Use the <code>KeyId</code> parameter to identify an asymmetric KMS key with a <code>KeyUsage</code>
            value of <code>SIGN_VERIFY</code>. To get the <code>KeyUsage</code> value of a KMS
            key, use the <a>DescribeKey</a> operation. The caller must have <code>kms:Sign</code>
            permission on the KMS key.
            </para></li><li><para>
            Use the <code>Message</code> parameter to specify the message or message digest to
            sign. You can submit messages of up to 4096 bytes. To sign a larger message, generate
            a hash digest of the message, and then provide the hash digest in the <code>Message</code>
            parameter. To indicate whether the message is a full message or a digest, use the
            <code>MessageType</code> parameter.
            </para></li><li><para>
            Choose a signing algorithm that is compatible with the KMS key. 
            </para></li></ul><important><para>
            When signing a message, be sure to record the KMS key and the signing algorithm. This
            information is required to verify the signature.
            </para></important><note><para>
            Best practices recommend that you limit the time during which any signature is effective.
            This deters an attack where the actor uses a signed message to establish validity
            repeatedly or long after the message is superseded. Signatures do not include a timestamp,
            but you can include a timestamp in the signed message to help you detect when its
            time to refresh the signature. 
            </para></note><para>
            To verify the signature that this operation generates, use the <a>Verify</a> operation.
            Or use the <a>GetPublicKey</a> operation to download the public key and then use the
            public key to verify the signature outside of KMS. 
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:Sign</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>Verify</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies an asymmetric KMS key. KMS uses the private key in the asymmetric KMS key
            to sign the message. The <code>KeyUsage</code> type of the KMS key must be <code>SIGN_VERIFY</code>.
            To find the <code>KeyUsage</code> of a KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Message">
            <summary>
            <para>
            <para>Specifies the message or message digest to sign. Messages can be 0-4096 bytes. To
            sign a larger message, provide the message digest.</para><para>If you provide a message, KMS generates a hash digest of the message and then signs
            it.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.MessageType">
            <summary>
            <para>
            <para>Tells KMS whether the value of the <code>Message</code> parameter is a message or
            message digest. The default value, RAW, indicates a message. To indicate a message
            digest, enter <code>DIGEST</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.SigningAlgorithm">
            <summary>
            <para>
            <para>Specifies the signing algorithm to use when signing the message. </para><para>Choose an algorithm that is compatible with the type and size of the specified asymmetric
            KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Signature'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.SignResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.SignResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.InvokeKMSSigningCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet">
            <summary>
            Creates a friendly name for a KMS key. 
            
             <note><para>
            Adding, deleting, or updating an alias can allow or deny permission to the KMS key.
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para></note><para>
            You can use an alias to identify a KMS key in the KMS console, in the <a>DescribeKey</a>
            operation and in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>, such as <a>Encrypt</a> and <a>GenerateDataKey</a>. You can also change
            the KMS key that's associated with the alias (<a>UpdateAlias</a>) or delete the alias
            (<a>DeleteAlias</a>) at any time. These operations don't affect the underlying KMS
            key. 
            </para><para>
            You can associate the alias with any customer managed key in the same Amazon Web Services
            Region. Each alias is associated with only one KMS key at a time, but a KMS key can
            have multiple aliases. A valid KMS key is required. You can't create an alias without
            a KMS key.
            </para><para>
            The alias must be unique in the account and Region, but you can have aliases with
            the same name in different Regions. For detailed information about aliases, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html">Using
            aliases</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            This operation does not return a response. To get the alias that you created, use
            the <a>ListAliases</a> operation.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on an alias in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b></para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CreateAlias</a>
            on the alias (IAM policy).
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CreateAlias</a>
            on the KMS key (key policy).
            </para></li></ul><para>
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access">Controlling
            access to aliases</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>DeleteAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>UpdateAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>Specifies the alias name. This value must begin with <code>alias/</code> followed
            by a name, such as <code>alias/ExampleAlias</code>. </para><para>The <code>AliasName</code> value must be string of 1-256 characters. It can contain
            only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-).
            The alias name cannot begin with <code>alias/aws/</code>. The <code>alias/aws/</code>
            prefix is reserved for <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed keys</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.TargetKeyId">
            <summary>
            <para>
            <para>Associates the alias with the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a>. The KMS key must be in the same Amazon Web Services Region. </para><para>A valid key ID is required. If you supply a null or empty string value, this operation
            returns an error.</para><para>For help finding the key ID and ARN, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html#find-cmk-id-arn">Finding
            the Key ID and ARN</a> in the <i><i>Key Management Service Developer Guide</i></i>.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet">
            <summary>
            Creates a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> that is associated with an <a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/clusters.html">CloudHSM
            cluster</a> that you own and manage.
            
             
            <para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.
            </para><para>
            Before you create the custom key store, you must assemble the required elements, including
            an CloudHSM cluster that fulfills the requirements for a custom key store. For details
            about the required elements, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore">Assemble
            the Prerequisites</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            When the operation completes successfully, it returns the ID of the new custom key
            store. Before you can use your new custom key store, you need to use the <a>ConnectCustomKeyStore</a>
            operation to connect the new key store to its CloudHSM cluster. Even if you are not
            going to use your custom key store immediately, you might want to connect it to verify
            that all settings are correct and then disconnect it until you are ready to use it.
            </para><para>
            For help with failures, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html">Troubleshooting
            a Custom Key Store</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CreateCustomKeyStore</a>
            (IAM policy).
            </para><para><b>Related operations:</b></para><ul><li><para><a>ConnectCustomKeyStore</a></para></li><li><para><a>DeleteCustomKeyStore</a></para></li><li><para><a>DescribeCustomKeyStores</a></para></li><li><para><a>DisconnectCustomKeyStore</a></para></li><li><para><a>UpdateCustomKeyStore</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.CloudHsmClusterId">
            <summary>
            <para>
            <para>Identifies the CloudHSM cluster for the custom key store. Enter the cluster ID of
            any active CloudHSM cluster that is not already associated with a custom key store.
            To find the cluster ID, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.CustomKeyStoreName">
            <summary>
            <para>
            <para>Specifies a friendly name for the custom key store. The name must be unique in your
            Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.KeyStorePassword">
            <summary>
            <para>
            <para>Enter the password of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user (CU) account</a> in the specified CloudHSM cluster.
            KMS logs into the cluster as this user to manage key material on your behalf.</para><para>The password must be a string of 7 to 32 characters. Its value is case sensitive.</para><para>This parameter tells KMS the <code>kmsuser</code> account password; it does not change
            the password in the CloudHSM cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.TrustAnchorCertificate">
            <summary>
            <para>
            <para>Enter the content of the trust anchor certificate for the cluster. This is the content
            of the <code>customerCA.crt</code> file that you created when you <a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/initialize-cluster.html">initialized
            the cluster</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CustomKeyStoreId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateCustomKeyStoreResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateCustomKeyStoreResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreName parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet">
            <summary>
            Returns a unique symmetric data key for use outside of KMS. This operation returns
            a plaintext copy of the data key and a copy that is encrypted under a symmetric encryption
            KMS key that you specify. The bytes in the plaintext key are random; they are not
            related to the caller or the KMS key. You can use the plaintext key to encrypt your
            data outside of KMS and store the encrypted data key with the encrypted data.
            
             
            <para>
            To generate a data key, specify the symmetric encryption KMS key that will be used
            to encrypt the data key. You cannot use an asymmetric KMS key to encrypt data keys.
            To get the type of your KMS key, use the <a>DescribeKey</a> operation.
            </para><para>
            You must also specify the length of the data key. Use either the <code>KeySpec</code>
            or <code>NumberOfBytes</code> parameters (but not both). For 128-bit and 256-bit data
            keys, use the <code>KeySpec</code> parameter.
            </para><para>
            To generate an SM4 data key (China Regions only), specify a <code>KeySpec</code> value
            of <code>AES_128</code> or <code>NumberOfBytes</code> value of <code>128</code>. The
            symmetric encryption key used in China Regions to encrypt your data key is an SM4
            encryption key.
            </para><para>
            To get only an encrypted copy of the data key, use <a>GenerateDataKeyWithoutPlaintext</a>.
            To generate an asymmetric data key pair, use the <a>GenerateDataKeyPair</a> or <a>GenerateDataKeyPairWithoutPlaintext</a>
            operation. To get a cryptographically secure random byte string, use <a>GenerateRandom</a>.
            </para><para>
            You can use an optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            Applications in Amazon Web Services Nitro Enclaves can call this operation by using
            the <a href="https://github.com/aws/aws-nitro-enclaves-sdk-c">Amazon Web Services
            Nitro Enclaves Development Kit</a>. For information about the supporting parameters,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/services-nitro-enclaves.html">How
            Amazon Web Services Nitro Enclaves use KMS</a> in the <i>Key Management Service Developer
            Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>How to use your data key</b></para><para>
            We recommend that you use the following pattern to encrypt data locally in your application.
            You can write your own code or use a client-side encryption library, such as the <a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/">Amazon Web
            Services Encryption SDK</a>, the <a href="https://docs.aws.amazon.com/dynamodb-encryption-client/latest/devguide/">Amazon
            DynamoDB Encryption Client</a>, or <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html">Amazon
            S3 client-side encryption</a> to do these tasks for you.
            </para><para>
            To encrypt data outside of KMS:
            </para><ol><li><para>
            Use the <code>GenerateDataKey</code> operation to get a data key.
            </para></li><li><para>
            Use the plaintext data key (in the <code>Plaintext</code> field of the response) to
            encrypt your data outside of KMS. Then erase the plaintext data key from memory.
            </para></li><li><para>
            Store the encrypted data key (in the <code>CiphertextBlob</code> field of the response)
            with the encrypted data.
            </para></li></ol><para>
            To decrypt data outside of KMS:
            </para><ol><li><para>
            Use the <a>Decrypt</a> operation to decrypt the encrypted data key. The operation
            returns a plaintext copy of the data key.
            </para></li><li><para>
            Use the plaintext data key to decrypt data outside of KMS, then erase the plaintext
            data key from memory.
            </para></li></ol><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateDataKey</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>GenerateDataKeyPairWithoutPlaintext</a></para></li><li><para><a>GenerateDataKeyWithoutPlaintext</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the data key.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the symmetric encryption KMS key that encrypts the data key. You cannot
            specify an asymmetric KMS key or a KMS key in a custom key store. To get the type
            and origin of your KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.KeySpec">
            <summary>
            <para>
            <para>Specifies the length of the data key. Use <code>AES_128</code> to generate a 128-bit
            symmetric key, or <code>AES_256</code> to generate a 256-bit symmetric key.</para><para>You must specify either the <code>KeySpec</code> or the <code>NumberOfBytes</code>
            parameter (but not both) in every <code>GenerateDataKey</code> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>Specifies the length of the data key in bytes. For example, use the value 64 to generate
            a 512-bit data key (64 bytes is 512 bits). For 128-bit (16-byte) and 256-bit (32-byte)
            data keys, use the <code>KeySpec</code> parameter.</para><para>You must specify either the <code>KeySpec</code> or the <code>NumberOfBytes</code>
            parameter (but not both) in every <code>GenerateDataKey</code> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet">
            <summary>
            Returns a unique asymmetric data key pair for use outside of KMS. This operation returns
            a plaintext public key, a plaintext private key, and a copy of the private key that
            is encrypted under the symmetric encryption KMS key you specify. You can use the data
            key pair to perform asymmetric cryptography and implement digital signatures outside
            of KMS. The bytes in the keys are random; they not related to the caller or to the
            KMS key that is used to encrypt the private key. 
            
             
            <para>
            You can use the public key that <code>GenerateDataKeyPair</code> returns to encrypt
            data or verify a signature outside of KMS. Then, store the encrypted private key with
            the data. When you are ready to decrypt data or sign a message, you can use the <a>Decrypt</a>
            operation to decrypt the encrypted private key.
            </para><para>
            To generate a data key pair, you must specify a symmetric encryption KMS key to encrypt
            the private key in a data key pair. You cannot use an asymmetric KMS key or a KMS
            key in a custom key store. To get the type and origin of your KMS key, use the <a>DescribeKey</a>
            operation. 
            </para><para>
            Use the <code>KeyPairSpec</code> parameter to choose an RSA or Elliptic Curve (ECC)
            data key pair. In China Regions, you can also choose an SM2 data key pair. KMS recommends
            that you use ECC key pairs for signing, and use RSA and SM2 key pairs for either encryption
            or signing, but not both. However, KMS cannot enforce any restrictions on the use
            of data key pairs outside of KMS.
            </para><para>
            If you are using the data key pair to encrypt data, or for any operation where you
            don't immediately need a private key, consider using the <a>GenerateDataKeyPairWithoutPlaintext</a>
            operation. <code>GenerateDataKeyPairWithoutPlaintext</code> returns a plaintext public
            key and an encrypted private key, but omits the plaintext private key that you need
            only to decrypt ciphertext or sign a message. Later, when you need to decrypt the
            data or sign a message, use the <a>Decrypt</a> operation to decrypt the encrypted
            private key in the data key pair.
            </para><para><code>GenerateDataKeyPair</code> returns a unique data key pair for each request.
            The bytes in the keys are random; they are not related to the caller or the KMS key
            that is used to encrypt the private key. The public key is a DER-encoded X.509 SubjectPublicKeyInfo,
            as specified in <a href="https://tools.ietf.org/html/rfc5280">RFC 5280</a>. The private
            key is a DER-encoded PKCS8 PrivateKeyInfo, as specified in <a href="https://tools.ietf.org/html/rfc5958">RFC
            5958</a>.
            </para><para>
            You can use an optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateDataKeyPair</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPairWithoutPlaintext</a></para></li><li><para><a>GenerateDataKeyWithoutPlaintext</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the private key
            in the data key pair.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the symmetric encryption KMS key that encrypts the private key in the data
            key pair. You cannot specify an asymmetric KMS key or a KMS key in a custom key store.
            To get the type and origin of your KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.KeyPairSpec">
            <summary>
            <para>
            <para>Determines the type of data key pair that is generated. </para><para>The KMS rule that restricts the use of asymmetric RSA and SM2 KMS keys to encrypt
            and decrypt or to sign and verify (but not both), and the rule that permits you to
            use ECC KMS keys only to sign and verify, are not effective on data key pairs, which
            are used outside of KMS. The SM2 key spec is only available in China Regions. RSA
            and ECC asymmetric key pairs are also available in China Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyPairResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyPairResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet">
            <summary>
            Returns a unique asymmetric data key pair for use outside of KMS. This operation returns
            a plaintext public key and a copy of the private key that is encrypted under the symmetric
            encryption KMS key you specify. Unlike <a>GenerateDataKeyPair</a>, this operation
            does not return a plaintext private key. The bytes in the keys are random; they are
            not related to the caller or to the KMS key that is used to encrypt the private key.
            
            
             
            <para>
            You can use the public key that <code>GenerateDataKeyPairWithoutPlaintext</code> returns
            to encrypt data or verify a signature outside of KMS. Then, store the encrypted private
            key with the data. When you are ready to decrypt data or sign a message, you can use
            the <a>Decrypt</a> operation to decrypt the encrypted private key.
            </para><para>
            To generate a data key pair, you must specify a symmetric encryption KMS key to encrypt
            the private key in a data key pair. You cannot use an asymmetric KMS key or a KMS
            key in a custom key store. To get the type and origin of your KMS key, use the <a>DescribeKey</a>
            operation. 
            </para><para>
            Use the <code>KeyPairSpec</code> parameter to choose an RSA or Elliptic Curve (ECC)
            data key pair. In China Regions, you can also choose an SM2 data key pair. KMS recommends
            that you use ECC key pairs for signing, and use RSA and SM2 key pairs for either encryption
            or signing, but not both. However, KMS cannot enforce any restrictions on the use
            of data key pairs outside of KMS.
            </para><para><code>GenerateDataKeyPairWithoutPlaintext</code> returns a unique data key pair for
            each request. The bytes in the key are not related to the caller or KMS key that is
            used to encrypt the private key. The public key is a DER-encoded X.509 SubjectPublicKeyInfo,
            as specified in <a href="https://tools.ietf.org/html/rfc5280">RFC 5280</a>.
            </para><para>
            You can use an optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateDataKeyPairWithoutPlaintext</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>GenerateDataKeyWithoutPlaintext</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the private key
            in the data key pair.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the symmetric encryption KMS key that encrypts the private key in the data
            key pair. You cannot specify an asymmetric KMS key or a KMS key in a custom key store.
            To get the type and origin of your KMS key, use the <a>DescribeKey</a> operation.
            </para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.KeyPairSpec">
            <summary>
            <para>
            <para>Determines the type of data key pair that is generated.</para><para>The KMS rule that restricts the use of asymmetric RSA and SM2 KMS keys to encrypt
            and decrypt or to sign and verify (but not both), and the rule that permits you to
            use ECC KMS keys only to sign and verify, are not effective on data key pairs, which
            are used outside of KMS. The SM2 key spec is only available in China Regions. RSA
            and ECC asymmetric key pairs are also available in China Regions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyPairWithoutPlaintextResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyPairWithoutPlaintextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyPairWithoutPlaintextCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet">
            <summary>
            Returns a unique symmetric data key for use outside of KMS. This operation returns
            a data key that is encrypted under a symmetric encryption KMS key that you specify.
            The bytes in the key are random; they are not related to the caller or to the KMS
            key.
            
             
            <para><code>GenerateDataKeyWithoutPlaintext</code> is identical to the <a>GenerateDataKey</a>
            operation except that it does not return a plaintext copy of the data key. 
            </para><para>
            This operation is useful for systems that need to encrypt data at some point, but
            not immediately. When you need to encrypt the data, you call the <a>Decrypt</a> operation
            on the encrypted copy of the key.
            </para><para>
            It's also useful in distributed systems with different levels of trust. For example,
            you might store encrypted data in containers. One component of your system creates
            new containers and stores an encrypted data key with each container. Then, a different
            component puts the data into the containers. That component first decrypts the data
            key, uses the plaintext data key to encrypt data, puts the encrypted data into the
            container, and then destroys the plaintext data key. In this system, the component
            that creates the containers never sees the plaintext data key.
            </para><para>
            To request an asymmetric data key pair, use the <a>GenerateDataKeyPair</a> or <a>GenerateDataKeyPairWithoutPlaintext</a>
            operations.
            </para><para>
            To generate a data key, you must specify the symmetric encryption KMS key that is
            used to encrypt the data key. You cannot use an asymmetric KMS key or a key in a custom
            key store to generate a data key. To get the type of your KMS key, use the <a>DescribeKey</a>
            operation.
            </para><para>
            If the operation succeeds, you will find the encrypted copy of the data key in the
            <code>CiphertextBlob</code> field.
            </para><para>
            You can use an optional encryption context to add additional security to the encryption
            operation. If you specify an <code>EncryptionContext</code>, you must specify the
            same encryption context (a case-sensitive exact match) when decrypting the encrypted
            data key. Otherwise, the request to decrypt fails with an <code>InvalidCiphertextException</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            Context</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateDataKeyWithoutPlaintext</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>Decrypt</a></para></li><li><para><a>Encrypt</a></para></li><li><para><a>GenerateDataKey</a></para></li><li><para><a>GenerateDataKeyPair</a></para></li><li><para><a>GenerateDataKeyPairWithoutPlaintext</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.EncryptionContext">
            <summary>
            <para>
            <para>Specifies the encryption context that will be used when encrypting the data key.</para><para>An <i>encryption context</i> is a collection of non-secret key-value pairs that represent
            additional authenticated data. When you use an encryption context to encrypt data,
            you must specify the same (an exact case-sensitive match) encryption context to decrypt
            the data. An encryption context is supported only on operations with symmetric encryption
            KMS keys. On operations with symmetric encryption KMS keys, an encryption context
            is optional, but it is strongly recommended.</para><para>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
            context</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.KeyId">
            <summary>
            <para>
            <para>Specifies the symmetric encryption KMS key that encrypts the data key. You cannot
            specify an asymmetric KMS key or a KMS key in a custom key store. To get the type
            and origin of your KMS key, use the <a>DescribeKey</a> operation.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.KeySpec">
            <summary>
            <para>
            <para>The length of the data key. Use <code>AES_128</code> to generate a 128-bit symmetric
            key, or <code>AES_256</code> to generate a 256-bit symmetric key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>The length of the data key in bytes. For example, use the value 64 to generate a 512-bit
            data key (64 bytes is 512 bits). For common key lengths (128-bit and 256-bit symmetric
            keys), we recommend that you use the <code>KeySpec</code> field instead of this one.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateDataKeyWithoutPlaintextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSDataKeyWithoutPlaintextCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet">
            <summary>
            Adds a grant to a KMS key. 
            
             
            <para>
            A <i>grant</i> is a policy instrument that allows Amazon Web Services principals to
            use KMS keys in cryptographic operations. It also can allow them to view a KMS key
            (<a>DescribeKey</a>) and create and manage grants. When authorizing access to a KMS
            key, grants are considered along with key policies and IAM policies. Grants are often
            used for temporary permissions because you can create one, use its permissions, and
            delete it without changing your key policies or IAM policies. 
            </para><para>
            For detailed information about grants, including grant terminology, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants
            in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>. For examples
            of working with grants in several programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html">Programming
            grants</a>. 
            </para><para>
            The <code>CreateGrant</code> operation returns a <code>GrantToken</code> and a <code>GrantId</code>.
            </para><ul><li><para>
            When you create, retire, or revoke a grant, there might be a brief delay, usually
            less than five minutes, until the grant is available throughout KMS. This state is
            known as <i>eventual consistency</i>. Once the grant has achieved eventual consistency,
            the grantee principal can use the permissions in the grant without identifying the
            grant. 
            </para><para>
            However, to use the permissions in the grant immediately, use the <code>GrantToken</code>
            that <code>CreateGrant</code> returns. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            </para></li><li><para>
            The <code>CreateGrant</code> operation also returns a <code>GrantId</code>. You can
            use the <code>GrantId</code> and a key identifier to identify the grant in the <a>RetireGrant</a>
            and <a>RevokeGrant</a> operations. To find the grant ID, use the <a>ListGrants</a>
            or <a>ListRetirableGrants</a> operations.
            </para></li></ul><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation on a KMS key in a different
            Amazon Web Services account, specify the key ARN in the value of the <code>KeyId</code>
            parameter. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CreateGrant</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ListGrants</a></para></li><li><para><a>ListRetirableGrants</a></para></li><li><para><a>RetireGrant</a></para></li><li><para><a>RevokeGrant</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Constraints_EncryptionContextEqual">
            <summary>
            <para>
            <para>A list of key-value pairs that must match the encryption context in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operation</a> request. The grant allows the operation only when the encryption context
            in the request is the same as the encryption context specified in this constraint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Constraints_EncryptionContextSubset">
            <summary>
            <para>
            <para>A list of key-value pairs that must be included in the encryption context of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operation</a> request. The grant allows the cryptographic operation only when the
            encryption context in the request includes the key-value pairs specified in this constraint,
            although it can include additional key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.GranteePrincipal">
            <summary>
            <para>
            <para>The identity that gets the permissions specified in the grant.</para><para>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an Amazon Web Services principal. Valid Amazon Web Services
            principals include Amazon Web Services accounts (root), IAM users, IAM roles, federated
            users, and assumed role users. For examples of the ARN syntax to use for specifying
            a principal, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">Amazon
            Web Services Identity and Access Management (IAM)</a> in the Example ARNs section
            of the <i>Amazon Web Services General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens. </para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key for the grant. The grant gives principals permission to use
            this KMS key.</para><para>Specify the key ID or key ARN of the KMS key. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Name">
            <summary>
            <para>
            <para>A friendly name for the grant. Use this value to prevent the unintended creation of
            duplicate grants when retrying this request.</para><para>When this value is absent, all <code>CreateGrant</code> requests result in a new grant
            with a unique <code>GrantId</code> even if all the supplied parameters are identical.
            This can result in unintended duplicates when you retry the <code>CreateGrant</code>
            request.</para><para>When this value is present, you can retry a <code>CreateGrant</code> request with
            identical parameters; if the grant already exists, the original <code>GrantId</code>
            is returned without creating a new grant. Note that the returned grant token is unique
            with every <code>CreateGrant</code> request, even when a duplicate <code>GrantId</code>
            is returned. All grant tokens for the same grant ID can be used interchangeably.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Operation">
            <summary>
            <para>
            <para>A list of operations that the grant permits. </para><para>This list must include only operations that are permitted in a grant. Also, the operation
            must be supported on the KMS key. For example, you cannot create a grant for a symmetric
            encryption KMS key that allows the <a>Sign</a> operation, or a grant for an asymmetric
            KMS key that allows the <a>GenerateDataKey</a> operation. If you try, KMS returns
            a <code>ValidationError</code> exception. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#terms-grant-operations">Grant
            operations</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.RetiringPrincipal">
            <summary>
            <para>
            <para>The principal that has permission to use the <a>RetireGrant</a> operation to retire
            the grant. </para><para>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Name (ARN)</a> of an Amazon Web Services principal. Valid Amazon Web Services
            principals include Amazon Web Services accounts (root), IAM users, federated users,
            and assumed role users. For examples of the ARN syntax to use for specifying a principal,
            see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">Amazon
            Web Services Identity and Access Management (IAM)</a> in the Example ARNs section
            of the <i>Amazon Web Services General Reference</i>.</para><para>The grant determines the retiring principal. Other principals might have permission
            to retire the grant or revoke the grant. For details, see <a>RevokeGrant</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#grant-delete">Retiring
            and revoking grants</a> in the <i>Key Management Service Developer Guide</i>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateGrantResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet">
            <summary>
            Creates a unique customer managed <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#kms-keys">KMS
            key</a> in your Amazon Web Services account and Region.
            
             
            <para>
            In addition to the required parameters, you can use the optional parameters to specify
            a key policy, description, tags, and other useful elements for any key type.
            </para><note><para>
            KMS is replacing the term <i>customer master key (CMK)</i> with <i>KMS key</i> and
            <i>KMS key</i>. The concept has not changed. To prevent breaking changes, KMS is keeping
            some variations of this term.
            </para></note><para>
            To create different types of KMS keys, use the following guidance:
            </para><dl><dt>Symmetric encryption KMS key</dt><dd><para>
            To create a symmetric encryption KMS key, you aren't required to specify any parameters.
            The default value for <code>KeySpec</code>, <code>SYMMETRIC_DEFAULT</code>, and the
            default value for <code>KeyUsage</code>, <code>ENCRYPT_DECRYPT</code>, create a symmetric
            encryption KMS key. For technical details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default">
            SYMMETRIC_DEFAULT key spec</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            If you need a key for basic encryption and decryption or you are creating a KMS key
            to protect your resources in an Amazon Web Services service, create a symmetric encryption
            KMS key. The key material in a symmetric encryption key never leaves KMS unencrypted.
            You can use a symmetric encryption KMS key to encrypt and decrypt data up to 4,096
            bytes, but they are typically used to generate data keys and data keys pairs. For
            details, see <a>GenerateDataKey</a> and <a>GenerateDataKeyPair</a>.
            </para><para></para></dd><dt>Asymmetric KMS keys</dt><dd><para>
            To create an asymmetric KMS key, use the <code>KeySpec</code> parameter to specify
            the type of key material in the KMS key. Then, use the <code>KeyUsage</code> parameter
            to determine whether the KMS key will be used to encrypt and decrypt or sign and verify.
            You can't change these properties after the KMS key is created.
            </para><para>
            Asymmetric KMS keys contain an RSA key pair, Elliptic Curve (ECC) key pair, or an
            SM2 key pair (China Regions only). The private key in an asymmetric KMS key never
            leaves KMS unencrypted. However, you can use the <a>GetPublicKey</a> operation to
            download the public key so it can be used outside of KMS. KMS keys with RSA or SM2
            key pairs can be used to encrypt or decrypt data or sign and verify messages (but
            not both). KMS keys with ECC key pairs can be used only to sign and verify messages.
            For information about asymmetric KMS keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para></para></dd><dt>HMAC KMS key</dt><dd><para>
            To create an HMAC KMS key, set the <code>KeySpec</code> parameter to a key spec value
            for HMAC KMS keys. Then set the <code>KeyUsage</code> parameter to <code>GENERATE_VERIFY_MAC</code>.
            You must set the key usage even though <code>GENERATE_VERIFY_MAC</code> is the only
            valid key usage value for HMAC KMS keys. You can't change these properties after the
            KMS key is created.
            </para><para>
            HMAC KMS keys are symmetric keys that never leave KMS unencrypted. You can use HMAC
            keys to generate (<a>GenerateMac</a>) and verify (<a>VerifyMac</a>) HMAC codes for
            messages up to 4096 bytes.
            </para><para>
            HMAC KMS keys are not supported in all Amazon Web Services Regions. If you try to
            create an HMAC KMS key in an Amazon Web Services Region in which HMAC keys are not
            supported, the <code>CreateKey</code> operation returns an <code>UnsupportedOperationException</code>.
            For a list of Regions in which HMAC KMS keys are supported, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para></para></dd><dt>Multi-Region primary keys</dt><dt>Imported key material</dt><dd><para>
            To create a multi-Region <i>primary key</i> in the local Amazon Web Services Region,
            use the <code>MultiRegion</code> parameter with a value of <code>True</code>. To create
            a multi-Region <i>replica key</i>, that is, a KMS key with the same key ID and key
            material as a primary key, but in a different Amazon Web Services Region, use the
            <a>ReplicateKey</a> operation. To change a replica key to a primary key, and its primary
            key to a replica key, use the <a>UpdatePrimaryRegion</a> operation.
            </para><para>
            You can create multi-Region KMS keys for all supported KMS key types: symmetric encryption
            KMS keys, HMAC KMS keys, asymmetric encryption KMS keys, and asymmetric signing KMS
            keys. You can also create multi-Region keys with imported key material. However, you
            can't create multi-Region keys in a custom key store.
            </para><para>
            This operation supports <i>multi-Region keys</i>, an KMS feature that lets you create
            multiple interoperable KMS keys in different Amazon Web Services Regions. Because
            these KMS keys have the same key ID, key material, and other metadata, you can use
            them interchangeably to encrypt data in one Amazon Web Services Region and decrypt
            it in a different Amazon Web Services Region without re-encrypting the data or making
            a cross-Region call. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Multi-Region
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para></para></dd><dd><para>
            To import your own key material, begin by creating a symmetric encryption KMS key
            with no key material. To do this, use the <code>Origin</code> parameter of <code>CreateKey</code>
            with a value of <code>EXTERNAL</code>. Next, use <a>GetParametersForImport</a> operation
            to get a public key and import token, and use the public key to encrypt your key material.
            Then, use <a>ImportKeyMaterial</a> with your import token to import the key material.
            For step-by-step instructions, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            </para><para>
            This feature supports only symmetric encryption KMS keys, including multi-Region symmetric
            encryption KMS keys. You cannot import key material into any other type of KMS key.
            </para><para>
            To create a multi-Region primary key with imported key material, use the <code>Origin</code>
            parameter of <code>CreateKey</code> with a value of <code>EXTERNAL</code> and the
            <code>MultiRegion</code> parameter with a value of <code>True</code>. To create replicas
            of the multi-Region primary key, use the <a>ReplicateKey</a> operation. For more information
            about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Multi-Region
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para></para></dd><dt>Custom key store</dt><dd><para>
            To create a symmetric encryption KMS key in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, use the <code>CustomKeyStoreId</code> parameter to specify the custom
            key store. You must also use the <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>.
            The CloudHSM cluster that is associated with the custom key store must have at least
            two active HSMs in different Availability Zones in the Amazon Web Services Region.
            
            </para><para>
            Custom key stores support only symmetric encryption KMS keys. You cannot create an
            HMAC KMS key or an asymmetric KMS key in a custom key store. For information about
            custom key stores in KMS see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom
            key stores in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            </para></dd></dl><para><b>Cross-account use</b>: No. You cannot use this operation to create a KMS key in
            a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CreateKey</a>
            (IAM policy). To use the <code>Tags</code> parameter, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:TagResource</a>
            (IAM policy). For examples and information about related permissions, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/iam-policies.html#iam-policy-example-create-key">Allow
            a user to create KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>DescribeKey</a></para></li><li><para><a>ListKeys</a></para></li><li><para><a>ScheduleKeyDeletion</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>A flag to indicate whether to bypass the key policy lockout safety check.</para><important><para>Setting this value to true increases the risk that the KMS key becomes unmanageable.
            Do not set this value to true indiscriminately.</para><para>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section in the <i><i>Key Management Service Developer Guide</i></i>.</para></important><para>Use this parameter only when you include a policy in the request and you intend to
            prevent the principal that is making the request from making a subsequent <a>PutKeyPolicy</a>
            request on the KMS key.</para><para>The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Creates the KMS key in the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> and the key material in its associated CloudHSM cluster. To create a
            KMS key in a custom key store, you must also specify the <code>Origin</code> parameter
            with a value of <code>AWS_CLOUDHSM</code>. The CloudHSM cluster that is associated
            with the custom key store must have at least two active HSMs, each in a different
            Availability Zone in the Region.</para><para>This parameter is valid only for symmetric encryption KMS keys in a single Region.
            You cannot create any other type of KMS key in a custom key store.</para><para>To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.</para><para>The response includes the custom key store ID and the ID of the CloudHSM cluster.</para><para>This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Description">
            <summary>
            <para>
            <para>A description of the KMS key.</para><para>Use a description that helps you decide whether the KMS key is appropriate for a task.
            The default value is an empty string (no description).</para><para>To set or change the description after the key is created, use <a>UpdateKeyDescription</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.KeySpec">
            <summary>
            <para>
            <para>Specifies the type of KMS key to create. The default value, <code>SYMMETRIC_DEFAULT</code>,
            creates a KMS key with a 256-bit AES-GCM key that is used for encryption and decryption,
            except in China Regions, where it creates a 128-bit symmetric key that uses SM4 encryption.
            For help choosing a key spec for your KMS key, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-types.html#symm-asymm-choose">Choosing
            a KMS key type</a> in the <i><i>Key Management Service Developer Guide</i></i>.</para><para>The <code>KeySpec</code> determines whether the KMS key contains a symmetric key or
            an asymmetric key pair. It also determines the cryptographic algorithms that the KMS
            key supports. You can't change the <code>KeySpec</code> after the KMS key is created.
            To further restrict the algorithms that can be used with the KMS key, use a condition
            key in its key policy or IAM policy. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-algorithm">kms:EncryptionAlgorithm</a>,
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-mac-algorithm">kms:MacAlgorithm</a>
            or <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-signing-algorithm">kms:Signing
            Algorithm</a> in the <i><i>Key Management Service Developer Guide</i></i>.</para><important><para><a href="http://aws.amazon.com/kms/features/#AWS_Service_Integration">Amazon Web
            Services services that are integrated with KMS</a> use symmetric encryption KMS keys
            to protect your data. These services do not support asymmetric KMS keys or HMAC KMS
            keys.</para></important><para>KMS supports the following key specs for KMS keys:</para><ul><li><para>Symmetric encryption key (default)</para><ul><li><para><code>SYMMETRIC_DEFAULT</code></para></li></ul></li><li><para>HMAC keys (symmetric)</para><ul><li><para><code>HMAC_224</code></para></li><li><para><code>HMAC_256</code></para></li><li><para><code>HMAC_384</code></para></li><li><para><code>HMAC_512</code></para></li></ul></li><li><para>Asymmetric RSA key pairs</para><ul><li><para><code>RSA_2048</code></para></li><li><para><code>RSA_3072</code></para></li><li><para><code>RSA_4096</code></para></li></ul></li><li><para>Asymmetric NIST-recommended elliptic curve key pairs</para><ul><li><para><code>ECC_NIST_P256</code> (secp256r1)</para></li><li><para><code>ECC_NIST_P384</code> (secp384r1)</para></li><li><para><code>ECC_NIST_P521</code> (secp521r1)</para></li></ul></li><li><para>Other asymmetric elliptic curve key pairs</para><ul><li><para><code>ECC_SECG_P256K1</code> (secp256k1), commonly used for cryptocurrencies.</para></li></ul></li><li><para>SM2 key pairs (China Regions only)</para><ul><li><para><code>SM2</code></para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.KeyUsage">
            <summary>
            <para>
            <para>Determines the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a> for which you can use the KMS key. The default value is <code>ENCRYPT_DECRYPT</code>.
            This parameter is optional when you are creating a symmetric encryption KMS key; otherwise,
            it is required. You can't change the <code>KeyUsage</code> value after the KMS key
            is created.</para><para>Select only one valid value.</para><ul><li><para>For symmetric encryption KMS keys, omit the parameter or specify <code>ENCRYPT_DECRYPT</code>.</para></li><li><para>For HMAC KMS keys (symmetric), specify <code>GENERATE_VERIFY_MAC</code>.</para></li><li><para>For asymmetric KMS keys with RSA key material, specify <code>ENCRYPT_DECRYPT</code>
            or <code>SIGN_VERIFY</code>.</para></li><li><para>For asymmetric KMS keys with ECC key material, specify <code>SIGN_VERIFY</code>.</para></li><li><para>For asymmetric KMS keys with SM2 key material (China Regions only), specify <code>ENCRYPT_DECRYPT</code>
            or <code>SIGN_VERIFY</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.MultiRegion">
            <summary>
            <para>
            <para>Creates a multi-Region primary key that you can replicate into other Amazon Web Services
            Regions. You cannot change this value after you create the KMS key. </para><para>For a multi-Region key, set this parameter to <code>True</code>. For a single-Region
            KMS key, omit this parameter or set it to <code>False</code>. The default value is
            <code>False</code>.</para><para>This operation supports <i>multi-Region keys</i>, an KMS feature that lets you create
            multiple interoperable KMS keys in different Amazon Web Services Regions. Because
            these KMS keys have the same key ID, key material, and other metadata, you can use
            them interchangeably to encrypt data in one Amazon Web Services Region and decrypt
            it in a different Amazon Web Services Region without re-encrypting the data or making
            a cross-Region call. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Multi-Region
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.</para><para>This value creates a <i>primary key</i>, not a replica. To create a <i>replica key</i>,
            use the <a>ReplicateKey</a> operation. </para><para>You can create a multi-Region version of a symmetric encryption KMS key, an HMAC KMS
            key, an asymmetric KMS key, or a KMS key with imported key material. However, you
            cannot create a multi-Region key in a custom key store.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Origin">
            <summary>
            <para>
            <para>The source of the key material for the KMS key. You cannot change the origin after
            you create the KMS key. The default is <code>AWS_KMS</code>, which means that KMS
            creates the key material.</para><para>To create a KMS key with no key material (for imported key material), set the value
            to <code>EXTERNAL</code>. For more information about importing key material into KMS,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>Key Management Service Developer Guide</i>. This value
            is valid only for symmetric encryption KMS keys.</para><para>To create a KMS key in an KMS <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a> and create its key material in the associated CloudHSM cluster, set
            this value to <code>AWS_CLOUDHSM</code>. You must also use the <code>CustomKeyStoreId</code>
            parameter to identify the custom key store. This value is valid only for symmetric
            encryption KMS keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Policy">
            <summary>
            <para>
            <para>The key policy to attach to the KMS key. If you do not specify a key policy, KMS attaches
            a default key policy to the KMS key. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default
            key policy</a> in the <i>Key Management Service Developer Guide</i>.</para><para>If you provide a key policy, it must meet the following criteria:</para><ul><li><para>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to <code>True</code>,
            the key policy must allow the principal that is making the <code>CreateKey</code>
            request to make a subsequent <a>PutKeyPolicy</a> request on the KMS key. This reduces
            the risk that the KMS key becomes unmanageable. For more information, refer to the
            scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section of the <i><i>Key Management Service Developer Guide</i></i>.</para></li><li><para>Each statement in the key policy must contain one or more principals. The principals
            in the key policy must exist and be visible to KMS. When you create a new Amazon Web
            Services principal (for example, an IAM user or role), you might need to enforce a
            delay before including the new principal in a key policy because the new principal
            might not be immediately visible to KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes
            that I make are not always immediately visible</a> in the <i>Amazon Web Services Identity
            and Access Management User Guide</i>.</para></li></ul><para>A key policy document can include only the following characters:</para><ul><li><para>Printable ASCII characters from the space character (<code>\u0020</code>) through
            the end of the ASCII character range.</para></li><li><para>Printable characters in the Basic Latin and Latin-1 Supplement character set (through
            <code>\u00FF</code>).</para></li><li><para>The tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return
            (<code>\u000D</code>) special characters</para></li></ul><para>For information about key policies, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
            policies in KMS</a> in the <i>Key Management Service Developer Guide</i>. For help
            writing and formatting a JSON policy document, see the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i><i>Identity and Access Management User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Tag">
            <summary>
            <para>
            <para>Assigns one or more tags to the KMS key. Use this parameter to tag the KMS key when
            it is created. To tag an existing KMS key, use the <a>TagResource</a> operation.</para><note><para>Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.</para></note><para>To use this parameter, you must have <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:TagResource</a>
            permission in an IAM policy.</para><para>Each tag consists of a tag key and a tag value. Both the tag key and the tag value
            are required, but the tag value can be an empty (null) string. You cannot have more
            than one tag on a KMS key with the same tag key. If you specify an existing tag key
            with a different tag value, KMS replaces the current tag value with the specified
            one.</para><para>When you add tags to an Amazon Web Services resource, Amazon Web Services generates
            a cost allocation report with usage and costs aggregated by tags. Tags can also be
            used to control access to a KMS key. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            Keys</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.CustomerMasterKeySpec">
            <summary>
            <para>
            <para>Instead, use the <code>KeySpec</code> parameter.</para><para>The <code>KeySpec</code> and <code>CustomerMasterKeySpec</code> parameters work the
            same way. Only the names differ. We recommend that you use <code>KeySpec</code> parameter
            in your code. However, to avoid breaking changes, KMS will support both parameters.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyMetadata'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CreateKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CreateKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet">
            <summary>
            Generates a hash-based message authentication code (HMAC) for a message using an HMAC
            KMS key and a MAC algorithm that the key supports. The MAC algorithm computes the
            HMAC for the message and the key as described in <a href="https://datatracker.ietf.org/doc/html/rfc2104">RFC
            2104</a>.
            
             
            <para>
            You can use the HMAC that this operation generates with the <a>VerifyMac</a> operation
            to demonstrate that the original message has not changed. Also, because a secret key
            is used to create the hash, you can verify that the party that generated the hash
            has the required secret key. This operation is part of KMS support for HMAC KMS keys.
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            keys in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            </para><note><para>
            Best practices recommend that you limit the time during which any signing mechanism,
            including an HMAC, is effective. This deters an attack where the actor uses a signed
            message to establish validity repeatedly or long after the message is superseded.
            HMAC tags do not include a timestamp, but you can include a timestamp in the token
            or message to help you detect when its time to refresh the HMAC. 
            </para></note><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateMac</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>VerifyMac</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.KeyId">
            <summary>
            <para>
            <para>The HMAC KMS key to use in the operation. The MAC algorithm computes the HMAC for
            the message and the key as described in <a href="https://datatracker.ietf.org/doc/html/rfc2104">RFC
            2104</a>.</para><para>To identify an HMAC KMS key, use the <a>DescribeKey</a> operation and see the <code>KeySpec</code>
            field in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.MacAlgorithm">
            <summary>
            <para>
            <para>The MAC algorithm used in the operation.</para><para> The algorithm must be compatible with the HMAC KMS key that you specify. To find
            the MAC algorithms that your HMAC KMS key supports, use the <a>DescribeKey</a> operation
            and see the <code>MacAlgorithms</code> field in the <code>DescribeKey</code> response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.Message">
            <summary>
            <para>
            <para>The message to be hashed. Specify a message of up to 4,096 bytes. </para><para><code>GenerateMac</code> and <a>VerifyMac</a> do not provide special handling for
            message digests. If you generate an HMAC for a hash digest of a message, you must
            verify the HMAC of the same hash digest.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateMacResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateMacResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSMacCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet">
            <summary>
            Returns a random byte string that is cryptographically secure.
            
             
            <para>
            You must use the <code>NumberOfBytes</code> parameter to specify the length of the
            random byte string. There is no default value for string length.
            </para><para>
            By default, the random byte string is generated in KMS. To generate the byte string
            in the CloudHSM cluster that is associated with a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, specify the custom key store ID.
            </para><para>
            Applications in Amazon Web Services Nitro Enclaves can call this operation by using
            the <a href="https://github.com/aws/aws-nitro-enclaves-sdk-c">Amazon Web Services
            Nitro Enclaves Development Kit</a>. For information about the supporting parameters,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/services-nitro-enclaves.html">How
            Amazon Web Services Nitro Enclaves use KMS</a> in the <i>Key Management Service Developer
            Guide</i>.
            </para><para>
            For more information about entropy and random number generation, see <a href="https://docs.aws.amazon.com/kms/latest/cryptographic-details/">Key
            Management Service Cryptographic Details</a>.
            </para><para><b>Cross-account use</b>: Not applicable. <code>GenerateRandom</code> does not use
            any account-specific resources, such as KMS keys.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:GenerateRandom</a>
            (IAM policy)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Generates the random byte string in the CloudHSM cluster that is associated with the
            specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.NumberOfBytes">
            <summary>
            <para>
            <para>The length of the random byte string. This parameter is required.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Plaintext'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.GenerateRandomResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.GenerateRandomResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NumberOfBytes parameter.
            The -PassThru parameter is deprecated, use -Select '^NumberOfBytes' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSRandomCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet">
            <summary>
            Replicates a multi-Region key into the specified Region. This operation creates a
            multi-Region replica key based on a multi-Region primary key in a different Region
            of the same Amazon Web Services partition. You can create multiple replicas of a primary
            key, but each must be in a different Region. To create a multi-Region primary key,
            use the <a>CreateKey</a> operation.
            
             
            <para>
            This operation supports <i>multi-Region keys</i>, an KMS feature that lets you create
            multiple interoperable KMS keys in different Amazon Web Services Regions. Because
            these KMS keys have the same key ID, key material, and other metadata, you can use
            them interchangeably to encrypt data in one Amazon Web Services Region and decrypt
            it in a different Amazon Web Services Region without re-encrypting the data or making
            a cross-Region call. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Multi-Region
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            A <i>replica key</i> is a fully-functional KMS key that can be used independently
            of its primary and peer replica keys. A primary key and its replica keys share properties
            that make them interoperable. They have the same <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-id">key
            ID</a> and key material. They also have the same <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-spec">key
            spec</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-usage">key
            usage</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-origin">key
            material origin</a>, and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            key rotation status</a>. KMS automatically synchronizes these shared properties among
            related multi-Region keys. All other properties of a replica key can differ, including
            its <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">key
            policy</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">tags</a>,
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html">aliases</a>,
            and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a>. KMS pricing and quotas for KMS keys apply to each primary
            key and replica key.
            </para><para>
            When this operation completes, the new replica key has a transient key state of <code>Creating</code>.
            This key state changes to <code>Enabled</code> (or <code>PendingImport</code>) after
            a few seconds when the process of creating the new replica key is complete. While
            the key state is <code>Creating</code>, you can manage key, but you cannot yet use
            it in cryptographic operations. If you are creating and using the replica key programmatically,
            retry on <code>KMSInvalidStateException</code> or call <code>DescribeKey</code> to
            check its <code>KeyState</code> value before using it. For details about the <code>Creating</code>
            key state, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            You cannot create more than one replica of a primary key in any Region. If the Region
            already includes a replica of the key you're trying to replicate, <code>ReplicateKey</code>
            returns an <code>AlreadyExistsException</code> error. If the key state of the existing
            replica is <code>PendingDeletion</code>, you can cancel the scheduled key deletion
            (<a>CancelKeyDeletion</a>) or wait for the key to be deleted. The new replica key
            you create will have the same <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html#mrk-sync-properties">shared
            properties</a> as the original replica key.
            </para><para>
            The CloudTrail log of a <code>ReplicateKey</code> operation records a <code>ReplicateKey</code>
            operation in the primary key's Region and a <a>CreateKey</a> operation in the replica
            key's Region.
            </para><para>
            If you replicate a multi-Region primary key with imported key material, the replica
            key is created with no key material. You must import the same key material that you
            imported into the primary key. For details, see <a href="kms/latest/developerguide/multi-region-keys-import.html">Importing
            key material into multi-Region keys</a> in the <i>Key Management Service Developer
            Guide</i>.
            </para><para>
            To convert a replica key to a primary key, use the <a>UpdatePrimaryRegion</a> operation.
            </para><note><para><code>ReplicateKey</code> uses different default values for the <code>KeyPolicy</code>
            and <code>Tags</code> parameters than those used in the KMS console. For details,
            see the parameter descriptions.
            </para></note><para><b>Cross-account use</b>: No. You cannot use this operation to create a replica key
            in a different Amazon Web Services account. 
            </para><para><b>Required permissions</b>: 
            </para><ul><li><para><code>kms:ReplicateKey</code> on the primary key (in the primary key's Region). Include
            this permission in the primary key's key policy.
            </para></li><li><para><code>kms:CreateKey</code> in an IAM policy in the replica Region.
            </para></li><li><para>
            To use the <code>Tags</code> parameter, <code>kms:TagResource</code> in an IAM policy
            in the replica Region.
            </para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>UpdatePrimaryRegion</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>A flag to indicate whether to bypass the key policy lockout safety check.</para><important><para>Setting this value to true increases the risk that the KMS key becomes unmanageable.
            Do not set this value to true indiscriminately.</para><para>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section in the <i>Key Management Service Developer Guide</i>.</para></important><para>Use this parameter only when you intend to prevent the principal that is making the
            request from making a subsequent <code>PutKeyPolicy</code> request on the KMS key.</para><para>The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.Description">
            <summary>
            <para>
            <para>A description of the KMS key. The default value is an empty string (no description).</para><para>The description is not a shared property of multi-Region keys. You can specify the
            same description or a different description for each key in a set of related multi-Region
            keys. KMS does not synchronize this property.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the multi-Region primary key that is being replicated. To determine whether
            a KMS key is a multi-Region primary key, use the <a>DescribeKey</a> operation to check
            the value of the <code>MultiRegionKeyType</code> property.</para><para>Specify the key ID or key ARN of a multi-Region primary key.</para><para>For example:</para><ul><li><para>Key ID: <code>mrk-1234abcd12ab34cd56ef1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/mrk-1234abcd12ab34cd56ef1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.Policy">
            <summary>
            <para>
            <para>The key policy to attach to the KMS key. This parameter is optional. If you do not
            provide a key policy, KMS attaches the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">default
            key policy</a> to the KMS key.</para><para>The key policy is not a shared property of multi-Region keys. You can specify the
            same key policy or a different key policy for each key in a set of related multi-Region
            keys. KMS does not synchronize this property.</para><para>If you provide a key policy, it must meet the following criteria:</para><ul><li><para>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to true, the key policy
            must give the caller <code>kms:PutKeyPolicy</code> permission on the replica key.
            This reduces the risk that the KMS key becomes unmanageable. For more information,
            refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section of the <i><i>Key Management Service Developer Guide</i></i>.</para></li><li><para>Each statement in the key policy must contain one or more principals. The principals
            in the key policy must exist and be visible to KMS. When you create a new Amazon Web
            Services principal (for example, an IAM user or role), you might need to enforce a
            delay before including the new principal in a key policy because the new principal
            might not be immediately visible to KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes
            that I make are not always immediately visible</a> in the <i><i>Identity and Access
            Management User Guide</i></i>.</para></li></ul><para>A key policy document can include only the following characters:</para><ul><li><para>Printable ASCII characters from the space character (<code>\u0020</code>) through
            the end of the ASCII character range.</para></li><li><para>Printable characters in the Basic Latin and Latin-1 Supplement character set (through
            <code>\u00FF</code>).</para></li><li><para>The tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return
            (<code>\u000D</code>) special characters</para></li></ul><para>For information about key policies, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
            policies in KMS</a> in the <i>Key Management Service Developer Guide</i>. For help
            writing and formatting a JSON policy document, see the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i><i>Identity and Access Management User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.ReplicaRegion">
            <summary>
            <para>
            <para>The Region ID of the Amazon Web Services Region for this replica key. </para><para>Enter the Region ID, such as <code>us-east-1</code> or <code>ap-southeast-2</code>.
            For a list of Amazon Web Services Regions in which KMS is supported, see <a href="https://docs.aws.amazon.com/general/latest/gr/kms.html#kms_region">KMS
            service endpoints</a> in the <i>Amazon Web Services General Reference</i>.</para><note><para>HMAC KMS keys are not supported in all Amazon Web Services Regions. If you try to
            replicate an HMAC KMS key in an Amazon Web Services Region in which HMAC keys are
            not supported, the <code>ReplicateKey</code> operation returns an <code>UnsupportedOperationException</code>.
            For a list of Regions in which HMAC KMS keys are supported, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.</para></note><para>The replica must be in a different Amazon Web Services Region than its primary key
            and other replicas of that primary key, but in the same Amazon Web Services partition.
            KMS must be available in the replica Region. If the Region is not enabled by default,
            the Amazon Web Services account must be enabled in the Region. For information about
            Amazon Web Services partitions, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon
            Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. For
            information about enabling and disabling Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html#rande-manage-enable">Enabling
            a Region</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html#rande-manage-disable">Disabling
            a Region</a> in the <i>Amazon Web Services General Reference</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.Tag">
            <summary>
            <para>
            <para>Assigns one or more tags to the replica key. Use this parameter to tag the KMS key
            when it is created. To tag an existing KMS key, use the <a>TagResource</a> operation.</para><note><para>Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.</para></note><para>To use this parameter, you must have <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:TagResource</a>
            permission in an IAM policy.</para><para>Tags are not a shared property of multi-Region keys. You can specify the same tags
            or different tags for each key in a set of related multi-Region keys. KMS does not
            synchronize this property.</para><para>Each tag consists of a tag key and a tag value. Both the tag key and the tag value
            are required, but the tag value can be an empty (null) string. You cannot have more
            than one tag on a KMS key with the same tag key. If you specify an existing tag key
            with a different tag value, KMS replaces the current tag value with the specified
            one.</para><para>When you add tags to an Amazon Web Services resource, Amazon Web Services generates
            a cost allocation report with usage and costs aggregated by tags. Tags can also be
            used to control access to a KMS key. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            Keys</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ReplicateKeyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ReplicateKeyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.NewKMSReplicaKeyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet">
            <summary>
            Deletes the specified alias. 
            
             <note><para>
            Adding, deleting, or updating an alias can allow or deny permission to the KMS key.
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para></note><para>
            Because an alias is not a property of a KMS key, you can delete and change the aliases
            of a KMS key without affecting the KMS key. Also, aliases do not appear in the response
            from the <a>DescribeKey</a> operation. To get the aliases of all KMS keys, use the
            <a>ListAliases</a> operation. 
            </para><para>
            Each KMS key can have multiple aliases. To change the alias of a KMS key, use <a>DeleteAlias</a>
            to delete the current alias and <a>CreateAlias</a> to create a new alias. To associate
            an existing alias with a different KMS key, call <a>UpdateAlias</a>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on an alias in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b></para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DeleteAlias</a>
            on the alias (IAM policy).
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DeleteAlias</a>
            on the KMS key (key policy).
            </para></li></ul><para>
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access">Controlling
            access to aliases</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateAlias</a></para></li><li><para><a>ListAliases</a></para></li><li><para><a>UpdateAlias</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>The alias to be deleted. The alias name must begin with <code>alias/</code> followed
            by the alias name, such as <code>alias/ExampleAlias</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasName parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet">
            <summary>
            Deletes a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>. This operation does not delete the CloudHSM cluster that is associated
            with the custom key store, or affect any users or keys in the cluster.
            
             
            <para>
            The custom key store that you delete cannot contain any <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#kms_keys">KMS
            keys</a>. Before deleting the key store, verify that you will never need to use any
            of the KMS keys in the key store for any <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic
            operations</a>. Then, use <a>ScheduleKeyDeletion</a> to delete the KMS keys from the
            key store. When the scheduled waiting period expires, the <code>ScheduleKeyDeletion</code>
            operation deletes the KMS keys. Then it makes a best effort to delete the key material
            from the associated cluster. However, you might need to manually <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
            the orphaned key material</a> from the cluster and its backups.
            </para><para>
            After all KMS keys are deleted from KMS, use <a>DisconnectCustomKeyStore</a> to disconnect
            the key store from KMS. Then, you can delete the custom key store.
            </para><para>
            Instead of deleting the custom key store, consider using <a>DisconnectCustomKeyStore</a>
            to disconnect it from KMS. While the key store is disconnected, you cannot create
            or use the KMS keys in the key store. But, you do not need to delete KMS keys and
            you can reconnect a disconnected custom key store at any time.
            </para><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DeleteCustomKeyStore</a>
            (IAM policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ConnectCustomKeyStore</a></para></li><li><para><a>CreateCustomKeyStore</a></para></li><li><para><a>DescribeCustomKeyStores</a></para></li><li><para><a>DisconnectCustomKeyStore</a></para></li><li><para><a>UpdateCustomKeyStore</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Enter the ID of the custom key store you want to delete. To find the ID of a custom
            key store, use the <a>DescribeCustomKeyStores</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet">
            <summary>
            Deletes key material that you previously imported. This operation makes the specified
            KMS key unusable. For more information about importing key material into KMS, see
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing
            Key Material</a> in the <i>Key Management Service Developer Guide</i>. 
            
             
            <para>
            When the specified KMS key is in the <code>PendingDeletion</code> state, this operation
            does not change the KMS key's state. Otherwise, it changes the KMS key's state to
            <code>PendingImport</code>.
            </para><para>
            After you delete key material, you can use <a>ImportKeyMaterial</a> to reimport the
            same key material into the KMS key.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:DeleteImportedKeyMaterial</a>
            (key policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>GetParametersForImport</a></para></li><li><para><a>ImportKeyMaterial</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key from which you are deleting imported key material. The <code>Origin</code>
            of the KMS key must be <code>EXTERNAL</code>.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.DeleteImportedKeyMaterialResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSImportedKeyMaterialCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet">
            <summary>
            Deletes tags from a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a>. To delete a tag, specify the tag key and the KMS key.
            
             <note><para>
            Tagging or untagging a KMS key can allow or deny permission to the KMS key. For details,
            see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para></note><para>
            When it succeeds, the <code>UntagResource</code> operation doesn't return any output.
            Also, if the specified tag key isn't found on the KMS key, it doesn't throw an exception
            or return a response. To confirm that the operation worked, use the <a>ListResourceTags</a>
            operation.
            </para><para>
            For information about using tags in KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging
            keys</a>. For general information about tags, including the format and syntax, see
            <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon
            Web Services resources</a> in the <i>Amazon Web Services General Reference</i>. 
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UntagResource</a>
            (key policy)
            </para><para><b>Related operations</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>ListResourceTags</a></para></li><li><para><a>ReplicateKey</a></para></li><li><para><a>TagResource</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key from which you are removing tags.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>One or more tag keys. Specify only the tag keys, not the tag values.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RemoveKMSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet">
            <summary>
            Schedules the deletion of a KMS key. By default, KMS applies a waiting period of 30
            days, but you can specify a waiting period of 7-30 days. When this operation is successful,
            the key state of the KMS key changes to <code>PendingDeletion</code> and the key can't
            be used in any cryptographic operations. It remains in this state for the duration
            of the waiting period. Before the waiting period ends, you can use <a>CancelKeyDeletion</a>
            to cancel the deletion of the KMS key. After the waiting period ends, KMS deletes
            the KMS key, its key material, and all KMS data associated with it, including all
            aliases that refer to it.
            
             <important><para>
            Deleting a KMS key is a destructive and potentially dangerous operation. When a KMS
            key is deleted, all data that was encrypted under the KMS key is unrecoverable. (The
            only exception is a multi-Region replica key.) To prevent the use of a KMS key without
            deleting it, use <a>DisableKey</a>. 
            </para></important><para>
            If you schedule deletion of a KMS key from a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store</a>, when the waiting period expires, <code>ScheduleKeyDeletion</code> deletes
            the KMS key from KMS. Then KMS makes a best effort to delete the key material from
            the associated CloudHSM cluster. However, you might need to manually <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-orphaned-key">delete
            the orphaned key material</a> from the cluster and its backups.
            </para><para>
            You can schedule the deletion of a multi-Region primary key and its replica keys at
            any time. However, KMS will not delete a multi-Region primary key with existing replica
            keys. If you schedule the deletion of a primary key with replicas, its key state changes
            to <code>PendingReplicaDeletion</code> and it cannot be replicated or used in cryptographic
            operations. This status can continue indefinitely. When the last of its replicas keys
            is deleted (not just scheduled), the key state of the primary key changes to <code>PendingDeletion</code>
            and its waiting period (<code>PendingWindowInDays</code>) begins. For details, see
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-delete.html">Deleting
            multi-Region keys</a> in the <i>Key Management Service Developer Guide</i>. 
            </para><para>
            For more information about scheduling a KMS key for deletion, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: kms:ScheduleKeyDeletion (key policy)
            </para><para><b>Related operations</b></para><ul><li><para><a>CancelKeyDeletion</a></para></li><li><para><a>DisableKey</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.KeyId">
            <summary>
            <para>
            <para>The unique identifier of the KMS key to delete.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.PendingWindowInDay">
            <summary>
            <para>
            <para>The waiting period, specified in number of days. After the waiting period ends, KMS
            deletes the KMS key.</para><para>If the KMS key is a multi-Region primary key with replica keys, the waiting period
            begins when the last of its replica keys is deleted. Otherwise, the waiting period
            begins immediately.</para><para>This value is optional. If you include a value, it must be between 7 and 30, inclusive.
            If you do not include a value, it defaults to 30.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.ScheduleKeyDeletionResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.ScheduleKeyDeletionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RequestKMSKeyDeletionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet">
            <summary>
            Deletes the specified grant. You revoke a grant to terminate the permissions that
            the grant allows. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/managing-grants.html#grant-delete">Retiring
            and revoking grants</a> in the <i><i>Key Management Service Developer Guide</i></i>.
            
             
            <para>
            When you create, retire, or revoke a grant, there might be a brief delay, usually
            less than five minutes, until the grant is available throughout KMS. This state is
            known as <i>eventual consistency</i>. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#terms-eventual-consistency">Eventual
            consistency</a> in the <i><i>Key Management Service Developer Guide</i></i>. 
            </para><para>
            For detailed information about grants, including grant terminology, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html">Grants
            in KMS</a> in the <i><i>Key Management Service Developer Guide</i></i>. For examples
            of working with grants in several programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html">Programming
            grants</a>. 
            </para><para><b>Cross-account use</b>: Yes. To perform this operation on a KMS key in a different
            Amazon Web Services account, specify the key ARN in the value of the <code>KeyId</code>
            parameter.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:RevokeGrant</a>
            (key policy).
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateGrant</a></para></li><li><para><a>ListGrants</a></para></li><li><para><a>ListRetirableGrants</a></para></li><li><para><a>RetireGrant</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.GrantId">
            <summary>
            <para>
            <para>Identifies the grant to revoke. To get the grant ID, use <a>CreateGrant</a>, <a>ListGrants</a>,
            or <a>ListRetirableGrants</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.KeyId">
            <summary>
            <para>
            <para>A unique identifier for the KMS key associated with the grant. To get the key ID and
            key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para><para>Specify the key ID or key ARN of the KMS key. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.RevokeGrantResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.RevokeKMSGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet">
            <summary>
            Cancels the deletion of a KMS key. When this operation succeeds, the key state of
            the KMS key is <code>Disabled</code>. To enable the KMS key, use <a>EnableKey</a>.
            
            
             
            <para>
            For more information about scheduling and canceling deletion of a KMS key, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html">Deleting
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:CancelKeyDeletion</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>ScheduleKeyDeletion</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the KMS key whose deletion is being canceled.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'KeyId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.CancelKeyDeletionResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.CancelKeyDeletionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.StopKMSKeyDeletionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet">
            <summary>
            Verifies the hash-based message authentication code (HMAC) for a specified message,
            HMAC KMS key, and MAC algorithm. To verify the HMAC, <code>VerifyMac</code> computes
            an HMAC using the message, HMAC KMS key, and MAC algorithm that you specify, and compares
            the computed HMAC to the HMAC that you specify. If the HMACs are identical, the verification
            succeeds; otherwise, it fails.
            
             
            <para>
            Verification indicates that the message hasn't changed since the HMAC was calculated,
            and the specified key was used to generate and verify the HMAC.
            </para><para>
            This operation is part of KMS support for HMAC KMS keys. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/hmac.html">HMAC
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:VerifyMac</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>GenerateMac</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.KeyId">
            <summary>
            <para>
            <para>The KMS key that will be used in the verification.</para><para>Enter a key ID of the KMS key that was used to generate the HMAC. If you identify
            a different KMS key, the <code>VerifyMac</code> operation fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.Mac">
            <summary>
            <para>
            <para>The HMAC to verify. Enter the HMAC that was generated by the <a>GenerateMac</a> operation
            when you specified the same message, HMAC KMS key, and MAC algorithm as the values
            specified in this request.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.MacAlgorithm">
            <summary>
            <para>
            <para>The MAC algorithm that will be used in the verification. Enter the same MAC algorithm
            that was used to compute the HMAC. This algorithm must be supported by the HMAC KMS
            key identified by the <code>KeyId</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.Message">
            <summary>
            <para>
            <para>The message that will be used in the verification. Enter the same message that was
            used to generate the HMAC.</para><para><a>GenerateMac</a> and <code>VerifyMac</code> do not provide special handling for
            message digests. If you generated an HMAC for a hash digest of a message, you must
            verify the HMAC for the same hash digest.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.VerifyMacResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.VerifyMacResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSMacCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet">
            <summary>
            Verifies a digital signature that was generated by the <a>Sign</a> operation. 
            
              
            <para>
            Verification confirms that an authorized user signed the message with the specified
            KMS key and signing algorithm, and the message hasn't changed since it was signed.
            If the signature is verified, the value of the <code>SignatureValid</code> field in
            the response is <code>True</code>. If the signature verification fails, the <code>Verify</code>
            operation fails with an <code>KMSInvalidSignatureException</code> exception.
            </para><para>
            A digital signature is generated by using the private key in an asymmetric KMS key.
            The signature is verified by using the public key in the same asymmetric KMS key.
            For information about asymmetric KMS keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html">Asymmetric
            KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            To verify a digital signature, you can use the <code>Verify</code> operation. Specify
            the same asymmetric KMS key, message, and signing algorithm that were used to produce
            the signature.
            </para><para>
            You can also verify the digital signature by using the public key of the KMS key outside
            of KMS. Use the <a>GetPublicKey</a> operation to download the public key in the asymmetric
            KMS key and then use the public key to verify the signature outside of KMS. To verify
            a signature outside of KMS with an SM2 public key, you must specify the distinguishing
            ID. By default, KMS uses <code>1234567812345678</code> as the distinguishing ID. For
            more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-sm-offline-verification">Offline
            verification with SM2 key pairs</a> in <i>Key Management Service Developer Guide</i>.
            The advantage of using the <code>Verify</code> operation is that it is performed within
            KMS. As a result, it's easy to call, the operation is performed within the FIPS boundary,
            it is logged in CloudTrail, and you can use key policy and IAM policy to determine
            who is authorized to use the KMS key to verify signatures.
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: Yes. To perform this operation with a KMS key in a different
            Amazon Web Services account, specify the key ARN or alias ARN in the value of the
            <code>KeyId</code> parameter. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:Verify</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>Sign</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.GrantToken">
            <summary>
            <para>
            <para>A list of grant tokens.</para><para>Use a grant token when your permission to call this operation comes from a new grant
            that has not yet achieved <i>eventual consistency</i>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grants.html#grant_token">Grant
            token</a> and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/grant-manage.html#using-grant-token">Using
            a grant token</a> in the <i>Key Management Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the asymmetric KMS key that will be used to verify the signature. This
            must be the same KMS key that was used to generate the signature. If you specify a
            different KMS key, the signature verification fails.</para><para>To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN. When using
            an alias name, prefix it with <code>"alias/"</code>. To specify a KMS key in a different
            Amazon Web Services account, you must use the key ARN or alias ARN.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Alias name: <code>alias/ExampleAlias</code></para></li><li><para>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.
            To get the alias name and alias ARN, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Message">
            <summary>
            <para>
            <para>Specifies the message that was signed. You can submit a raw message of up to 4096
            bytes, or a hash digest of the message. If you submit a digest, use the <code>MessageType</code>
            parameter with a value of <code>DIGEST</code>.</para><para>If the message specified here is different from the message that was signed, the signature
            verification fails. A message and its hash digest are considered to be the same message.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.MessageType">
            <summary>
            <para>
            <para>Tells KMS whether the value of the <code>Message</code> parameter is a message or
            message digest. The default value, RAW, indicates a message. To indicate a message
            digest, enter <code>DIGEST</code>.</para><important><para>Use the <code>DIGEST</code> value only when the value of the <code>Message</code>
            parameter is a message digest. If you use the <code>DIGEST</code> value with a raw
            message, the security of the verification operation can be compromised.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Signature">
            <summary>
            <para>
            <para>The signature that the <code>Sign</code> operation generated.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.SigningAlgorithm">
            <summary>
            <para>
            <para>The signing algorithm that was used to sign the message. If you submit a different
            algorithm, the signature verification fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SignatureValid'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.VerifyResponse).
            Specifying the name of a property of type Amazon.KeyManagementService.Model.VerifyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.TestKMSSignatureCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Message parameter.
            The -PassThru parameter is deprecated, use -Select '^Message' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet">
            <summary>
            Associates an existing KMS alias with a different KMS key. Each alias is associated
            with only one KMS key at a time, although a KMS key can have multiple aliases. The
            alias and the KMS key must be in the same Amazon Web Services account and Region.
            
             <note><para>
            Adding, deleting, or updating an alias can allow or deny permission to the KMS key.
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/abac.html">ABAC
            in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para></note><para>
            The current and new KMS key must be the same type (both symmetric or both asymmetric),
            and they must have the same key usage (<code>ENCRYPT_DECRYPT</code> or <code>SIGN_VERIFY</code>).
            This restriction prevents errors in code that uses aliases. If you must assign an
            alias to a different type of KMS key, use <a>DeleteAlias</a> to delete the old alias
            and <a>CreateAlias</a> to create a new alias.
            </para><para>
            You cannot use <code>UpdateAlias</code> to change an alias name. To change an alias
            name, use <a>DeleteAlias</a> to delete the old alias and <a>CreateAlias</a> to create
            a new alias.
            </para><para>
            Because an alias is not a property of a KMS key, you can create, update, and delete
            the aliases of a KMS key without affecting the KMS key. Also, aliases do not appear
            in the response from the <a>DescribeKey</a> operation. To get the aliases of all KMS
            keys in the account, use the <a>ListAliases</a> operation. 
            </para><para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account. 
            </para><para><b>Required permissions</b></para><ul><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UpdateAlias</a>
            on the alias (IAM policy).
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UpdateAlias</a>
            on the current KMS key (key policy).
            </para></li><li><para><a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UpdateAlias</a>
            on the new KMS key (key policy).
            </para></li></ul><para>
            For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html#alias-access">Controlling
            access to aliases</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Related operations:</b></para><ul><li><para><a>CreateAlias</a></para></li><li><para><a>DeleteAlias</a></para></li><li><para><a>ListAliases</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.AliasName">
            <summary>
            <para>
            <para>Identifies the alias that is changing its KMS key. This value must begin with <code>alias/</code>
            followed by the alias name, such as <code>alias/ExampleAlias</code>. You cannot use
            <code>UpdateAlias</code> to change the alias name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.TargetKeyId">
            <summary>
            <para>
            <para>Identifies the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk">customer
            managed key</a> to associate with the alias. You don't have permission to associate
            an alias with an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk">Amazon
            Web Services managed key</a>.</para><para>The KMS key must be in the same Amazon Web Services account and Region as the alias.
            Also, the new target KMS key must be the same type as the current target KMS key (both
            symmetric or both asymmetric) and they must have the same key usage. </para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para><para>To verify that the alias is mapped to the correct KMS key, use <a>ListAliases</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetKeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetKeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet">
            <summary>
            Changes the properties of a custom key store. Use the <code>CustomKeyStoreId</code>
            parameter to identify the custom key store you want to edit. Use the remaining parameters
            to change the properties of the custom key store.
            
             
            <para>
            You can only update a custom key store that is disconnected. To disconnect the custom
            key store, use <a>DisconnectCustomKeyStore</a>. To reconnect the custom key store
            after the update completes, use <a>ConnectCustomKeyStore</a>. To find the connection
            state of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.
            </para><para>
            The <code>CustomKeyStoreId</code> parameter is required in all commands. Use the other
            parameters of <code>UpdateCustomKeyStore</code> to edit your key store settings.
            </para><ul><li><para>
            Use the <code>NewCustomKeyStoreName</code> parameter to change the friendly name of
            the custom key store to the value that you specify.
            </para><para></para></li><li><para>
            Use the <code>KeyStorePassword</code> parameter tell KMS the current password of the
            <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-store-concepts.html#concept-kmsuser"><code>kmsuser</code> crypto user (CU)</a> in the associated CloudHSM cluster. You
            can use this parameter to <a href="https://docs.aws.amazon.com/kms/latest/developerguide/fix-keystore.html#fix-keystore-password">fix
            connection failures</a> that occur when KMS cannot log into the associated cluster
            because the <code>kmsuser</code> password has changed. This value does not change
            the password in the CloudHSM cluster.
            </para><para></para></li><li><para>
            Use the <code>CloudHsmClusterId</code> parameter to associate the custom key store
            with a different, but related, CloudHSM cluster. You can use this parameter to repair
            a custom key store if its CloudHSM cluster becomes corrupted or is deleted, or when
            you need to create or restore a cluster from a backup. 
            </para></li></ul><para>
            If the operation succeeds, it returns a JSON object with no properties.
            </para><para>
            This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom
            key store feature</a> feature in KMS, which combines the convenience and extensive
            integration of KMS with the isolation and control of a single-tenant key store.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a custom key store
            in a different Amazon Web Services account. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UpdateCustomKeyStore</a>
            (IAM policy)
            </para><para><b>Related operations:</b></para><ul><li><para><a>ConnectCustomKeyStore</a></para></li><li><para><a>CreateCustomKeyStore</a></para></li><li><para><a>DeleteCustomKeyStore</a></para></li><li><para><a>DescribeCustomKeyStores</a></para></li><li><para><a>DisconnectCustomKeyStore</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.CloudHsmClusterId">
            <summary>
            <para>
            <para>Associates the custom key store with a related CloudHSM cluster. </para><para>Enter the cluster ID of the cluster that you used to create the custom key store or
            a cluster that shares a backup history and has the same cluster certificate as the
            original cluster. You cannot use this parameter to associate a custom key store with
            an unrelated cluster. In addition, the replacement cluster must <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keystore.html#before-keystore">fulfill
            the requirements</a> for a cluster associated with a custom key store. To view the
            cluster certificate of a cluster, use the <a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/API_DescribeClusters.html">DescribeClusters</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.CustomKeyStoreId">
            <summary>
            <para>
            <para>Identifies the custom key store that you want to update. Enter the ID of the custom
            key store. To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a>
            operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.KeyStorePassword">
            <summary>
            <para>
            <para>Enter the current password of the <code>kmsuser</code> crypto user (CU) in the CloudHSM
            cluster that is associated with the custom key store.</para><para>This parameter tells KMS the current password of the <code>kmsuser</code> crypto user
            (CU). It does not set or change the password of any users in the CloudHSM cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.NewCustomKeyStoreName">
            <summary>
            <para>
            <para>Changes the friendly name of the custom key store to the value that you specify. The
            custom key store name must be unique in the Amazon Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateCustomKeyStoreResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CustomKeyStoreId parameter.
            The -PassThru parameter is deprecated, use -Select '^CustomKeyStoreId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSCustomKeyStoreCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet">
            <summary>
            Updates the description of a KMS key. To see the description of a KMS key, use <a>DescribeKey</a>.
            
            
             
            <para>
            The KMS key that you use for this operation must be in a compatible key state. For
            details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account. 
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:UpdateKeyDescription</a>
            (key policy)
            </para><para><b>Related operations</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>DescribeKey</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Description">
            <summary>
            <para>
            <para>New description for the KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.KeyId">
            <summary>
            <para>
            <para>Updates the description of the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdateKeyDescriptionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSKeyDescriptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet">
            <summary>
            Changes the primary key of a multi-Region key. 
            
             
            <para>
            This operation changes the replica key in the specified Region to a primary key and
            changes the former primary key to a replica key. For example, suppose you have a primary
            key in <code>us-east-1</code> and a replica key in <code>eu-west-2</code>. If you
            run <code>UpdatePrimaryRegion</code> with a <code>PrimaryRegion</code> value of <code>eu-west-2</code>,
            the primary key is now the key in <code>eu-west-2</code>, and the key in <code>us-east-1</code>
            becomes a replica key. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-manage.html#multi-region-update">Updating
            the primary Region</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            This operation supports <i>multi-Region keys</i>, an KMS feature that lets you create
            multiple interoperable KMS keys in different Amazon Web Services Regions. Because
            these KMS keys have the same key ID, key material, and other metadata, you can use
            them interchangeably to encrypt data in one Amazon Web Services Region and decrypt
            it in a different Amazon Web Services Region without re-encrypting the data or making
            a cross-Region call. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Multi-Region
            keys in KMS</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            The <i>primary key</i> of a multi-Region key is the source for properties that are
            always shared by primary and replica keys, including the key material, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-id">key
            ID</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-spec">key
            spec</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-usage">key
            usage</a>, <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-origin">key
            material origin</a>, and <a href="https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html">automatic
            key rotation</a>. It's the only key that can be replicated. You cannot <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html">delete
            the primary key</a> until all replica keys are deleted.
            </para><para>
            The key ID and primary Region that you specify uniquely identify the replica key that
            will become the primary key. The primary Region must already have a replica key. This
            operation does not create a KMS key in the specified Region. To find the replica keys,
            use the <a>DescribeKey</a> operation on the primary key or any replica key. To create
            a replica key, use the <a>ReplicateKey</a> operation.
            </para><para>
            You can run this operation while using the affected multi-Region keys in cryptographic
            operations. This operation should not delay, interrupt, or cause failures in cryptographic
            operations. 
            </para><para>
            Even after this operation completes, the process of updating the primary Region might
            still be in progress for a few more seconds. Operations such as <code>DescribeKey</code>
            might display both the old and new primary keys as replicas. The old and new primary
            keys have a transient key state of <code>Updating</code>. The original key state is
            restored when the update is complete. While the key state is <code>Updating</code>,
            you can use the keys in cryptographic operations, but you cannot replicate the new
            primary key or perform certain management operations, such as enabling or disabling
            these keys. For details about the <code>Updating</code> key state, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key
            states of KMS keys</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para>
            This operation does not return any output. To verify that primary key is changed,
            use the <a>DescribeKey</a> operation.
            </para><para><b>Cross-account use</b>: No. You cannot use this operation in a different Amazon
            Web Services account. 
            </para><para><b>Required permissions</b>: 
            </para><ul><li><para><code>kms:UpdatePrimaryRegion</code> on the current primary key (in the primary key's
            Region). Include this permission primary key's key policy.
            </para></li><li><para><code>kms:UpdatePrimaryRegion</code> on the current replica key (in the replica key's
            Region). Include this permission in the replica key's key policy.
            </para></li></ul><para><b>Related operations</b></para><ul><li><para><a>CreateKey</a></para></li><li><para><a>ReplicateKey</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet.KeyId">
            <summary>
            <para>
            <para>Identifies the current primary key. When the operation completes, this KMS key will
            be a replica key.</para><para>Specify the key ID or key ARN of a multi-Region primary key.</para><para>For example:</para><ul><li><para>Key ID: <code>mrk-1234abcd12ab34cd56ef1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/mrk-1234abcd12ab34cd56ef1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet.PrimaryRegion">
            <summary>
            <para>
            <para>The Amazon Web Services Region of the new primary key. Enter the Region ID, such as
            <code>us-east-1</code> or <code>ap-southeast-2</code>. There must be an existing replica
            key in this Region. </para><para>When the operation completes, the multi-Region key in this Region will be the primary
            key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.UpdatePrimaryRegionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.UpdateKMSPrimaryRegionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet">
            <summary>
            Attaches a key policy to the specified KMS key. 
            
             
            <para>
            For more information about key policies, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
            Policies</a> in the <i>Key Management Service Developer Guide</i>. For help writing
            and formatting a JSON policy document, see the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i><i>Identity and Access Management User Guide</i></i>. For examples of adding a key policy in multiple programming languages, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/programming-key-policies.html#put-policy">Setting
            a key policy</a> in the <i>Key Management Service Developer Guide</i>.
            </para><para><b>Cross-account use</b>: No. You cannot perform this operation on a KMS key in a
            different Amazon Web Services account.
            </para><para><b>Required permissions</b>: <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:PutKeyPolicy</a>
            (key policy)
            </para><para><b>Related operations</b>: <a>GetKeyPolicy</a></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.BypassPolicyLockoutSafetyCheck">
            <summary>
            <para>
            <para>A flag to indicate whether to bypass the key policy lockout safety check.</para><important><para>Setting this value to true increases the risk that the KMS key becomes unmanageable.
            Do not set this value to true indiscriminately.</para><para>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section in the <i>Key Management Service Developer Guide</i>.</para></important><para>Use this parameter only when you intend to prevent the principal that is making the
            request from making a subsequent <code>PutKeyPolicy</code> request on the KMS key.</para><para>The default value is false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.KeyId">
            <summary>
            <para>
            <para>Sets the key policy on the specified KMS key.</para><para>Specify the key ID or key ARN of the KMS key.</para><para>For example:</para><ul><li><para>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li><li><para>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code></para></li></ul><para>To get the key ID and key ARN for a KMS key, use <a>ListKeys</a> or <a>DescribeKey</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Policy">
            <summary>
            <para>
            <para>The key policy to attach to the KMS key.</para><para>The key policy must meet the following criteria:</para><ul><li><para>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to true, the key policy
            must allow the principal that is making the <code>PutKeyPolicy</code> request to make
            a subsequent <code>PutKeyPolicy</code> request on the KMS key. This reduces the risk
            that the KMS key becomes unmanageable. For more information, refer to the scenario
            in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default
            Key Policy</a> section of the <i>Key Management Service Developer Guide</i>.</para></li><li><para>Each statement in the key policy must contain one or more principals. The principals
            in the key policy must exist and be visible to KMS. When you create a new Amazon Web
            Services principal (for example, an IAM user or role), you might need to enforce a
            delay before including the new principal in a key policy because the new principal
            might not be immediately visible to KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes
            that I make are not always immediately visible</a> in the <i>Amazon Web Services Identity
            and Access Management User Guide</i>.</para></li></ul><para>A key policy document can include only the following characters:</para><ul><li><para>Printable ASCII characters from the space character (<code>\u0020</code>) through
            the end of the ASCII character range.</para></li><li><para>Printable characters in the Basic Latin and Latin-1 Supplement character set (through
            <code>\u00FF</code>).</para></li><li><para>The tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return
            (<code>\u000D</code>) special characters</para></li></ul><para>For information about key policies, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Key
            policies in KMS</a> in the <i>Key Management Service Developer Guide</i>. For help
            writing and formatting a JSON policy document, see the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM
            JSON Policy Reference</a> in the <i><i>Identity and Access Management User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.PolicyName">
            <summary>
            <para>
            <para>The name of the key policy. The only valid value is <code>default</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.KeyManagementService.Model.PutKeyPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the KeyId parameter.
            The -PassThru parameter is deprecated, use -Select '^KeyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.KMS.WriteKMSKeyPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
