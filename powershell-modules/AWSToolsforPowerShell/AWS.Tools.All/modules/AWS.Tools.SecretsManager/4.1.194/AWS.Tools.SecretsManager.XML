<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.SecretsManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet">
            <summary>
            Attaches tags to a secret. Tags consist of a key name and a value. Tags are part of
            the secret's metadata. They are not associated with specific versions of the secret.
            This operation appends tags to the existing list of tags.
            
             
            <para>
            The following restrictions apply to tags:
            </para><ul><li><para>
            Maximum number of tags per secret: 50
            </para></li><li><para>
            Maximum key length: 127 Unicode characters in UTF-8
            </para></li><li><para>
            Maximum value length: 255 Unicode characters in UTF-8
            </para></li><li><para>
            Tag keys and values are case sensitive.
            </para></li><li><para>
            Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.
            </para></li><li><para>
            If you use your tagging schema across multiple services and resources, other services
            might have restrictions on allowed characters. Generally allowed characters: letters,
            spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.
            </para></li></ul><important><para>
            If you use tags as part of your security strategy, then adding or removing a tag can
            change permissions. If successfully completing this operation would result in you
            losing your permissions for this secret, then the operation is blocked and returns
            an Access Denied error.
            </para></important><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:TagResource</code>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet.SecretId">
            <summary>
            <para>
            <para>The identifier for the secret to attach tags to. You can specify either the Amazon
            Resource Name (ARN) or the friendly name of the secret.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to attach to the secret as a JSON text string argument. Each element in the
            list consists of a <code>Key</code> and a <code>Value</code>.</para><para>For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet">
            <summary>
            Replicates the secret to a new Regions. See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create-manage-multi-region-secrets.html">Multi-Region
            secrets</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:ReplicateSecretToRegions</code>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.AddReplicaRegion">
            <summary>
            <para>
            <para>A list of Regions in which to replicate the secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.ForceOverwriteReplicaSecret">
            <summary>
            <para>
            <para>Specifies whether to overwrite a secret with the same name in the destination Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to replicate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.ReplicateSecretToRegionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.AddSECSecretToRegionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet">
            <summary>
            Generates a random password. We recommend that you specify the maximum length and
            include every character type that the system you are generating a password for can
            support.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:GetRandomPassword</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.ExcludeCharacter">
            <summary>
            <para>
            <para>A string of the characters that you don't want in the password.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.ExcludeLowercase">
            <summary>
            <para>
            <para>Specifies whether to exclude lowercase letters from the password. If you don't include
            this switch, the password can contain lowercase letters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.ExcludeNumber">
            <summary>
            <para>
            <para>Specifies whether to exclude numbers from the password. If you don't include this
            switch, the password can contain numbers.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.ExcludePunctuation">
            <summary>
            <para>
            <para>Specifies whether to exclude the following punctuation characters from the password:
            <code>! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~</code>.
            If you don't include this switch, the password can contain punctuation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.ExcludeUppercase">
            <summary>
            <para>
            <para>Specifies whether to exclude uppercase letters from the password. If you don't include
            this switch, the password can contain uppercase letters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.IncludeSpace">
            <summary>
            <para>
            <para>Specifies whether to include the space character. If you include this switch, the
            password can contain space characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.PasswordLength">
            <summary>
            <para>
            <para>The length of the password. If you don't include this parameter, the default length
            is 32 characters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.RequireEachIncludedType">
            <summary>
            <para>
            <para>Specifies whether to include at least one upper and lowercase letter, one number,
            and one punctuation. If you don't include this switch, the password contains at least
            one of every character type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECRandomPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RandomPassword'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.GetRandomPasswordResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.GetRandomPasswordResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECResourcePolicyCmdlet">
            <summary>
            Retrieves the JSON text of the resource-based policy document attached to the secret.
            For more information about permissions policies attached to a secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-policies.html">Permissions
            policies attached to a secret</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:GetResourcePolicy</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECResourcePolicyCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to retrieve the attached resource-based policy for.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.GetResourcePolicyResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.GetResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretCmdlet">
            <summary>
            Retrieves the details of a secret. It does not include the encrypted secret value.
            Secrets Manager only returns fields that have a value in the response. 
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:DescribeSecret</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret. </para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.DescribeSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.DescribeSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet">
            <summary>
            Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account,
            not including secrets that are marked for deletion. To see secrets marked for deletion,
            use the Secrets Manager console.
            
             
            <para>
            ListSecrets is eventually consistent, however it might not reflect changes from the
            last five minutes. To get the latest information for a specific secret, use <a>DescribeSecret</a>.
            </para><para>
            To list the versions of a secret, use <a>ListSecretVersionIds</a>.
            </para><para>
            To get the secret value from <code>SecretString</code> or <code>SecretBinary</code>,
            call <a>GetSecretValue</a>.
            </para><para>
            For information about finding secrets in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_search-secret.html">Find
            secrets in Secrets Manager</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:ListSecrets</code>. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.Filter">
            <summary>
            <para>
            <para>The filters to apply to the list of secrets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.SortOrder">
            <summary>
            <para>
            <para>Lists secrets in the requested order. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of results to include in the response.</para><para>If there are more results available, in the response, Secrets Manager includes <code>NextToken</code>.
            To get the next results, call <code>ListSecrets</code> again with the value from <code>NextToken</code>.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates where the output should continue from, if a previous call did
            not show all results. To get the next results, call <code>ListSecrets</code> again
            with this value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'SecretList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.ListSecretsResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.ListSecretsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SortOrder parameter.
            The -PassThru parameter is deprecated, use -Select '^SortOrder' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet">
            <summary>
            Retrieves the contents of the encrypted fields <code>SecretString</code> or <code>SecretBinary</code>
            from the specified version of a secret, whichever contains content.
            
             
            <para>
            We recommend that you cache your secret values by using client-side caching. Caching
            secrets improves speed and reduces your costs. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html">Cache
            secrets for your applications</a>.
            </para><para>
            To retrieve the previous version of a secret, use <code>VersionStage</code> and specify
            AWSPREVIOUS. To revert to the previous version of a secret, call <a href="https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/update-secret-version-stage.html">UpdateSecretVersionStage</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:GetSecretValue</code>. If the
            secret is encrypted using a customer-managed key instead of the Amazon Web Services
            managed key <code>aws/secretsmanager</code>, then you also need <code>kms:Decrypt</code>
            permissions for that key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to retrieve.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet.VersionId">
            <summary>
            <para>
            <para>The unique identifier of the version of the secret to retrieve. If you include both
            this parameter and <code>VersionStage</code>, the two parameters must refer to the
            same secret version. If you don't specify either a <code>VersionStage</code> or <code>VersionId</code>,
            then Secrets Manager returns the <code>AWSCURRENT</code> version.</para><para>This value is typically a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value with 32 hexadecimal digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet.VersionStage">
            <summary>
            <para>
            <para>The staging label of the version of the secret to retrieve. </para><para>Secrets Manager uses staging labels to keep track of different versions during the
            rotation process. If you include both this parameter and <code>VersionId</code>, the
            two parameters must refer to the same secret version. If you don't specify either
            a <code>VersionStage</code> or <code>VersionId</code>, Secrets Manager returns the
            <code>AWSCURRENT</code> version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.GetSecretValueResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.GetSecretValueResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretValueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet">
            <summary>
            Lists the versions of a secret. Secrets Manager uses staging labels to indicate the
            different versions of a secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">
            Secrets Manager concepts: Versions</a>.
            
             
            <para>
            To list the secrets in the account, use <a>ListSecrets</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:ListSecretVersionIds</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para><br/><br/>In the AWS.Tools.SecretsManager module, this cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.IncludeDeprecated">
            <summary>
            <para>
            <para>Specifies whether to include versions of secrets that don't have any staging labels
            attached to them. Versions without staging labels are considered deprecated and are
            subject to deletion by Secrets Manager.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret whose versions you want to list.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of results to include in the response.</para><para>If there are more results available, in the response, Secrets Manager includes <code>NextToken</code>.
            To get the next results, call <code>ListSecretVersionIds</code> again with the value
            from <code>NextToken</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token that indicates where the output should continue from, if a previous call did
            not show all results. To get the next results, call <code>ListSecretVersionIds</code>
            again with this value.</para>
            </para>
            <para>
            <br/><b>Note:</b> In the AWS.Tools.SecretsManager module, this parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.ListSecretVersionIdsResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.ListSecretVersionIdsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.GetSECSecretVersionIdListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet">
            <summary>
            Configures and starts the asynchronous process of rotating the secret. For more information
            about rotation, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html">Rotate
            secrets</a>.
            
             
            <para>
            If you include the configuration parameters, the operation sets the values for the
            secret and then immediately starts a rotation. If you don't include the configuration
            parameters, the operation starts a rotation with the values already stored in the
            secret. 
            </para><para>
            For database credentials you want to rotate, for Secrets Manager to be able to rotate
            the secret, you must make sure the secret value is in the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html">
            JSON structure of a database secret</a>. In particular, if you want to use the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html#rotating-secrets-two-users">
            alternating users strategy</a>, your secret must contain the ARN of a superuser secret.
            </para><para>
            To configure rotation, you also need the ARN of an Amazon Web Services Lambda function
            and the schedule for the rotation. The Lambda rotation function creates a new version
            of the secret and creates or updates the credentials on the database or service to
            match. After testing the new credentials, the function marks the new secret version
            with the staging label <code>AWSCURRENT</code>. Then anyone who retrieves the secret
            gets the new version. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para><para>
            You can create the Lambda rotation function based on the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_available-rotation-templates.html">rotation
            function templates</a> that Secrets Manager provides. Choose a template that matches
            your <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets_strategies.html">Rotation
            strategy</a>.
            </para><para>
            When rotation is successful, the <code>AWSPENDING</code> staging label might be attached
            to the same version as the <code>AWSCURRENT</code> version, or it might not be attached
            to any version. If the <code>AWSPENDING</code> staging label is present but not attached
            to the same version as <code>AWSCURRENT</code>, then any later invocation of <code>RotateSecret</code>
            assumes that a previous rotation request is still in progress and returns an error.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:RotateSecret</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. You also need <code>lambda:InvokeFunction</code>
            permissions on the rotation function. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions-function.html">
            Permissions for rotation</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.RotationRules_AutomaticallyAfterDay">
            <summary>
            <para>
            <para>The number of days between automatic scheduled rotations of the secret. You can use
            this value to check that your secret meets your compliance guidelines for how often
            secrets must be rotated.</para><para>In <code>DescribeSecret</code> and <code>ListSecrets</code>, this value is calculated
            from the rotation schedule after every successful rotation. In <code>RotateSecret</code>,
            you can set the rotation schedule in <code>RotationRules</code> with <code>AutomaticallyAfterDays</code>
            or <code>ScheduleExpression</code>, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the new version of the secret that helps ensure idempotency.
            Secrets Manager uses this value to prevent the accidental creation of duplicate versions
            if there are failures and retries during rotation. This value becomes the <code>VersionId</code>
            of the new version.</para><para>If you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes that in the request for this parameter. If you
            don't use the SDK and instead generate a raw HTTP request to the Secrets Manager service
            endpoint, then you must generate a <code>ClientRequestToken</code> yourself for new
            versions and include that value in the request.</para><para>You only need to specify this value if you implement your own retry logic and you
            want to ensure that Secrets Manager doesn't attempt to create a secret version twice.
            We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness within the specified secret. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.RotationRules_Duration">
            <summary>
            <para>
            <para>The length of the rotation window in hours, for example <code>3h</code> for a three
            hour window. Secrets Manager rotates your secret at any time during this window. The
            window must not go into the next UTC day. If you don't specify this value, the window
            automatically ends at the end of the UTC day. The window begins according to the <code>ScheduleExpression</code>.
            For more information, including examples, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html">Schedule
            expressions in Secrets Manager rotation</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.RotateImmediately">
            <summary>
            <para>
            <para>Specifies whether to rotate the secret immediately or wait until the next scheduled
            rotation window. The rotation schedule is defined in <a>RotateSecretRequest$RotationRules</a>.</para><para>If you don't immediately rotate the secret, Secrets Manager tests the rotation configuration
            by running the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html"><code>testSecret</code> step</a> of the Lambda rotation function. The test creates
            an <code>AWSPENDING</code> version of the secret and then removes it.</para><para>If you don't specify this value, then by default, Secrets Manager rotates the secret
            immediately.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.RotationLambdaARN">
            <summary>
            <para>
            <para>The ARN of the Lambda rotation function that can rotate the secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.RotationRules_ScheduleExpression">
            <summary>
            <para>
            <para>A <code>cron()</code> or <code>rate()</code> expression that defines the schedule
            for rotating your secret. Secrets Manager rotation schedules use UTC time zone. </para><para>Secrets Manager <code>rate()</code> expressions represent the interval in days that
            you want to rotate your secret, for example <code>rate(10 days)</code>. If you use
            a <code>rate()</code> expression, the rotation window opens at midnight, and Secrets
            Manager rotates your secret any time that day after midnight. You can set a <code>Duration</code>
            to shorten the rotation window.</para><para>You can use a <code>cron()</code> expression to create rotation schedules that are
            more detailed than a rotation interval. For more information, including examples,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_schedule.html">Schedule
            expressions in Secrets Manager rotation</a>. If you use a <code>cron()</code> expression,
            Secrets Manager rotates your secret any time during that day after the window opens.
            For example, <code>cron(0 8 1 * ? *)</code> represents a rotation window that occurs
            on the first day of every month beginning at 8:00 AM UTC. Secrets Manager rotates
            the secret any time that day after 8:00 AM. You can set a <code>Duration</code> to
            shorten the rotation window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to rotate.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.RotateSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.RotateSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.InvokeSECSecretRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet">
            <summary>
            Creates a new secret. A <i>secret</i> can be a password, a set of credentials such
            as a user name and password, an OAuth token, or other secret information that you
            store in an encrypted form in Secrets Manager. The secret also includes the connection
            information to access a database or other service, which Secrets Manager doesn't encrypt.
            A secret in Secrets Manager consists of both the protected secret data and the important
            information needed to manage the secret.
            
             
            <para>
            For information about creating a secret in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html">Create
            a secret</a>.
            </para><para>
            To create a secret, you can provide the secret value to be encrypted in either the
            <code>SecretString</code> parameter or the <code>SecretBinary</code> parameter, but
            not both. If you include <code>SecretString</code> or <code>SecretBinary</code> then
            Secrets Manager creates an initial secret version and automatically attaches the staging
            label <code>AWSCURRENT</code> to it.
            </para><para>
            For database credentials you want to rotate, for Secrets Manager to be able to rotate
            the secret, you must make sure the JSON you store in the <code>SecretString</code>
            matches the <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_secret_json_structure.html">JSON
            structure of a database secret</a>.
            </para><para>
            If you don't specify an KMS encryption key, Secrets Manager uses the Amazon Web Services
            managed key <code>aws/secretsmanager</code>. If this key doesn't already exist in
            your account, then Secrets Manager creates it for you automatically. All users and
            roles in the Amazon Web Services account automatically have access to use <code>aws/secretsmanager</code>.
            Creating <code>aws/secretsmanager</code> can result in a one-time significant delay
            in returning the result.
            </para><para>
            If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <code>aws/secretsmanager</code> to encrypt the secret,
            and you must create and use a customer managed KMS key. 
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <code>SecretBinary</code>
            or <code>SecretString</code> because it might be logged. For more information, see
            <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:CreateSecret</code>. If you include
            tags in the secret, you also need <code>secretsmanager:TagResource</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para><para>
            To encrypt the secret with a KMS key other than <code>aws/secretsmanager</code>, you
            need <code>kms:GenerateDataKey</code> and <code>kms:Decrypt</code> permission to the
            key. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.AddReplicaRegion">
            <summary>
            <para>
            <para>A list of Regions and KMS keys to replicate secrets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>If you include <code>SecretString</code> or <code>SecretBinary</code>, then Secrets
            Manager creates an initial version for the secret, and this parameter specifies the
            unique identifier for the new version. </para><note><para>If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            If you don't use the SDK and instead generate a raw HTTP request to the Secrets Manager
            service endpoint, then you must generate a <code>ClientRequestToken</code> yourself
            for the new version and include the value in the request.</para></note><para>This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            a rotation. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness of your versions within the specified secret. </para><ul><li><para>If the <code>ClientRequestToken</code> value isn't already associated with a version
            of the secret then a new version of the secret is created. </para></li><li><para>If a version with this value already exists and the version <code>SecretString</code>
            and <code>SecretBinary</code> values are the same as those in the request, then the
            request is ignored.</para></li><li><para>If a version with this value already exists and that version's <code>SecretString</code>
            and <code>SecretBinary</code> values are different from those in the request, then
            the request fails because you cannot modify an existing version. Instead, use <a>PutSecretValue</a>
            to create a new version.</para></li></ul><para>This value becomes the <code>VersionId</code> of the new version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.Description">
            <summary>
            <para>
            <para>The description of the secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.ForceOverwriteReplicaSecret">
            <summary>
            <para>
            <para>Specifies whether to overwrite a secret with the same name in the destination Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the
            secret value in the secret. An alias is always prefixed by <code>alias/</code>, for
            example <code>alias/aws/secretsmanager</code>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html">About
            aliases</a>.</para><para>To use a KMS key in a different account, use the key ARN or the alias ARN.</para><para>If you don't specify this value, then Secrets Manager uses the key <code>aws/secretsmanager</code>.
            If that key doesn't yet exist, then Secrets Manager creates it for you automatically
            the first time it encrypts the secret value.</para><para>If the secret is in a different Amazon Web Services account from the credentials calling
            the API, then you can't use <code>aws/secretsmanager</code> to encrypt the secret,
            and you must create and use a customer managed KMS key. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new secret.</para><para>The secret name can contain ASCII letters, numbers, and the following characters:
            /_+=.@-</para><para>Do not end your secret name with a hyphen followed by six characters. If you do so,
            you risk confusion and unexpected results when searching for a secret by partial ARN.
            Secrets Manager automatically adds a hyphen and six random characters after the secret
            name at the end of the ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.SecretBinary">
            <summary>
            <para>
            <para>The binary data to encrypt and store in the new version of the secret. We recommend
            that you store your binary data in a file and then pass the contents of the file as
            a parameter.</para><para>Either <code>SecretString</code> or <code>SecretBinary</code> must have a value, but
            not both.</para><para>This parameter is not available in the Secrets Manager console.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.SecretString">
            <summary>
            <para>
            <para>The text data to encrypt and store in this new version of the secret. We recommend
            you use a JSON structure of key/value pairs for your secret value.</para><para>Either <code>SecretString</code> or <code>SecretBinary</code> must have a value, but
            not both.</para><para>If you create a secret by using the Secrets Manager console then Secrets Manager puts
            the protected secret text in only the <code>SecretString</code> parameter. The Secrets
            Manager console stores the information as a JSON structure of key/value pairs that
            a Lambda rotation function can parse.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to attach to the secret. Each tag is a key and value pair of strings
            in a JSON text string, for example:</para><para><code>[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]</code></para><para>Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different
            tag from one with key "abc".</para><para>If you check tags in permissions policies as part of your security strategy, then
            adding or removing a tag can change permissions. If the completion of this operation
            would result in you losing your permissions for this secret, then Secrets Manager
            blocks the operation and returns an <code>Access Denied</code> error. For more information,
            see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac">Control
            access to secrets using tags</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2">Limit
            access to identities with tags that match secrets' tags</a>.</para><para>For information about how to format a JSON parameter for the various command line
            tool environments, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
            JSON for Parameters</a>. If your command-line tool or SDK requires quotation marks
            around the parameter, you should use single quotes to avoid confusion with the double
            quotes required in the JSON text.</para><para>The following restrictions apply to tags:</para><ul><li><para>Maximum number of tags per secret: 50</para></li><li><para>Maximum key length: 127 Unicode characters in UTF-8</para></li><li><para>Maximum value length: 255 Unicode characters in UTF-8</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use the <code>aws:</code> prefix in your tag names or values because Amazon
            Web Services reserves it for Amazon Web Services use. You can't edit or delete tag
            names or values with this prefix. Tags with this prefix do not count against your
            tags per secret limit.</para></li><li><para>If you use your tagging schema across multiple services and resources, other services
            might have restrictions on allowed characters. Generally allowed characters: letters,
            spaces, and numbers representable in UTF-8, plus the following special characters:
            + - = . _ : / @.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.CreateSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.CreateSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretString parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.NewSECSecretCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet">
            <summary>
            For a secret that is replicated to other Regions, deletes the secret replicas from
            the Regions you specify.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:RemoveRegionsFromReplication</code>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet.RemoveReplicaRegion">
            <summary>
            <para>
            <para>The Regions of the replicas to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.RemoveRegionsFromReplicationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECRegionsFromReplicationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourcePolicyCmdlet">
            <summary>
            Deletes the resource-based permission policy attached to the secret. To attach a policy
            to a secret, use <a>PutResourcePolicy</a>.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:DeleteResourcePolicy</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourcePolicyCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to delete the attached resource-based policy for.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.DeleteResourcePolicyResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.DeleteResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet">
            <summary>
            Removes specific tags from a secret.
            
             
            <para>
            This operation is idempotent. If a requested tag is not attached to the secret, no
            error is returned and the secret metadata is unchanged.
            </para><important><para>
            If you use tags as part of your security strategy, then removing a tag can change
            permissions. If successfully completing this operation would result in you losing
            your permissions for this secret, then the operation is blocked and returns an Access
            Denied error.
            </para></important><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:UntagResource</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>A list of tag key names to remove from the secret. You don't specify the value. Both
            the key and its associated value are removed.</para><para>This parameter requires a JSON text string argument.</para><para>For storing multiple values, we recommend that you use a JSON text string argument
            and specify key/value pairs. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters.html">Specifying
            parameter values for the Amazon Web Services CLI</a> in the Amazon Web Services CLI
            User Guide.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet">
            <summary>
            Deletes a secret and all of its versions. You can specify a recovery window during
            which you can restore the secret. The minimum recovery window is 7 days. The default
            recovery window is 30 days. Secrets Manager attaches a <code>DeletionDate</code> stamp
            to the secret that specifies the end of the recovery window. At the end of the recovery
            window, Secrets Manager deletes the secret permanently.
            
             
            <para>
            You can't delete a primary secret that is replicated to other Regions. You must first
            delete the replicas using <a>RemoveRegionsFromReplication</a>, and then delete the
            primary secret. When you delete a replica, it is deleted immediately.
            </para><para>
            You can't directly delete a version of a secret. Instead, you remove all staging labels
            from the version using <a>UpdateSecretVersionStage</a>. This marks the version as
            deprecated, and then Secrets Manager can automatically delete the version in the background.
            </para><para>
            To determine whether an application still uses a secret, you can create an Amazon
            CloudWatch alarm to alert you to any attempts to access a secret during the recovery
            window. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/monitoring_cloudwatch_deleted-secrets.html">
            Monitor secrets scheduled for deletion</a>.
            </para><para>
            Secrets Manager performs the permanent secret deletion at the end of the waiting period
            as a background task with low priority. There is no guarantee of a specific time after
            the recovery window for the permanent delete to occur.
            </para><para>
            At any time before recovery window ends, you can use <a>RestoreSecret</a> to remove
            the <code>DeletionDate</code> and cancel the deletion of the secret.
            </para><para>
            When a secret is scheduled for deletion, you cannot retrieve the secret value. You
            must first cancel the deletion with <a>RestoreSecret</a> and then you can retrieve
            the secret.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:DeleteSecret</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.DeleteWithNoRecovery">
            <summary>
            <para>
            <para>Specifies whether to delete the secret without any recovery window. You can't use
            both this parameter and <code>RecoveryWindowInDays</code> in the same call. If you
            don't use either, then Secrets Manager defaults to a 30 day recovery window.</para><para>Secrets Manager performs the actual deletion with an asynchronous background process,
            so there might be a short delay before the secret is permanently deleted. If you delete
            a secret and then immediately create a secret with the same name, use appropriate
            back off and retry logic.</para><important><para>Use this parameter with caution. This parameter causes the operation to skip the normal
            recovery window before the permanent deletion that Secrets Manager would normally
            impose with the <code>RecoveryWindowInDays</code> parameter. If you delete a secret
            with the <code>ForceDeleteWithouRecovery</code> parameter, then you have no opportunity
            to recover the secret. You lose the secret permanently.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.RecoveryWindowInDay">
            <summary>
            <para>
            <para>The number of days from 7 to 30 that Secrets Manager waits before permanently deleting
            the secret. You can't use both this parameter and <code>ForceDeleteWithoutRecovery</code>
            in the same call. If you don't use either, then Secrets Manager defaults to a 30 day
            recovery window.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to delete.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.DeleteSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.DeleteSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RemoveSECSecretCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.RestoreSECSecretCmdlet">
            <summary>
            Cancels the scheduled deletion of a secret by removing the <code>DeletedDate</code>
            time stamp. You can access a secret again after it has been restored.
            
             
            <para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:RestoreSecret</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RestoreSECSecretCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to restore.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RestoreSECSecretCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.RestoreSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.RestoreSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RestoreSECSecretCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.RestoreSECSecretCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.StopSECReplicationToReplicaCmdlet">
            <summary>
            Removes the link between the replica secret and the primary secret and promotes the
            replica to a primary secret in the replica Region.
            
             
            <para>
            You must call this operation from the Region in which you want to promote the replica
            to a primary secret.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:StopReplicationToReplica</code>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECReplicationToReplicaCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN of the primary secret. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECReplicationToReplicaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ARN'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.StopReplicationToReplicaResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.StopReplicationToReplicaResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECReplicationToReplicaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECReplicationToReplicaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.StopSECSecretRotationCmdlet">
            <summary>
            Turns off automatic rotation, and if a rotation is currently in progress, cancels
            the rotation.
            
             
            <para>
            If you cancel a rotation in progress, it can leave the <code>VersionStage</code> labels
            in an unexpected state. You might need to remove the staging label <code>AWSPENDING</code>
            from the partially created version. You also need to determine whether to roll back
            to the previous version of the secret by moving the staging label <code>AWSCURRENT</code>
            to the version that has <code>AWSPENDING</code>. To determine which version has a
            specific staging label, call <a>ListSecretVersionIds</a>. Then use <a>UpdateSecretVersionStage</a>
            to change staging labels. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_how.html">How
            rotation works</a>.
            </para><para>
            To turn on automatic rotation again, call <a>RotateSecret</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:CancelRotateSecret</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECSecretRotationCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECSecretRotationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.CancelRotateSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.CancelRotateSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECSecretRotationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.StopSECSecretRotationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.TestSECResourcePolicyCmdlet">
            <summary>
            Validates that a resource policy does not grant a wide range of principals access
            to your secret. A resource-based policy is optional for secrets.
            
             
            <para>
            The API performs three checks when validating the policy:
            </para><ul><li><para>
            Sends a call to <a href="https://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/">Zelkova</a>,
            an automated reasoning engine, to ensure your resource policy does not allow broad
            access to your secret, for example policies that use a wildcard for the principal.
            </para></li><li><para>
            Checks for correct syntax in a policy.
            </para></li><li><para>
            Verifies the policy does not lock out a caller.
            </para></li></ul><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:ValidateResourcePolicy</code>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.TestSECResourcePolicyCmdlet.ResourcePolicy">
            <summary>
            <para>
            <para>A JSON-formatted string that contains an Amazon Web Services resource-based policy.
            The policy in the string identifies who can access or manage this secret and its versions.
            For example policies, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html">Permissions
            policy examples</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.TestSECResourcePolicyCmdlet.SecretId">
            <summary>
            <para>
            <para>This field is reserved for internal use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.TestSECResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.ValidateResourcePolicyResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.ValidateResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.TestSECResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourcePolicy parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourcePolicy' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet">
            <summary>
            Modifies the details of a secret, including metadata and the secret value. To change
            the secret value, you can also use <a>PutSecretValue</a>.
            
             
            <para>
            To change the rotation configuration of a secret, use <a>RotateSecret</a> instead.
            </para><para>
            We recommend you avoid calling <code>UpdateSecret</code> at a sustained rate of more
            than once every 10 minutes. When you call <code>UpdateSecret</code> to update the
            secret value, Secrets Manager creates a new version of the secret. Secrets Manager
            removes outdated versions when there are more than 100, but it does not remove versions
            created less than 24 hours ago. If you update the secret value more than once every
            10 minutes, you create more versions than Secrets Manager removes, and you will reach
            the quota for secret versions.
            </para><para>
            If you include <code>SecretString</code> or <code>SecretBinary</code> to create a
            new secret version, Secrets Manager automatically moves the staging label <code>AWSCURRENT</code>
            to the new version. Then it attaches the label <code>AWSPREVIOUS</code> to the version
            that <code>AWSCURRENT</code> was removed from.
            </para><para>
            If you call this operation with a <code>ClientRequestToken</code> that matches an
            existing version's <code>VersionId</code>, the operation results in an error. You
            can't modify an existing version, you can only create a new version. To remove a version,
            remove all staging labels from it. See <a>UpdateSecretVersionStage</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <code>SecretBinary</code>
            or <code>SecretString</code> because it might be logged. For more information, see
            <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:UpdateSecret</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. If you use a customer managed key, you
            must also have <code>kms:GenerateDataKey</code> and <code>kms:Decrypt</code> permissions
            on the key. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/security-encryption.html">
            Secret encryption and decryption</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>If you include <code>SecretString</code> or <code>SecretBinary</code>, then Secrets
            Manager creates a new version for the secret, and this parameter specifies the unique
            identifier for the new version.</para><note><para>If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty. The CLI or SDK generates
            a random UUID for you and includes it as the value for this parameter in the request.
            If you don't use the SDK and instead generate a raw HTTP request to the Secrets Manager
            service endpoint, then you must generate a <code>ClientRequestToken</code> yourself
            for the new version and include the value in the request.</para></note><para>This value becomes the <code>VersionId</code> of the new version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.Description">
            <summary>
            <para>
            <para>The description of the secret.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt new
            secret versions as well as any existing versions with the staging labels <code>AWSCURRENT</code>,
            <code>AWSPENDING</code>, or <code>AWSPREVIOUS</code>. For more information about versions
            and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>.</para><para>A key alias is always prefixed by <code>alias/</code>, for example <code>alias/aws/secretsmanager</code>.
            For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html">About
            aliases</a>.</para><para>If you set this to an empty string, Secrets Manager uses the Amazon Web Services managed
            key <code>aws/secretsmanager</code>. If this key doesn't already exist in your account,
            then Secrets Manager creates it for you automatically. All users and roles in the
            Amazon Web Services account automatically have access to use <code>aws/secretsmanager</code>.
            Creating <code>aws/secretsmanager</code> can result in a one-time significant delay
            in returning the result. </para><important><para>You can only use the Amazon Web Services managed key <code>aws/secretsmanager</code>
            if you call this operation using credentials from the same Amazon Web Services account
            that owns the secret. If the secret is in a different account, then you must use a
            customer managed key and provide the ARN of that KMS key in this field. The user making
            the call must have permissions to both the secret and the KMS key in their respective
            accounts.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.SecretBinary">
            <summary>
            <para>
            <para>The binary data to encrypt and store in the new version of the secret. We recommend
            that you store your binary data in a file and then pass the contents of the file as
            a parameter. </para><para>Either <code>SecretBinary</code> or <code>SecretString</code> must have a value, but
            not both.</para><para>You can't access this parameter in the Secrets Manager console.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.SecretString">
            <summary>
            <para>
            <para>The text data to encrypt and store in the new version of the secret. We recommend
            you use a JSON structure of key/value pairs for your secret value. </para><para>Either <code>SecretBinary</code> or <code>SecretString</code> must have a value, but
            not both. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.UpdateSecretResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.UpdateSecretResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretString parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet">
            <summary>
            Modifies the staging labels attached to a version of a secret. Secrets Manager uses
            staging labels to track a version as it progresses through the secret rotation process.
            Each staging label can be attached to only one version at a time. To add a staging
            label to a version when it is already attached to another version, Secrets Manager
            first removes it from the other version first and then attaches it to this one. For
            more information about versions and staging labels, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/getting-started.html#term_version">Concepts:
            Version</a>. 
            
             
            <para>
            The staging labels that you specify in the <code>VersionStage</code> parameter are
            added to the existing list of staging labels for the version. 
            </para><para>
            You can move the <code>AWSCURRENT</code> staging label to this version by including
            it in this call.
            </para><note><para>
            Whenever you move <code>AWSCURRENT</code>, Secrets Manager automatically moves the
            label <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed
            from.
            </para></note><para>
            If this action results in the last label being removed from a version, then the version
            is considered to be 'deprecated' and can be deleted by Secrets Manager.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:UpdateSecretVersionStage</code>.
            For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.MoveToVersionId">
            <summary>
            <para>
            <para>The ID of the version to add the staging label to. To remove a label from a version,
            then do not specify this parameter.</para><para>If the staging label is already attached to a different version of the secret, then
            you must also specify the <code>RemoveFromVersionId</code> parameter. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.RemoveFromVersionId">
            <summary>
            <para>
            <para>The ID of the version that the staging label is to be removed from. If the staging
            label you are trying to attach to one version is already attached to a different version,
            then you must include this parameter and specify the version that the label is to
            be removed from. If the label is attached and you either do not specify this parameter,
            or the version ID does not match, then the operation fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or the name of the secret with the version and staging labelsto modify.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.VersionStage">
            <summary>
            <para>
            <para>The staging label to add to this version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.UpdateSecretVersionStageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VersionStage parameter.
            The -PassThru parameter is deprecated, use -Select '^VersionStage' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.UpdateSECSecretVersionStageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet">
            <summary>
            Attaches a resource-based permission policy to a secret. A resource-based policy is
            optional. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control for Secrets Manager</a><para>
            For information about attaching a policy in the console, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html">Attach
            a permissions policy to a secret</a>.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters because it might be logged. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:PutResourcePolicy</code>. For
            more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.BlockPublicPolicy">
            <summary>
            <para>
            <para>Specifies whether to block resource-based policies that allow broad access to the
            secret, for example those that use a wildcard for the principal.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.ResourcePolicy">
            <summary>
            <para>
            <para>A JSON-formatted string for an Amazon Web Services resource-based policy. For example
            policies, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html">Permissions
            policy examples</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to attach the resource-based policy.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.PutResourcePolicyResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.PutResourcePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourcePolicy parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourcePolicy' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECResourcePolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet">
            <summary>
            Creates a new version with a new encrypted secret value and attaches it to the secret.
            The version can contain a new <code>SecretString</code> value or a new <code>SecretBinary</code>
            value. 
            
             
            <para>
            We recommend you avoid calling <code>PutSecretValue</code> at a sustained rate of
            more than once every 10 minutes. When you update the secret value, Secrets Manager
            creates a new version of the secret. Secrets Manager removes outdated versions when
            there are more than 100, but it does not remove versions created less than 24 hours
            ago. If you call <code>PutSecretValue</code> more than once every 10 minutes, you
            create more versions than Secrets Manager removes, and you will reach the quota for
            secret versions.
            </para><para>
            You can specify the staging labels to attach to the new version in <code>VersionStages</code>.
            If you don't include <code>VersionStages</code>, then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this version. If this operation
            creates the first version for the secret, then Secrets Manager automatically attaches
            the staging label <code>AWSCURRENT</code> to it. If this operation moves the staging
            label <code>AWSCURRENT</code> from another version to this version, then Secrets Manager
            also automatically moves the staging label <code>AWSPREVIOUS</code> to the version
            that <code>AWSCURRENT</code> was removed from.
            </para><para>
            This operation is idempotent. If you call this operation with a <code>ClientRequestToken</code>
            that matches an existing version's VersionId, and you specify the same secret data,
            the operation succeeds but does nothing. However, if the secret data is different,
            then the operation fails because you can't modify an existing version; you can only
            create new ones.
            </para><para>
            Secrets Manager generates a CloudTrail log entry when you call this action. Do not
            include sensitive information in request parameters except <code>SecretBinary</code>
            or <code>SecretString</code> because it might be logged. For more information, see
            <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieve-ct-entries.html">Logging
            Secrets Manager events with CloudTrail</a>.
            </para><para><b>Required permissions: </b><code>secretsmanager:PutSecretValue</code>. For more
            information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_iam-permissions.html#reference_iam-permissions_actions">
            IAM policy actions for Secrets Manager</a> and <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html">Authentication
            and access control in Secrets Manager</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique identifier for the new version of the secret. </para><note><para>If you use the Amazon Web Services CLI or one of the Amazon Web Services SDKs to call
            this operation, then you can leave this parameter empty because they generate a random
            UUID for you. If you don't use the SDK and instead generate a raw HTTP request to
            the Secrets Manager service endpoint, then you must generate a <code>ClientRequestToken</code>
            yourself for new versions and include that value in the request. </para></note><para>This value helps ensure idempotency. Secrets Manager uses this value to prevent the
            accidental creation of duplicate versions if there are failures and retries during
            the Lambda rotation function processing. We recommend that you generate a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID-type</a>
            value to ensure uniqueness within the specified secret. </para><ul><li><para>If the <code>ClientRequestToken</code> value isn't already associated with a version
            of the secret then a new version of the secret is created. </para></li><li><para>If a version with this value already exists and that version's <code>SecretString</code>
            or <code>SecretBinary</code> values are the same as those in the request then the
            request is ignored. The operation is idempotent. </para></li><li><para>If a version with this value already exists and the version of the <code>SecretString</code>
            and <code>SecretBinary</code> values are different from those in the request, then
            the request fails because you can't modify a secret version. You can only create new
            versions to store new secret values.</para></li></ul><para>This value becomes the <code>VersionId</code> of the new version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.SecretBinary">
            <summary>
            <para>
            <para>The binary data to encrypt and store in the new version of the secret. To use this
            parameter in the command-line tools, we recommend that you store your binary data
            in a file and then pass the contents of the file as a parameter. </para><para>You must include <code>SecretBinary</code> or <code>SecretString</code>, but not both.</para><para>You can't access this value from the Secrets Manager console.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.SecretId">
            <summary>
            <para>
            <para>The ARN or name of the secret to add a new version to.</para><para>For an ARN, we recommend that you specify a complete ARN rather than a partial ARN.
            See <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot.html#ARN_secretnamehyphen">Finding
            a secret from a partial ARN</a>.</para><para>If the secret doesn't already exist, use <code>CreateSecret</code> instead.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.SecretString">
            <summary>
            <para>
            <para>The text to encrypt and store in the new version of the secret. </para><para>You must include <code>SecretBinary</code> or <code>SecretString</code>, but not both.</para><para>We recommend you create the secret string as JSON key/value pairs, as shown in the
            example.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.VersionStage">
            <summary>
            <para>
            <para>A list of staging labels to attach to this version of the secret. Secrets Manager
            uses staging labels to track versions of a secret through the rotation process.</para><para>If you specify a staging label that's already associated with a different version
            of the same secret, then Secrets Manager removes the label from the other version
            and attaches it to this version. If you specify <code>AWSCURRENT</code>, and it is
            already attached to another version, then Secrets Manager also moves the staging label
            <code>AWSPREVIOUS</code> to the version that <code>AWSCURRENT</code> was removed from.</para><para>If you don't include <code>VersionStages</code>, then Secrets Manager automatically
            moves the staging label <code>AWSCURRENT</code> to this version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.SecretsManager.Model.PutSecretValueResponse).
            Specifying the name of a property of type Amazon.SecretsManager.Model.PutSecretValueResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecretString parameter.
            The -PassThru parameter is deprecated, use -Select '^SecretString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.SEC.WriteSECSecretValueCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
