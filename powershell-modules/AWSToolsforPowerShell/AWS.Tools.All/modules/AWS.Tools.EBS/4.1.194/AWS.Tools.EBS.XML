<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.EBS</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet">
            <summary>
            Seals and completes the snapshot after all of the required blocks of data have been
            written to it. Completing the snapshot changes the status to <code>completed</code>.
            You cannot write new blocks to a snapshot after it has been completed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.ChangedBlocksCount">
            <summary>
            <para>
            <para>The number of blocks that were written to the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.Checksum">
            <summary>
            <para>
            <para>An aggregated Base-64 SHA256 checksum based on the checksums of each written block.</para><para>To generate the aggregated checksum using the linear aggregation method, arrange the
            checksums for each written block in ascending order of their block index, concatenate
            them to form a single string, and then generate the checksum on the entire string
            using the SHA256 algorithm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.ChecksumAggregationMethod">
            <summary>
            <para>
            <para>The aggregation method used to generate the checksum. Currently, the only supported
            aggregation method is <code>LINEAR</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.ChecksumAlgorithm">
            <summary>
            <para>
            <para>The algorithm used to generate the checksum. Currently, the only supported algorithm
            is <code>SHA256</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Status'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.CompleteSnapshotResponse).
            Specifying the name of a property of type Amazon.EBS.Model.CompleteSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.CompleteEBSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet">
            <summary>
            Returns information about the blocks that are different between two Amazon Elastic
            Block Store snapshots of the same volume/snapshot lineage.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.FirstSnapshotId">
            <summary>
            <para>
            <para>The ID of the first snapshot to use for the comparison.</para><important><para>The <code>FirstSnapshotID</code> parameter must be specified with a <code>SecondSnapshotId</code>
            parameter; otherwise, an error occurs.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.SecondSnapshotId">
            <summary>
            <para>
            <para>The ID of the second snapshot to use for the comparison.</para><important><para>The <code>SecondSnapshotId</code> parameter must be specified with a <code>FirstSnapshotID</code>
            parameter; otherwise, an error occurs.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.StartingBlockIndex">
            <summary>
            <para>
            <para>The block index from which the comparison should start.</para><para>The list in the response will start from this block index or the next valid block
            index in the snapshots.</para><para>If you specify <b>NextToken</b>, then <b>StartingBlockIndex</b> is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of blocks to be returned by the request.</para><para>Even if additional blocks can be retrieved from the snapshot, the request can return
            less blocks than <b>MaxResults</b> or an empty array of blocks.</para><para>To retrieve the next set of blocks from the snapshot, make another request with the
            returned <b>NextToken</b> value. The value of <b>NextToken</b> is <code>null</code>
            when there are no more blocks to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para><para>If you specify <b>NextToken</b>, then <b>StartingBlockIndex</b> is ignored.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ChangedBlocks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.ListChangedBlocksResponse).
            Specifying the name of a property of type Amazon.EBS.Model.ListChangedBlocksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SecondSnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SecondSnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSChangedBlockListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet">
            <summary>
            Returns the data in a block in an Amazon Elastic Block Store snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet.BlockIndex">
            <summary>
            <para>
            <para>The block index of the block in which to read the data. A block index is a logical
            index in units of <code>512</code> KiB blocks. To identify the block index, divide
            the logical offset of the data in the logical volume by the block size (logical offset
            of data/<code>524288</code>). The logical offset of the data must be <code>512</code>
            KiB aligned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet.BlockToken">
            <summary>
            <para>
            <para>The block token of the block from which to get data. You can obtain the <code>BlockToken</code>
            by running the <code>ListChangedBlocks</code> or <code>ListSnapshotBlocks</code> operations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot containing the block from which to get data.</para><important><para>If the specified snapshot is encrypted, you must have permission to use the KMS key
            that was used to encrypt the snapshot. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html">
            Using encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.GetSnapshotBlockResponse).
            Specifying the name of a property of type Amazon.EBS.Model.GetSnapshotBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet">
            <summary>
            Returns information about the blocks in an Amazon Elastic Block Store snapshot.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot from which to get block indexes and block tokens.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.StartingBlockIndex">
            <summary>
            <para>
            <para>The block index from which the list should start. The list in the response will start
            from this block index or the next valid block index in the snapshot.</para><para>If you specify <b>NextToken</b>, then <b>StartingBlockIndex</b> is ignored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of blocks to be returned by the request.</para><para>Even if additional blocks can be retrieved from the snapshot, the request can return
            less blocks than <b>MaxResults</b> or an empty array of blocks.</para><para>To retrieve the next set of blocks from the snapshot, make another request with the
            returned <b>NextToken</b> value. The value of <b>NextToken</b> is <code>null</code>
            when there are no more blocks to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to request the next page of results.</para><para>If you specify <b>NextToken</b>, then <b>StartingBlockIndex</b> is ignored.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Blocks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.ListSnapshotBlocksResponse).
            Specifying the name of a property of type Amazon.EBS.Model.ListSnapshotBlocksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.GetEBSSnapshotBlockListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet">
            <summary>
            Creates a new Amazon EBS snapshot. The new snapshot enters the <code>pending</code>
            state after the request completes. 
            
             
            <para>
            After creating the snapshot, use <a href="https://docs.aws.amazon.com/ebs/latest/APIReference/API_PutSnapshotBlock.html">
            PutSnapshotBlock</a> to write blocks of data to the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Description">
            <summary>
            <para>
            <para>A description for the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Encrypted">
            <summary>
            <para>
            <para>Indicates whether to encrypt the snapshot.</para><para>You can't specify <b>Encrypted</b> and <b> ParentSnapshotId</b> in the same request.
            If you specify both parameters, the request fails with <code>ValidationException</code>.</para><para>The encryption status of the snapshot depends on the values that you specify for <b>Encrypted</b>,
            <b>KmsKeyArn</b>, and <b>ParentSnapshotId</b>, and whether your Amazon Web Services
            account is enabled for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">
            encryption by default</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html">
            Using encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><important><para>To create an encrypted snapshot, you must have permission to use the KMS key. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions">
            Permissions to use Key Management Service keys</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.KmsKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key to be used
            to encrypt the snapshot.</para><para>The encryption status of the snapshot depends on the values that you specify for <b>Encrypted</b>,
            <b>KmsKeyArn</b>, and <b>ParentSnapshotId</b>, and whether your Amazon Web Services
            account is enabled for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">
            encryption by default</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html">
            Using encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><important><para>To create an encrypted snapshot, you must have permission to use the KMS key. For
            more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions">
            Permissions to use Key Management Service keys</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.ParentSnapshotId">
            <summary>
            <para>
            <para>The ID of the parent snapshot. If there is no parent snapshot, or if you are creating
            the first snapshot for an on-premises volume, omit this parameter.</para><para>You can't specify <b>ParentSnapshotId</b> and <b>Encrypted</b> in the same request.
            If you specify both parameters, the request fails with <code>ValidationException</code>.</para><para>The encryption status of the snapshot depends on the values that you specify for <b>Encrypted</b>,
            <b>KmsKeyArn</b>, and <b>ParentSnapshotId</b>, and whether your Amazon Web Services
            account is enabled for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">
            encryption by default</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html">
            Using encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</para><important><para>If you specify an encrypted parent snapshot, you must have permission to use the KMS
            key that was used to encrypt the parent snapshot. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapi-permissions.html#ebsapi-kms-permissions">
            Permissions to use Key Management Service keys</a> in the <i>Amazon Elastic Compute
            Cloud User Guide</i>.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to apply to the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Timeout">
            <summary>
            <para>
            <para>The amount of time (in minutes) after which the snapshot is automatically cancelled
            if:</para><ul><li><para>No blocks are written to the snapshot.</para></li><li><para>The snapshot is not completed after writing the last block of data.</para></li></ul><para>If no value is specified, the timeout defaults to <code>60</code> minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.VolumeSize">
            <summary>
            <para>
            <para>The size of the volume, in GiB. The maximum size is <code>65536</code> GiB (64 TiB).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.ClientToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request. Idempotency ensures that an API request completes only once. With an
            idempotent request, if the original request completes successfully. The subsequent
            retries with the same client token return the result from the original successful
            request and they have no additional effect.</para><para>If you do not specify a client token, one is automatically generated by the Amazon
            Web Services SDK.</para><para>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-direct-api-idempotency.html">
            Idempotency for StartSnapshot API</a> in the <i>Amazon Elastic Compute Cloud User
            Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.StartSnapshotResponse).
            Specifying the name of a property of type Amazon.EBS.Model.StartSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VolumeSize parameter.
            The -PassThru parameter is deprecated, use -Select '^VolumeSize' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.StartEBSSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet">
            <summary>
            Writes a block of data to a snapshot. If the specified block contains data, the existing
            data is overwritten. The target snapshot must be in the <code>pending</code> state.
            
             
            <para>
            Data written to a snapshot must be aligned with 512-KiB sectors.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.BlockData">
            <summary>
            <para>
            <para>The data to write to the block.</para><para>The block data is not signed as part of the Signature Version 4 signing process. As
            a result, you must generate and provide a Base64-encoded SHA256 checksum for the block
            data using the <b>x-amz-Checksum</b> header. Also, you must specify the checksum algorithm
            using the <b>x-amz-Checksum-Algorithm</b> header. The checksum that you provide is
            part of the Signature Version 4 signing process. It is validated against a checksum
            generated by Amazon EBS to ensure the validity and authenticity of the data. If the
            checksums do not correspond, the request fails. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-accessing-snapshot.html#ebsapis-using-checksums">
            Using checksums with the EBS direct APIs</a> in the <i>Amazon Elastic Compute Cloud
            User Guide</i>.</para>
            </para>
            <para>The cmdlet accepts a parameter of type string, string[], System.IO.FileInfo or System.IO.Stream.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.BlockIndex">
            <summary>
            <para>
            <para>The block index of the block in which to write the data. A block index is a logical
            index in units of <code>512</code> KiB blocks. To identify the block index, divide
            the logical offset of the data in the logical volume by the block size (logical offset
            of data/<code>524288</code>). The logical offset of the data must be <code>512</code>
            KiB aligned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.Checksum">
            <summary>
            <para>
            <para>A Base64-encoded SHA256 checksum of the data. Only SHA256 checksums are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.ChecksumAlgorithm">
            <summary>
            <para>
            <para>The algorithm used to generate the checksum. Currently, the only supported algorithm
            is <code>SHA256</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.DataLength">
            <summary>
            <para>
            <para>The size of the data to write to the block, in bytes. Currently, the only supported
            size is <code>524288</code> bytes.</para><para>Valid values: <code>524288</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.Progress">
            <summary>
            <para>
            <para>The progress of the write process, as a percentage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The ID of the snapshot.</para><important><para>If the specified snapshot is encrypted, you must have permission to use the KMS key
            that was used to encrypt the snapshot. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebsapis-using-encryption.html">
            Using encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>..</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EBS.Model.PutSnapshotBlockResponse).
            Specifying the name of a property of type Amazon.EBS.Model.PutSnapshotBlockResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EBS.WriteEBSSnapshotBlockCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
