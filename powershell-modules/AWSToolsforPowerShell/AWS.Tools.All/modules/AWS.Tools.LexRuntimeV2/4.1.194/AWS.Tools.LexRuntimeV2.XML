<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.LexRuntimeV2</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet">
            <summary>
            Returns session information for a specified bot, alias, and user.
            
             
            <para>
            For example, you can use this operation to retrieve session information for a user
            that has left a long-running session in use.
            </para><para>
            If the bot, alias, or session identifier doesn't exist, Amazon Lex V2 returns a <code>BadRequestException</code>.
            If the locale doesn't exist or is not enabled for the alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.BotAliasId">
            <summary>
            <para>
            <para>The alias identifier in use for the bot that contains the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.BotId">
            <summary>
            <para>
            <para>The identifier of the bot that contains the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.LocaleId">
            <summary>
            <para>
            <para>The locale where the session is in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.SessionId">
            <summary>
            <para>
            <para>The identifier of the session to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexRuntimeV2.Model.GetSessionResponse).
            Specifying the name of a property of type Amazon.LexRuntimeV2.Model.GetSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.GetLRSV2SessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotId parameter.
            The -PassThru parameter is deprecated, use -Select '^BotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet">
            <summary>
            Removes session information for a specified bot, alias, and user ID. 
            
             
            <para>
            You can use this operation to restart a conversation with a bot. When you remove a
            session, the entire history of the session is removed so that you can start again.
            </para><para>
            You don't need to delete a session. Sessions have a time limit and will expire. Set
            the session time limit when you create the bot. The default is 5 minutes, but you
            can specify anything between 1 minute and 24 hours.
            </para><para>
            If you specify a bot or alias ID that doesn't exist, you receive a <code>BadRequestException.</code></para><para>
            If the locale doesn't exist in the bot, or if the locale hasn't been enables for the
            alias, you receive a <code>BadRequestException</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.BotAliasId">
            <summary>
            <para>
            <para>The alias identifier in use for the bot that contains the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.BotId">
            <summary>
            <para>
            <para>The identifier of the bot that contains the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.LocaleId">
            <summary>
            <para>
            <para>The locale where the session is in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.SessionId">
            <summary>
            <para>
            <para>The identifier of the session to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexRuntimeV2.Model.DeleteSessionResponse).
            Specifying the name of a property of type Amazon.LexRuntimeV2.Model.DeleteSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotId parameter.
            The -PassThru parameter is deprecated, use -Select '^BotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.RemoveLRSV2SessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet">
            <summary>
            Sends user input to Amazon Lex V2. Client applications use this API to send requests
            to Amazon Lex V2 at runtime. Amazon Lex V2 then interprets the user input using the
            machine learning model that it build for the bot.
            
             
            <para>
            In response, Amazon Lex V2 returns the next message to convey to the user and an optional
            response card to display.
            </para><para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para><ul><li><para><b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para></li><li><para><b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para></li><li><para><b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.SessionStateValue_ActiveContext">
            <summary>
            <para>
            <para>One or more contexts that indicate to Amazon Lex V2 the context of a request. When
            a context is active, Amazon Lex V2 considers intents with the matching context as
            a trigger as the next intent in a session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.BotAliasId">
            <summary>
            <para>
            <para>The alias identifier in use for the bot that processes the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.BotId">
            <summary>
            <para>
            <para>The identifier of the bot that processes the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Intent_ConfirmationState">
            <summary>
            <para>
            <para>Contains information about whether fulfillment of the intent has been confirmed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.LocaleId">
            <summary>
            <para>
            <para>The locale where the session is in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Intent_Name">
            <summary>
            <para>
            <para>The name of the intent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.SessionStateValue_OriginatingRequestId">
            <summary>
            <para>
            <para>A unique identifier for a specific request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.RequestAttribute">
            <summary>
            <para>
            <para>Request-specific information passed between the client application and Amazon Lex
            V2 </para><para>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes with the prefix <code>x-amz-lex:</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.SessionStateValue_SessionAttribute">
            <summary>
            <para>
            <para>Map of key/value pairs representing session-specific context information. It contains
            application information passed between Amazon Lex V2 and a client application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.SessionId">
            <summary>
            <para>
            <para>The identifier of the user session that is having the conversation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.DialogAction_SlotElicitationStyle">
            <summary>
            <para>
            <para>Configures the slot to use spell-by-letter or spell-by-word style. When you use a
            style on a slot, users can spell out their input to make it clear to your bot.</para><ul><li><para>Spell by letter - "b" "o" "b"</para></li><li><para>Spell by word - "b as in boy" "o as in oscar" "b as in boy"</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-spelling.html">
            Using spelling to enter slot values </a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.RuntimeHints_SlotHint">
            <summary>
            <para>
            <para>A list of the slots in the intent that should have runtime hints added, and the phrases
            that should be added for each slot.</para><para>The first level of the <code>slotHints</code> map is the name of the intent. The second
            level is the name of the slot within the intent. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html">Using
            hints to improve accuracy</a>.</para><para>The intent name and slot name must exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Intent_Slot">
            <summary>
            <para>
            <para>A map of all of the slots for the intent. The name of the slot maps to the value of
            the slot. If a slot has not been filled, the value is null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.DialogAction_SlotToElicit">
            <summary>
            <para>
            <para>The name of the slot that should be elicited from the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Intent_State">
            <summary>
            <para>
            <para>Contains fulfillment information for the intent. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.DialogAction_SubSlotToElicit">
            <summary>
            <para>
            <para>The name of the constituent sub slot of the composite slot specified in slotToElicit
            that should be elicited from the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Text">
            <summary>
            <para>
            <para>The text that the user entered. Amazon Lex V2 interprets this text.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.DialogAction_Type">
            <summary>
            <para>
            <para>The next action that the bot should take in its interaction with the user. The possible
            values are:</para><ul><li><para><code>Close</code> - Indicates that there will not be a response from the user. For
            example, the statement "Your order has been placed" does not require a response.</para></li><li><para><code>ConfirmIntent</code> - The next action is asking the user if the intent is
            complete and ready to be fulfilled. This is a yes/no question such as "Place the order?"</para></li><li><para><code>Delegate</code> - The next action is determined by Amazon Lex V2.</para></li><li><para><code>ElicitIntent</code> - The next action is to elicit an intent from the user.</para></li><li><para><code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexRuntimeV2.Model.RecognizeTextResponse).
            Specifying the name of a property of type Amazon.LexRuntimeV2.Model.RecognizeTextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Text parameter.
            The -PassThru parameter is deprecated, use -Select '^Text' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2TextCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet">
            <summary>
            Sends user input to Amazon Lex V2. You can send text or speech. Clients use this API
            to send text and audio requests to Amazon Lex V2 at runtime. Amazon Lex V2 interprets
            the user input using the machine learning model built for the bot.
            
             
            <para>
            The following request fields must be compressed with gzip and then base64 encoded
            before you send them to Amazon Lex V2. 
            </para><ul><li><para>
            requestAttributes
            </para></li><li><para>
            sessionState
            </para></li></ul><para>
            The following response fields are compressed using gzip and then base64 encoded by
            Amazon Lex V2. Before you can use these fields, you must decode and decompress them.
            
            </para><ul><li><para>
            inputTranscript
            </para></li><li><para>
            interpretations
            </para></li><li><para>
            messages
            </para></li><li><para>
            requestAttributes
            </para></li><li><para>
            sessionState
            </para></li></ul><para>
            The example contains a Java application that compresses and encodes a Java object
            to send to Amazon Lex V2, and a second that decodes and decompresses a response from
            Amazon Lex V2.
            </para><para>
            If the optional post-fulfillment response is specified, the messages are returned
            as follows. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/API_PostFulfillmentStatusSpecification.html">PostFulfillmentStatusSpecification</a>.
            </para><ul><li><para><b>Success message</b> - Returned if the Lambda function completes successfully and
            the intent state is fulfilled or ready fulfillment if the message is present.
            </para></li><li><para><b>Failed message</b> - The failed message is returned if the Lambda function throws
            an exception or if the Lambda function returns a failed intent state without a message.
            </para></li><li><para><b>Timeout message</b> - If you don't configure a timeout message and a timeout,
            and the Lambda function doesn't return within 30 seconds, the timeout message is returned.
            If you configure a timeout, the timeout message is returned when the period times
            out. 
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/streaming-progress.html#progress-complete.html">Completion
            message</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.BotAliasId">
            <summary>
            <para>
            <para>The alias identifier in use for the bot that should receive the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.BotId">
            <summary>
            <para>
            <para>The identifier of the bot that should receive the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.InputStream">
            <summary>
            <para>
            <para>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code>
            parameter.</para>
            </para>
            <para>The cmdlet accepts a parameter of type string, string[], System.IO.FileInfo or System.IO.Stream.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.LocaleId">
            <summary>
            <para>
            <para>The locale where the session is in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.RequestAttribute">
            <summary>
            <para>
            <para>Request-specific information passed between the client application and Amazon Lex
            V2 </para><para>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes for prefix <code>x-amz-lex:</code>.</para><para>The <code>requestAttributes</code> field must be compressed using gzip and then base64
            encoded before sending to Amazon Lex V2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.RequestContentType">
            <summary>
            <para>
            <para>Indicates the format for audio input or that the content is text. The header must
            start with one of the following prefixes:</para><ul><li><para>PCM format, audio data must be in little-endian byte order.</para><ul><li><para>audio/l16; rate=16000; channels=1</para></li><li><para>audio/x-l16; sample-rate=16000; channel-count=1</para></li><li><para>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</para></li></ul></li><li><para>Opus format</para><ul><li><para>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</para></li></ul></li><li><para>Text format</para><ul><li><para>text/plain; charset=utf-8</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.ResponseContentType">
            <summary>
            <para>
            <para>The message that Amazon Lex V2 returns in the response can be either text or speech
            based on the <code>responseContentType</code> value.</para><ul><li><para>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex V2 returns text
            in the response.</para></li><li><para>If the value begins with <code>audio/</code>, Amazon Lex V2 returns speech in the
            response. Amazon Lex V2 uses Amazon Polly to generate the speech using the configuration
            that you specified in the <code>requestContentType</code> parameter. For example,
            if you specify <code>audio/mpeg</code> as the value, Amazon Lex V2 returns speech
            in the MPEG format.</para></li><li><para>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code>
            at 16 KHz in 16-bit, little-endian format.</para></li><li><para>The following are the accepted values:</para><ul><li><para>audio/mpeg</para></li><li><para>audio/ogg</para></li><li><para>audio/pcm (16 KHz)</para></li><li><para>audio/* (defaults to mpeg)</para></li><li><para>text/plain; charset=utf-8</para></li></ul></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.SessionId">
            <summary>
            <para>
            <para>The identifier of the session in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.SessionStateValue">
            <summary>
            <para>
            <para>Sets the state of the session with the user. You can use this to set the current intent,
            attributes, context, and dialog action. Use the dialog action to determine the next
            step that Amazon Lex V2 should use in the conversation with the user.</para><para>The <code>sessionState</code> field must be compressed using gzip and then base64
            encoded before sending to Amazon Lex V2.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse).
            Specifying the name of a property of type Amazon.LexRuntimeV2.Model.RecognizeUtteranceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.SendLRSV2UtteranceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet">
            <summary>
            Creates a new session or modifies an existing session with an Amazon Lex V2 bot. Use
            this operation to enable your application to set the state of the bot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.SessionStateValue_ActiveContext">
            <summary>
            <para>
            <para>One or more contexts that indicate to Amazon Lex V2 the context of a request. When
            a context is active, Amazon Lex V2 considers intents with the matching context as
            a trigger as the next intent in a session.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.BotAliasId">
            <summary>
            <para>
            <para>The alias identifier of the bot that receives the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.BotId">
            <summary>
            <para>
            <para>The identifier of the bot that receives the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Intent_ConfirmationState">
            <summary>
            <para>
            <para>Contains information about whether fulfillment of the intent has been confirmed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.LocaleId">
            <summary>
            <para>
            <para>The locale where the session is in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Message">
            <summary>
            <para>
            <para>A list of messages to send to the user. Messages are sent in the order that they are
            defined in the list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Intent_Name">
            <summary>
            <para>
            <para>The name of the intent.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.SessionStateValue_OriginatingRequestId">
            <summary>
            <para>
            <para>A unique identifier for a specific request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.RequestAttribute">
            <summary>
            <para>
            <para>Request-specific information passed between Amazon Lex V2 and the client application.</para><para>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create
            any request attributes with the prefix <code>x-amz-lex:</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.ResponseContentType">
            <summary>
            <para>
            <para>The message that Amazon Lex V2 returns in the response can be either text or speech
            depending on the value of this parameter. </para><ul><li><para>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex V2 returns text
            in the response.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.SessionStateValue_SessionAttribute">
            <summary>
            <para>
            <para>Map of key/value pairs representing session-specific context information. It contains
            application information passed between Amazon Lex V2 and a client application.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.SessionId">
            <summary>
            <para>
            <para>The identifier of the session that receives the session data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.DialogAction_SlotElicitationStyle">
            <summary>
            <para>
            <para>Configures the slot to use spell-by-letter or spell-by-word style. When you use a
            style on a slot, users can spell out their input to make it clear to your bot.</para><ul><li><para>Spell by letter - "b" "o" "b"</para></li><li><para>Spell by word - "b as in boy" "o as in oscar" "b as in boy"</para></li></ul><para>For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-spelling.html">
            Using spelling to enter slot values </a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.RuntimeHints_SlotHint">
            <summary>
            <para>
            <para>A list of the slots in the intent that should have runtime hints added, and the phrases
            that should be added for each slot.</para><para>The first level of the <code>slotHints</code> map is the name of the intent. The second
            level is the name of the slot within the intent. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html">Using
            hints to improve accuracy</a>.</para><para>The intent name and slot name must exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Intent_Slot">
            <summary>
            <para>
            <para>A map of all of the slots for the intent. The name of the slot maps to the value of
            the slot. If a slot has not been filled, the value is null.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.DialogAction_SlotToElicit">
            <summary>
            <para>
            <para>The name of the slot that should be elicited from the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Intent_State">
            <summary>
            <para>
            <para>Contains fulfillment information for the intent. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.DialogAction_SubSlotToElicit">
            <summary>
            <para>
            <para>The name of the constituent sub slot of the composite slot specified in slotToElicit
            that should be elicited from the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.DialogAction_Type">
            <summary>
            <para>
            <para>The next action that the bot should take in its interaction with the user. The possible
            values are:</para><ul><li><para><code>Close</code> - Indicates that there will not be a response from the user. For
            example, the statement "Your order has been placed" does not require a response.</para></li><li><para><code>ConfirmIntent</code> - The next action is asking the user if the intent is
            complete and ready to be fulfilled. This is a yes/no question such as "Place the order?"</para></li><li><para><code>Delegate</code> - The next action is determined by Amazon Lex V2.</para></li><li><para><code>ElicitIntent</code> - The next action is to elicit an intent from the user.</para></li><li><para><code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LexRuntimeV2.Model.PutSessionResponse).
            Specifying the name of a property of type Amazon.LexRuntimeV2.Model.PutSessionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BotId parameter.
            The -PassThru parameter is deprecated, use -Select '^BotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LRSV2.WriteLRSV2SessionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
