<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.EventBridge</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified EventBridge resource.
            Tags can help you organize and categorize your resources. You can also use them to
            scope user permissions by granting a user permission to access or change only resources
            with certain tag values. In EventBridge, rules and event buses can be tagged.
            
             
            <para>
            Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly
            as strings of characters.
            </para><para>
            You can use the <code>TagResource</code> action with a resource that already has tags.
            If you specify a new tag key, this tag is appended to the list of tags associated
            with the resource. If you specify a tag key that is already associated with the resource,
            the new tag value that you specify replaces the previous value for that tag.
            </para><para>
            You can associate as many as 50 tags with a resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The ARN of the EventBridge resource that you're adding tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The list of key-value pairs to associate with the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.AddEVBResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.ClearEVBConnectionCmdlet">
            <summary>
            Removes all authorization parameters from the connection. This lets you remove the
            secret from the connection so you can reuse it without having to create a new connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.ClearEVBConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection to remove authorization from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.ClearEVBConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeauthorizeConnectionResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DeauthorizeConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.ClearEVBConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.ClearEVBConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.DisableEVBEventSourceCmdlet">
            <summary>
            You can use this operation to temporarily stop receiving events from the specified
            partner event source. The matching event bus is not deleted. 
            
             
            <para>
            When you deactivate a partner event source, the source goes into PENDING state. If
            it remains in PENDING state for more than two weeks, it is deleted.
            </para><para>
            To activate a deactivated partner event source, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html">ActivateEventSource</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the partner event source to deactivate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeactivateEventSourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBEventSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet">
            <summary>
            Disables the specified rule. A disabled rule won't match any events, and won't self-trigger
            if it has a schedule expression.
            
             
            <para>
            When you disable a rule, incoming events might continue to match to the disabled rule.
            Allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DisableRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.DisableEVBRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.EnableEVBEventSourceCmdlet">
            <summary>
            Activates a partner event source that has been deactivated. Once activated, your matching
            event bus will start receiving events from the event source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the partner event source to activate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ActivateEventSourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBEventSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet">
            <summary>
            Enables the specified rule. If the rule does not exist, the operation fails.
            
             
            <para>
            When you enable a rule, incoming events might not immediately start matching to a
            newly enabled rule. Allow a short period of time for changes to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.EnableRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.EnableEVBRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationCmdlet">
            <summary>
            Retrieves details about an API destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the API destination to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeApiDestinationResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeApiDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet">
            <summary>
            Retrieves a list of API destination in the account in the current Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.ConnectionArn">
            <summary>
            <para>
            <para>The ARN of the connection specified for the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>A name prefix to filter results returned. Only API destinations with a name that starts
            with the prefix are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of API destinations to include in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ApiDestinations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListApiDestinationsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListApiDestinationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBApiDestinationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveCmdlet">
            <summary>
            Retrieves details about an archive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveCmdlet.ArchiveName">
            <summary>
            <para>
            <para>The name of the archive to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeArchiveResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeArchiveResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ArchiveName parameter.
            The -PassThru parameter is deprecated, use -Select '^ArchiveName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet">
            <summary>
            Lists your archives. You can either list all the archives or you can provide a prefix
            to match to the archive names. Filter parameters are exclusive.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The ARN of the event source associated with the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>A name prefix to filter the archives returned. Only archives with name that match
            the prefix are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.State">
            <summary>
            <para>
            <para>The state of the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Archives'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListArchivesResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListArchivesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBArchiveListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionCmdlet">
            <summary>
            Retrieves details about a connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeConnectionResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet">
            <summary>
            Retrieves a list of connections from the account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.ConnectionState">
            <summary>
            <para>
            <para>The state of the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>A name prefix to filter results returned. Only connections with a name that starts
            with the prefix are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of connections to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListConnectionsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListConnectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBConnectionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointCmdlet">
            <summary>
            Get the information about an existing global endpoint. For more information about
            global endpoints, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html">Making
            applications Regional-fault tolerant with global endpoints and event replication</a>
            in the Amazon EventBridge User Guide..
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointCmdlet.HomeRegion">
            <summary>
            <para>
            <para>The primary Region of the endpoint you want to get information about. For example
            <code>"HomeRegion": "us-east-1"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointCmdlet.Name">
            <summary>
            <para>
            <para>The name of the endpoint you want to get information about. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeEndpointResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet">
            <summary>
            List the global endpoints associated with this account. For more information about
            global endpoints, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html">Making
            applications Regional-fault tolerant with global endpoints and event replication</a>
            in the Amazon EventBridge User Guide..<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.HomeRegion">
            <summary>
            <para>
            <para>The primary Region of the endpoints associated with this account. For example <code>"HomeRegion":
            "us-east-1"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>A value that will return a subset of the endpoints associated with this account. For
            example, <code>"NamePrefix": "ABC"</code> will return all endpoints with "ABC" in
            the name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results returned by the call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.NextToken">
            <summary>
            <para>
            <para>If <code>nextToken</code> is returned, there are more results available. The value
            of nextToken is a unique pagination token for each page. Make the call again using
            the returned token to retrieve the next page. Keep all other arguments unchanged.
            Each pagination token expires after 24 hours. Using an expired pagination token will
            return an HTTP 400 InvalidToken error.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Endpoints'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListEndpointsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListEndpointsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEndpointListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusCmdlet">
            <summary>
            Displays details about an event bus in your account. This can include the external
            Amazon Web Services accounts that are permitted to write events to your default event
            bus, and the associated policy. For custom event buses and partner event buses, it
            displays the name, ARN, policy, state, and creation time.
            
             
            <para>
             To enable your account to receive events from other accounts on its default event
            bus, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para><para>
            For more information about partner event buses, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusCmdlet.Name">
            <summary>
            <para>
            <para>The name or ARN of the event bus to show details for. If you omit this, the default
            event bus is displayed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeEventBusResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeEventBusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet">
            <summary>
            Lists all the event buses in your account, including the default event bus, custom
            event buses, and partner event buses.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>Specifying this limits the results to only those event buses with names that start
            with the specified prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.Limit">
            <summary>
            <para>
            <para>Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventBuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListEventBusesResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListEventBusesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventBusListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceCmdlet">
            <summary>
            This operation lists details about a partner event source that is shared with your
            account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the partner event source to display the details of.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeEventSourceResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeEventSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet">
            <summary>
            You can use this to see all the partner event sources that have been shared with your
            Amazon Web Services account. For more information about partner event sources, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>Specifying this limits the results to only those partner event sources with names
            that start with the specified prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.Limit">
            <summary>
            <para>
            <para>Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListEventSourcesResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListEventSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBEventSourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceCmdlet">
            <summary>
            An SaaS partner can use this operation to list details about a partner event source
            that they have created. Amazon Web Services customers do not use this operation. Instead,
            Amazon Web Services customers can use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html">DescribeEventSource</a>
            to see details about a partner event source that is shared with them.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the event source to display.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribePartnerEventSourceResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribePartnerEventSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet">
            <summary>
            An SaaS partner can use this operation to display the Amazon Web Services account
            ID that a particular partner event source name is associated with. This operation
            is not used by Amazon Web Services customers.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.EventSourceName">
            <summary>
            <para>
            <para>The name of the partner event source to display account information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.Limit">
            <summary>
            <para>
            <para>Specifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to this operation. Specifying this retrieves
            the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PartnerEventSourceAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListPartnerEventSourceAccountsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListPartnerEventSourceAccountsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EventSourceName parameter.
            The -PassThru parameter is deprecated, use -Select '^EventSourceName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceAccountListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet">
            <summary>
            An SaaS partner can use this operation to list all the partner event source names
            that they have created. This operation is not used by Amazon Web Services customers.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>If you specify this, the results are limited to only those partner event sources that
            start with the string you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.Limit">
            <summary>
            <para>
            <para>pecifying this limits the number of results returned by this operation. The operation
            also returns a NextToken which you can use in a subsequent operation to retrieve the
            next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to this operation. Specifying this retrieves
            the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PartnerEventSources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListPartnerEventSourcesResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListPartnerEventSourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBPartnerEventSourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayCmdlet">
            <summary>
            Retrieves details about a replay. Use <code>DescribeReplay</code> to determine the
            progress of a running replay. A replay processes events to replay based on the time
            in the event, and replays them using 1 minute intervals. If you use <code>StartReplay</code>
            and specify an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers
            a 20 minute time range, the events are replayed from the first minute of that 20 minute
            range first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayCmdlet.ReplayName">
            <summary>
            <para>
            <para>The name of the replay to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeReplayResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeReplayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplayName parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplayName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet">
            <summary>
            Lists your replays. You can either list all the replays or you can provide a prefix
            to match to the replay names. Filter parameters are exclusive.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The ARN of the archive from which the events are replayed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.NamePrefix">
            <summary>
            <para>
            <para>A name prefix to filter the replays returned. Only replays with name that match the
            prefix are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.State">
            <summary>
            <para>
            <para>The state of the replay.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of replays to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Replays'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListReplaysResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListReplaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBReplayListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBResourceTagCmdlet">
            <summary>
            Displays the tags associated with an EventBridge resource. In EventBridge, rules and
            event buses can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The ARN of the EventBridge resource for which you want to view tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet">
            <summary>
            Lists your Amazon EventBridge rules. You can either list all the rules or you can
            provide a prefix to match to the rule names.
            
             
            <para>
            ListRules does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus to list the rules for. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.NamePrefix">
            <summary>
            <para>
            <para>The prefix matching the rule name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Rules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListRulesResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NamePrefix parameter.
            The -PassThru parameter is deprecated, use -Select '^NamePrefix' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleDetailCmdlet">
            <summary>
            Describes the specified rule.
            
             
            <para>
            DescribeRule does not list the targets of a rule. To see the targets associated with
            a rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html">ListTargetsByRule</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleDetailCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleDetailCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DescribeRuleResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DescribeRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet">
            <summary>
            Lists the rules for the specified target. You can see which of the rules in Amazon
            EventBridge can invoke a specific target in your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus to list rules for. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.TargetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the target resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuleNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListRuleNamesByTargetResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListRuleNamesByTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetArn parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBRuleNamesByTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet">
            <summary>
            Lists the targets assigned to the specified rule.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.Rule">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token returned by a previous call to retrieve the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Targets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.ListTargetsByRuleResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.ListTargetsByRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Rule parameter.
            The -PassThru parameter is deprecated, use -Select '^Rule' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.GetEVBTargetsByRuleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet">
            <summary>
            Creates an API destination, which is an HTTP invocation endpoint configured as a target
            for events.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.ConnectionArn">
            <summary>
            <para>
            <para>The ARN of the connection to use for the API destination. The destination endpoint
            must support the authorization type specified for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.Description">
            <summary>
            <para>
            <para>A description for the API destination to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.HttpMethod">
            <summary>
            <para>
            <para>The method to use for the request to the HTTP invocation endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.InvocationEndpoint">
            <summary>
            <para>
            <para>The URL to the HTTP invocation endpoint for the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.InvocationRateLimitPerSecond">
            <summary>
            <para>
            <para>The maximum number of requests per second to send to the HTTP invocation endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.Name">
            <summary>
            <para>
            <para>The name for the API destination to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreateApiDestinationResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreateApiDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBApiDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet">
            <summary>
            Creates an archive of events with the specified settings. When you create an archive,
            incoming events might not immediately start being sent to the archive. Allow a short
            period of time for changes to take effect. If you do not specify a pattern to filter
            events sent to the archive, all events are sent to the archive except replayed events.
            Replayed events are not sent to an archive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.ArchiveName">
            <summary>
            <para>
            <para>The name for the archive to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.Description">
            <summary>
            <para>
            <para>A description for the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.EventPattern">
            <summary>
            <para>
            <para>An event pattern to use to filter events sent to the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The ARN of the event bus that sends events to the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.RetentionDay">
            <summary>
            <para>
            <para>The number of days to retain events for. Default value is 0. If set to 0, events are
            retained indefinitely</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreateArchiveResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreateArchiveResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ArchiveName parameter.
            The -PassThru parameter is deprecated, use -Select '^ArchiveName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBArchiveCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet">
            <summary>
            Creates a connection. A connection defines the authorization type and credentials
            to use for authorization with an API destination HTTP endpoint.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.ApiKeyAuthParameters_ApiKeyName">
            <summary>
            <para>
            <para>The name of the API key to use for authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.ApiKeyAuthParameters_ApiKeyValue">
            <summary>
            <para>
            <para>The value for the API key to use for authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.OAuthParameters_AuthorizationEndpoint">
            <summary>
            <para>
            <para>The URL to the authorization endpoint when OAuth is specified as the authorization
            type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.AuthorizationType">
            <summary>
            <para>
            <para>The type of authorization to use for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.InvocationHttpParameters_BodyParameter">
            <summary>
            <para>
            <para>Contains additional body string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.OAuthHttpParameters_BodyParameter">
            <summary>
            <para>
            <para>Contains additional body string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.ClientParameters_ClientID">
            <summary>
            <para>
            <para>The client ID to use for OAuth authorization for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.ClientParameters_ClientSecret">
            <summary>
            <para>
            <para>The client secret associated with the client ID to use for OAuth authorization for
            the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.Description">
            <summary>
            <para>
            <para>A description for the connection to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.InvocationHttpParameters_HeaderParameter">
            <summary>
            <para>
            <para>Contains additional header parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.OAuthHttpParameters_HeaderParameter">
            <summary>
            <para>
            <para>Contains additional header parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.OAuthParameters_HttpMethod">
            <summary>
            <para>
            <para>The method to use for the authorization request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name for the connection to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.BasicAuthParameters_Password">
            <summary>
            <para>
            <para>The password associated with the user name to use for Basic authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.InvocationHttpParameters_QueryStringParameter">
            <summary>
            <para>
            <para>Contains additional query string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.OAuthHttpParameters_QueryStringParameter">
            <summary>
            <para>
            <para>Contains additional query string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.BasicAuthParameters_Username">
            <summary>
            <para>
            <para>The user name to use for Basic authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreateConnectionResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreateConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet">
            <summary>
            Creates a global endpoint. Global endpoints improve your application's availability
            by making it regional-fault tolerant. To do this, you define a primary and secondary
            Region with event buses in each Region. You also create a Amazon Route 53 health check
            that will tell EventBridge to route events to the secondary Region when an "unhealthy"
            state is encountered and events will be routed back to the primary Region when the
            health check reports a "healthy" state.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Description">
            <summary>
            <para>
            <para>A description of the global endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.EventBus">
            <summary>
            <para>
            <para>Define the event buses used. </para><important><para>The names of the event buses must be identical in each Region.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Primary_HealthCheck">
            <summary>
            <para>
            <para>The ARN of the health check used by the endpoint to determine whether failover is
            triggered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Name">
            <summary>
            <para>
            <para>The name of the global endpoint. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the role used for replication.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Secondary_Route">
            <summary>
            <para>
            <para>Defines the secondary Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.ReplicationConfig_State">
            <summary>
            <para>
            <para>The state of event replication.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreateEndpointResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreateEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet">
            <summary>
            Creates a new event bus within your account. This can be a custom event bus which
            you can use to receive events from your custom applications and services, or it can
            be a partner event bus which can be matched to a partner event source.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.EventSourceName">
            <summary>
            <para>
            <para>If you are creating a partner event bus, this specifies the partner event source that
            the new event bus will be matched with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new event bus. </para><para>Event bus names cannot contain the / character. You can't use the name <code>default</code>
            for a custom event bus, as this name is already used for your account's default event
            bus.</para><para>If this is a partner event bus, the name must exactly match the name of the partner
            event source that this event bus is matched to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to associate with the event bus.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventBusArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreateEventBusResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreateEventBusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBEventBusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet">
            <summary>
            Called by an SaaS partner to create a partner event source. This operation is not
            used by Amazon Web Services customers.
            
             
            <para>
            Each partner event source can be used by one Amazon Web Services account to create
            a matching partner event bus in that Amazon Web Services account. A SaaS partner must
            create one partner event source for each Amazon Web Services account that wants to
            receive those event types. 
            </para><para>
            A partner event source creates events based on resources within the SaaS partner's
            service or application.
            </para><para>
            An Amazon Web Services account that creates a partner event bus that matches the partner
            event source can use that event bus to receive events from the partner, and then process
            them using Amazon Web Services Events rules and targets.
            </para><para>
            Partner event source names follow this format:
            </para><para><code><i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i></code></para><para><i>partner_name</i> is determined during partner registration and identifies the
            partner to Amazon Web Services customers. <i>event_namespace</i> is determined by
            the partner and is a way for the partner to categorize their events. <i>event_name</i>
            is determined by the partner, and should uniquely identify an event-generating resource
            within the partner system. The combination of <i>event_namespace</i> and <i>event_name</i>
            should help Amazon Web Services customers decide whether to create an event bus to
            receive these events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet.Account">
            <summary>
            <para>
            <para>The Amazon Web Services account ID that is permitted to create a matching partner
            event bus for this partner event source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the partner event source. This name must be unique and must be in the
            format <code><i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i></code>.
            The Amazon Web Services account that wants to use this partner event source must create
            a partner event bus with a name that matches the name of the partner event source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EventSourceArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CreatePartnerEventSourceResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CreatePartnerEventSourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.NewEVBPartnerEventSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBApiDestinationCmdlet">
            <summary>
            Deletes the specified API destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBApiDestinationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the destination to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBApiDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteApiDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBApiDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBApiDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBArchiveCmdlet">
            <summary>
            Deletes the specified archive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBArchiveCmdlet.ArchiveName">
            <summary>
            <para>
            <para>The name of the archive to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBArchiveCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteArchiveResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBArchiveCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ArchiveName parameter.
            The -PassThru parameter is deprecated, use -Select '^ArchiveName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBArchiveCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBConnectionCmdlet">
            <summary>
            Deletes a connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteConnectionResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.DeleteConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEndpointCmdlet">
            <summary>
            Delete an existing global endpoint. For more information about global endpoints, see
            <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html">Making
            applications Regional-fault tolerant with global endpoints and event replication</a>
            in the Amazon EventBridge User Guide.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEndpointCmdlet.Name">
            <summary>
            <para>
            <para>The name of the endpoint you want to delete. For example, <code>"Name":"us-east-2-custom_bus_A-endpoint"</code>..</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteEndpointResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEventBusCmdlet">
            <summary>
            Deletes the specified custom event bus or partner event bus. All rules associated
            with this event bus need to be deleted. You can't delete your account's default event
            bus.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEventBusCmdlet.Name">
            <summary>
            <para>
            <para>The name of the event bus to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEventBusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteEventBusResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEventBusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBEventBusCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet">
            <summary>
            This operation is used by SaaS partners to delete a partner event source. This operation
            is not used by Amazon Web Services customers.
            
             
            <para>
            When you delete an event source, the status of the corresponding partner event bus
            in the Amazon Web Services customer account becomes DELETED.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet.Account">
            <summary>
            <para>
            <para>The Amazon Web Services account ID of the Amazon Web Services customer that the event
            source was created for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the event source to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeletePartnerEventSourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPartnerEventSourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet">
            <summary>
            Revokes the permission of another Amazon Web Services account to be able to put events
            to the specified event bus. Specify the account to revoke by the <code>StatementId</code>
            value that you associated with the account when you granted it permission with <code>PutPermission</code>.
            You can find the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name of the event bus to revoke permissions for. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.RemoveAllPermission">
            <summary>
            <para>
            <para>Specifies whether to remove all permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>The statement ID corresponding to the account that is no longer allowed to put events
            to the default event bus.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.RemovePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StatementId parameter.
            The -PassThru parameter is deprecated, use -Select '^StatementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet">
            <summary>
            Removes one or more tags from the specified EventBridge resource. In Amazon EventBridge
            (CloudWatch Events), rules and event buses can be tagged.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The ARN of the EventBridge resource from which you are removing tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of tag keys to remove from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet">
            <summary>
            Deletes the specified rule.
            
             
            <para>
            Before you can delete the rule, you must remove all targets, using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html">RemoveTargets</a>.
            </para><para>
            When you delete a rule, incoming events might continue to match to the deleted rule.
            Allow a short period of time for changes to take effect.
            </para><para>
            If you call delete rule multiple times for the same rule, all calls will succeed.
            When you call delete rule for a non-existent custom eventbus, <code>ResourceNotFoundException</code>
            is returned.
            </para><para>
            Managed rules are rules created and managed by another Amazon Web Services service
            on your behalf. These rules are created by those other Amazon Web Services services
            to support functionality in those services. You can delete these rules using the <code>Force</code>
            option, but you should do so only if you are sure the other service is not still using
            that rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.Enforce">
            <summary>
            <para>
            <para>If this is a managed rule, created by an Amazon Web Services service on your behalf,
            you must specify <code>Force</code> as <code>True</code> to delete the rule. This
            parameter is ignored for rules that are not managed rules. You can check whether a
            rule is a managed rule by using <code>DescribeRule</code> or <code>ListRules</code>
            and checking the <code>ManagedBy</code> field of the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.DeleteRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet">
            <summary>
            Removes the specified targets from the specified rule. When the rule is triggered,
            those targets are no longer be invoked.
            
             <note><para>
            A successful execution of <code>RemoveTargets</code> doesn't guarantee all targets
            are removed from the rule, it means that the target(s) listed in the request are removed.
            </para></note><para>
            When you remove a target, when the associated rule triggers, removed targets might
            continue to be invoked. Allow a short period of time for changes to take effect.
            </para><para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.Enforce">
            <summary>
            <para>
            <para>If this is a managed rule, created by an Amazon Web Services service on your behalf,
            you must specify <code>Force</code> as <code>True</code> to remove targets. This parameter
            is ignored for rules that are not managed rules. You can check whether a rule is a
            managed rule by using <code>DescribeRule</code> or <code>ListRules</code> and checking
            the <code>ManagedBy</code> field of the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.Id">
            <summary>
            <para>
            <para>The IDs of the targets to remove from the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.Rule">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedEntries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.RemoveTargetsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.RemoveTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Rule parameter.
            The -PassThru parameter is deprecated, use -Select '^Rule' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.RemoveEVBTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet">
            <summary>
            Starts the specified replay. Events are not necessarily replayed in the exact same
            order that they were added to the archive. A replay processes events to replay based
            on the time in the event, and replays them using 1 minute intervals. If you specify
            an <code>EventStartTime</code> and an <code>EventEndTime</code> that covers a 20 minute
            time range, the events are replayed from the first minute of that 20 minute range
            first. Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>
            to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>
            indicates the time within the specified time range associated with the last event
            replayed.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.Destination_Arn">
            <summary>
            <para>
            <para>The ARN of the event bus to replay event to. You can replay events only to the event
            bus specified to create the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.Description">
            <summary>
            <para>
            <para>A description for the replay to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.EventEndTime">
            <summary>
            <para>
            <para>A time stamp for the time to stop replaying events. Only events that occurred between
            the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.EventSourceArn">
            <summary>
            <para>
            <para>The ARN of the archive to replay events from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.EventStartTime">
            <summary>
            <para>
            <para>A time stamp for the time to start replaying events. Only events that occurred between
            the <code>EventStartTime</code> and <code>EventEndTime</code> are replayed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.Destination_FilterArn">
            <summary>
            <para>
            <para>A list of ARNs for rules to replay events to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.ReplayName">
            <summary>
            <para>
            <para>The name of the replay to start.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.StartReplayResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.StartReplayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplayName parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplayName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StartEVBReplayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.StopEVBReplayCmdlet">
            <summary>
            Cancels the specified replay.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StopEVBReplayCmdlet.ReplayName">
            <summary>
            <para>
            <para>The name of the replay to cancel.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StopEVBReplayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.CancelReplayResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.CancelReplayResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StopEVBReplayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReplayName parameter.
            The -PassThru parameter is deprecated, use -Select '^ReplayName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.StopEVBReplayCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.TestEVBEventPatternCmdlet">
            <summary>
            Tests whether the specified event pattern matches the provided event.
            
             
            <para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.TestEVBEventPatternCmdlet.Event">
            <summary>
            <para>
            <para>The event, in JSON format, to test against the event pattern. The JSON must follow
            the format specified in <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/aws-events.html">Amazon
            Web Services Events</a>, and the following fields are mandatory:</para><ul><li><para><code>id</code></para></li><li><para><code>account</code></para></li><li><para><code>source</code></para></li><li><para><code>time</code></para></li><li><para><code>region</code></para></li><li><para><code>resources</code></para></li><li><para><code>detail-type</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.TestEVBEventPatternCmdlet.EventPattern">
            <summary>
            <para>
            <para>The event pattern. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html">Events
            and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.TestEVBEventPatternCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Result'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.TestEventPatternResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.TestEventPatternResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.TestEVBEventPatternCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Event parameter.
            The -PassThru parameter is deprecated, use -Select '^Event' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet">
            <summary>
            Updates an API destination.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.ConnectionArn">
            <summary>
            <para>
            <para>The ARN of the connection to use for the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.Description">
            <summary>
            <para>
            <para>The name of the API destination to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.HttpMethod">
            <summary>
            <para>
            <para>The method to use for the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.InvocationEndpoint">
            <summary>
            <para>
            <para>The URL to the endpoint to use for the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.InvocationRateLimitPerSecond">
            <summary>
            <para>
            <para>The maximum number of invocations per second to send to the API destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.Name">
            <summary>
            <para>
            <para>The name of the API destination to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.UpdateApiDestinationResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.UpdateApiDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBApiDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet">
            <summary>
            Updates the specified archive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.ArchiveName">
            <summary>
            <para>
            <para>The name of the archive to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.Description">
            <summary>
            <para>
            <para>The description for the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.EventPattern">
            <summary>
            <para>
            <para>The event pattern to use to filter events sent to the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.RetentionDay">
            <summary>
            <para>
            <para>The number of days to retain events in the archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.UpdateArchiveResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.UpdateArchiveResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ArchiveName parameter.
            The -PassThru parameter is deprecated, use -Select '^ArchiveName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBArchiveCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet">
            <summary>
            Updates settings for a connection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.ApiKeyAuthParameters_ApiKeyName">
            <summary>
            <para>
            <para>The name of the API key to use for authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.ApiKeyAuthParameters_ApiKeyValue">
            <summary>
            <para>
            <para>The value associated with teh API key to use for authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.OAuthParameters_AuthorizationEndpoint">
            <summary>
            <para>
            <para>The URL to the authorization endpoint when OAuth is specified as the authorization
            type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.AuthorizationType">
            <summary>
            <para>
            <para>The type of authorization to use for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.InvocationHttpParameters_BodyParameter">
            <summary>
            <para>
            <para>Contains additional body string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.OAuthHttpParameters_BodyParameter">
            <summary>
            <para>
            <para>Contains additional body string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.ClientParameters_ClientID">
            <summary>
            <para>
            <para>The client ID to use for OAuth authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.ClientParameters_ClientSecret">
            <summary>
            <para>
            <para>The client secret assciated with the client ID to use for OAuth authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.Description">
            <summary>
            <para>
            <para>A description for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.InvocationHttpParameters_HeaderParameter">
            <summary>
            <para>
            <para>Contains additional header parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.OAuthHttpParameters_HeaderParameter">
            <summary>
            <para>
            <para>Contains additional header parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.OAuthParameters_HttpMethod">
            <summary>
            <para>
            <para>The method used to connect to the HTTP endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connection to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.BasicAuthParameters_Password">
            <summary>
            <para>
            <para>The password associated with the user name to use for Basic authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.InvocationHttpParameters_QueryStringParameter">
            <summary>
            <para>
            <para>Contains additional query string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.OAuthHttpParameters_QueryStringParameter">
            <summary>
            <para>
            <para>Contains additional query string parameters for the connection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.BasicAuthParameters_Username">
            <summary>
            <para>
            <para>The user name to use for Basic authorization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.UpdateConnectionResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.UpdateConnectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBConnectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet">
            <summary>
            Update an existing endpoint. For more information about global endpoints, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html">Making
            applications Regional-fault tolerant with global endpoints and event replication</a>
            in the Amazon EventBridge User Guide..
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Description">
            <summary>
            <para>
            <para>A description for the endpoint.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.EventBus">
            <summary>
            <para>
            <para>Define event buses used for replication.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Primary_HealthCheck">
            <summary>
            <para>
            <para>The ARN of the health check used by the endpoint to determine whether failover is
            triggered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Name">
            <summary>
            <para>
            <para>The name of the endpoint you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the role used by event replication for this request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Secondary_Route">
            <summary>
            <para>
            <para>Defines the secondary Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.ReplicationConfig_State">
            <summary>
            <para>
            <para>The state of event replication.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.UpdateEndpointResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.UpdateEndpointResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.UpdateEVBEndpointCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet">
            <summary>
            Sends custom events to Amazon EventBridge so that they can be matched to rules.
            
             <note><para>
            PutEvents will only process nested JSON up to 1100 levels deep.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet.EndpointId">
            <summary>
            <para>
            <para>The URL subdomain of the endpoint. For example, if the URL for Endpoint is abcde.veo.endpoints.event.amazonaws.com,
            then the EndpointId is <code>abcde.veo</code>.</para><important><para>When using Java, you must include <code>auth-crt</code> on the class path.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet.Entry">
            <summary>
            <para>
            <para>The entry that defines an event in your system. You can specify several parameters
            for the entry such as the source and type of the event, resources associated with
            the event, and so on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.PutEventsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.PutEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Entry parameter.
            The -PassThru parameter is deprecated, use -Select '^Entry' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBEventCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPartnerEventCmdlet">
            <summary>
            This is used by SaaS partners to write events to a customer's partner event bus. Amazon
            Web Services customers do not use this operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPartnerEventCmdlet.Entry">
            <summary>
            <para>
            <para>The list of events to write to the event bus.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPartnerEventCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.PutPartnerEventsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.PutPartnerEventsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPartnerEventCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Entry parameter.
            The -PassThru parameter is deprecated, use -Select '^Entry' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPartnerEventCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet">
            <summary>
            Running <code>PutPermission</code> permits the specified Amazon Web Services account
            or Amazon Web Services organization to put events to the specified <i>event bus</i>.
            Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these
            events arriving to an event bus in your account. 
            
             
            <para>
            For another account to send events to your account, that external account must have
            an EventBridge rule with your account's event bus as a target.
            </para><para>
            To enable multiple Amazon Web Services accounts to put events to your event bus, run
            <code>PutPermission</code> once for each of these accounts. Or, if all the accounts
            are members of the same Amazon Web Services organization, you can run <code>PutPermission</code>
            once specifying <code>Principal</code> as "*" and specifying the Amazon Web Services
            organization ID in <code>Condition</code>, to grant permissions to all accounts in
            that organization.
            </para><para>
            If you grant permissions using an organization, then accounts in that organization
            must specify a <code>RoleArn</code> with proper permissions when they use <code>PutTarget</code>
            to add your account's event bus as a target. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para><para>
            The permission policy on the event bus cannot exceed 10 KB in size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Action">
            <summary>
            <para>
            <para>The action that you are enabling the other account to perform.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Condition_Key">
            <summary>
            <para>
            <para>Specifies the key for the condition. Currently the only supported key is <code>aws:PrincipalOrgID</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Policy">
            <summary>
            <para>
            <para>A JSON string that describes the permission policy statement. You can include a <code>Policy</code>
            parameter in the request instead of using the <code>StatementId</code>, <code>Action</code>,
            <code>Principal</code>, or <code>Condition</code> parameters.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Principal">
            <summary>
            <para>
            <para>The 12-digit Amazon Web Services account ID that you are permitting to put events
            to your default event bus. Specify "*" to permit any account to put events to your
            default event bus.</para><para>If you specify "*" without specifying <code>Condition</code>, avoid creating rules
            that may match undesirable events. To create more secure rules, make sure that the
            event pattern for each rule contains an <code>account</code> field with a specific
            account ID from which to receive events. Rules with an account field do not match
            any events sent from other accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.StatementId">
            <summary>
            <para>
            <para>An identifier string for the external account that you are granting permissions to.
            If you later want to revoke the permission for this external account, specify this
            <code>StatementId</code> when you run <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemovePermission.html">RemovePermission</a>.</para><note><para>Each <code>StatementId</code> must be unique.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Condition_Type">
            <summary>
            <para>
            <para>Specifies the type of condition. Currently the only supported value is <code>StringEquals</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Condition_Value">
            <summary>
            <para>
            <para>Specifies the value for the key. Currently, this must be the ID of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.PutPermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StatementId parameter.
            The -PassThru parameter is deprecated, use -Select '^StatementId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet">
            <summary>
            Creates or updates the specified rule. Rules are enabled by default, or based on value
            of the state. You can disable a rule using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html">DisableRule</a>.
            
             
            <para>
            A single rule watches for events from a single event bus. Events generated by Amazon
            Web Services services go to your account's default event bus. Events generated by
            SaaS partner services or applications go to the matching partner event bus. If you
            have custom applications or services, you can specify whether their events go to your
            default event bus or a custom event bus that you have created. For more information,
            see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html">CreateEventBus</a>.
            </para><para>
            If you are updating an existing rule, the rule is replaced with what you specify in
            this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>,
            the old values for those arguments are not kept. Instead, they are replaced with null
            values.
            </para><para>
            When you create or update a rule, incoming events might not immediately start matching
            to new or updated rules. Allow a short period of time for changes to take effect.
            </para><para>
            A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns
            are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger
            based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression,
            in which case the rule triggers on matching events as well as on a schedule.
            </para><para>
            When you initially create a rule, you can optionally assign one or more tags to the
            rule. Tags can help you organize and categorize your resources. You can also use them
            to scope user permissions, by granting a user permission to access or change only
            rules with certain tag values. To use the <code>PutRule</code> operation and assign
            tags, you must have both the <code>events:PutRule</code> and <code>events:TagResource</code>
            permissions.
            </para><para>
            If you are updating an existing rule, any tags you specify in the <code>PutRule</code>
            operation are ignored. To update the tags of an existing rule, use <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html">TagResource</a>
            and <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html">UntagResource</a>.
            </para><para>
            Most services in Amazon Web Services treat : or / as the same character in Amazon
            Resource Names (ARNs). However, EventBridge uses an exact match in event patterns
            and rules. Be sure to use the correct ARN characters when creating event patterns
            so that they match the ARN syntax in the event you want to match.
            </para><para>
            In EventBridge, it is possible to create rules that lead to infinite loops, where
            a rule is fired repeatedly. For example, a rule might detect that ACLs have changed
            on an S3 bucket, and trigger software to change them to the desired state. If the
            rule is not written carefully, the subsequent change to the ACLs fires the rule again,
            creating an infinite loop.
            </para><para>
            To prevent this, write the rules so that the triggered actions do not re-fire the
            same rule. For example, your rule could fire only if ACLs are found to be in a bad
            state, instead of after any change. 
            </para><para>
            An infinite loop can quickly cause higher than expected charges. We recommend that
            you use budgeting, which alerts you when charges exceed your specified limit. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html">Managing
            Your Costs with Budgets</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.Description">
            <summary>
            <para>
            <para>A description of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus to associate with this rule. If you omit this, the
            default event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.EventPattern">
            <summary>
            <para>
            <para>The event pattern. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html.html">EventBridge
            event patterns</a> in the <i>Amazon EventBridge User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the rule that you are creating or updating.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role associated with the rule.</para><para>If you're setting an event bus in another account as the target and that account granted
            permission to your account through an organization instead of directly by the account
            ID, you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code>
            structure, instead of here in this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.ScheduleExpression">
            <summary>
            <para>
            <para>The scheduling expression. For example, "cron(0 20 * * ? *)" or "rate(5 minutes)".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.State">
            <summary>
            <para>
            <para>Indicates whether the rule is enabled or disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.Tag">
            <summary>
            <para>
            <para>The list of key-value pairs to associate with the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'RuleArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.PutRuleResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.PutRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet">
            <summary>
            Adds the specified targets to the specified rule, or updates the targets if they are
            already associated with the rule.
            
             
            <para>
            Targets are the resources that are invoked when a rule is triggered.
            </para><note><para>
            Each rule can have up to five (5) targets associated with it at one time.
            </para></note><para>
            You can configure the following as targets for Events:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html">API
            destination</a></para></li><li><para><a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-gateway-target.html">API
            Gateway</a></para></li><li><para>
            Batch job queue
            </para></li><li><para>
            CloudWatch group
            </para></li><li><para>
            CodeBuild project
            </para></li><li><para>
            CodePipeline
            </para></li><li><para>
            EC2 <code>CreateSnapshot</code> API call
            </para></li><li><para>
            EC2 Image Builder
            </para></li><li><para>
            EC2 <code>RebootInstances</code> API call
            </para></li><li><para>
            EC2 <code>StopInstances</code> API call
            </para></li><li><para>
            EC2 <code>TerminateInstances</code> API call
            </para></li><li><para>
            ECS task
            </para></li><li><para><a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-cross-account.html">Event
            bus in a different account or Region</a></para></li><li><para><a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-bus-to-bus.html">Event
            bus in the same account and Region</a></para></li><li><para>
            Firehose delivery stream
            </para></li><li><para>
            Glue workflow
            </para></li><li><para><a href="https://docs.aws.amazon.com/incident-manager/latest/userguide/incident-creation.html#incident-tracking-auto-eventbridge">Incident
            Manager response plan</a></para></li><li><para>
            Inspector assessment template
            </para></li><li><para>
            Kinesis stream
            </para></li><li><para>
            Lambda function
            </para></li><li><para>
            Redshift cluster
            </para></li><li><para>
            SageMaker Pipeline
            </para></li><li><para>
            SNS topic
            </para></li><li><para>
            SQS queue
            </para></li><li><para>
            Step Functions state machine
            </para></li><li><para>
            Systems Manager Automation
            </para></li><li><para>
            Systems Manager OpsItem
            </para></li><li><para>
            Systems Manager Run Command
            </para></li></ul><para>
            Creating rules with built-in targets is supported only in the Amazon Web Services
            Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,
            <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,
            and <code>EC2 TerminateInstances API call</code>. 
            </para><para>
            For some target types, <code>PutTargets</code> provides target-specific parameters.
            If the target is a Kinesis data stream, you can optionally specify which shard the
            event goes to by using the <code>KinesisParameters</code> argument. To invoke a command
            on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code>
            field.
            </para><para>
            To be able to make API calls against the resources that you own, Amazon EventBridge
            needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge
            relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions
            state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you
            specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html">Authentication
            and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.
            </para><para>
            If another Amazon Web Services account is in the same region and has granted you permission
            (using <code>PutPermission</code>), you can send events to that account. Set that
            account's event bus as a target of the rules in your account. To send the matched
            events to the other account, specify that account's event bus as the <code>Arn</code>
            value when you run <code>PutTargets</code>. If your account sends events to another
            account, your account is charged for each sent event. Each event sent to another account
            is charged as a custom event. The account receiving the event is not charged. For
            more information, see <a href="http://aws.amazon.com/eventbridge/pricing/">Amazon
            EventBridge Pricing</a>.
            </para><note><para><code>Input</code>, <code>InputPath</code>, and <code>InputTransformer</code> are
            not available with <code>PutTarget</code> if the target is an event bus of a different
            Amazon Web Services account.
            </para></note><para>
            If you are setting the event bus of another account as the target, and that account
            granted permission to your account through an organization instead of directly by
            the account ID, then you must specify a <code>RoleArn</code> with proper permissions
            in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending
            and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge
            User Guide</i>.
            </para><para>
            For more information about enabling cross-account events, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html">PutPermission</a>.
            </para><para><b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive
            and optional parameters of a target. When a rule is triggered due to a matched event:
            </para><ul><li><para>
            If none of the following arguments are specified for a target, then the entire event
            is passed to the target in JSON format (unless the target is Amazon EC2 Run Command
            or Amazon ECS task, in which case nothing from the event is passed to the target).
            </para></li><li><para>
            If <b>Input</b> is specified in the form of valid JSON, then the matched event is
            overridden with this constant.
            </para></li><li><para>
            If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),
            then only the part of the event specified in the path is passed to the target (for
            example, only the detail part of the event is passed).
            </para></li><li><para>
            If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are
            extracted from the event and used as values in a template that you specify as the
            input to the target.
            </para></li></ul><para>
            When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must
            use JSON dot notation, not bracket notation.
            </para><para>
            When you add targets to a rule and the associated rule triggers soon after, new or
            updated targets might not be immediately invoked. Allow a short period of time for
            changes to take effect.
            </para><para>
            This action can partially fail if too many requests are made at the same time. If
            that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry
            in <code>FailedEntries</code> provides the ID of the failed target and the error code.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.EventBusName">
            <summary>
            <para>
            <para>The name or ARN of the event bus associated with the rule. If you omit this, the default
            event bus is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.Rule">
            <summary>
            <para>
            <para>The name of the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.Target">
            <summary>
            <para>
            <para>The targets to update or add to the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedEntries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EventBridge.Model.PutTargetsResponse).
            Specifying the name of a property of type Amazon.EventBridge.Model.PutTargetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Rule parameter.
            The -PassThru parameter is deprecated, use -Select '^Rule' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EVB.WriteEVBTargetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
