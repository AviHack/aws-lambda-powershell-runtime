<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.Organizations</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet">
            <summary>
            Attaches a policy to a root, an organizational unit (OU), or an individual account.
            How the policy affects accounts depends on the type of policy. Refer to the <i>Organizations
            User Guide</i> for information about each policy type:
            
             <ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy that you want to attach to the target. You
            can get the ID for the policy by calling the <a>ListPolicies</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet.TargetId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root, OU, or account that you want to attach the
            policy to. You can get the ID by calling the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>,
            or <a>ListAccounts</a> operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Account</b> - A string that consists of exactly 12 digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.AttachPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet">
            <summary>
            Adds one or more tags to the specified resource.
            
             
            <para>
            Currently, you can attach tags to the following resources in Organizations.
            </para><ul><li><para>
            Amazon Web Services account
            </para></li><li><para>
            Organization root
            </para></li><li><para>
            Organizational unit (OU)
            </para></li><li><para>
            Policy (any type)
            </para></li></ul><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource to add a tag to.</para><para>You can specify any of the following taggable resources.</para><ul><li><para>Amazon Web Services account – specify the account ID number.</para></li><li><para>Organizational unit – specify the OU ID that begins with <code>ou-</code> and looks
            similar to: <code>ou-<i>1a2b-34uvwxyz</i></code></para></li><li><para>Root – specify the root ID that begins with <code>r-</code> and looks similar to:
            <code>r-<i>1a2b</i></code></para></li><li><para>Policy – specify the policy ID that begins with <code>p-</code> andlooks similar to:
            <code>p-<i>12abcdefg3</i></code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags to add to the specified resource.</para><para>For each tag in the list, you must specify both a tag key and a value. The value can
            be an empty string, but you can't set it to <code>null</code>.</para><note><para>If any one of the tags is invalid or if you exceed the maximum allowed number of tags
            for a resource, then the entire request fails.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.AddORGResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.CloseORGAccountCmdlet">
            <summary>
            Closes an Amazon Web Services member account within an organization. You can't close
            the management account with this API. This is an asynchronous request that Amazon
            Web Services performs in the background. Because <code>CloseAccount</code> operates
            asynchronously, it can return a successful completion message even though account
            closure might still be in progress. You need to wait a few minutes before the account
            is fully closed. To check the status of the request, do one of the following:
            
             <ul><li><para>
            Use the <code>AccountId</code> that you sent in the <code>CloseAccount</code> request
            to provide as a parameter to the <a>DescribeAccount</a> operation. 
            </para><para>
            While the close account request is in progress, Account status will indicate PENDING_CLOSURE.
            When the close account request completes, the status will change to SUSPENDED. 
            </para></li><li><para>
            Check the CloudTrail log for the <code>CloseAccountResult</code> event that gets published
            after the account closes successfully. For information on using CloudTrail with Organizations,
            see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging
            and monitoring in Organizations</a> in the <i>Organizations User Guide.</i></para></li></ul><note><ul><li><para>
            You can only close 10% of active member accounts within a rolling 30 day period. This
            quota is not bound by a calendar month, but starts when you close an account. Within
            30 days of that initial account closure, you can't exceed the 10% account closure
            limit.
            </para></li><li><para>
            To reinstate a closed account, contact Amazon Web Services Support within the 90-day
            grace period while the account is in SUSPENDED status. 
            </para></li><li><para>
            If the Amazon Web Services account you attempt to close is linked to an Amazon Web
            Services GovCloud (US) account, the <code>CloseAccount</code> request will close both
            accounts. To learn important pre-closure details, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/Closing-govcloud-account.html">
            Closing an Amazon Web Services GovCloud (US) account</a> in the <i> Amazon Web Services
            GovCloud User Guide</i>.
            </para></li></ul></note><para>
            For more information about closing accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing
            an Amazon Web Services account</a> in the <i>Organizations User Guide.</i></para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.CloseORGAccountCmdlet.AccountId">
            <summary>
            <para>
            <para>Retrieves the Amazon Web Services account Id for the current <code>CloseAccount</code>
            API request. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.CloseORGAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CloseAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.CloseORGAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.CloseORGAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.ConfirmORGHandshakeCmdlet">
            <summary>
            Sends a response to the originator of a handshake agreeing to the action proposed
            by the handshake request.
            
             
            <para>
            This operation can be called only by the following principals when they also have
            the relevant IAM permissions:
            </para><ul><li><para><b>Invitation to join</b> or <b>Approve all features request</b> handshakes: only
            a principal from the member account.
            </para><para>
            The user who calls the API for an invitation to join must have the <code>organizations:AcceptHandshake</code>
            permission. If you enabled all features in the organization, the user must also have
            the <code>iam:CreateServiceLinkedRole</code> permission so that Organizations can
            create the required service-linked role named <code>AWSServiceRoleForOrganizations</code>.
            For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integration_services.html#orgs_integration_service-linked-roles">Organizations
            and Service-Linked Roles</a> in the <i>Organizations User Guide</i>.
            </para></li><li><para><b>Enable all features final confirmation</b> handshake: only a principal from the
            management account.
            </para><para>
            For more information about invitations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_invites.html">Inviting
            an Amazon Web Services account to join your organization</a> in the <i>Organizations
            User Guide.</i> For more information about requests to enable all features in the
            organization, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling
            all features in your organization</a> in the <i>Organizations User Guide.</i></para></li></ul><para>
            After you accept a handshake, it continues to appear in the results of relevant APIs
            for only 30 days. After that, it's deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.ConfirmORGHandshakeCmdlet.HandshakeId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the handshake that you want to accept.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.ConfirmORGHandshakeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.AcceptHandshakeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.AcceptHandshakeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.ConfirmORGHandshakeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HandshakeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HandshakeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.ConfirmORGHandshakeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.DenyORGHandshakeCmdlet">
            <summary>
            Declines a handshake request. This sets the handshake state to <code>DECLINED</code>
            and effectively deactivates the request.
            
             
            <para>
            This operation can be called only from the account that received the handshake. The
            originator of the handshake can use <a>CancelHandshake</a> instead. The originator
            can't reactivate a declined request, but can reinitiate the process with a new handshake
            request.
            </para><para>
            After you decline a handshake, it continues to appear in the results of relevant APIs
            for only 30 days. After that, it's deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DenyORGHandshakeCmdlet.HandshakeId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the handshake that you want to decline. You can get
            the ID from the <a>ListHandshakesForAccount</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DenyORGHandshakeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DeclineHandshakeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DeclineHandshakeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DenyORGHandshakeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HandshakeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HandshakeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DenyORGHandshakeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.DisableORGAWSServiceAccessCmdlet">
            <summary>
            Disables the integration of an Amazon Web Services service (the service that is specified
            by <code>ServicePrincipal</code>) with Organizations. When you disable integration,
            the specified service no longer can create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked
            role</a> in <i>new</i> accounts in your organization. This means the service can't
            perform operations on your behalf on any new accounts in your organization. The service
            can still perform operations in older accounts until the service completes its clean-up
            from Organizations.
            
             <important><para>
            We <b><i>strongly recommend</i></b> that you don't use this command to disable integration
            between Organizations and the specified Amazon Web Services service. Instead, use
            the console or commands that are provided by the specified service. This lets the
            trusted service perform any required initialization when enabling trusted access,
            such as creating any required resources and any required clean up of resources when
            disabling trusted access. 
            </para><para>
            For information about how to disable trusted service access to your organization using
            the trusted service, see the <b>Learn more</b> link under the <b>Supports Trusted
            Access</b> column at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon
            Web Services services that you can use with Organizations</a>. on this page.
            </para><para>
            If you disable access by using this command, it causes the following actions to occur:
            </para><ul><li><para>
            The service can no longer create a service-linked role in the accounts in your organization.
            This means that the service can't perform operations on your behalf on any new accounts
            in your organization. The service can still perform operations in older accounts until
            the service completes its clean-up from Organizations. 
            </para></li><li><para>
            The service can no longer perform tasks in the member accounts in the organization,
            unless those operations are explicitly permitted by the IAM policies that are attached
            to your roles. This includes any data aggregation from the member accounts to the
            management account, or to a delegated administrator account, where relevant.
            </para></li><li><para>
            Some services detect this and clean up any remaining data or resources related to
            the integration, while other services stop accessing the organization but leave any
            historical data and configuration in place to support a possible re-enabling of the
            integration.
            </para></li></ul><para>
            Using the other service's console or commands to disable the integration ensures that
            the other service is aware that it can clean up any resources that are required only
            for the integration. How the service cleans up its resources in the organization's
            accounts depends on that service. For more information, see the documentation for
            the other Amazon Web Services service. 
            </para></important><para>
            After you perform the <code>DisableAWSServiceAccess</code> operation, the specified
            service can no longer perform operations in your organization's accounts 
            </para><para>
            For more information about integrating other services with Organizations, including
            the list of services that work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
            Organizations with Other Amazon Web Services Services</a> in the <i>Organizations
            User Guide.</i></para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGAWSServiceAccessCmdlet.ServicePrincipal">
            <summary>
            <para>
            <para>The service principal name of the Amazon Web Services service for which you want to
            disable integration with your organization. This is typically in the form of a URL,
            such as <code><i>service-abbreviation</i>.amazonaws.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGAWSServiceAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DisableAWSServiceAccessResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGAWSServiceAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServicePrincipal parameter.
            The -PassThru parameter is deprecated, use -Select '^ServicePrincipal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGAWSServiceAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet">
            <summary>
            Disables an organizational policy type in a root. A policy of a certain type can be
            attached to entities in a root only if that type is enabled in the root. After you
            perform this operation, you no longer can attach policies of the specified type to
            that root or to any organizational unit (OU) or account in that root. You can undo
            this by using the <a>EnablePolicyType</a> operation.
            
             
            <para>
            This is an asynchronous request that Amazon Web Services performs in the background.
            If you disable a policy type for a root, it still appears enabled for the organization
            if <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all
            features</a> are enabled for the organization. Amazon Web Services recommends that
            you first use <a>ListRoots</a> to see the status of policy types for a specified root,
            and then use this operation.
            </para><para>
            This operation can be called only from the organization's management account.
            </para><para>
             To view the status of available policy types in the organization, use <a>DescribeOrganization</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet.PolicyType">
            <summary>
            <para>
            <para>The policy type that you want to disable in this root. You can specify one of the
            following values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet.RootId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root in which you want to disable a policy type.
            You can get the ID from the <a>ListRoots</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string
            requires "r-" followed by from 4 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Root'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DisablePolicyTypeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DisablePolicyTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyType parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DisableORGPolicyTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet">
            <summary>
            Detaches a policy from a target root, organizational unit (OU), or account.
            
             <important><para>
            If the policy being detached is a service control policy (SCP), the changes to permissions
            for Identity and Access Management (IAM) users and roles in affected accounts are
            immediate.
            </para></important><para>
            Every root, OU, and account must have at least one SCP attached. If you want to replace
            the default <code>FullAWSAccess</code> policy with an SCP that limits the permissions
            that can be delegated, you must attach the replacement SCP before you can remove the
            default SCP. This is the authorization strategy of an "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_allowlist">allow
            list</a>". If you instead attach a second SCP and leave the <code>FullAWSAccess</code>
            SCP still attached, and specify <code>"Effect": "Deny"</code> in the second SCP to
            override the <code>"Effect": "Allow"</code> in the <code>FullAWSAccess</code> policy
            (or any other attached SCP), you're using the authorization strategy of a "<a href="https://docs.aws.amazon.com/organizations/latest/userguide/SCP_strategies.html#orgs_policies_denylist">deny
            list</a>".
            </para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy you want to detach. You can get the ID from
            the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet.TargetId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root, OU, or account that you want to detach the
            policy from. You can get the ID from the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>,
            or <a>ListAccounts</a> operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Account</b> - A string that consists of exactly 12 digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DetachPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.DismountORGPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.EnableORGAllFeatureCmdlet">
            <summary>
            Enables all features in an organization. This enables the use of organization policies
            that can restrict the services and actions that can be called in each account. Until
            you enable all features, you have access only to consolidated billing, and you can't
            use any of the advanced account administration features that Organizations supports.
            For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling
            All Features in Your Organization</a> in the <i>Organizations User Guide.</i><important><para>
            This operation is required only for organizations that were created explicitly with
            only the consolidated billing features enabled. Calling this operation sends a handshake
            to every invited account in the organization. The feature set change can be finalized
            and the additional features enabled only after all administrators in the invited accounts
            approve the change by accepting the handshake.
            </para></important><para>
            After you enable all features, you can separately enable or disable individual policy
            types in a root using <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. To see
            the status of policy types in a root, use <a>ListRoots</a>.
            </para><para>
            After all invited member accounts accept the handshake, you finalize the feature set
            change by accepting the handshake that contains <code>"Action": "ENABLE_ALL_FEATURES"</code>.
            This completes the change.
            </para><para>
            After you enable all features in your organization, the management account in the
            organization can apply policies on all member accounts. These policies can restrict
            what users and even administrators in those accounts can do. The management account
            can apply policies that prevent accounts from leaving the organization. Ensure that
            your account administrators are aware of this.
            </para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAllFeatureCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.EnableAllFeaturesResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.EnableAllFeaturesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAllFeatureCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.EnableORGAWSServiceAccessCmdlet">
            <summary>
            Enables the integration of an Amazon Web Services service (the service that is specified
            by <code>ServicePrincipal</code>) with Organizations. When you enable integration,
            you allow the specified service to create a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked
            role</a> in all the accounts in your organization. This allows the service to perform
            operations on your behalf in your organization and its accounts.
            
             <important><para>
            We recommend that you enable integration between Organizations and the specified Amazon
            Web Services service by using the console or commands that are provided by the specified
            service. Doing so ensures that the service is aware that it can create the resources
            that are required for the integration. How the service creates those resources in
            the organization's accounts depends on that service. For more information, see the
            documentation for the other Amazon Web Services service.
            </para></important><para>
            For more information about enabling services to integrate with Organizations, see
            <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
            Organizations with Other Amazon Web Services Services</a> in the <i>Organizations
            User Guide.</i></para><para>
            This operation can be called only from the organization's management account and only
            if the organization has <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">enabled
            all features</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAWSServiceAccessCmdlet.ServicePrincipal">
            <summary>
            <para>
            <para>The service principal name of the Amazon Web Services service for which you want to
            enable integration with your organization. This is typically in the form of a URL,
            such as <code><i>service-abbreviation</i>.amazonaws.com</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAWSServiceAccessCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.EnableAWSServiceAccessResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAWSServiceAccessCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServicePrincipal parameter.
            The -PassThru parameter is deprecated, use -Select '^ServicePrincipal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGAWSServiceAccessCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet">
            <summary>
            Enables a policy type in a root. After you enable a policy type in a root, you can
            attach policies of that type to the root, any organizational unit (OU), or account
            in that root. You can undo this by using the <a>DisablePolicyType</a> operation.
            
             
            <para>
            This is an asynchronous request that Amazon Web Services performs in the background.
            Amazon Web Services recommends that you first use <a>ListRoots</a> to see the status
            of policy types for a specified root, and then use this operation.
            </para><para>
            This operation can be called only from the organization's management account.
            </para><para>
            You can enable a policy type in a root only if that policy type is available in the
            organization. To view the status of available policy types in the organization, use
            <a>DescribeOrganization</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet.PolicyType">
            <summary>
            <para>
            <para>The policy type that you want to enable. You can specify one of the following values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet.RootId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root in which you want to enable a policy type.
            You can get the ID from the <a>ListRoots</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string
            requires "r-" followed by from 4 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Root'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.EnablePolicyTypeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.EnablePolicyTypeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyType parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.EnableORGPolicyTypeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCmdlet">
            <summary>
            Retrieves Organizations-related information about the specified account.
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCmdlet.AccountId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the Amazon Web Services account that you want information
            about. You can get the ID from the <a>ListAccounts</a> or <a>ListAccountsForParent</a>
            operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID
            string requires exactly 12 digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Account'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeAccountResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusCmdlet">
            <summary>
            Retrieves the current status of an asynchronous request to create an account.
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusCmdlet.CreateAccountRequestId">
            <summary>
            <para>
            <para>Specifies the <code>Id</code> value that uniquely identifies the <code>CreateAccount</code>
            request. You can get the value from the <code>CreateAccountStatus.Id</code> response
            in an earlier <a>CreateAccount</a> request, or from the <a>ListCreateAccountStatus</a>
            operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a create account
            request ID string requires "car-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CreateAccountStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeCreateAccountStatusResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeCreateAccountStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CreateAccountRequestId parameter.
            The -PassThru parameter is deprecated, use -Select '^CreateAccountRequestId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet">
            <summary>
            Lists the account creation requests that match the specified status that is currently
            being tracked for the organization.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.State">
            <summary>
            <para>
            <para>A list of one or more states that you want included in the response. If this parameter
            isn't present, all requests are included in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CreateAccountStatuses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListCreateAccountStatusResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListCreateAccountStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the State parameter.
            The -PassThru parameter is deprecated, use -Select '^State' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountCreationStatusListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet">
            <summary>
            Lists the accounts in an organization that are contained by the specified target root
            or organizational unit (OU). If you specify the root, you get a list of all the accounts
            that aren't in any OU. If you specify an OU, you get a list of all the accounts in
            only that OU and not in any child OUs. To get a list of all accounts in the organization,
            use the <a>ListAccounts</a> operation.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.ParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) for the parent root or organization unit (OU) whose accounts
            you want to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Accounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListAccountsForParentResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListAccountsForParentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParentId parameter.
            The -PassThru parameter is deprecated, use -Select '^ParentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountForParentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet">
            <summary>
            Lists the current handshakes that are associated with the account of the requesting
            user.
            
             
            <para>
            Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>, <code>CANCELED</code>,
            or <code>EXPIRED</code> appear in the results of this API for only 30 days after changing
            to that state. After that, they're deleted and no longer accessible.
            </para><note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called from any account in the organization.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.Filter_ActionType">
            <summary>
            <para>
            <para>Specifies the type of handshake action.</para><para>If you specify <code>ActionType</code>, you cannot also specify <code>ParentHandshakeId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.Filter_ParentHandshakeId">
            <summary>
            <para>
            <para>Specifies the parent handshake. Only used for handshake types that are a child of
            another type.</para><para>If you specify <code>ParentHandshakeId</code>, you cannot also specify <code>ActionType</code>.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshakes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListHandshakesForAccountResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListHandshakesForAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountHandshakeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountListCmdlet">
            <summary>
            Lists all the accounts in the organization. To request only the accounts in a specified
            root or organizational unit (OU), use the <a>ListAccountsForParent</a> operation instead.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Accounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListAccountsResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListAccountsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAccountListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGAWSServiceAccessForOrganizationCmdlet">
            <summary>
            Returns a list of the Amazon Web Services services that you enabled to integrate with
            your organization. After a service on this list creates the resources that it requires
            for the integration, it can perform operations on your organization and its accounts.
            
             
            <para>
            For more information about integrating other services with Organizations, including
            the list of services that currently work with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
            Organizations with Other Amazon Web Services Services</a> in the <i>Organizations
            User Guide.</i></para><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAWSServiceAccessForOrganizationCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAWSServiceAccessForOrganizationCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAWSServiceAccessForOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EnabledServicePrincipals'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListAWSServiceAccessForOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGAWSServiceAccessForOrganizationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet">
            <summary>
            Lists all of the organizational units (OUs) or accounts that are contained in the
            specified parent OU or root. This operation, along with <a>ListParents</a> enables
            you to traverse the tree structure that makes up this root.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.ChildType">
            <summary>
            <para>
            <para>Filters the output to include only the specified child type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.ParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) for the parent root or OU whose children you want to list.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Children'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListChildrenResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListChildrenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParentId parameter.
            The -PassThru parameter is deprecated, use -Select '^ParentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGChildCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet">
            <summary>
            Lists the Amazon Web Services accounts that are designated as delegated administrators
            in this organization.
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.ServicePrincipal">
            <summary>
            <para>
            <para>Specifies a service principal name. If specified, then the operation lists the delegated
            administrators only for the specified service.</para><para>If you don't specify a service principal, the operation lists all delegated administrators
            for all services in your organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DelegatedAdministrators'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListDelegatedAdministratorsResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListDelegatedAdministratorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ServicePrincipal parameter.
            The -PassThru parameter is deprecated, use -Select '^ServicePrincipal' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedAdministratorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet">
            <summary>
            List the Amazon Web Services services for which the specified account is a delegated
            administrator.
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.AccountId">
            <summary>
            <para>
            <para>The account ID number of a delegated administrator account in the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DelegatedServices'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListDelegatedServicesForAccountResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListDelegatedServicesForAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGDelegatedServicesForAccountListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGEffectivePolicyCmdlet">
            <summary>
            Returns the contents of the effective policy for specified policy type and account.
            The effective policy is the aggregation of any policies of the specified type that
            the account inherits, plus any policy of that type that is directly attached to the
            account.
            
             
            <para>
            This operation applies only to policy types <i>other</i> than service control policies
            (SCPs).
            </para><para>
            For more information about policy inheritance, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies-inheritance.html">How
            Policy Inheritance Works</a> in the <i>Organizations User Guide</i>.
            </para><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGEffectivePolicyCmdlet.PolicyType">
            <summary>
            <para>
            <para>The type of policy that you want information about. You can specify one of the following
            values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGEffectivePolicyCmdlet.TargetId">
            <summary>
            <para>
            <para>When you're signed in as the management account, specify the ID of the account that
            you want details about. Specifying an organization root or organizational unit (OU)
            as the target is not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGEffectivePolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'EffectivePolicy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeEffectivePolicyResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeEffectivePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGEffectivePolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyType parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyType' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGHandshakeCmdlet">
            <summary>
            Retrieves information about a previously requested handshake. The handshake ID comes
            from the response to the original <a>InviteAccountToOrganization</a> operation that
            generated the handshake.
            
             
            <para>
            You can access handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>, or
            <code>CANCELED</code> for only 30 days after they change to that state. They're then
            deleted and no longer accessible.
            </para><para>
            This operation can be called from any account in the organization.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGHandshakeCmdlet.HandshakeId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the handshake that you want information about. You can
            get the ID from the original call to <a>InviteAccountToOrganization</a>, or from a
            call to <a>ListHandshakesForAccount</a> or <a>ListHandshakesForOrganization</a>.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGHandshakeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeHandshakeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeHandshakeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGHandshakeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HandshakeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HandshakeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationCmdlet">
            <summary>
            Retrieves information about the organization that the user's account belongs to.
            
             
            <para>
            This operation can be called from any account in the organization.
            </para><note><para>
            Even if a policy type is shown as available in the organization, you can disable it
            separately at the root level with <a>DisablePolicyType</a>. Use <a>ListRoots</a> to
            see the status of policy types for a specified root.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Organization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeOrganizationResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitCmdlet">
            <summary>
            Retrieves information about an organizational unit (OU).
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitCmdlet.OrganizationalUnitId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the organizational unit that you want details about.
            You can get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational
            unit ID string requires "ou-" followed by from 4 to 32 lowercase letters or digits
            (the ID of the root that contains the OU). This string is followed by a second "-"
            dash and from 8 to 32 additional lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationalUnit'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribeOrganizationalUnitResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribeOrganizationalUnitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationalUnitId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationalUnitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet">
            <summary>
            Lists the organizational units (OUs) in a parent organizational unit or root.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.ParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root or OU whose child OUs you want to list.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationalUnits'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListOrganizationalUnitsForParentResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListOrganizationalUnitsForParentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ParentId parameter.
            The -PassThru parameter is deprecated, use -Select '^ParentId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationalUnitListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet">
            <summary>
            Lists the handshakes that are associated with the organization that the requesting
            user is part of. The <code>ListHandshakesForOrganization</code> operation returns
            a list of handshake structures. Each structure contains details and status about a
            handshake.
            
             
            <para>
            Handshakes that are <code>ACCEPTED</code>, <code>DECLINED</code>, <code>CANCELED</code>,
            or <code>EXPIRED</code> appear in the results of this API for only 30 days after changing
            to that state. After that, they're deleted and no longer accessible.
            </para><note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.Filter_ActionType">
            <summary>
            <para>
            <para>Specifies the type of handshake action.</para><para>If you specify <code>ActionType</code>, you cannot also specify <code>ParentHandshakeId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.Filter_ParentHandshakeId">
            <summary>
            <para>
            <para>Specifies the parent handshake. Only used for handshake types that are a child of
            another type.</para><para>If you specify <code>ParentHandshakeId</code>, you cannot also specify <code>ActionType</code>.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshakes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListHandshakesForOrganizationResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListHandshakesForOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGOrganizationHandshakeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet">
            <summary>
            Lists the root or organizational units (OUs) that serve as the immediate parent of
            the specified child OU or account. This operation, along with <a>ListChildren</a>
            enables you to traverse the tree structure that makes up this root.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><note><para>
            In the current release, a child can have only a single parent.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.ChildId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the OU or account whose parent containers you want to
            list. Don't specify a root.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a child ID string
            requires one of the following:</para><ul><li><para><b>Account</b> - A string that consists of exactly 12 digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that contains the OU). This
            string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
            or digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Parents'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListParentsResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListParentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ChildId parameter.
            The -PassThru parameter is deprecated, use -Select '^ChildId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGParentCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyCmdlet">
            <summary>
            Retrieves information about a policy.
            
             
            <para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy that you want details about. You can get
            the ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DescribePolicyResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.DescribePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet">
            <summary>
            Lists the policies that are directly attached to the specified target root, organizational
            unit (OU), or account. You must specify the policy type that you want included in
            the returned list.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.Filter">
            <summary>
            <para>
            <para>The type of policy that you want to include in the returned list. You must specify
            one of the following values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.TargetId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root, organizational unit, or account whose policies
            you want to list.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Account</b> - A string that consists of exactly 12 digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListPoliciesForTargetResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListPoliciesForTargetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TargetId parameter.
            The -PassThru parameter is deprecated, use -Select '^TargetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyForTargetCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet">
            <summary>
            Retrieves the list of all policies in an organization of a specified type.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.Filter">
            <summary>
            <para>
            <para>Specifies the type of policy that you want to include in the response. You must specify
            one of the following values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListPoliciesResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListPoliciesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Filter parameter.
            The -PassThru parameter is deprecated, use -Select '^Filter' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGPolicyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet">
            <summary>
            Lists tags that are attached to the specified resource.
            
             
            <para>
            You can attach tags to the following resources in Organizations.
            </para><ul><li><para>
            Amazon Web Services account
            </para></li><li><para>
            Organization root
            </para></li><li><para>
            Organizational unit (OU)
            </para></li><li><para>
            Policy (any type)
            </para></li></ul><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource with the tags to list.</para><para>You can specify any of the following taggable resources.</para><ul><li><para>Amazon Web Services account – specify the account ID number.</para></li><li><para>Organizational unit – specify the OU ID that begins with <code>ou-</code> and looks
            similar to: <code>ou-<i>1a2b-34uvwxyz</i></code></para></li><li><para>Root – specify the root ID that begins with <code>r-</code> and looks similar to:
            <code>r-<i>1a2b</i></code></para></li><li><para>Policy – specify the policy ID that begins with <code>p-</code> andlooks similar to:
            <code>p-<i>12abcdefg3</i></code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGResourceTagCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGRootCmdlet">
            <summary>
            Lists the roots that are defined in the current organization.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><note><para>
            Policy types can be enabled and disabled in roots. This is distinct from whether they're
            available in the organization. When you enable all features, you make policy types
            available for use in that organization. Individual policy types can then be enabled
            and disabled in a root. To see the availability of a policy type in an organization,
            use <a>DescribeOrganization</a>.
            </para></note><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGRootCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGRootCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGRootCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Roots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListRootsResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListRootsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGRootCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet">
            <summary>
            Lists all the roots, organizational units (OUs), and accounts that the specified policy
            is attached to.
            
             <note><para>
            Always check the <code>NextToken</code> response parameter for a <code>null</code>
            value when calling a <code>List*</code> operation. These operations can occasionally
            return an empty set of results even when there are more results available. The <code>NextToken</code>
            response parameter value is <code>null</code><i>only</i> when there are no more results
            to display.
            </para></note><para>
            This operation can be called only from the organization's management account or by
            a member account that is a delegated administrator for an Amazon Web Services service.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy whose attachments you want to know.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.MaxResult">
            <summary>
            <para>
            <para>The total number of results that you want included on each page of the response. If
            you do not include this parameter, it defaults to a value that is specific to the
            operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
            response element is present and has a value (is not null). Include that value as the
            <code>NextToken</code> request parameter in the next call to the operation to get
            the next part of the results. Note that Organizations might return fewer results than
            the maximum even when there are more results available. You should check <code>NextToken</code>
            after every operation to ensure that you receive all of the results.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.NextToken">
            <summary>
            <para>
            <para>The parameter for receiving additional results if you receive a <code>NextToken</code>
            response in a previous request. A <code>NextToken</code> response indicates that more
            output is available. Set this parameter to the value of the previous call's <code>NextToken</code>
            response to indicate where the output should continue from.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Targets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.ListTargetsForPolicyResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.ListTargetsForPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.GetORGTargetForPolicyCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet">
            <summary>
            Moves an account from its current source parent root or organizational unit (OU) to
            the specified destination parent root or OU.
            
             
            <para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.AccountId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the account that you want to move.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID
            string requires exactly 12 digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.DestinationParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root or organizational unit that you want to move
            the account to.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.SourceParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the root or organizational unit that you want to move
            the account from.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.MoveAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.MoveORGAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet">
            <summary>
            Creates an Amazon Web Services account that is automatically a member of the organization
            whose credentials made the request. This is an asynchronous request that Amazon Web
            Services performs in the background. Because <code>CreateAccount</code> operates asynchronously,
            it can return a successful completion message even though account initialization might
            still be in progress. You might need to wait a few minutes before you can successfully
            access the account. To check the status of the request, do one of the following:
            
             <ul><li><para>
            Use the <code>Id</code> member of the <code>CreateAccountStatus</code> response element
            from this operation to provide as a parameter to the <a>DescribeCreateAccountStatus</a>
            operation.
            </para></li><li><para>
            Check the CloudTrail log for the <code>CreateAccountResult</code> event. For information
            on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_security_incident-response.html#orgs_cloudtrail-integration">Logging
            and monitoring in Organizations</a> in the <i>Organizations User Guide.</i></para></li></ul><para>
            The user who calls the API to create an account must have the <code>organizations:CreateAccount</code>
            permission. If you enabled all features in the organization, Organizations creates
            the required service-linked role named <code>AWSServiceRoleForOrganizations</code>.
            For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations
            and Service-Linked Roles</a> in the <i>Organizations User Guide</i>.
            </para><para>
            If the request includes tags, then the requester must have the <code>organizations:TagResource</code>
            permission.
            </para><para>
            Organizations preconfigures the new member account with a role (named <code>OrganizationAccountAccessRole</code>
            by default) that grants users in the management account administrator permissions
            in the new member account. Principals in the management account can assume the role.
            Organizations clones the company name and address information for the new account
            from the organization's management account.
            </para><para>
            This operation can be called only from the organization's management account.
            </para><para>
            For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating
            an Amazon Web Services account in Your Organization</a> in the <i>Organizations User
            Guide.</i></para><important><ul><li><para>
            When you create an account in an organization using the Organizations console, API,
            or CLI commands, the information required for the account to operate as a standalone
            account, such as a payment method and signing the end user license agreement (EULA)
            is <i>not</i> automatically collected. If you must remove an account from your organization
            later, you can do so only after you provide the missing information. Follow the steps
            at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
            To leave an organization as a member account</a> in the <i>Organizations User Guide</i>.
            </para></li><li><para>
            If you get an exception that indicates that you exceeded your account limits for the
            organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon
            Web Services Support</a>.
            </para></li><li><para>
            If you get an exception that indicates that the operation failed because your organization
            is still initializing, wait one hour and then try again. If the error persists, contact
            <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.
            </para></li><li><para>
            Using <code>CreateAccount</code> to create multiple temporary accounts isn't recommended.
            You can only close an account from the Billing and Cost Management console, and you
            must be signed in as the root user. For information on the requirements and process
            for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing
            an Amazon Web Services account</a> in the <i>Organizations User Guide</i>.
            </para></li></ul></important><note><para>
            When you create a member account with this operation, you can choose whether to create
            the account with the <b>IAM User and Role Access to Billing Information</b> switch
            enabled. If you enable it, IAM users and roles that have appropriate permissions can
            view billing information for the account. If you disable it, only the account root
            user can access billing information. For information about how to disable this switch
            for an account, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
            Access to Your Billing Information and Tools</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.AccountName">
            <summary>
            <para>
            <para>The friendly name of the member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.Email">
            <summary>
            <para>
            <para>The email address of the owner to assign to the new member account. This email address
            must not already be associated with another Amazon Web Services account. You must
            use a valid email address to complete account creation.</para><para>The rules for a valid email address:</para><ul><li><para>The address must be a minimum of 6 and a maximum of 64 characters long.</para></li><li><para>All characters must be 7-bit ASCII characters.</para></li><li><para>There must be one and only one @ symbol, which separates the local name from the domain
            name.</para></li><li><para>The local name can't contain any of the following characters:</para><para>whitespace, " ' ( ) &lt; &gt; [ ] : ; , \ | % &amp;</para></li><li><para>The local name can't begin with a dot (.)</para></li><li><para>The domain name can consist of only the characters [a-z],[A-Z],[0-9], hyphen (-),
            or dot (.)</para></li><li><para>The domain name can't begin or end with a hyphen (-) or dot (.)</para></li><li><para>The domain name must contain at least one dot</para></li></ul><para>You can't access the root user of the account or remove an account that was created
            with an invalid email address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.IamUserAccessToBilling">
            <summary>
            <para>
            <para>If set to <code>ALLOW</code>, the new account enables IAM users to access account
            billing information <i>if</i> they have the required permissions. If set to <code>DENY</code>,
            only the root user of the new account can access account billing information. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
            Access to the Billing and Cost Management Console</a> in the <i>Amazon Web Services
            Billing and Cost Management User Guide</i>.</para><para>If you don't specify this parameter, the value defaults to <code>ALLOW</code>, and
            IAM users and roles with the required permissions can access billing information for
            the new account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.RoleName">
            <summary>
            <para>
            <para>(Optional)</para><para>The name of an IAM role that Organizations automatically preconfigures in the new
            member account. This role trusts the management account, allowing users in the management
            account to assume the role, as permitted by the management account administrator.
            The role has administrator permissions in the new member account.</para><para>If you don't specify this parameter, the role name defaults to <code>OrganizationAccountAccessRole</code>.</para><para>For more information about how to use this role to access the member account, see
            the following links:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role">Accessing
            and Administering the Member Accounts in Your Organization</a> in the <i>Organizations
            User Guide</i></para></li><li><para>Steps 2 and 3 in <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html">Tutorial:
            Delegate Access Across Amazon Web Services accounts Using IAM Roles</a> in the <i>IAM
            User Guide</i></para></li></ul><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate
            this parameter. The pattern can include uppercase letters, lowercase letters, digits
            with no spaces, and any of the following characters: =,.@-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags that you want to attach to the newly created account. For each tag
            in the list, you must specify both a tag key and a value. You can set the value to
            an empty string, but you can't set it to <code>null</code>. For more information about
            tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging
            Organizations resources</a> in the Organizations User Guide.</para><note><para>If any one of the tags is invalid or if you exceed the maximum allowed number of tags
            for an account, then the entire request fails and the account is not created.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CreateAccountStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CreateAccountResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CreateAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountName parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet">
            <summary>
            Sends an invitation to another account to join your organization as a member account.
            Organizations sends email on your behalf to the email address that is associated with
            the other account's owner. The invitation is implemented as a <a>Handshake</a> whose
            details are in the response.
            
             <important><ul><li><para>
            You can invite Amazon Web Services accounts only from the same seller as the management
            account. For example, if your organization's management account was created by Amazon
            Internet Services Pvt. Ltd (AISPL), an Amazon Web Services seller in India, you can
            invite only other AISPL accounts to your organization. You can't combine accounts
            from AISPL and Amazon Web Services or from any other Amazon Web Services seller. For
            more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated
            Billing in India</a>.
            </para></li><li><para>
            If you receive an exception that indicates that you exceeded your account limits for
            the organization or that the operation failed because your organization is still initializing,
            wait one hour and then try again. If the error persists after an hour, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.
            </para></li></ul></important><para>
            If the request includes tags, then the requester must have the <code>organizations:TagResource</code>
            permission.
            </para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Target_Id">
            <summary>
            <para>
            <para>The unique identifier (ID) for the party.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Note">
            <summary>
            <para>
            <para>Additional information that you want to include in the generated email to the recipient
            account owner.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags that you want to attach to the account when it becomes a member of
            the organization. For each tag in the list, you must specify both a tag key and a
            value. You can set the value to an empty string, but you can't set it to <code>null</code>.
            For more information about tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging
            Organizations resources</a> in the Organizations User Guide.</para><important><para>Any tags in the request are checked for compliance with any applicable tag policies
            when the request is made. The request is rejected if the tags in the request don't
            match the requirements of the policy at that time. Tag policy compliance is <i><b>not</b></i> checked again when the invitation is accepted and the tags are actually attached
            to the account. That means that if the tag policy changes between the invitation and
            the acceptance, then that tags could potentially be non-compliant.</para></important><note><para>If any one of the tags is invalid or if you exceed the allowed number of tags for
            an account, then the entire request fails and invitations are not sent.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Target_Type">
            <summary>
            <para>
            <para>The type of party.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.InviteAccountToOrganizationResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.InviteAccountToOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Target_Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Target_Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGAccountInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet">
            <summary>
            This action is available if all of the following are true:
            
             <ul><li><para>
            You're authorized to create accounts in the Amazon Web Services GovCloud (US) Region.
            For more information on the Amazon Web Services GovCloud (US) Region, see the <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.html"><i>Amazon Web Services GovCloud User Guide</i>.</a></para></li><li><para>
            You already have an account in the Amazon Web Services GovCloud (US) Region that is
            paired with a management account of an organization in the commercial Region.
            </para></li><li><para>
            You call this action from the management account of your organization in the commercial
            Region.
            </para></li><li><para>
            You have the <code>organizations:CreateGovCloudAccount</code> permission. 
            </para></li></ul><para>
            Organizations automatically creates the required service-linked role named <code>AWSServiceRoleForOrganizations</code>.
            For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">Organizations
            and Service-Linked Roles</a> in the <i>Organizations User Guide.</i></para><para>
            Amazon Web Services automatically enables CloudTrail for Amazon Web Services GovCloud
            (US) accounts, but you should also do the following:
            </para><ul><li><para>
            Verify that CloudTrail is enabled to store logs.
            </para></li><li><para>
            Create an Amazon S3 bucket for CloudTrail log storage.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/verifying-cloudtrail.html">Verifying
            CloudTrail Is Enabled</a> in the <i>Amazon Web Services GovCloud User Guide</i>. 
            </para></li></ul><para>
            If the request includes tags, then the requester must have the <code>organizations:TagResource</code>
            permission. The tags are attached to the commercial account associated with the GovCloud
            account, rather than the GovCloud account itself. To add tags to the GovCloud account,
            call the <a>TagResource</a> operation in the GovCloud Region after the new GovCloud
            account exists.
            </para><para>
            You call this action from the management account of your organization in the commercial
            Region to create a standalone Amazon Web Services account in the Amazon Web Services
            GovCloud (US) Region. After the account is created, the management account of an organization
            in the Amazon Web Services GovCloud (US) Region can invite it to that organization.
            For more information on inviting standalone accounts in the Amazon Web Services GovCloud
            (US) to join an organization, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a>
            in the <i>Amazon Web Services GovCloud User Guide.</i></para><para>
            Calling <code>CreateGovCloudAccount</code> is an asynchronous request that Amazon
            Web Services performs in the background. Because <code>CreateGovCloudAccount</code>
            operates asynchronously, it can return a successful completion message even though
            account initialization might still be in progress. You might need to wait a few minutes
            before you can successfully access the account. To check the status of the request,
            do one of the following:
            </para><ul><li><para>
            Use the <code>OperationId</code> response element from this operation to provide as
            a parameter to the <a>DescribeCreateAccountStatus</a> operation.
            </para></li><li><para>
            Check the CloudTrail log for the <code>CreateAccountResult</code> event. For information
            on using CloudTrail with Organizations, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html">Monitoring
            the Activity in Your Organization</a> in the <i>Organizations User Guide.</i></para></li></ul><para>
            When you call the <code>CreateGovCloudAccount</code> action, you create two accounts:
            a standalone account in the Amazon Web Services GovCloud (US) Region and an associated
            account in the commercial Region for billing and support purposes. The account in
            the commercial Region is automatically a member of the organization whose credentials
            made the request. Both accounts are associated with the same email address.
            </para><para>
            A role is created in the new account in the commercial Region that allows the management
            account in the organization in the commercial Region to assume it. An Amazon Web Services
            GovCloud (US) account is then created and associated with the commercial account that
            you just created. A role is also created in the new Amazon Web Services GovCloud (US)
            account that can be assumed by the Amazon Web Services GovCloud (US) account that
            is associated with the management account of the commercial organization. For more
            information and to view a diagram that explains how account access works, see <a href="https://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud-organizations.html">Organizations</a>
            in the <i>Amazon Web Services GovCloud User Guide.</i></para><para>
            For more information about creating accounts, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating
            an Amazon Web Services account in Your Organization</a> in the <i>Organizations User
            Guide.</i></para><important><ul><li><para>
            When you create an account in an organization using the Organizations console, API,
            or CLI commands, the information required for the account to operate as a standalone
            account is <i>not</i> automatically collected. This includes a payment method and
            signing the end user license agreement (EULA). If you must remove an account from
            your organization later, you can do so only after you provide the missing information.
            Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
            To leave an organization as a member account</a> in the <i>Organizations User Guide.</i></para></li><li><para>
            If you get an exception that indicates that you exceeded your account limits for the
            organization, contact <a href="https://console.aws.amazon.com/support/home#/">Amazon
            Web Services Support</a>.
            </para></li><li><para>
            If you get an exception that indicates that the operation failed because your organization
            is still initializing, wait one hour and then try again. If the error persists, contact
            <a href="https://console.aws.amazon.com/support/home#/">Amazon Web Services Support</a>.
            </para></li><li><para>
            Using <code>CreateGovCloudAccount</code> to create multiple temporary accounts isn't
            recommended. You can only close an account from the Amazon Web Services Billing and
            Cost Management console, and you must be signed in as the root user. For information
            on the requirements and process for closing an account, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing
            an Amazon Web Services account</a> in the <i>Organizations User Guide</i>.
            </para></li></ul></important><note><para>
            When you create a member account with this operation, you can choose whether to create
            the account with the <b>IAM User and Role Access to Billing Information</b> switch
            enabled. If you enable it, IAM users and roles that have appropriate permissions can
            view billing information for the account. If you disable it, only the account root
            user can access billing information. For information about how to disable this switch
            for an account, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
            Access to Your Billing Information and Tools</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.AccountName">
            <summary>
            <para>
            <para>The friendly name of the member account. </para><para>The account name can consist of only the characters [a-z],[A-Z],[0-9], hyphen (-),
            or dot (.) You can't separate characters with a dash (–).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.Email">
            <summary>
            <para>
            <para>Specifies the email address of the owner to assign to the new member account in the
            commercial Region. This email address must not already be associated with another
            Amazon Web Services account. You must use a valid email address to complete account
            creation.</para><para>The rules for a valid email address:</para><ul><li><para>The address must be a minimum of 6 and a maximum of 64 characters long.</para></li><li><para>All characters must be 7-bit ASCII characters.</para></li><li><para>There must be one and only one @ symbol, which separates the local name from the domain
            name.</para></li><li><para>The local name can't contain any of the following characters:</para><para>whitespace, " ' ( ) &lt; &gt; [ ] : ; , \ | % &amp;</para></li><li><para>The local name can't begin with a dot (.)</para></li><li><para>The domain name can consist of only the characters [a-z],[A-Z],[0-9], hyphen (-),
            or dot (.)</para></li><li><para>The domain name can't begin or end with a hyphen (-) or dot (.)</para></li><li><para>The domain name must contain at least one dot</para></li></ul><para>You can't access the root user of the account or remove an account that was created
            with an invalid email address. Like all request parameters for <code>CreateGovCloudAccount</code>,
            the request for the email address for the Amazon Web Services GovCloud (US) account
            originates from the commercial Region, not from the Amazon Web Services GovCloud (US)
            Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.IamUserAccessToBilling">
            <summary>
            <para>
            <para>If set to <code>ALLOW</code>, the new linked account in the commercial Region enables
            IAM users to access account billing information <i>if</i> they have the required permissions.
            If set to <code>DENY</code>, only the root user of the new account can access account
            billing information. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
            Access to the Billing and Cost Management Console</a> in the <i>Amazon Web Services
            Billing and Cost Management User Guide.</i></para><para>If you don't specify this parameter, the value defaults to <code>ALLOW</code>, and
            IAM users and roles with the required permissions can access billing information for
            the new account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.RoleName">
            <summary>
            <para>
            <para>(Optional)</para><para>The name of an IAM role that Organizations automatically preconfigures in the new
            member accounts in both the Amazon Web Services GovCloud (US) Region and in the commercial
            Region. This role trusts the management account, allowing users in the management
            account to assume the role, as permitted by the management account administrator.
            The role has administrator permissions in the new member account.</para><para>If you don't specify this parameter, the role name defaults to <code>OrganizationAccountAccessRole</code>.</para><para>For more information about how to use this role to access the member account, see
            <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role">Accessing
            and Administering the Member Accounts in Your Organization</a> in the <i>Organizations
            User Guide</i> and steps 2 and 3 in <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html">Tutorial:
            Delegate Access Across Amazon Web Services accounts Using IAM Roles</a> in the <i>IAM
            User Guide.</i></para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate
            this parameter. The pattern can include uppercase letters, lowercase letters, digits
            with no spaces, and any of the following characters: =,.@-</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags that you want to attach to the newly created account. These tags are
            attached to the commercial account associated with the GovCloud account, and not to
            the GovCloud account itself. To add tags to the actual GovCloud account, call the
            <a>TagResource</a> operation in the GovCloud region after the new GovCloud account
            exists.</para><para>For each tag in the list, you must specify both a tag key and a value. You can set
            the value to an empty string, but you can't set it to <code>null</code>. For more
            information about tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging
            Organizations resources</a> in the Organizations User Guide.</para><note><para>If any one of the tags is invalid or if you exceed the maximum allowed number of tags
            for an account, then the entire request fails and the account is not created.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CreateAccountStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CreateGovCloudAccountResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CreateGovCloudAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Email parameter.
            The -PassThru parameter is deprecated, use -Select '^Email' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGGovCloudAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationCmdlet">
            <summary>
            Creates an Amazon Web Services organization. The account whose user is calling the
            <code>CreateOrganization</code> operation automatically becomes the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">management
            account</a> of the new organization.
            
             
            <para>
            This operation must be called using credentials from the account that is to become
            the new organization's management account. The principal must also have the relevant
            IAM permissions.
            </para><para>
            By default (or if you set the <code>FeatureSet</code> parameter to <code>ALL</code>),
            the new organization is created with all features enabled and service control policies
            automatically enabled in the root. If you instead choose to create the organization
            supporting only the consolidated billing features by setting the <code>FeatureSet</code>
            parameter to <code>CONSOLIDATED_BILLING"</code>, no policy types are enabled by default,
            and you can't use organization policies
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationCmdlet.FeatureSet">
            <summary>
            <para>
            <para>Specifies the feature set supported by the new organization. Each feature set supports
            different levels of functionality.</para><ul><li><para><code>CONSOLIDATED_BILLING</code>: All member accounts have their bills consolidated
            to and paid by the management account. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-cb-only">Consolidated
            billing</a> in the <i>Organizations User Guide.</i></para><para> The consolidated billing feature subset isn't available for organizations in the
            Amazon Web Services GovCloud (US) Region.</para></li><li><para><code>ALL</code>: In addition to all the features supported by the consolidated billing
            feature set, the management account can also apply any policy type to any member account
            in the organization. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-all">All
            features</a> in the <i>Organizations User Guide.</i></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Organization'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CreateOrganizationResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CreateOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FeatureSet parameter.
            The -PassThru parameter is deprecated, use -Select '^FeatureSet' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet">
            <summary>
            Creates an organizational unit (OU) within a root or parent OU. An OU is a container
            for accounts that enables you to organize your accounts to apply policies according
            to your business requirements. The number of levels deep that you can nest OUs is
            dependent upon the policy types enabled for that root. For service control policies,
            the limit is five.
            
             
            <para>
            For more information about OUs, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing
            Organizational Units</a> in the <i>Organizations User Guide.</i></para><para>
            If the request includes tags, then the requester must have the <code>organizations:TagResource</code>
            permission.
            </para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.Name">
            <summary>
            <para>
            <para>The friendly name to assign to the new OU.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.ParentId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the parent root or OU that you want to create the new
            OU in.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string
            requires one of the following:</para><ul><li><para><b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters
            or digits.</para></li><li><para><b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from
            4 to 32 lowercase letters or digits (the ID of the root that the OU is in). This string
            is followed by a second "-" dash and from 8 to 32 additional lowercase letters or
            digits.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags that you want to attach to the newly created OU. For each tag in the
            list, you must specify both a tag key and a value. You can set the value to an empty
            string, but you can't set it to <code>null</code>. For more information about tagging,
            see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging
            Organizations resources</a> in the Organizations User Guide.</para><note><para>If any one of the tags is invalid or if you exceed the allowed number of tags for
            an OU, then the entire request fails and the OU is not created.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationalUnit'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CreateOrganizationalUnitResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CreateOrganizationalUnitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGOrganizationalUnitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet">
            <summary>
            Creates a policy of a specified type that you can attach to a root, an organizational
            unit (OU), or an individual Amazon Web Services account.
            
             
            <para>
            For more information about policies and their use, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing
            Organization Policies</a>.
            </para><para>
            If the request includes tags, then the requester must have the <code>organizations:TagResource</code>
            permission.
            </para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Content">
            <summary>
            <para>
            <para>The policy text content to add to the new policy. The text that you supply must adhere
            to the rules of the policy type you specify in the <code>Type</code> parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Description">
            <summary>
            <para>
            <para>An optional description to assign to the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Name">
            <summary>
            <para>
            <para>The friendly name to assign to the policy.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate
            this parameter is a string of any of the characters in the ASCII character range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Tag">
            <summary>
            <para>
            <para>A list of tags that you want to attach to the newly created policy. For each tag in
            the list, you must specify both a tag key and a value. You can set the value to an
            empty string, but you can't set it to <code>null</code>. For more information about
            tagging, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging
            Organizations resources</a> in the Organizations User Guide.</para><note><para>If any one of the tags is invalid or if you exceed the allowed number of tags for
            a policy, then the entire request fails and the policy is not created.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Type">
            <summary>
            <para>
            <para>The type of policy to create. You can specify one of the following values:</para><ul><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a></para></li><li><para><a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CreatePolicyResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CreatePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.NewORGPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet">
            <summary>
            Enables the specified member account to administer the Organizations features of the
            specified Amazon Web Services service. It grants read-only access to Organizations
            service data. The account still requires IAM permissions to access and administer
            the Amazon Web Services service.
            
             
            <para>
            You can run this action only for Amazon Web Services services that support this feature.
            For a current list of services that support it, see the column <i>Supports Delegated
            Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon
            Web Services Services that you can use with Organizations</a> in the <i>Organizations
            User Guide.</i></para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet.AccountId">
            <summary>
            <para>
            <para>The account ID number of the member account in the organization to register as a delegated
            administrator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet.ServicePrincipal">
            <summary>
            <para>
            <para>The service principal of the Amazon Web Services service for which you want to make
            the member account a delegated administrator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.RegisterDelegatedAdministratorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RegisterORGDelegatedAdministratorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGAccountFromOrganizationCmdlet">
            <summary>
            Removes the specified account from the organization.
            
             
            <para>
            The removed account becomes a standalone account that isn't a member of any organization.
            It's no longer subject to any policies and is responsible for its own bill payments.
            The organization's management account is no longer charged for any expenses accrued
            by the member account after it's removed from the organization.
            </para><para>
            This operation can be called only from the organization's management account. Member
            accounts can remove themselves with <a>LeaveOrganization</a> instead.
            </para><important><ul><li><para>
            You can remove an account from your organization only if the account is configured
            with the information required to operate as a standalone account. When you create
            an account in an organization using the Organizations console, API, or CLI commands,
            the information required of standalone accounts is <i>not</i> automatically collected.
            For an account that you want to make standalone, you must choose a support plan, provide
            and verify the required contact information, and provide a current payment method.
            Amazon Web Services uses the payment method to charge for any billable (not free tier)
            Amazon Web Services activity that occurs while the account isn't attached to an organization.
            To remove an account that doesn't yet have this information, you must sign in as the
            member account and follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
            To leave an organization when all required account information has not yet been provided</a>
            in the <i>Organizations User Guide.</i></para></li><li><para>
            The account that you want to leave must not be a delegated administrator account for
            any Amazon Web Services service enabled for your organization. If the account is a
            delegated administrator, you must first change the delegated administrator account
            to another account that is remaining in the organization.
            </para></li><li><para>
            After the account leaves the organization, all tags that were attached to the account
            object in the organization are deleted. Amazon Web Services accounts outside of an
            organization do not support tags.
            </para></li></ul></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGAccountFromOrganizationCmdlet.AccountId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the member account that you want to remove from the
            organization.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID
            string requires exactly 12 digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGAccountFromOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.RemoveAccountFromOrganizationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGAccountFromOrganizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGAccountFromOrganizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationCmdlet">
            <summary>
            Deletes the organization. You can delete an organization only by using credentials
            from the management account. The organization must be empty of member accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DeleteOrganizationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationalUnitCmdlet">
            <summary>
            Deletes an organizational unit (OU) from a root or another OU. You must first remove
            all accounts and child OUs from the OU that you want to delete.
            
             
            <para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationalUnitCmdlet.OrganizationalUnitId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the organizational unit that you want to delete. You
            can get the ID from the <a>ListOrganizationalUnitsForParent</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational
            unit ID string requires "ou-" followed by from 4 to 32 lowercase letters or digits
            (the ID of the root that contains the OU). This string is followed by a second "-"
            dash and from 8 to 32 additional lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationalUnitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DeleteOrganizationalUnitResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationalUnitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationalUnitId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationalUnitId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationalUnitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationAssociationCmdlet">
            <summary>
            Removes a member account from its parent organization. This version of the operation
            is performed by the account that wants to leave. To remove a member account as a user
            in the management account, use <a>RemoveAccountFromOrganization</a> instead.
            
             
            <para>
            This operation can be called only from a member account in the organization.
            </para><important><ul><li><para>
            The management account in an organization with all features enabled can set service
            control policies (SCPs) that can restrict what administrators of member accounts can
            do. This includes preventing them from successfully calling <code>LeaveOrganization</code>
            and leaving the organization.
            </para></li><li><para>
            You can leave an organization as a member account only if the account is configured
            with the information required to operate as a standalone account. When you create
            an account in an organization using the Organizations console, API, or CLI commands,
            the information required of standalone accounts is <i>not</i> automatically collected.
            For each account that you want to make standalone, you must perform the following
            steps. If any of the steps are already completed for this account, that step doesn't
            appear.
            </para><ul><li><para>
            Choose a support plan
            </para></li><li><para>
            Provide and verify the required contact information
            </para></li><li><para>
            Provide a current payment method
            </para></li></ul><para>
            Amazon Web Services uses the payment method to charge for any billable (not free tier)
            Amazon Web Services activity that occurs while the account isn't attached to an organization.
            Follow the steps at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
            To leave an organization when all required account information has not yet been provided</a>
            in the <i>Organizations User Guide.</i></para></li><li><para>
            The account that you want to leave must not be a delegated administrator account for
            any Amazon Web Services service enabled for your organization. If the account is a
            delegated administrator, you must first change the delegated administrator account
            to another account that is remaining in the organization.
            </para></li><li><para>
            You can leave an organization only after you enable IAM user access to billing in
            your account. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
            Access to the Billing and Cost Management Console</a> in the <i>Amazon Web Services
            Billing and Cost Management User Guide.</i></para></li><li><para>
            After the account leaves the organization, all tags that were attached to the account
            object in the organization are deleted. Amazon Web Services accounts outside of an
            organization do not support tags.
            </para></li><li><para>
            A newly created account has a waiting period before it can be removed from its organization.
            If you get an error that indicates that a wait period is required, then try again
            in a few days.
            </para></li></ul></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationAssociationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.LeaveOrganizationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGOrganizationAssociationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGPolicyCmdlet">
            <summary>
            Deletes the specified policy from your organization. Before you perform this operation,
            you must first detach the policy from all organizational units (OUs), roots, and accounts.
            
             
            <para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy that you want to delete. You can get the
            ID from the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a> operations.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DeletePolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PolicyId parameter.
            The -PassThru parameter is deprecated, use -Select '^PolicyId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet">
            <summary>
            Removes any tags with the specified keys from the specified resource.
            
             
            <para>
            You can attach tags to the following resources in Organizations.
            </para><ul><li><para>
            Amazon Web Services account
            </para></li><li><para>
            Organization root
            </para></li><li><para>
            Organizational unit (OU)
            </para></li><li><para>
            Policy (any type)
            </para></li></ul><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The ID of the resource to remove a tag from.</para><para>You can specify any of the following taggable resources.</para><ul><li><para>Amazon Web Services account – specify the account ID number.</para></li><li><para>Organizational unit – specify the OU ID that begins with <code>ou-</code> and looks
            similar to: <code>ou-<i>1a2b-34uvwxyz</i></code></para></li><li><para>Root – specify the root ID that begins with <code>r-</code> and looks similar to:
            <code>r-<i>1a2b</i></code></para></li><li><para>Policy – specify the policy ID that begins with <code>p-</code> andlooks similar to:
            <code>p-<i>12abcdefg3</i></code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of keys for tags to remove from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.RemoveORGResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.StopORGHandshakeCmdlet">
            <summary>
            Cancels a handshake. Canceling a handshake sets the handshake state to <code>CANCELED</code>.
            
             
            <para>
            This operation can be called only from the account that originated the handshake.
            The recipient of the handshake can't cancel it, but can use <a>DeclineHandshake</a>
            instead. After a handshake is canceled, the recipient can no longer respond to that
            handshake.
            </para><para>
            After you cancel a handshake, it continues to appear in the results of relevant APIs
            for only 30 days. After that, it's deleted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.StopORGHandshakeCmdlet.HandshakeId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the handshake that you want to cancel. You can get the
            ID from the <a>ListHandshakesForOrganization</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for handshake ID string
            requires "h-" followed by from 8 to 32 lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.StopORGHandshakeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Handshake'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.CancelHandshakeResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.CancelHandshakeResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.StopORGHandshakeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the HandshakeId parameter.
            The -PassThru parameter is deprecated, use -Select '^HandshakeId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.StopORGHandshakeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet">
            <summary>
            Removes the specified member Amazon Web Services account as a delegated administrator
            for the specified Amazon Web Services service.
            
             <important><para>
            Deregistering a delegated administrator can have unintended impacts on the functionality
            of the enabled Amazon Web Services service. See the documentation for the enabled
            service before you deregister a delegated administrator so that you understand any
            potential impacts.
            </para></important><para>
            You can run this action only for Amazon Web Services services that support this feature.
            For a current list of services that support it, see the column <i>Supports Delegated
            Administrator</i> in the table at <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html">Amazon
            Web Services Services that you can use with Organizations</a> in the <i>Organizations
            User Guide.</i></para><para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet.AccountId">
            <summary>
            <para>
            <para>The account ID number of the member account in the organization that you want to deregister
            as a delegated administrator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet.ServicePrincipal">
            <summary>
            <para>
            <para>The service principal name of an Amazon Web Services service for which the account
            is a delegated administrator.</para><para>Delegated administrator privileges are revoked for only the specified Amazon Web Services
            service from the member account. If the specified service is the only service for
            which the member account is a delegated administrator, the operation also revokes
            Organizations read action permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.DeregisterDelegatedAdministratorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UnregisterORGDelegatedAdministratorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet">
            <summary>
            Renames the specified organizational unit (OU). The ID and ARN don't change. The child
            OUs and accounts remain in place, and any attached policies of the OU remain attached.
            
             
            <para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet.Name">
            <summary>
            <para>
            <para>The new name that you want to assign to the OU.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate
            this parameter is a string of any of the characters in the ASCII character range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet.OrganizationalUnitId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the OU that you want to rename. You can get the ID from
            the <a>ListOrganizationalUnitsForParent</a> operation.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational
            unit ID string requires "ou-" followed by from 4 to 32 lowercase letters or digits
            (the ID of the root that contains the OU). This string is followed by a second "-"
            dash and from 8 to 32 additional lowercase letters or digits.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationalUnit'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.UpdateOrganizationalUnitResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.UpdateOrganizationalUnitResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGOrganizationalUnitCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet">
            <summary>
            Updates an existing policy with a new name, description, or content. If you don't
            supply any parameter, that value remains unchanged. You can't change a policy's type.
            
             
            <para>
            This operation can be called only from the organization's management account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.Content">
            <summary>
            <para>
            <para>If provided, the new content for the policy. The text must be correctly formatted
            JSON that complies with the syntax for the policy's type. For more information, see
            <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service
            Control Policy Syntax</a> in the <i>Organizations User Guide.</i></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.Description">
            <summary>
            <para>
            <para>If provided, the new description for the policy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.Name">
            <summary>
            <para>
            <para>If provided, the new name for the policy.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate
            this parameter is a string of any of the characters in the ASCII character range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.PolicyId">
            <summary>
            <para>
            <para>The unique identifier (ID) of the policy that you want to update.</para><para>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string
            requires "p-" followed by from 8 to 128 lowercase or uppercase letters, digits, or
            the underscore character (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Policy'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.Organizations.Model.UpdatePolicyResponse).
            Specifying the name of a property of type Amazon.Organizations.Model.UpdatePolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.ORG.UpdateORGPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
