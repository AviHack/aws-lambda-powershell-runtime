<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.LicenseManager</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet">
            <summary>
            Adds the specified tags to the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>One or more tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.AddLICMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.ApproveLICMGrantCmdlet">
            <summary>
            Accepts the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.ApproveLICMGrantCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.ApproveLICMGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.AcceptGrantResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.AcceptGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.ApproveLICMGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GrantArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GrantArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.ApproveLICMGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.DenyLICMGrantCmdlet">
            <summary>
            Rejects the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.DenyLICMGrantCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.DenyLICMGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.RejectGrantResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.RejectGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.DenyLICMGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GrantArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GrantArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.DenyLICMGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMAccessTokenCmdlet">
            <summary>
            Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens
            are valid for one hour.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAccessTokenCmdlet.Token">
            <summary>
            <para>
            <para>Refresh token, encoded as a JWT token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAccessTokenCmdlet.TokenProperty">
            <summary>
            <para>
            <para>Token properties to validate against those present in the JWT token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAccessTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccessToken'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetAccessTokenResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetAccessTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAccessTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Token parameter.
            The -PassThru parameter is deprecated, use -Select '^Token' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet">
            <summary>
            Lists the resource associations for the specified license configuration.
            
             
            <para>
            Resource associations need not consume licenses from a license configuration. For
            example, an AMI or a stopped instance might not consume a license (depending on the
            license rules).
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of a license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConfigurationAssociations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListAssociationsForLicenseConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMAssociationsForLicenseConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet">
            <summary>
            Lists the grants distributed for the specified license.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters are supported:</para><ul><li><para><code>LicenseArn</code></para></li><li><para><code>GrantStatus</code></para></li><li><para><code>GranteePrincipalARN</code></para></li><li><para><code>ProductSKU</code></para></li><li><para><code>LicenseIssuerName</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Names (ARNs) of the grants.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListDistributedGrantsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListDistributedGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMDistributedGrantListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet">
            <summary>
            Lists the license configuration operations that failed.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseOperationFailureList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListFailuresForLicenseConfigurationOperationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMFailuresForLicenseConfigurationOperationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMGrantCmdlet">
            <summary>
            Gets detailed information about the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMGrantCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMGrantCmdlet.Version">
            <summary>
            <para>
            <para>Grant version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grant'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetGrantResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GrantArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GrantArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseCmdlet">
            <summary>
            Gets detailed information about the specified license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseCmdlet.Version">
            <summary>
            <para>
            <para>License version.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'License'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetLicenseResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetLicenseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationCmdlet">
            <summary>
            Gets detailed information about the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetLicenseConfigurationResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetLicenseConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet">
            <summary>
            Lists the license configurations for your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters and logical operators are supported:</para><ul><li><para><code>licenseCountingType</code> - The dimension for which licenses are counted.
            Possible values are <code>vCPU</code> | <code>Instance</code> | <code>Core</code>
            | <code>Socket</code>. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li><li><para><code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license
            enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li><li><para><code>usagelimitExceeded</code> - A Boolean value that indicates whether the available
            licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Names (ARN) of the license configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicenseConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskCmdlet">
            <summary>
            Gets information about the specified license type conversion task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskCmdlet.LicenseConversionTaskId">
            <summary>
            <para>
            <para>ID of the license type conversion task to retrieve information on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetLicenseConversionTaskResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConversionTaskId parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConversionTaskId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet">
            <summary>
            Lists the license type conversion tasks for your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet.Filter">
            <summary>
            <para>
            <para> Filters to scope the results. Valid filters are <code>ResourceArns</code> and <code>Status</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConversionTasks'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicenseConversionTasksResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicenseConversionTasksResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseConversionTaskListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet">
            <summary>
            Lists the licenses for your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters are supported:</para><ul><li><para><code>Beneficiary</code></para></li><li><para><code>ProductSKU</code></para></li><li><para><code>Fingerprint</code></para></li><li><para><code>Status</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Names (ARNs) of the licenses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Licenses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicensesResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicensesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorCmdlet">
            <summary>
            Gets information about the specified report generator.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorCmdlet.LicenseManagerReportGeneratorArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReportGenerator'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetLicenseManagerReportGeneratorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseManagerReportGeneratorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseManagerReportGeneratorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet">
            <summary>
            Lists the report generators for your account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters are supported: </para><ul><li><para><code>LicenseConfigurationArn</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReportGenerators'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicenseManagerReportGeneratorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseManagerReportGeneratorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet">
            <summary>
            Describes the license configurations for the specified resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of a resource that has an associated license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseSpecifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicenseSpecificationsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseSpecificationsForResourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseUsageCmdlet">
            <summary>
            Gets detailed information about the usage of the specified license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseUsageCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseUsageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseUsage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetLicenseUsageResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetLicenseUsageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseUsageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet">
            <summary>
            Lists all versions of the specified license.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Licenses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListLicenseVersionsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListLicenseVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMLicenseVersionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet">
            <summary>
            Lists grants that are received but not accepted.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters are supported:</para><ul><li><para><code>ProductSKU</code></para></li><li><para><code>LicenseIssuerName</code></para></li><li><para><code>LicenseArn</code></para></li><li><para><code>GrantStatus</code></para></li><li><para><code>GranterAccountId</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Names (ARNs) of the grants.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Grants'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListReceivedGrantsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListReceivedGrantsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedGrantListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet">
            <summary>
            Lists received licenses.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters are supported:</para><ul><li><para><code>ProductSKU</code></para></li><li><para><code>Status</code></para></li><li><para><code>Fingerprint</code></para></li><li><para><code>IssuerName</code></para></li><li><para><code>Beneficiary</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Names (ARNs) of the licenses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Licenses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListReceivedLicensesResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListReceivedLicensesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMReceivedLicenseListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet">
            <summary>
            Lists resources managed using Systems Manager inventory.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters and logical operators are supported:</para><ul><li><para><code>account_id</code> - The ID of the Amazon Web Services account that owns the
            resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li><li><para><code>application_name</code> - The name of the application. Logical operators are
            <code>EQUALS</code> | <code>BEGINS_WITH</code>.</para></li><li><para><code>license_included</code> - The type of license included. Logical operators are
            <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code>
            | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</para></li><li><para><code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code>
            | <code>BEGINS_WITH</code>.</para></li><li><para><code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code>
            | <code>NOT_EQUALS</code>.</para></li><li><para><code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the
            resource. Logical operators are <code>EQUALS</code> (single account) or <code>EQUALS</code>
            | <code>NOT_EQUALS</code> (cross account).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceInventoryList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListResourceInventoryResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListResourceInventoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceInventoryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceTagListCmdlet">
            <summary>
            Lists the tags for the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceTagListCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceTagListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMResourceTagListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMServiceSettingCmdlet">
            <summary>
            Gets the License Manager settings for the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMServiceSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.GetServiceSettingsResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.GetServiceSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet">
            <summary>
            Lists your tokens.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filter is supported:</para><ul><li><para><code>LicenseArns</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.TokenId">
            <summary>
            <para>
            <para>Token IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tokens'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListTokensResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListTokensResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMTokenListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet">
            <summary>
            Lists all license usage records for a license configuration, displaying license consumption
            details by resource at a selected point in time. Use this action to audit the current
            license consumption for any license inventory and configuration.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.Filter">
            <summary>
            <para>
            <para>Filters to scope the results. The following filters and logical operators are supported:</para><ul><li><para><code>resourceArn</code> - The ARN of the license configuration resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li><li><para><code>resourceType</code> - The resource type (<code>EC2_INSTANCE</code> | <code>EC2_HOST</code>
            | <code>EC2_AMI</code> | <code>SYSTEMS_MANAGER_MANAGED_INSTANCE</code>). Logical operators
            are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li><li><para><code>resourceAccount</code> - The ID of the account that owns the resource. Logical
            operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>Maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>Token for the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConfigurationUsageList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ListUsageForLicenseConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.GetLICMUsageForLicenseConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet">
            <summary>
            Extends the expiration date for license consumption.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet.DryRun">
            <summary>
            <para>
            <para>Checks whether you have the required permissions for the action, without actually
            making the request. Provides an error response if you do not have the required permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet.LicenseConsumptionToken">
            <summary>
            <para>
            <para>License consumption token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.ExtendLicenseConsumptionResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.ExtendLicenseConsumptionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConsumptionToken parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConsumptionToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMExtendLicenseConsumptionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet">
            <summary>
            Checks in the specified license. Check in a license when it is no longer in use.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet.Beneficiary">
            <summary>
            <para>
            <para>License beneficiary.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet.LicenseConsumptionToken">
            <summary>
            <para>
            <para>License consumption token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CheckInLicenseResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConsumptionToken parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConsumptionToken' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckInCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet">
            <summary>
            Checks out the specified license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.Beneficiary">
            <summary>
            <para>
            <para>License beneficiary.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.CheckoutType">
            <summary>
            <para>
            <para>Checkout type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.Entitlement">
            <summary>
            <para>
            <para>License entitlements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.KeyFingerprint">
            <summary>
            <para>
            <para>Key fingerprint identifying the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.NodeId">
            <summary>
            <para>
            <para>Node ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.ProductSKU">
            <summary>
            <para>
            <para>Product SKU.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CheckoutLicenseResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CheckoutLicenseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProductSKU parameter.
            The -PassThru parameter is deprecated, use -Select '^ProductSKU' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet">
            <summary>
            Checks out the specified license for offline use.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.CheckoutMetadata">
            <summary>
            <para>
            <para>Information about constraints.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.DigitalSignatureMethod">
            <summary>
            <para>
            <para>Digital signature method. The possible value is JSON Web Signature (JWS) algorithm
            PS384. For more information, see <a href="https://tools.ietf.org/html/rfc7518#section-3.5">RFC
            7518 Digital Signature with RSASSA-PSS</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.Entitlement">
            <summary>
            <para>
            <para>License entitlements. Partial checkouts are not supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license. The license must use the borrow consumption
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.NodeId">
            <summary>
            <para>
            <para>Node ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CheckoutBorrowLicenseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.InvokeLICMLicenseCheckoutBorrowCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet">
            <summary>
            Creates a grant for the specified license. A grant shares the use of license entitlements
            with specific Amazon Web Services accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.AllowedOperation">
            <summary>
            <para>
            <para>Allowed operations for the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.GrantName">
            <summary>
            <para>
            <para>Grant name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.HomeRegion">
            <summary>
            <para>
            <para>Home Region of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.Principal">
            <summary>
            <para>
            <para>The grant principals.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateGrantResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet">
            <summary>
            Creates a new version of the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.AllowedOperation">
            <summary>
            <para>
            <para>Allowed operations for the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.GrantName">
            <summary>
            <para>
            <para>Grant name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.SourceVersion">
            <summary>
            <para>
            <para>Current version of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.Status">
            <summary>
            <para>
            <para>Grant status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.StatusReason">
            <summary>
            <para>
            <para>Grant status reason.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateGrantVersionResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateGrantVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GrantArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GrantArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMGrantVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet">
            <summary>
            Creates a license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.BorrowConfiguration_AllowEarlyCheckIn">
            <summary>
            <para>
            <para>Indicates whether early check-ins are allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Validity_Begin">
            <summary>
            <para>
            <para>Start of the time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Beneficiary">
            <summary>
            <para>
            <para>License beneficiary.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Validity_End">
            <summary>
            <para>
            <para>End of the time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Entitlement">
            <summary>
            <para>
            <para>License entitlements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.HomeRegion">
            <summary>
            <para>
            <para>Home Region for the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.LicenseMetadata">
            <summary>
            <para>
            <para>Information about the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.LicenseName">
            <summary>
            <para>
            <para>License name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.BorrowConfiguration_MaxTimeToLiveInMinute">
            <summary>
            <para>
            <para>Maximum time for the borrow configuration, in minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.ProvisionalConfiguration_MaxTimeToLiveInMinute">
            <summary>
            <para>
            <para>Maximum time for the provisional configuration, in minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Issuer_Name">
            <summary>
            <para>
            <para>Issuer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.ProductName">
            <summary>
            <para>
            <para>Product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.ProductSKU">
            <summary>
            <para>
            <para>Product SKU.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.ConsumptionConfiguration_RenewType">
            <summary>
            <para>
            <para>Renewal frequency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Issuer_SignKey">
            <summary>
            <para>
            <para>Asymmetric KMS key from Key Management Service. The KMS key must have a key usage
            of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateLicenseResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateLicenseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseName parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet">
            <summary>
            Creates a license configuration.
            
             
            <para>
            A license configuration is an abstraction of a customer license agreement that can
            be consumed and enforced by License Manager. Components include specifications for
            the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared
            tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to
            host (how long a license must be associated with a host), and the number of licenses
            purchased and used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>Description of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.DisassociateWhenNotFound">
            <summary>
            <para>
            <para>When true, disassociates a resource when software is uninstalled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.LicenseCount">
            <summary>
            <para>
            <para>Number of licenses managed by the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.LicenseCountHardLimit">
            <summary>
            <para>
            <para>Indicates whether hard or soft license enforcement is used. Exceeding a hard limit
            blocks the launch of new instances.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.LicenseCountingType">
            <summary>
            <para>
            <para>Dimension used to track the license inventory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.LicenseRule">
            <summary>
            <para>
            <para>License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost).
            The available rules vary by dimension, as follows.</para><ul><li><para><code>Cores</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code>
            | <code>maximumCores</code> | <code>minimumCores</code></para></li><li><para><code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code>
            | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code></para></li><li><para><code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code>
            | <code>maximumSockets</code> | <code>minimumSockets</code></para></li><li><para><code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code>
            | <code>maximumVcpus</code> | <code>minimumVcpus</code></para></li></ul><para>The unit for <code>licenseAffinityToHost</code> is days and the range is 1 to 180.
            The possible values for <code>allowedTenancy</code> are <code>EC2-Default</code>,
            <code>EC2-DedicatedHost</code>, and <code>EC2-DedicatedInstance</code>. The possible
            values for <code>honorVcpuOptimization</code> are <code>True</code> and <code>False</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>Name of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.ProductInformationList">
            <summary>
            <para>
            <para>Product information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to add to the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConfigurationArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateLicenseConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet">
            <summary>
            Creates a new license conversion task.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the resource you are converting the license type for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.DestinationLicenseContext_UsageOperation">
            <summary>
            <para>
            <para>The Usage operation value that corresponds to the license type you are converting
            your resource from. For more information about which platforms correspond to which
            usage operation values see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html#billing-info">Sample
            data: usage operation by platform </a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.SourceLicenseContext_UsageOperation">
            <summary>
            <para>
            <para>The Usage operation value that corresponds to the license type you are converting
            your resource from. For more information about which platforms correspond to which
            usage operation values see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html#billing-info">Sample
            data: usage operation by platform </a></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseConversionTaskId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateLicenseConversionTaskForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseConversionTaskForResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet">
            <summary>
            Creates a report generator.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.Description">
            <summary>
            <para>
            <para>Description of the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.ReportContext_LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration that this generator reports
            on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.ReportFrequency_Period">
            <summary>
            <para>
            <para>Time period between each report. The period can be daily, weekly, or monthly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.ReportGeneratorName">
            <summary>
            <para>
            <para>Name of the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.Tag">
            <summary>
            <para>
            <para>Tags to add to the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.Type">
            <summary>
            <para>
            <para>Type of reports to generate. The following report types an be generated:</para><ul><li><para>License configuration report - Reports the number and details of consumed licenses
            for a license configuration.</para></li><li><para>Resource report - Reports the tracked licenses and resource consumption for a license
            configuration.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.ReportFrequency_Value">
            <summary>
            <para>
            <para>Number of times within the frequency period that a report is generated. The only supported
            value is <code>1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LicenseManagerReportGeneratorArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateLicenseManagerReportGeneratorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ReportGeneratorName parameter.
            The -PassThru parameter is deprecated, use -Select '^ReportGeneratorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseManagerReportGeneratorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet">
            <summary>
            Creates a new version of the specified license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.BorrowConfiguration_AllowEarlyCheckIn">
            <summary>
            <para>
            <para>Indicates whether early check-ins are allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Validity_Begin">
            <summary>
            <para>
            <para>Start of the time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Validity_End">
            <summary>
            <para>
            <para>End of the time range.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Entitlement">
            <summary>
            <para>
            <para>License entitlements.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.HomeRegion">
            <summary>
            <para>
            <para>Home Region of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.LicenseMetadata">
            <summary>
            <para>
            <para>Information about the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.LicenseName">
            <summary>
            <para>
            <para>License name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.BorrowConfiguration_MaxTimeToLiveInMinute">
            <summary>
            <para>
            <para>Maximum time for the borrow configuration, in minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.ProvisionalConfiguration_MaxTimeToLiveInMinute">
            <summary>
            <para>
            <para>Maximum time for the provisional configuration, in minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Issuer_Name">
            <summary>
            <para>
            <para>Issuer name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.ProductName">
            <summary>
            <para>
            <para>Product name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.ConsumptionConfiguration_RenewType">
            <summary>
            <para>
            <para>Renewal frequency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Issuer_SignKey">
            <summary>
            <para>
            <para>Asymmetric KMS key from Key Management Service. The KMS key must have a key usage
            of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.SourceVersion">
            <summary>
            <para>
            <para>Current version of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Status">
            <summary>
            <para>
            <para>License status.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateLicenseVersionResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateLicenseVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMLicenseVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet">
            <summary>
            Creates a long-lived token.
            
             
            <para>
            A refresh token is a JWT token used to get an access token. With an access token,
            you can call AssumeRoleWithWebIdentity to get role credentials that you can use to
            call License Manager to manage the specified license.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.ExpirationInDay">
            <summary>
            <para>
            <para>Token expiration, in days, counted from token creation. The default is 365 days.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the
            JWT token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.RoleArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager
            does not check whether the roles are in use.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.TokenProperty">
            <summary>
            <para>
            <para>Data specified by the caller to be included in the JWT token. The data is mapped to
            the amr claim of the JWT token.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.ClientToken">
            <summary>
            <para>
            <para>Idempotency token, valid for 10 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.CreateTokenResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.CreateTokenResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.NewLICMTokenCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet">
            <summary>
            Deletes the specified grant.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.GrantArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.StatusReason">
            <summary>
            <para>
            <para>The Status reason for the delete request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.Version">
            <summary>
            <para>
            <para>Current version of the grant.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.DeleteGrantResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.DeleteGrantResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GrantArn parameter.
            The -PassThru parameter is deprecated, use -Select '^GrantArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMGrantCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet">
            <summary>
            Deletes the specified license.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet.LicenseArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet.SourceVersion">
            <summary>
            <para>
            <para>Current version of the license.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.DeleteLicenseResponse).
            Specifying the name of a property of type Amazon.LicenseManager.Model.DeleteLicenseResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseConfigurationCmdlet">
            <summary>
            Deletes the specified license configuration.
            
             
            <para>
            You cannot delete a license configuration that is in use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseConfigurationCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>ID of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.DeleteLicenseConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseManagerReportGeneratorCmdlet">
            <summary>
            Deletes the specified report generator.
            
             
            <para>
            This action deletes the report generator, which stops it from generating future reports.
            The action cannot be reversed. It has no effect on the previous reports from this
            generator.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseManagerReportGeneratorCmdlet.LicenseManagerReportGeneratorArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the report generator to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseManagerReportGeneratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.DeleteLicenseManagerReportGeneratorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseManagerReportGeneratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseManagerReportGeneratorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseManagerReportGeneratorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMLicenseManagerReportGeneratorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet">
            <summary>
            Removes the specified tags from the specified license configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>Keys identifying the tags to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMTokenCmdlet">
            <summary>
            Deletes the specified token. Must be called in the license home Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMTokenCmdlet.TokenId">
            <summary>
            <para>
            <para>Token ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMTokenCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.DeleteTokenResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMTokenCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TokenId parameter.
            The -PassThru parameter is deprecated, use -Select '^TokenId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.RemoveLICMTokenCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet">
            <summary>
            Modifies the attributes of an existing license configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.Description">
            <summary>
            <para>
            <para>New description of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.DisassociateWhenNotFound">
            <summary>
            <para>
            <para>When true, disassociates a resource when software is uninstalled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.LicenseConfigurationStatus">
            <summary>
            <para>
            <para>New status of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.LicenseCount">
            <summary>
            <para>
            <para>New number of licenses managed by the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.LicenseCountHardLimit">
            <summary>
            <para>
            <para>New hard limit of the number of available licenses.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.LicenseRule">
            <summary>
            <para>
            <para>New license rule. The only rule that you can add after you create a license configuration
            is licenseAffinityToHost.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.Name">
            <summary>
            <para>
            <para>New name of the license configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.ProductInformationList">
            <summary>
            <para>
            <para>New product information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.UpdateLicenseConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseConfigurationArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseConfigurationArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet">
            <summary>
            Updates a report generator.
            
             
            <para>
            After you make changes to a report generator, it starts generating new reports within
            60 minutes of being updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.Description">
            <summary>
            <para>
            <para>Description of the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.ReportContext_LicenseConfigurationArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the license configuration that this generator reports
            on.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.LicenseManagerReportGeneratorArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the report generator to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.ReportFrequency_Period">
            <summary>
            <para>
            <para>Time period between each report. The period can be daily, weekly, or monthly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.ReportGeneratorName">
            <summary>
            <para>
            <para>Name of the report generator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.Type">
            <summary>
            <para>
            <para>Type of reports to generate. The following report types are supported:</para><ul><li><para>License configuration report - Reports the number and details of consumed licenses
            for a license configuration.</para></li><li><para>Resource report - Reports the tracked licenses and resource consumption for a license
            configuration.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.ReportFrequency_Value">
            <summary>
            <para>
            <para>Number of times within the frequency period that a report is generated. The only supported
            value is <code>1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.ClientToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.UpdateLicenseManagerReportGeneratorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the LicenseManagerReportGeneratorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^LicenseManagerReportGeneratorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseManagerReportGeneratorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet">
            <summary>
            Adds or removes the specified license configurations for the specified Amazon Web
            Services resource.
            
             
            <para>
            You can update the license specifications of AMIs, instances, and hosts. You cannot
            update the license specifications for launch templates and CloudFormation templates,
            as they send license configurations to the operation that creates the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.AddLicenseSpecification">
            <summary>
            <para>
            <para>ARNs of the license configurations to add.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.RemoveLicenseSpecification">
            <summary>
            <para>
            <para>ARNs of the license configurations to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the Amazon Web Services resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.UpdateLicenseSpecificationsForResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMLicenseSpecificationsForResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet">
            <summary>
            Updates License Manager settings for the current Region.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.EnableCrossAccountsDiscovery">
            <summary>
            <para>
            <para>Activates cross-account discovery.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.OrganizationConfiguration_EnableIntegration">
            <summary>
            <para>
            <para>Enables Organizations integration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.S3BucketArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information
            is stored.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.SnsTopicArn">
            <summary>
            <para>
            <para>Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LicenseManager.Model.UpdateServiceSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LICM.UpdateLICMServiceSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
