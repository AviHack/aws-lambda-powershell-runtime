<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.ForecastService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            also deleted.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the resource. A tag is an array of key-value pairs.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.AddFRCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCAccuracyMetricCmdlet">
            <summary>
            Provides metrics on the accuracy of the models that were trained by the <a>CreatePredictor</a>
            operation. Use metrics to see how well the model performed and to decide whether to
            use the predictor to generate a forecast. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/metrics.html">Predictor
            Metrics</a>.
            
             
            <para>
            This operation generates metrics for each backtest window that was evaluated. The
            number of backtest windows (<code>NumberOfBacktestWindows</code>) is specified using
            the <a>EvaluationParameters</a> object, which is optionally included in the <code>CreatePredictor</code>
            request. If <code>NumberOfBacktestWindows</code> isn't specified, the number defaults
            to one.
            </para><para>
            The parameters of the <code>filling</code> method determine which items contribute
            to the metrics. If you want all items to contribute, specify <code>zero</code>. If
            you want only those items that have complete data in the range being evaluated to
            contribute, specify <code>nan</code>. For more information, see <a>FeaturizationMethod</a>.
            </para><note><para>
            Before you can get accuracy metrics, the <code>Status</code> of the predictor must
            be <code>ACTIVE</code>, signifying that training has completed. To get the status,
            use the <a>DescribePredictor</a> operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAccuracyMetricCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor to get metrics for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAccuracyMetricCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PredictorEvaluationResults'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.GetAccuracyMetricsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.GetAccuracyMetricsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAccuracyMetricCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCAutoPredictorCmdlet">
            <summary>
            Describes a predictor created using the CreateAutoPredictor operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAutoPredictorCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAutoPredictorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeAutoPredictorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeAutoPredictorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCAutoPredictorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetCmdlet">
            <summary>
            Describes an Amazon Forecast dataset created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html">CreateDataset</a>
            operation.
            
             
            <para>
            In addition to listing the parameters specified in the <code>CreateDataset</code>
            request, this operation includes the following dataset properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetCmdlet.DatasetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeDatasetResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeDatasetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupCmdlet">
            <summary>
            Describes a dataset group created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html">CreateDatasetGroup</a>
            operation.
            
             
            <para>
            In addition to listing the parameters provided in the <code>CreateDatasetGroup</code>
            request, this operation includes the following properties:
            </para><ul><li><para><code>DatasetArns</code> - The datasets belonging to the group.
            </para></li><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupCmdlet.DatasetGroupArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeDatasetGroupResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeDatasetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetGroupArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetGroupArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupListCmdlet">
            <summary>
            Returns a list of dataset groups created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html">CreateDatasetGroup</a>
            operation. For each dataset group, this operation returns a summary of its properties,
            including its Amazon Resource Name (ARN). You can retrieve the complete set of properties
            by using the dataset group ARN with the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html">DescribeDatasetGroup</a>
            operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetGroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListDatasetGroupsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListDatasetGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobCmdlet">
            <summary>
            Describes a dataset import job created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html">CreateDatasetImportJob</a>
            operation.
            
             
            <para>
            In addition to listing the parameters provided in the <code>CreateDatasetImportJob</code>
            request, this operation includes the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>DataSize</code></para></li><li><para><code>FieldStatistics</code></para></li><li><para><code>Status</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobCmdlet.DatasetImportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset import job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeDatasetImportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeDatasetImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetImportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetImportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet">
            <summary>
            Returns a list of dataset import jobs created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html">CreateDatasetImportJob</a>
            operation. For each import job, this operation returns a summary of its properties,
            including its Amazon Resource Name (ARN). You can retrieve the complete set of properties
            by using the ARN with the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetImportJob.html">DescribeDatasetImportJob</a>
            operation. You can filter the list by providing an array of <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_Filter.html">Filter</a>
            objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the datasets that match the statement from the list, respectively.
            The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the datasets that match the statement, specify
            <code>IS</code>. To exclude matching datasets, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all dataset import jobs whose status is ACTIVE, you specify the
            following filter:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "Status", "Value": "ACTIVE" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetImportJobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListDatasetImportJobsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListDatasetImportJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetImportJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetListCmdlet">
            <summary>
            Returns a list of datasets created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html">CreateDataset</a>
            operation. For each dataset, a summary of its properties, including its Amazon Resource
            Name (ARN), is returned. To retrieve the complete set of properties, use the ARN with
            the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html">DescribeDataset</a>
            operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Datasets'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListDatasetsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListDatasetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCDatasetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityCmdlet">
            <summary>
            Describes an Explainability resource created using the <a>CreateExplainability</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityCmdlet.ExplainabilityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Explaianability to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeExplainabilityResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeExplainabilityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportCmdlet">
            <summary>
            Describes an Explainability export created using the <a>CreateExplainabilityExport</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportCmdlet.ExplainabilityExportArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Explainability export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeExplainabilityExportResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeExplainabilityExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityExportArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityExportArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet">
            <summary>
            Returns a list of Explainability exports created using the <a>CreateExplainabilityExport</a>
            operation. This operation returns a summary for each Explainability export. You can
            filter the list using an array of <a>Filter</a> objects.
            
             
            <para>
            To retrieve the complete set of properties for a particular Explainability export,
            use the ARN with the <a>DescribeExplainability</a> operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, provide a condition and a match statement. The
            condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude resources that match the statement from the list. The match
            statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>ResourceArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a NextToken.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExplainabilityExports'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListExplainabilityExportsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListExplainabilityExportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityExportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet">
            <summary>
            Returns a list of Explainability resources created using the <a>CreateExplainability</a>
            operation. This operation returns a summary for each Explainability. You can filter
            the list using an array of <a>Filter</a> objects.
            
             
            <para>
            To retrieve the complete set of properties for a particular Explainability resource,
            use the ARN with the <a>DescribeExplainability</a> operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, provide a condition and a match statement. The
            condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the resources that match the statement from the list. The match
            statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>ResourceArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items returned in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a NextToken.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Explainabilities'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListExplainabilitiesResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListExplainabilitiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCExplainabilityListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastCmdlet">
            <summary>
            Describes a forecast created using the <a>CreateForecast</a> operation.
            
             
            <para>
            In addition to listing the properties provided in the <code>CreateForecast</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>DatasetGroupArn</code> - The dataset group that provided the training data.
            </para></li><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastCmdlet.ForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeForecastResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeForecastResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ForecastArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ForecastArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobCmdlet">
            <summary>
            Describes a forecast export job created using the <a>CreateForecastExportJob</a> operation.
            
             
            <para>
            In addition to listing the properties provided by the user in the <code>CreateForecastExportJob</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobCmdlet.ForecastExportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the forecast export job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeForecastExportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeForecastExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ForecastExportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ForecastExportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet">
            <summary>
            Returns a list of forecast export jobs created using the <a>CreateForecastExportJob</a>
            operation. For each forecast export job, this operation returns a summary of its properties,
            including its Amazon Resource Name (ARN). To retrieve the complete set of properties,
            use the ARN with the <a>DescribeForecastExportJob</a> operation. You can filter the
            list using an array of <a>Filter</a> objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the forecast export jobs that match the statement from the list,
            respectively. The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the forecast export jobs that match the statement,
            specify <code>IS</code>. To exclude matching forecast export jobs, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>ForecastArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all jobs that export a forecast named <i>electricityforecast</i>,
            specify the following filter:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "ForecastArn", "Value": "arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityforecast"
            } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ForecastExportJobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListForecastExportJobsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListForecastExportJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastExportJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet">
            <summary>
            Returns a list of forecasts created using the <a>CreateForecast</a> operation. For
            each forecast, this operation returns a summary of its properties, including its Amazon
            Resource Name (ARN). To retrieve the complete set of properties, specify the ARN with
            the <a>DescribeForecast</a> operation. You can filter the list using an array of <a>Filter</a>
            objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the forecasts that match the statement from the list, respectively.
            The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the forecasts that match the statement, specify
            <code>IS</code>. To exclude matching forecasts, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetGroupArn</code>,
            <code>PredictorArn</code>, and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all forecasts whose status is not ACTIVE, you would specify:</para><para><code>"Filters": [ { "Condition": "IS_NOT", "Key": "Status", "Value": "ACTIVE" }
            ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Forecasts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListForecastsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListForecastsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCForecastListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorCmdlet">
            <summary>
            Describes a monitor resource. In addition to listing the properties provided in the
            <a>CreateMonitor</a> request, this operation lists the following properties:
            
             <ul><li><para><code>Baseline</code></para></li><li><para><code>CreationTime</code></para></li><li><para><code>LastEvaluationTime</code></para></li><li><para><code>LastEvaluationState</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Message</code></para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorCmdlet.MonitorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the monitor resource to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeMonitorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeMonitorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MonitorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^MonitorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet">
            <summary>
            Returns a list of the monitoring evaluation results and predictor events collected
            by the monitor resource during different windows of time.
            
             
            <para>
            For information about monitoring see <a>predictor-monitoring</a>. For more information
            about retrieving monitoring results see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring-results.html">Viewing
            Monitoring Results</a>.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, provide a condition and a match statement. The
            condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the resources that match the statement from the list. The match
            statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. The only valid value is
            <code>EvaluationState</code>.</para></li><li><para><code>Value</code> - The value to match. Valid values are only <code>SUCCESS</code>
            or <code>FAILURE</code>.</para></li></ul><para>For example, to list only successful monitor evaluations, you would specify:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "EvaluationState", "Value": "SUCCESS"
            } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.MonitorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the monitor resource to get results from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of monitoring results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListMonitorEvaluationsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListMonitorEvaluationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MonitorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^MonitorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorEvaluationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet">
            <summary>
            Returns a list of monitors created with the <a>CreateMonitor</a> operation and <a>CreateAutoPredictor</a>
            operation. For each monitor resource, this operation returns of a summary of its properties,
            including its Amazon Resource Name (ARN). You can retrieve a complete set of properties
            of a monitor resource by specify the monitor's ARN in the <a>DescribeMonitor</a> operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, provide a condition and a match statement. The
            condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the resources that match the statement from the list. The match
            statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. The only valid value is
            <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all monitors who's status is ACTIVE, you would specify:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "Status", "Value": "ACTIVE" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of monitors to include in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Monitors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListMonitorsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListMonitorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCMonitorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorCmdlet">
            <summary>
            <note><para>
             This operation is only valid for legacy predictors created with CreatePredictor.
            If you are not using a legacy predictor, use <a>DescribeAutoPredictor</a>.
            </para></note><para>
            Describes a predictor created using the <a>CreatePredictor</a> operation.
            </para><para>
            In addition to listing the properties provided in the <code>CreatePredictor</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>DatasetImportJobArns</code> - The dataset import jobs used to import training
            data.
            </para></li><li><para><code>AutoMLAlgorithmArns</code> - If AutoML is performed, the algorithms that were
            evaluated.
            </para></li><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor that you want information about.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribePredictorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribePredictorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobCmdlet">
            <summary>
            Describes a predictor backtest export job created using the <a>CreatePredictorBacktestExportJob</a>
            operation.
            
             
            <para>
            In addition to listing the properties provided by the user in the <code>CreatePredictorBacktestExportJob</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Status</code></para></li><li><para><code>Message</code> (if an error occurred)
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobCmdlet.PredictorBacktestExportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor backtest export job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribePredictorBacktestExportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribePredictorBacktestExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorBacktestExportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorBacktestExportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet">
            <summary>
            Returns a list of predictor backtest export jobs created using the <a>CreatePredictorBacktestExportJob</a>
            operation. This operation returns a summary for each backtest export job. You can
            filter the list using an array of <a>Filter</a> objects.
            
             
            <para>
            To retrieve the complete set of properties for a particular backtest export job, use
            the ARN with the <a>DescribePredictorBacktestExportJob</a> operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, provide a condition and a match statement. The
            condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the predictor backtest export jobs that match the statement
            from the list. The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the predictor backtest export jobs that match
            the statement, specify <code>IS</code>. To exclude matching predictor backtest export
            jobs, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>PredictorArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a NextToken.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PredictorBacktestExportJobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListPredictorBacktestExportJobsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListPredictorBacktestExportJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorBacktestExportJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet">
            <summary>
            Returns a list of predictors created using the <a>CreateAutoPredictor</a> or <a>CreatePredictor</a>
            operations. For each predictor, this operation returns a summary of its properties,
            including its Amazon Resource Name (ARN). 
            
             
            <para>
            You can retrieve the complete set of properties by using the ARN with the <a>DescribeAutoPredictor</a>
            and <a>DescribePredictor</a> operations. You can filter the list using an array of
            <a>Filter</a> objects.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the predictors that match the statement from the list, respectively.
            The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the predictors that match the statement, specify
            <code>IS</code>. To exclude matching predictors, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>DatasetGroupArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all predictors whose status is ACTIVE, you would specify:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "Status", "Value": "ACTIVE" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Predictors'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListPredictorsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListPredictorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCPredictorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCResourceTagCmdlet">
            <summary>
            Lists the tags for an Amazon Forecast resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisCmdlet">
            <summary>
            Describes the what-if analysis created using the <a>CreateWhatIfAnalysis</a> operation.
            
             
            <para>
            In addition to listing the properties provided in the <code>CreateWhatIfAnalysis</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisCmdlet.WhatIfAnalysisArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if analysis that you are interested in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeWhatIfAnalysisResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeWhatIfAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfAnalysisArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfAnalysisArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet">
            <summary>
            Returns a list of what-if analyses created using the <a>CreateWhatIfAnalysis</a> operation.
            For each what-if analysis, this operation returns a summary of its properties, including
            its Amazon Resource Name (ARN). You can retrieve the complete set of properties by
            using the what-if analysis ARN with the <a>DescribeWhatIfAnalysis</a> operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the what-if analysis jobs that match the statement from the
            list, respectively. The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the what-if analysis jobs that match the statement,
            specify <code>IS</code>. To exclude matching what-if analysis jobs, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>WhatIfAnalysisArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all jobs that export a forecast named <i>electricityWhatIf</i>,
            specify the following filter:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "WhatIfAnalysisArn", "Value": "arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWhatIf"
            } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next request. Tokens expire
            after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfAnalyses'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListWhatIfAnalysesResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListWhatIfAnalysesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfAnalysisListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastCmdlet">
            <summary>
            Describes the what-if forecast created using the <a>CreateWhatIfForecast</a> operation.
            
             
            <para>
            In addition to listing the properties provided in the <code>CreateWhatIfForecast</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastCmdlet.WhatIfForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if forecast that you are interested in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeWhatIfForecastResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeWhatIfForecastResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportCmdlet">
            <summary>
            Describes the what-if forecast export created using the <a>CreateWhatIfForecastExport</a>
            operation.
            
             
            <para>
            In addition to listing the properties provided in the <code>CreateWhatIfForecastExport</code>
            request, this operation lists the following properties:
            </para><ul><li><para><code>CreationTime</code></para></li><li><para><code>LastModificationTime</code></para></li><li><para><code>Message</code> - If an error occurred, information about the error.
            </para></li><li><para><code>Status</code></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportCmdlet.WhatIfForecastExportArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if forecast export that you are interested
            in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DescribeWhatIfForecastExportResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.DescribeWhatIfForecastExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastExportArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastExportArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet">
            <summary>
            Returns a list of what-if forecast exports created using the <a>CreateWhatIfForecastExport</a>
            operation. For each what-if forecast export, this operation returns a summary of its
            properties, including its Amazon Resource Name (ARN). You can retrieve the complete
            set of properties by using the what-if forecast export ARN with the <a>DescribeWhatIfForecastExport</a>
            operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the what-if forecast export jobs that match the statement from
            the list, respectively. The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the forecast export jobs that match the statement,
            specify <code>IS</code>. To exclude matching forecast export jobs, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>WhatIfForecastExportArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all jobs that export a forecast named <i>electricityWIFExport</i>,
            specify the following filter:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "WhatIfForecastExportArn", "Value":
            "arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWIFExport" } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next  request. Tokens
            expire after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfForecastExports'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListWhatIfForecastExportsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListWhatIfForecastExportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastExportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet">
            <summary>
            Returns a list of what-if forecasts created using the <a>CreateWhatIfForecast</a>
            operation. For each what-if forecast, this operation returns a summary of its properties,
            including its Amazon Resource Name (ARN). You can retrieve the complete set of properties
            by using the what-if forecast ARN with the <a>DescribeWhatIfForecast</a> operation.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet.Filter">
            <summary>
            <para>
            <para>An array of filters. For each filter, you provide a condition and a match statement.
            The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether
            to include or exclude the what-if forecast export jobs that match the statement from
            the list, respectively. The match statement consists of a key and a value.</para><para><b>Filter properties</b></para><ul><li><para><code>Condition</code> - The condition to apply. Valid values are <code>IS</code>
            and <code>IS_NOT</code>. To include the forecast export jobs that match the statement,
            specify <code>IS</code>. To exclude matching forecast export jobs, specify <code>IS_NOT</code>.</para></li><li><para><code>Key</code> - The name of the parameter to filter on. Valid values are <code>WhatIfForecastArn</code>
            and <code>Status</code>.</para></li><li><para><code>Value</code> - The value to match.</para></li></ul><para>For example, to list all jobs that export a forecast named <i>electricityWhatIfForecast</i>,
            specify the following filter:</para><para><code>"Filters": [ { "Condition": "IS", "Key": "WhatIfForecastArn", "Value": "arn:aws:forecast:us-west-2:&lt;acct-id&gt;:forecast/electricityWhatIfForecast"
            } ]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of items to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet.NextToken">
            <summary>
            <para>
            <para>If the result of the previous request was truncated, the response includes a <code>NextToken</code>.
            To retrieve the next set of results, use the token in the next  request. Tokens
            expire after 24 hours.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfForecasts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ListWhatIfForecastsResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.ListWhatIfForecastsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.GetFRCWhatIfForecastListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet">
            <summary>
            Creates an Amazon Forecast predictor.
            
             
            <para>
            Amazon Forecast creates predictors with AutoPredictor, which involves applying the
            optimal combination of algorithms to each time series in your datasets. You can use
            <a>CreateAutoPredictor</a> to create new predictors or upgrade/retrain existing predictors.
            </para><para><b>Creating new predictors</b></para><para>
            The following parameters are required when creating a new predictor:
            </para><ul><li><para><code>PredictorName</code> - A unique name for the predictor.
            </para></li><li><para><code>DatasetGroupArn</code> - The ARN of the dataset group used to train the predictor.
            </para></li><li><para><code>ForecastFrequency</code> - The granularity of your forecasts (hourly, daily,
            weekly, etc).
            </para></li><li><para><code>ForecastHorizon</code> - The number of time-steps that the model predicts.
            The forecast horizon is also called the prediction length.
            </para></li></ul><para>
            When creating a new predictor, do not specify a value for <code>ReferencePredictorArn</code>.
            </para><para><b>Upgrading and retraining predictors</b></para><para>
            The following parameters are required when retraining or upgrading a predictor:
            </para><ul><li><para><code>PredictorName</code> - A unique name for the predictor.
            </para></li><li><para><code>ReferencePredictorArn</code> - The ARN of the predictor to retrain or upgrade.
            </para></li></ul><para>
            When upgrading or retraining a predictor, only specify values for the <code>ReferencePredictorArn</code>
            and <code>PredictorName</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.DataConfig_AdditionalDataset">
            <summary>
            <para>
            <para>Additional built-in datasets like Holidays and the Weather Index.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.DataConfig_AttributeConfig">
            <summary>
            <para>
            <para>Aggregation and filling options for attributes in your dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.DataConfig_DatasetGroupArn">
            <summary>
            <para>
            <para>The ARN of the dataset group used to train the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.TimeAlignmentBoundary_DayOfMonth">
            <summary>
            <para>
            <para>The day of the month to use for time alignment during aggregation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.TimeAlignmentBoundary_DayOfWeek">
            <summary>
            <para>
            <para>The day of week to use for time alignment during aggregation. The day must be in uppercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ExplainPredictor">
            <summary>
            <para>
            <para>Create an Explainability resource for the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ForecastDimension">
            <summary>
            <para>
            <para>An array of dimension (field) names that specify how to group the generated forecast.</para><para>For example, if you are generating forecasts for item sales across all your stores,
            and your dataset contains a <code>store_id</code> field, you would specify <code>store_id</code>
            as a dimension to group sales forecasts for each store.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ForecastFrequency">
            <summary>
            <para>
            <para>The frequency of predictions in a forecast.</para><para>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes),
            15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For
            example, "Y" indicates every year and "5min" indicates every five minutes.</para><para>The frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</para><para>When a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the
            RELATED_TIME_SERIES dataset frequency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ForecastHorizon">
            <summary>
            <para>
            <para>The number of time-steps that the model predicts. The forecast horizon is also called
            the prediction length.</para><para>The maximum forecast horizon is the lesser of 500 time-steps or 1/4 of the TARGET_TIME_SERIES
            dataset length. If you are retraining an existing AutoPredictor, then the maximum
            forecast horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES
            dataset length.</para><para>If you are upgrading to an AutoPredictor or retraining an existing AutoPredictor,
            you cannot update the forecast horizon parameter. You can meet this requirement by
            providing longer time-series in the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ForecastType">
            <summary>
            <para>
            <para>The forecast types used to train a predictor. You can specify up to five forecast
            types. Forecast types can be quantiles from 0.01 to 0.99, by increments of 0.01 or
            higher. You can also specify the mean forecast with <code>mean</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.TimeAlignmentBoundary_Hour">
            <summary>
            <para>
            <para>The hour of day to use for time alignment during aggregation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.EncryptionConfig_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.MonitorConfig_MonitorName">
            <summary>
            <para>
            <para>The name of the monitor resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.TimeAlignmentBoundary_Month">
            <summary>
            <para>
            <para>The month to use for time alignment during aggregation. The month must be in uppercase.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.OptimizationMetric">
            <summary>
            <para>
            <para>The accuracy metric used to optimize the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.PredictorName">
            <summary>
            <para>
            <para>A unique name for the predictor</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.ReferencePredictorArn">
            <summary>
            <para>
            <para>The ARN of the predictor to retrain or upgrade. This parameter is only used when retraining
            or upgrading a predictor. When creating a new predictor, do not specify a value for
            this parameter.</para><para>When upgrading or retraining a predictor, only specify values for the <code>ReferencePredictorArn</code>
            and <code>PredictorName</code>. The value for <code>PredictorName</code> must be a
            unique predictor name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.EncryptionConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata to help you categorize and organize your predictors. Each tag consists
            of a key and an optional value, both of which you define. Tag keys and values are
            case sensitive.</para><para>The following restrictions apply to tags:</para><ul><li><para>For each resource, each tag key must be unique and each tag key must have one value.</para></li><li><para>Maximum number of tags per resource: 50.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Accepted characters: all letters and numbers, spaces representable in UTF-8, and +
            - = . _ : / @. If your tagging schema is used across other services and resources,
            the character restrictions of those services also apply. </para></li><li><para>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code>
            or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, Forecast considers it to be a user tag and will
            count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit. You cannot edit or delete tag keys
            with this prefix.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PredictorArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateAutoPredictorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateAutoPredictorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorName parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCAutoPredictorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet">
            <summary>
            Creates an Amazon Forecast dataset. The information about the dataset that you provide
            helps Forecast understand how to consume the data for model training. This includes
            the following:
            
             <ul><li><para><i><code>DataFrequency</code></i> - How frequently your historical time-series
            data is collected.
            </para></li><li><para><i><code>Domain</code></i> and <i><code>DatasetType</code></i> - Each dataset
            has an associated dataset domain and a type within the domain. Amazon Forecast provides
            a list of predefined domains and types within each domain. For each unique dataset
            domain and type within the domain, Amazon Forecast requires your data to include a
            minimum set of predefined fields.
            </para></li><li><para><i><code>Schema</code></i> - A schema specifies the fields in the dataset, including
            the field name and data type.
            </para></li></ul><para>
            After creating a dataset, you import your training data into it and add the dataset
            to a dataset group. You use the dataset group to create a predictor. For more information,
            see <a href="https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html">Importing
            datasets</a>.
            </para><para>
            To get a list of all your datasets, use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasets.html">ListDatasets</a>
            operation.
            </para><para>
            For example Forecast datasets, see the <a href="https://github.com/aws-samples/amazon-forecast-samples">Amazon
            Forecast Sample GitHub repository</a>.
            </para><note><para>
            The <code>Status</code> of a dataset must be <code>ACTIVE</code> before you can import
            training data. Use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html">DescribeDataset</a>
            operation to get the status.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.Schema_Attribute">
            <summary>
            <para>
            <para>An array of attributes specifying the name and type of each field in a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.DataFrequency">
            <summary>
            <para>
            <para>The frequency of data collection. This parameter is required for RELATED_TIME_SERIES
            datasets.</para><para>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes),
            15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For
            example, "D" indicates every day and "15min" indicates every 15 minutes.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.DatasetName">
            <summary>
            <para>
            <para>A name for the dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.DatasetType">
            <summary>
            <para>
            <para>The dataset type. Valid values depend on the chosen <code>Domain</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.Domain">
            <summary>
            <para>
            <para>The domain associated with the dataset. When you add a dataset to a dataset group,
            this value and the value specified for the <code>Domain</code> parameter of the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html">CreateDatasetGroup</a>
            operation must match.</para><para>The <code>Domain</code> and <code>DatasetType</code> that you choose determine the
            fields that must be present in the training data that you import to the dataset. For
            example, if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code>
            as the <code>DatasetType</code>, Amazon Forecast requires <code>item_id</code>, <code>timestamp</code>,
            and <code>demand</code> fields to be present in your data. For more information, see
            <a href="https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html">Importing
            datasets</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.EncryptionConfig_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.EncryptionConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the dataset to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateDatasetResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateDatasetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet">
            <summary>
            Creates a dataset group, which holds a collection of related datasets. You can add
            datasets to the dataset group when you create the dataset group, or later by using
            the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a>
            operation.
            
             
            <para>
            After creating a dataset group and adding datasets, you use the dataset group when
            you create a predictor. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html">Dataset
            groups</a>.
            </para><para>
            To get a list of all your datasets groups, use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetGroups.html">ListDatasetGroups</a>
            operation.
            </para><note><para>
            The <code>Status</code> of a dataset group must be <code>ACTIVE</code> before you
            can use the dataset group to create a predictor. To get the status, use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html">DescribeDatasetGroup</a>
            operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.DatasetArn">
            <summary>
            <para>
            <para>An array of Amazon Resource Names (ARNs) of the datasets that you want to include
            in the dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.DatasetGroupName">
            <summary>
            <para>
            <para>A name for the dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.Domain">
            <summary>
            <para>
            <para>The domain associated with the dataset group. When you add a dataset to a dataset
            group, this value and the value specified for the <code>Domain</code> parameter of
            the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html">CreateDataset</a>
            operation must match.</para><para>The <code>Domain</code> and <code>DatasetType</code> that you choose determine the
            fields that must be present in training data that you import to a dataset. For example,
            if you choose the <code>RETAIL</code> domain and <code>TARGET_TIME_SERIES</code> as
            the <code>DatasetType</code>, Amazon Forecast requires that <code>item_id</code>,
            <code>timestamp</code>, and <code>demand</code> fields are present in your data. For
            more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/howitworks-datasets-groups.html">Dataset
            groups</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the dataset group to help you categorize and
            organize them. Each tag consists of a key and an optional value, both of which you
            define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetGroupArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateDatasetGroupResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateDatasetGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet">
            <summary>
            Imports your training data to an Amazon Forecast dataset. You provide the location
            of your training data in an Amazon Simple Storage Service (Amazon S3) bucket and the
            Amazon Resource Name (ARN) of the dataset that you want to import the data to.
            
             
            <para>
            You must specify a <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DataSource.html">DataSource</a>
            object that includes an AWS Identity and Access Management (IAM) role that Amazon
            Forecast can assume to access the data, as Amazon Forecast makes a copy of your data
            and processes it in an internal AWS system. For more information, see <a href="https://docs.aws.amazon.com/forecast/latest/dg/aws-forecast-iam-roles.html">Set
            up permissions</a>.
            </para><para>
            The training data must be in CSV or Parquet format. The delimiter must be a comma
            (,).
            </para><para>
            You can specify the path to a specific file, the S3 bucket, or to a folder in the
            S3 bucket. For the latter two cases, Amazon Forecast imports all files up to the limit
            of 10,000 files.
            </para><para>
            Because dataset imports are not aggregated, your most recent dataset import is the
            one that is used when training a predictor or generating a forecast. Make sure that
            your most recent dataset import contains all of the data you want to model off of,
            and not just the new data collected since the previous import.
            </para><para>
            To get a list of all your dataset import jobs, filtered by specified criteria, use
            the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_ListDatasetImportJobs.html">ListDatasetImportJobs</a>
            operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.DatasetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Forecast dataset that you want to import
            data to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.DatasetImportJobName">
            <summary>
            <para>
            <para>The name for the dataset import job. We recommend including the current timestamp
            in the name, for example, <code>20190721DatasetImport</code>. This can help you avoid
            getting a <code>ResourceAlreadyExistsException</code> exception.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.Format">
            <summary>
            <para>
            <para>The format of the imported data, CSV or PARQUET. The default value is CSV.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.GeolocationFormat">
            <summary>
            <para>
            <para>The format of the geolocation attribute. The geolocation attribute can be formatted
            in one of two ways:</para><ul><li><para><code>LAT_LONG</code> - the latitude and longitude in decimal format (Example: 47.61_-122.33).</para></li><li><para><code>CC_POSTALCODE</code> (US Only) - the country code (US), followed by the 5-digit
            ZIP code (Example: US_98121).</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the dataset import job to help you categorize
            and organize them. Each tag consists of a key and an optional value, both of which
            you define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.TimestampFormat">
            <summary>
            <para>
            <para>The format of timestamps in the dataset. The format that you specify depends on the
            <code>DataFrequency</code> specified when the dataset was created. The following formats
            are supported</para><ul><li><para>"yyyy-MM-dd"</para><para>For the following data frequencies: Y, M, W, and D</para></li><li><para>"yyyy-MM-dd HH:mm:ss"</para><para>For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for:
            Y, M, W, and D</para></li></ul><para>If the format isn't specified, Amazon Forecast expects the format to be "yyyy-MM-dd
            HH:mm:ss".</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.TimeZone">
            <summary>
            <para>
            <para>A single time zone for every item in your dataset. This option is ideal for datasets
            with all timestamps within a single time zone, or if all timestamps are normalized
            to a single time zone. </para><para>Refer to the <a href="http://joda-time.sourceforge.net/timezones.html">Joda-Time API</a>
            for a complete list of valid time zone names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.UseGeolocationForTimeZone">
            <summary>
            <para>
            <para>Automatically derive time zone information from the geolocation attribute. This option
            is ideal for datasets that contain timestamps in multiple time zones and those timestamps
            are expressed in local time.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DatasetImportJobArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateDatasetImportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateDatasetImportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCDatasetImportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet">
            <summary>
            <note><para>
            Explainability is only available for Forecasts and Predictors generated from an AutoPredictor
            (<a>CreateAutoPredictor</a>)
            </para></note><para>
            Creates an Amazon Forecast Explainability.
            </para><para>
            Explainability helps you better understand how the attributes in your datasets impact
            forecast. Amazon Forecast uses a metric called Impact scores to quantify the relative
            impact of each attribute and determine whether they increase or decrease forecast
            values.
            </para><para>
            To enable Forecast Explainability, your predictor must include at least one of the
            following: related time series, item metadata, or additional datasets like Holidays
            and the Weather Index.
            </para><para>
            CreateExplainability accepts either a Predictor ARN or Forecast ARN. To receive aggregated
            Impact scores for all time series and time points in your datasets, provide a Predictor
            ARN. To receive Impact scores for specific time series and time points, provide a
            Forecast ARN.
            </para><para><b>CreateExplainability with a Predictor ARN</b></para><note><para>
            You can only have one Explainability resource per predictor. If you already enabled
            <code>ExplainPredictor</code> in <a>CreateAutoPredictor</a>, that predictor already
            has an Explainability resource.
            </para></note><para>
            The following parameters are required when providing a Predictor ARN:
            </para><ul><li><para><code>ExplainabilityName</code> - A unique name for the Explainability.
            </para></li><li><para><code>ResourceArn</code> - The Arn of the predictor.
            </para></li><li><para><code>TimePointGranularity</code> - Must be set to “ALL”.
            </para></li><li><para><code>TimeSeriesGranularity</code> - Must be set to “ALL”.
            </para></li></ul><para>
            Do not specify a value for the following parameters:
            </para><ul><li><para><code>DataSource</code> - Only valid when TimeSeriesGranularity is “SPECIFIC”.
            </para></li><li><para><code>Schema</code> - Only valid when TimeSeriesGranularity is “SPECIFIC”.
            </para></li><li><para><code>StartDateTime</code> - Only valid when TimePointGranularity is “SPECIFIC”.
            </para></li><li><para><code>EndDateTime</code> - Only valid when TimePointGranularity is “SPECIFIC”.
            </para></li></ul><para><b>CreateExplainability with a Forecast ARN</b></para><note><para>
            You can specify a maximum of 50 time series and 500 time points.
            </para></note><para>
            The following parameters are required when providing a Predictor ARN:
            </para><ul><li><para><code>ExplainabilityName</code> - A unique name for the Explainability.
            </para></li><li><para><code>ResourceArn</code> - The Arn of the forecast.
            </para></li><li><para><code>TimePointGranularity</code> - Either “ALL” or “SPECIFIC”.
            </para></li><li><para><code>TimeSeriesGranularity</code> - Either “ALL” or “SPECIFIC”.
            </para></li></ul><para>
            If you set TimeSeriesGranularity to “SPECIFIC”, you must also provide the following:
            </para><ul><li><para><code>DataSource</code> - The S3 location of the CSV file specifying your time series.
            </para></li><li><para><code>Schema</code> - The Schema defines the attributes and attribute types listed
            in the Data Source.
            </para></li></ul><para>
            If you set TimePointGranularity to “SPECIFIC”, you must also provide the following:
            </para><ul><li><para><code>StartDateTime</code> - The first timestamp in the range of time points.
            </para></li><li><para><code>EndDateTime</code> - The last timestamp in the range of time points.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.Schema_Attribute">
            <summary>
            <para>
            <para>An array of attributes specifying the name and type of each field in a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.EnableVisualization">
            <summary>
            <para>
            <para>Create an Explainability visualization that is viewable within the AWS console.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.EndDateTime">
            <summary>
            <para>
            <para>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>, define the last
            time point for the Explainability.</para><para>Use the following timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.ExplainabilityName">
            <summary>
            <para>
            <para>A unique name for the Explainability.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Predictor or Forecast used to create the Explainability.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.StartDateTime">
            <summary>
            <para>
            <para>If <code>TimePointGranularity</code> is set to <code>SPECIFIC</code>, define the first
            point for the Explainability.</para><para>Use the following timestamp format: yyyy-MM-ddTHH:mm:ss (example: 2015-01-01T20:00:00)</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata to help you categorize and organize your resources. Each tag consists
            of a key and an optional value, both of which you define. Tag keys and values are
            case sensitive.</para><para>The following restrictions apply to tags:</para><ul><li><para>For each resource, each tag key must be unique and each tag key must have one value.</para></li><li><para>Maximum number of tags per resource: 50.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Accepted characters: all letters and numbers, spaces representable in UTF-8, and +
            - = . _ : / @. If your tagging schema is used across other services and resources,
            the character restrictions of those services also apply. </para></li><li><para>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code>
            or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, Forecast considers it to be a user tag and will
            count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit. You cannot edit or delete tag keys
            with this prefix.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.ExplainabilityConfig_TimePointGranularity">
            <summary>
            <para>
            <para>To create an Explainability for all time points in your forecast horizon, use <code>ALL</code>.
            To create an Explainability for specific time points in your forecast horizon, use
            <code>SPECIFIC</code>.</para><para>Specify time points with the <code>StartDateTime</code> and <code>EndDateTime</code>
            parameters within the <a>CreateExplainability</a> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.ExplainabilityConfig_TimeSeriesGranularity">
            <summary>
            <para>
            <para>To create an Explainability for all time series in your datasets, use <code>ALL</code>.
            To create an Explainability for specific time series in your datasets, use <code>SPECIFIC</code>.</para><para>Specify time series by uploading a CSV or Parquet file to an Amazon S3 bucket and
            set the location within the <a>DataDestination</a> data type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExplainabilityArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateExplainabilityResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateExplainabilityResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityName parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet">
            <summary>
            Exports an Explainability resource created by the <a>CreateExplainability</a> operation.
            Exported files are exported to an Amazon Simple Storage Service (Amazon S3) bucket.
            
             
            <para>
            You must specify a <a>DataDestination</a> object that includes an Amazon S3 bucket
            and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume
            to access the Amazon S3 bucket. For more information, see <a>aws-forecast-iam-roles</a>.
            </para><note><para>
            The <code>Status</code> of the export job must be <code>ACTIVE</code> before you can
            access the export in your Amazon S3 bucket. To get the status, use the <a>DescribeExplainabilityExport</a>
            operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.ExplainabilityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Explainability to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.ExplainabilityExportName">
            <summary>
            <para>
            <para>A unique name for the Explainability export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.Format">
            <summary>
            <para>
            <para>The format of the exported data, CSV or PARQUET.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata to help you categorize and organize your resources. Each tag consists
            of a key and an optional value, both of which you define. Tag keys and values are
            case sensitive.</para><para>The following restrictions apply to tags:</para><ul><li><para>For each resource, each tag key must be unique and each tag key must have one value.</para></li><li><para>Maximum number of tags per resource: 50.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Accepted characters: all letters and numbers, spaces representable in UTF-8, and +
            - = . _ : / @. If your tagging schema is used across other services and resources,
            the character restrictions of those services also apply. </para></li><li><para>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code>
            or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, Forecast considers it to be a user tag and will
            count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit. You cannot edit or delete tag keys
            with this prefix.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExplainabilityExportArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateExplainabilityExportResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateExplainabilityExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCExplainabilityExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet">
            <summary>
            Creates a forecast for each item in the <code>TARGET_TIME_SERIES</code> dataset that
            was used to train the predictor. This is known as inference. To retrieve the forecast
            for a single item at low latency, use the operation. To export the complete forecast
            into your Amazon Simple Storage Service (Amazon S3) bucket, use the <a>CreateForecastExportJob</a>
            operation.
            
             
            <para>
            The range of the forecast is determined by the <code>ForecastHorizon</code> value,
            which you specify in the <a>CreatePredictor</a> request. When you query a forecast,
            you can request a specific date range within the forecast.
            </para><para>
            To get a list of all your forecasts, use the <a>ListForecasts</a> operation.
            </para><note><para>
            The forecasts generated by Amazon Forecast are in the same time zone as the dataset
            that was used to create the predictor.
            </para></note><para>
            For more information, see <a>howitworks-forecast</a>.
            </para><note><para>
            The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can
            query or export the forecast. Use the <a>DescribeForecast</a> operation to get the
            status.
            </para></note><para>
            By default, a forecast includes predictions for every item (<code>item_id</code>)
            in the dataset group that was used to train the predictor. However, you can use the
            <code>TimeSeriesSelector</code> object to generate a forecast on a subset of time
            series. Forecast creation is skipped for any time series that you specify that are
            not in the input dataset. The forecast export file will not contain these time series
            or their forecasted values.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.Schema_Attribute">
            <summary>
            <para>
            <para>An array of attributes specifying the name and type of each field in a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.ForecastName">
            <summary>
            <para>
            <para>A name for the forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.ForecastType">
            <summary>
            <para>
            <para>The quantiles at which probabilistic forecasts are generated. <b>You can currently
            specify up to 5 quantiles per forecast</b>. Accepted values include <code>0.01 to
            0.99</code> (increments of .01 only) and <code>mean</code>. The mean forecast is different
            from the median (0.50) when the distribution is not symmetric (for example, Beta and
            Negative Binomial). </para><para>The default quantiles are the quantiles you specified during predictor creation. If
            you didn't specify quantiles, the default values are <code>["0.1", "0.5", "0.9"]</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.TimeSeriesIdentifiers_Format">
            <summary>
            <para>
            <para>The format of the data, either CSV or PARQUET.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor to use to generate the forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the forecast to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ForecastArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateForecastResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateForecastResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet">
            <summary>
            Exports a forecast created by the <a>CreateForecast</a> operation to your Amazon Simple
            Storage Service (Amazon S3) bucket. The forecast file name will match the following
            conventions:
            
             
            <para>
            &lt;ForecastExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;
            </para><para>
            where the &lt;ExportTimestamp&gt; component is in Java SimpleDateFormat (yyyy-MM-ddTHH-mm-ssZ).
            </para><para>
            You must specify a <a>DataDestination</a> object that includes an AWS Identity and
            Access Management (IAM) role that Amazon Forecast can assume to access the Amazon
            S3 bucket. For more information, see <a>aws-forecast-iam-roles</a>.
            </para><para>
            For more information, see <a>howitworks-forecast</a>.
            </para><para>
            To get a list of all your forecast export jobs, use the <a>ListForecastExportJobs</a>
            operation.
            </para><note><para>
            The <code>Status</code> of the forecast export job must be <code>ACTIVE</code> before
            you can access the forecast in your Amazon S3 bucket. To get the status, use the <a>DescribeForecastExportJob</a>
            operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.ForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the forecast that you want to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.ForecastExportJobName">
            <summary>
            <para>
            <para>The name for the forecast export job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.Format">
            <summary>
            <para>
            <para>The format of the exported data, CSV or PARQUET. The default value is CSV.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the forecast export job to help you categorize
            and organize them. Each tag consists of a key and an optional value, both of which
            you define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ForecastExportJobArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateForecastExportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateForecastExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ForecastArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ForecastArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCForecastExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet">
            <summary>
            Creates a predictor monitor resource for an existing auto predictor. Predictor monitoring
            allows you to see how your predictor's performance changes over time. For more information,
            see <a href="https://docs.aws.amazon.com/forecast/latest/dg/predictor-monitoring.html">Predictor
            Monitoring</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.MonitorName">
            <summary>
            <para>
            <para>The name of the monitor resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor to monitor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.Tag">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
            to apply to the monitor resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MonitorArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateMonitorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateMonitorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MonitorName parameter.
            The -PassThru parameter is deprecated, use -Select '^MonitorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCMonitorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet">
            <summary>
            <note><para>
             This operation creates a legacy predictor that does not include all the predictor
            functionalities provided by Amazon Forecast. To create a predictor that is compatible
            with all aspects of Forecast, use <a>CreateAutoPredictor</a>.
            </para></note><para>
            Creates an Amazon Forecast predictor.
            </para><para>
            In the request, provide a dataset group and either specify an algorithm or let Amazon
            Forecast choose an algorithm for you using AutoML. If you specify an algorithm, you
            also can override algorithm-specific hyperparameters.
            </para><para>
            Amazon Forecast uses the algorithm to train a predictor using the latest version of
            the datasets in the specified dataset group. You can then generate a forecast using
            the <a>CreateForecast</a> operation.
            </para><para>
             To see the evaluation metrics, use the <a>GetAccuracyMetrics</a> operation. 
            </para><para>
            You can specify a featurization configuration to fill and aggregate the data fields
            in the <code>TARGET_TIME_SERIES</code> dataset to improve model training. For more
            information, see <a>FeaturizationConfig</a>.
            </para><para>
            For RELATED_TIME_SERIES datasets, <code>CreatePredictor</code> verifies that the <code>DataFrequency</code>
            specified when the dataset was created matches the <code>ForecastFrequency</code>.
            TARGET_TIME_SERIES datasets don't have this restriction. Amazon Forecast also verifies
            the delimiter and timestamp format. For more information, see <a>howitworks-datasets-groups</a>.
            </para><para>
            By default, predictors are trained and evaluated at the 0.1 (P10), 0.5 (P50), and
            0.9 (P90) quantiles. You can choose custom forecast types to train and evaluate your
            predictor by setting the <code>ForecastTypes</code>. 
            </para><para><b>AutoML</b></para><para>
            If you want Amazon Forecast to evaluate each algorithm and choose the one that minimizes
            the <code>objective function</code>, set <code>PerformAutoML</code> to <code>true</code>.
            The <code>objective function</code> is defined as the mean of the weighted losses
            over the forecast types. By default, these are the p10, p50, and p90 quantile losses.
            For more information, see <a>EvaluationResult</a>.
            </para><para>
            When AutoML is enabled, the following properties are disallowed:
            </para><ul><li><para><code>AlgorithmArn</code></para></li><li><para><code>HPOConfig</code></para></li><li><para><code>PerformHPO</code></para></li><li><para><code>TrainingParameters</code></para></li></ul><para>
            To get a list of all of your predictors, use the <a>ListPredictors</a> operation.
            </para><note><para>
            Before you can use the predictor to create a forecast, the <code>Status</code> of
            the predictor must be <code>ACTIVE</code>, signifying that training has completed.
            To get the status, use the <a>DescribePredictor</a> operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.AlgorithmArn">
            <summary>
            <para>
            Amazon.ForecastService.Model.CreatePredictorRequest.AlgorithmArn
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.AutoMLOverrideStrategy">
            <summary>
            <para>
            <note><para> The <code>LatencyOptimized</code> AutoML override strategy is only available in private
            beta. Contact AWS Support or your account manager to learn more about access privileges.
            </para></note><para>Used to overide the default AutoML strategy, which is to optimize predictor accuracy.
            To apply an AutoML strategy that minimizes training time, use <code>LatencyOptimized</code>.</para><para>This parameter is only valid for predictors trained using AutoML.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.EvaluationParameters_BackTestWindowOffset">
            <summary>
            <para>
            <para>The point from the end of the dataset where you want to split the data for model training
            and testing (evaluation). Specify the value as the number of data points. The default
            is the value of the forecast horizon. <code>BackTestWindowOffset</code> can be used
            to mimic a past virtual forecast start date. This value must be greater than or equal
            to the forecast horizon and less than half of the TARGET_TIME_SERIES dataset length.</para><para><code>ForecastHorizon</code> &lt;= <code>BackTestWindowOffset</code> &lt; 1/2 * TARGET_TIME_SERIES
            dataset length</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.ParameterRanges_CategoricalParameterRange">
            <summary>
            <para>
            <para>Specifies the tunable range for each categorical hyperparameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.ParameterRanges_ContinuousParameterRange">
            <summary>
            <para>
            <para>Specifies the tunable range for each continuous hyperparameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.InputDataConfig_DatasetGroupArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.FeaturizationConfig_Featurization">
            <summary>
            <para>
            <para>An array of featurization (transformation) information for the fields of a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.FeaturizationConfig_ForecastDimension">
            <summary>
            <para>
            <para>An array of dimension (field) names that specify how to group the generated forecast.</para><para>For example, suppose that you are generating a forecast for item sales across all
            of your stores, and your dataset contains a <code>store_id</code> field. If you want
            the sales forecast for each item by store, you would specify <code>store_id</code>
            as the dimension.</para><para>All forecast dimensions specified in the <code>TARGET_TIME_SERIES</code> dataset don't
            need to be specified in the <code>CreatePredictor</code> request. All forecast dimensions
            specified in the <code>RELATED_TIME_SERIES</code> dataset must be specified in the
            <code>CreatePredictor</code> request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.FeaturizationConfig_ForecastFrequency">
            <summary>
            <para>
            <para>The frequency of predictions in a forecast.</para><para>Valid intervals are Y (Year), M (Month), W (Week), D (Day), H (Hour), 30min (30 minutes),
            15min (15 minutes), 10min (10 minutes), 5min (5 minutes), and 1min (1 minute). For
            example, "Y" indicates every year and "5min" indicates every five minutes.</para><para>The frequency must be greater than or equal to the TARGET_TIME_SERIES dataset frequency.</para><para>When a RELATED_TIME_SERIES dataset is provided, the frequency must be equal to the
            RELATED_TIME_SERIES dataset frequency.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.ForecastHorizon">
            <summary>
            <para>
            <para>Specifies the number of time-steps that the model is trained to predict. The forecast
            horizon is also called the prediction length.</para><para>For example, if you configure a dataset for daily data collection (using the <code>DataFrequency</code>
            parameter of the <a>CreateDataset</a> operation) and set the forecast horizon to 10,
            the model returns predictions for 10 days.</para><para>The maximum forecast horizon is the lesser of 500 time-steps or 1/3 of the TARGET_TIME_SERIES
            dataset length.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.ForecastType">
            <summary>
            <para>
            <para>Specifies the forecast types used to train a predictor. You can specify up to five
            forecast types. Forecast types can be quantiles from 0.01 to 0.99, by increments of
            0.01 or higher. You can also specify the mean forecast with <code>mean</code>. </para><para>The default value is <code>["0.10", "0.50", "0.9"]</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.ParameterRanges_IntegerParameterRange">
            <summary>
            <para>
            <para>Specifies the tunable range for each integer hyperparameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.EncryptionConfig_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the KMS key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.EvaluationParameters_NumberOfBacktestWindow">
            <summary>
            <para>
            <para>The number of times to split the input data. The default is 1. Valid values are 1
            through 5.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.OptimizationMetric">
            <summary>
            <para>
            <para>The accuracy metric used to optimize the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.PerformAutoML">
            <summary>
            <para>
            <para>Whether to perform AutoML. When Amazon Forecast performs AutoML, it evaluates the
            algorithms it provides and chooses the best algorithm and configuration for your training
            dataset.</para><para>The default value is <code>false</code>. In this case, you are required to specify
            an algorithm.</para><para>Set <code>PerformAutoML</code> to <code>true</code> to have Amazon Forecast perform
            AutoML. This is a good option if you aren't sure which algorithm is suitable for your
            training data. In this case, <code>PerformHPO</code> must be false.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.PerformHPO">
            <summary>
            <para>
            <para>Whether to perform hyperparameter optimization (HPO). HPO finds optimal hyperparameter
            values for your training data. The process of performing HPO is known as running a
            hyperparameter tuning job.</para><para>The default value is <code>false</code>. In this case, Amazon Forecast uses default
            hyperparameter values from the chosen algorithm.</para><para>To override the default values, set <code>PerformHPO</code> to <code>true</code> and,
            optionally, supply the <a>HyperParameterTuningJobConfig</a> object. The tuning job
            specifies a metric to optimize, which hyperparameters participate in tuning, and the
            valid range for each tunable hyperparameter. In this case, you are required to specify
            an algorithm and <code>PerformAutoML</code> must be false.</para><para>The following algorithms support HPO:</para><ul><li><para>DeepAR+</para></li><li><para>CNN-QR</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.PredictorName">
            <summary>
            <para>
            <para>A name for the predictor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.EncryptionConfig_RoleArn">
            <summary>
            <para>
            <para>The ARN of the IAM role that Amazon Forecast can assume to access the AWS KMS key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.InputDataConfig_SupplementaryFeature">
            <summary>
            <para>
            <para>An array of supplementary features. The only supported feature is a holiday calendar.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.Tag">
            <summary>
            <para>
            <para>The optional metadata that you apply to the predictor to help you categorize and organize
            them. Each tag consists of a key and an optional value, both of which you define.</para><para>The following basic restrictions apply to tags:</para><ul><li><para>Maximum number of tags per resource - 50.</para></li><li><para>For each resource, each tag key must be unique, and each tag key can have only one
            value.</para></li><li><para>Maximum key length - 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length - 256 Unicode characters in UTF-8.</para></li><li><para>If your tagging schema is used across multiple services and resources, remember that
            other services may have restrictions on allowed characters. Generally allowed characters
            are: letters, numbers, and spaces representable in UTF-8, and the following characters:
            + - = . _ : / @.</para></li><li><para>Tag keys and values are case sensitive.</para></li><li><para>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination
            of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete
            tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, then Forecast considers it to be a user tag and
            will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.TrainingParameter">
            <summary>
            <para>
            <para>The hyperparameters to override for model training. The hyperparameters that you can
            override are listed in the individual algorithms. For the list of supported algorithms,
            see <a>aws-forecast-choosing-recipes</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PredictorArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreatePredictorResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreatePredictorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorName parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet">
            <summary>
            Exports backtest forecasts and accuracy metrics generated by the <a>CreateAutoPredictor</a>
            or <a>CreatePredictor</a> operations. Two folders containing CSV or Parquet files
            are exported to your specified S3 bucket.
            
             
            <para>
             The export file names will match the following conventions:
            </para><para><code>&lt;ExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;.csv</code></para><para>
            The &lt;ExportTimestamp&gt; component is in Java SimpleDate format (yyyy-MM-ddTHH-mm-ssZ).
            </para><para>
            You must specify a <a>DataDestination</a> object that includes an Amazon S3 bucket
            and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume
            to access the Amazon S3 bucket. For more information, see <a>aws-forecast-iam-roles</a>.
            </para><note><para>
            The <code>Status</code> of the export job must be <code>ACTIVE</code> before you can
            access the export in your Amazon S3 bucket. To get the status, use the <a>DescribePredictorBacktestExportJob</a>
            operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.Format">
            <summary>
            <para>
            <para>The format of the exported data, CSV or PARQUET. The default value is CSV.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor that you want to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.PredictorBacktestExportJobName">
            <summary>
            <para>
            <para>The name for the backtest export job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.Tag">
            <summary>
            <para>
            <para>Optional metadata to help you categorize and organize your backtests. Each tag consists
            of a key and an optional value, both of which you define. Tag keys and values are
            case sensitive.</para><para>The following restrictions apply to tags:</para><ul><li><para>For each resource, each tag key must be unique and each tag key must have one value.</para></li><li><para>Maximum number of tags per resource: 50.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Accepted characters: all letters and numbers, spaces representable in UTF-8, and +
            - = . _ : / @. If your tagging schema is used across other services and resources,
            the character restrictions of those services also apply. </para></li><li><para>Key prefixes cannot include any upper or lowercase combination of <code>aws:</code>
            or <code>AWS:</code>. Values can have this prefix. If a tag value has <code>aws</code>
            as its prefix but the key does not, Forecast considers it to be a user tag and will
            count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code>
            do not count against your tags per resource limit. You cannot edit or delete tag keys
            with this prefix.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'PredictorBacktestExportJobArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreatePredictorBacktestExportJobResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreatePredictorBacktestExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCPredictorBacktestExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet">
            <summary>
            What-if analysis is a scenario modeling technique where you make a hypothetical change
            to a time series and compare the forecasts generated by these changes against the
            baseline, unchanged time series. It is important to remember that the purpose of a
            what-if analysis is to understand how a forecast can change given different modifications
            to the baseline time series.
            
             
            <para>
            For example, imagine you are a clothing retailer who is considering an end of season
            sale to clear space for new styles. After creating a baseline forecast, you can use
            a what-if analysis to investigate how different sales tactics might affect your goals.
            You could create a scenario where everything is given a 25% markdown and another where
            everything is given a fixed dollar markdown. You can create a scenario where the sale
            lasts for 1 week and another where the sale lasts for 1 month. Your what-if analysis
            enables you to compare many different scenarios against each other.
            </para><para>
            Note that a what-if analysis is meant to display what the forecasting model has learned
            and how it will behave in the scenarios that you are evaluating. Do not blindly use
            the results of the what-if analysis to make business decisions. For instance, forecasts
            might not be accurate for novel scenarios where there is no reference available to
            determine whether a forecast is good.
            </para><para>
            The <a>TimeSeriesSelector</a> object defines the items that you want in the what-if
            analysis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.Schema_Attribute">
            <summary>
            <para>
            <para>An array of attributes specifying the name and type of each field in a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.ForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the baseline forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.TimeSeriesIdentifiers_Format">
            <summary>
            <para>
            <para>The format of the data, either CSV or PARQUET.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.Tag">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
            to apply to the what if forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.WhatIfAnalysisName">
            <summary>
            <para>
            <para>The name of the what-if analysis. Each name must be unique.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfAnalysisArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateWhatIfAnalysisResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateWhatIfAnalysisResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfAnalysisName parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfAnalysisName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet">
            <summary>
            A what-if forecast is a forecast that is created from a modified version of the baseline
            forecast. Each what-if forecast incorporates either a replacement dataset or a set
            of transformations to the original dataset.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.Schema_Attribute">
            <summary>
            <para>
            <para>An array of attributes specifying the name and type of each field in a dataset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.TimeSeriesReplacementsDataSource_Format">
            <summary>
            <para>
            <para>The format of the replacement data, CSV or PARQUET.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.Tag">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
            to apply to the what if forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.TimeSeriesTransformation">
            <summary>
            <para>
            <para>The transformations that are applied to the baseline time series. Each transformation
            contains an action and a set of conditions. An action is applied only when all conditions
            are met. If no conditions are provided, the action is applied to all items.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.TimeSeriesReplacementsDataSource_TimestampFormat">
            <summary>
            <para>
            <para>The timestamp format of the replacement data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.WhatIfAnalysisArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.WhatIfForecastName">
            <summary>
            <para>
            <para>The name of the what-if forecast. Names must be unique within each what-if analysis.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfForecastArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateWhatIfForecastResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateWhatIfForecastResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastName parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet">
            <summary>
            Exports a forecast created by the <a>CreateWhatIfForecast</a> operation to your Amazon
            Simple Storage Service (Amazon S3) bucket. The forecast file name will match the following
            conventions:
            
             
            <para><code>≈&lt;ForecastExportJobName&gt;_&lt;ExportTimestamp&gt;_&lt;PartNumber&gt;</code></para><para>
            The &lt;ExportTimestamp&gt; component is in Java SimpleDateFormat (yyyy-MM-ddTHH-mm-ssZ).
            </para><para>
            You must specify a <a>DataDestination</a> object that includes an AWS Identity and
            Access Management (IAM) role that Amazon Forecast can assume to access the Amazon
            S3 bucket. For more information, see <a>aws-forecast-iam-roles</a>.
            </para><para>
            For more information, see <a>howitworks-forecast</a>.
            </para><para>
            To get a list of all your what-if forecast export jobs, use the <a>ListWhatIfForecastExports</a>
            operation.
            </para><note><para>
            The <code>Status</code> of the forecast export job must be <code>ACTIVE</code> before
            you can access the forecast in your Amazon S3 bucket. To get the status, use the <a>DescribeWhatIfForecastExport</a>
            operation.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.Format">
            <summary>
            <para>
            <para>The format of the exported data, CSV or PARQUET.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.S3Config_KMSKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.S3Config_Path">
            <summary>
            <para>
            <para>The path to an Amazon Simple Storage Service (Amazon S3) bucket or file(s) in an Amazon
            S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.S3Config_RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Forecast
            can assume to access the Amazon S3 bucket or files. If you provide a value for the
            <code>KMSKeyArn</code> key, the role must allow access to the key.</para><para>Passing a role across AWS accounts is not allowed. If you pass a role that isn't in
            your account, you get an <code>InvalidInputException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.Tag">
            <summary>
            <para>
            <para>A list of <a href="https://docs.aws.amazon.com/forecast/latest/dg/tagging-forecast-resources.html">tags</a>
            to apply to the what if forecast.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.WhatIfForecastArn">
            <summary>
            <para>
            <para>The list of what-if forecast Amazon Resource Names (ARNs) to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.WhatIfForecastExportName">
            <summary>
            <para>
            <para>The name of the what-if forecast to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WhatIfForecastExportArn'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.CreateWhatIfForecastExportResponse).
            Specifying the name of a property of type Amazon.ForecastService.Model.CreateWhatIfForecastExportResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastExportName parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastExportName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.NewFRCWhatIfForecastExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetCmdlet">
            <summary>
            Deletes an Amazon Forecast dataset that was created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDataset.html">CreateDataset</a>
            operation. You can only delete datasets that have a status of <code>ACTIVE</code>
            or <code>CREATE_FAILED</code>. To get the status use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDataset.html">DescribeDataset</a>
            operation.
            
             <note><para>
            Forecast does not automatically update any dataset groups that contain the deleted
            dataset. In order to update the dataset group, use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_UpdateDatasetGroup.html">UpdateDatasetGroup</a>
            operation, omitting the deleted dataset's ARN.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetCmdlet.DatasetArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteDatasetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetGroupCmdlet">
            <summary>
            Deletes a dataset group created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetGroup.html">CreateDatasetGroup</a>
            operation. You can only delete dataset groups that have a status of <code>ACTIVE</code>,
            <code>CREATE_FAILED</code>, or <code>UPDATE_FAILED</code>. To get the status, use
            the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html">DescribeDatasetGroup</a>
            operation.
            
             
            <para>
            This operation deletes only the dataset group, not the datasets in the group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetGroupCmdlet.DatasetGroupArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteDatasetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetGroupArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetGroupArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetImportJobCmdlet">
            <summary>
            Deletes a dataset import job created using the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_CreateDatasetImportJob.html">CreateDatasetImportJob</a>
            operation. You can delete only dataset import jobs that have a status of <code>ACTIVE</code>
            or <code>CREATE_FAILED</code>. To get the status, use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetImportJob.html">DescribeDatasetImportJob</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetImportJobCmdlet.DatasetImportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the dataset import job to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetImportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteDatasetImportJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetImportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetImportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetImportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCDatasetImportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityCmdlet">
            <summary>
            Deletes an Explainability resource.
            
             
            <para>
            You can delete only predictor that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.
            To get the status, use the <a>DescribeExplainability</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityCmdlet.ExplainabilityArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Explainability resource to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteExplainabilityResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityExportCmdlet">
            <summary>
            Deletes an Explainability export.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityExportCmdlet.ExplainabilityExportArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Explainability export to delete. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteExplainabilityExportResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExplainabilityExportArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ExplainabilityExportArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCExplainabilityExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastCmdlet">
            <summary>
            Deletes a forecast created using the <a>CreateForecast</a> operation. You can delete
            only forecasts that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.
            To get the status, use the <a>DescribeForecast</a> operation.
            
             
            <para>
            You can't delete a forecast while it is being exported. After a forecast is deleted,
            you can no longer query the forecast.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastCmdlet.ForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the forecast to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteForecastResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ForecastArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ForecastArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastExportJobCmdlet">
            <summary>
            Deletes a forecast export job created using the <a>CreateForecastExportJob</a> operation.
            You can delete only export jobs that have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.
            To get the status, use the <a>DescribeForecastExportJob</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastExportJobCmdlet.ForecastExportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the forecast export job to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteForecastExportJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ForecastExportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ForecastExportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCForecastExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCMonitorCmdlet">
            <summary>
            Deletes a monitor resource. You can only delete a monitor resource with a status of
            <code>ACTIVE</code>, <code>ACTIVE_STOPPED</code>, <code>CREATE_FAILED</code>, or <code>CREATE_STOPPED</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCMonitorCmdlet.MonitorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the monitor resource to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCMonitorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteMonitorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCMonitorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MonitorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^MonitorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCMonitorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorCmdlet">
            <summary>
            Deletes a predictor created using the <a>DescribePredictor</a> or <a>CreatePredictor</a>
            operations. You can delete only predictor that have a status of <code>ACTIVE</code>
            or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribePredictor</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorCmdlet.PredictorArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeletePredictorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorBacktestExportJobCmdlet">
            <summary>
            Deletes a predictor backtest export job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorBacktestExportJobCmdlet.PredictorBacktestExportJobArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the predictor backtest export job to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorBacktestExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeletePredictorBacktestExportJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorBacktestExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PredictorBacktestExportJobArn parameter.
            The -PassThru parameter is deprecated, use -Select '^PredictorBacktestExportJobArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCPredictorBacktestExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet">
            <summary>
            Deletes the specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTreeCmdlet">
            <summary>
            Deletes an entire resource tree. This operation will delete the parent resource and
            its child resources.
            
             
            <para>
            Child resources are resources that were created from another resource. For example,
            when a forecast is generated from a predictor, the forecast is the child resource
            and the predictor is the parent resource.
            </para><para>
            Amazon Forecast resources possess the following parent-child resource hierarchies:
            </para><ul><li><para><b>Dataset</b>: dataset import jobs
            </para></li><li><para><b>Dataset Group</b>: predictors, predictor backtest export jobs, forecasts, forecast
            export jobs
            </para></li><li><para><b>Predictor</b>: predictor backtest export jobs, forecasts, forecast export jobs
            </para></li><li><para><b>Forecast</b>: forecast export jobs
            </para></li></ul><note><para><code>DeleteResourceTree</code> will only delete Amazon Forecast resources, and will
            not delete datasets or exported files stored in Amazon S3. 
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTreeCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the parent resource to delete. All child resources
            of the parent resource will also be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTreeCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteResourceTreeResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTreeCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCResourceTreeCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfAnalysisCmdlet">
            <summary>
            Deletes a what-if analysis created using the <a>CreateWhatIfAnalysis</a> operation.
            You can delete only what-if analyses that have a status of <code>ACTIVE</code> or
            <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeWhatIfAnalysis</a>
            operation. 
            
             
            <para>
            You can't delete a what-if analysis while any of its forecasts are being exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfAnalysisCmdlet.WhatIfAnalysisArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if analysis that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfAnalysisCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteWhatIfAnalysisResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfAnalysisCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfAnalysisArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfAnalysisArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfAnalysisCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastCmdlet">
            <summary>
            Deletes a what-if forecast created using the <a>CreateWhatIfForecast</a> operation.
            You can delete only what-if forecasts that have a status of <code>ACTIVE</code> or
            <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeWhatIfForecast</a>
            operation. 
            
             
            <para>
            You can't delete a what-if forecast while it is being exported. After a what-if forecast
            is deleted, you can no longer query the what-if analysis.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastCmdlet.WhatIfForecastArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if forecast that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteWhatIfForecastResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastExportCmdlet">
            <summary>
            Deletes a what-if forecast export created using the <a>CreateWhatIfForecastExport</a>
            operation. You can delete only what-if forecast exports that have a status of <code>ACTIVE</code>
            or <code>CREATE_FAILED</code>. To get the status, use the <a>DescribeWhatIfForecastExport</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastExportCmdlet.WhatIfForecastExportArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the what-if forecast export that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastExportCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.DeleteWhatIfForecastExportResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastExportCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WhatIfForecastExportArn parameter.
            The -PassThru parameter is deprecated, use -Select '^WhatIfForecastExportArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.RemoveFRCWhatIfForecastExportCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.ResumeFRCResourceCmdlet">
            <summary>
            Resumes a stopped monitor resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.ResumeFRCResourceCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the monitor resource to resume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.ResumeFRCResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.ResumeResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.ResumeFRCResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.ResumeFRCResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.StopFRCResourceCmdlet">
            <summary>
            Stops a resource.
            
             
            <para>
            The resource undergoes the following states: <code>CREATE_STOPPING</code> and <code>CREATE_STOPPED</code>.
            You cannot resume a resource once it has been stopped.
            </para><para>
            This operation can be applied to the following resources (and their corresponding
            child resources):
            </para><ul><li><para>
            Dataset Import Job
            </para></li><li><para>
            Predictor Job
            </para></li><li><para>
            Forecast Job
            </para></li><li><para>
            Forecast Export Job
            </para></li><li><para>
            Predictor Backtest Export Job
            </para></li><li><para>
            Explainability Job
            </para></li><li><para>
            Explainability Export Job
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.StopFRCResourceCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource to stop. The supported
            ARNs are <code>DatasetImportJobArn</code>, <code>PredictorArn</code>, <code>PredictorBacktestExportJobArn</code>,
            <code>ForecastArn</code>, <code>ForecastExportJobArn</code>, <code>ExplainabilityArn</code>,
            and <code>ExplainabilityExportArn</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.StopFRCResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.StopResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.StopFRCResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.StopFRCResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet">
            <summary>
            Replaces the datasets in a dataset group with the specified datasets.
            
             <note><para>
            The <code>Status</code> of the dataset group must be <code>ACTIVE</code> before you
            can use the dataset group to create a predictor. Use the <a href="https://docs.aws.amazon.com/forecast/latest/dg/API_DescribeDatasetGroup.html">DescribeDatasetGroup</a>
            operation to get the status.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet.DatasetArn">
            <summary>
            <para>
            <para>An array of the Amazon Resource Names (ARNs) of the datasets to add to the dataset
            group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet.DatasetGroupArn">
            <summary>
            <para>
            <para>The ARN of the dataset group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.ForecastService.Model.UpdateDatasetGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DatasetGroupArn parameter.
            The -PassThru parameter is deprecated, use -Select '^DatasetGroupArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.FRC.UpdateFRCDatasetGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
