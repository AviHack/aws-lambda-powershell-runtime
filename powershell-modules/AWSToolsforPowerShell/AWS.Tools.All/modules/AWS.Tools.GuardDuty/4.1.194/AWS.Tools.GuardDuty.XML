<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.GuardDuty</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet">
            <summary>
            Adds tags to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the GuardDuty resource to apply a tag to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be added to a resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.AddGDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet">
            <summary>
            Archives GuardDuty findings that are specified by the list of finding IDs.
            
             <note><para>
            Only the administrator account can archive findings. Member accounts don't have permission
            to archive findings from their accounts.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector that specifies the GuardDuty service whose findings you want
            to archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet.FindingId">
            <summary>
            <para>
            <para>The IDs of the findings that you want to archive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ArchiveFindingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.BackupGDFindingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet">
            <summary>
            Accepts the invitation to be monitored by a GuardDuty administrator account.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.InvitationId">
            <summary>
            <para>
            <para>The value that is used to validate the administrator account to the member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.MasterId">
            <summary>
            <para>
            <para>The account ID of the GuardDuty administrator account whose invitation you're accepting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.AcceptInvitationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ConfirmGDInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.DenyGDInvitationCmdlet">
            <summary>
            Declines invitations sent to the current member account by Amazon Web Services accounts
            specified by their account IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DenyGDInvitationCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the Amazon Web Services accounts that sent invitations to
            the current member account that you want to decline invitations from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DenyGDInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeclineInvitationsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DeclineInvitationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DenyGDInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DenyGDInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.DisableGDOrganizationAdminAccountCmdlet">
            <summary>
            Disables an Amazon Web Services account within the Organization as the GuardDuty delegated
            administrator.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DisableGDOrganizationAdminAccountCmdlet.AdminAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services Account ID for the organizations account to be disabled as
            a GuardDuty delegated administrator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DisableGDOrganizationAdminAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DisableOrganizationAdminAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DisableGDOrganizationAdminAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AdminAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AdminAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.DisableGDOrganizationAdminAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.EnableGDOrganizationAdminAccountCmdlet">
            <summary>
            Enables an Amazon Web Services account within the organization as the GuardDuty delegated
            administrator.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.EnableGDOrganizationAdminAccountCmdlet.AdminAccountId">
            <summary>
            <para>
            <para>The Amazon Web Services Account ID for the organization account to be enabled as a
            GuardDuty delegated administrator.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.EnableGDOrganizationAdminAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.EnableOrganizationAdminAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.EnableGDOrganizationAdminAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AdminAccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AdminAccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.EnableGDOrganizationAdminAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDAdministratorAccountCmdlet">
            <summary>
            Provides the details for the GuardDuty administrator account associated with the current
            GuardDuty member account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDAdministratorAccountCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDAdministratorAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Administrator'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetAdministratorAccountResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetAdministratorAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDAdministratorAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorCmdlet">
            <summary>
            Retrieves an Amazon GuardDuty detector specified by the detectorId.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetDetectorResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetDetectorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorListCmdlet">
            <summary>
            Lists detectorIds of all the existing Amazon GuardDuty detector resources.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items that you want in
            the response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DetectorIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListDetectorsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListDetectorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDDetectorListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDFilterCmdlet">
            <summary>
            Returns the details of the filter specified by the filter name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the filter is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the filter you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetFilterResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet">
            <summary>
            Returns a paginated list of the current filters.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the filter is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items that you want in
            the response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FilterNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListFiltersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFilterListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet">
            <summary>
            Describes Amazon GuardDuty findings specified by finding IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector that specifies the GuardDuty service whose findings you want
            to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet.FindingId">
            <summary>
            <para>
            <para>The IDs of the findings that you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet.SortCriterion">
            <summary>
            <para>
            <para>Represents the criteria used for sorting findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Findings'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetFindingsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetFindingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet">
            <summary>
            Lists Amazon GuardDuty findings for the specified detector ID.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector that specifies the GuardDuty service whose findings you want
            to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.FindingCriterion">
            <summary>
            <para>
            <para>Represents the criteria used for querying findings. Valid values include:</para><ul><li><para>JSON field name</para></li><li><para>accountId</para></li><li><para>region</para></li><li><para>confidence</para></li><li><para>id</para></li><li><para>resource.accessKeyDetails.accessKeyId</para></li><li><para>resource.accessKeyDetails.principalId</para></li><li><para>resource.accessKeyDetails.userName</para></li><li><para>resource.accessKeyDetails.userType</para></li><li><para>resource.instanceDetails.iamInstanceProfile.id</para></li><li><para>resource.instanceDetails.imageId</para></li><li><para>resource.instanceDetails.instanceId</para></li><li><para>resource.instanceDetails.networkInterfaces.ipv6Addresses</para></li><li><para>resource.instanceDetails.networkInterfaces.privateIpAddresses.privateIpAddress</para></li><li><para>resource.instanceDetails.networkInterfaces.publicDnsName</para></li><li><para>resource.instanceDetails.networkInterfaces.publicIp</para></li><li><para>resource.instanceDetails.networkInterfaces.securityGroups.groupId</para></li><li><para>resource.instanceDetails.networkInterfaces.securityGroups.groupName</para></li><li><para>resource.instanceDetails.networkInterfaces.subnetId</para></li><li><para>resource.instanceDetails.networkInterfaces.vpcId</para></li><li><para>resource.instanceDetails.tags.key</para></li><li><para>resource.instanceDetails.tags.value</para></li><li><para>resource.resourceType</para></li><li><para>service.action.actionType</para></li><li><para>service.action.awsApiCallAction.api</para></li><li><para>service.action.awsApiCallAction.callerType</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.city.cityName</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.country.countryName</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.ipAddressV4</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.organization.asn</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.organization.asnOrg</para></li><li><para>service.action.awsApiCallAction.serviceName</para></li><li><para>service.action.dnsRequestAction.domain</para></li><li><para>service.action.networkConnectionAction.blocked</para></li><li><para>service.action.networkConnectionAction.connectionDirection</para></li><li><para>service.action.networkConnectionAction.localPortDetails.port</para></li><li><para>service.action.networkConnectionAction.protocol</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.country.countryName</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.ipAddressV4</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.organization.asn</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.organization.asnOrg</para></li><li><para>service.action.networkConnectionAction.remotePortDetails.port</para></li><li><para>service.additionalInfo.threatListName</para></li><li><para>service.archived</para><para>When this attribute is set to 'true', only archived findings are listed. When it's
            set to 'false', only unarchived findings are listed. When this attribute is not set,
            all existing findings are listed.</para></li><li><para>service.resourceRole</para></li><li><para>severity</para></li><li><para>type</para></li><li><para>updatedAt</para><para>Type: Timestamp in Unix Epoch millisecond format: 1486685375000</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.SortCriterion">
            <summary>
            <para>
            <para>Represents the criteria used for sorting findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items you want in the
            response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FindingIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListFindingsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListFindingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet">
            <summary>
            Lists Amazon GuardDuty findings statistics for the specified detector ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector that specifies the GuardDuty service whose findings' statistics
            you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet.FindingCriterion">
            <summary>
            <para>
            <para>Represents the criteria that is used for querying findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet.FindingStatisticType">
            <summary>
            <para>
            <para>The types of finding statistics to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FindingStatistics'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetFindingsStatisticsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetFindingsStatisticsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDFindingStatisticCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationCountCmdlet">
            <summary>
            Returns the count of all GuardDuty membership invitations that were sent to the current
            member account except the currently accepted invitation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationCountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'InvitationsCount'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetInvitationsCountResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetInvitationsCountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationListCmdlet">
            <summary>
            Lists all GuardDuty membership invitations that were sent to the current Amazon Web
            Services account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items that you want in
            the response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Invitations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListInvitationsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListInvitationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDInvitationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetCmdlet">
            <summary>
            Retrieves the IPSet specified by the <code>ipSetId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the IPSet is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetCmdlet.IpSetId">
            <summary>
            <para>
            <para>The unique ID of the IPSet to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetIPSetResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetIPSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IpSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^IpSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet">
            <summary>
            Lists the IPSets of the GuardDuty service specified by the detector ID. If you use
            this operation from a member account, the IPSets returned are the IPSets from the
            associated administrator account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the IPSet is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items you want in the
            response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IpSetIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListIPSetsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListIPSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDIPSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet">
            <summary>
            Returns a list of malware scans. Each member account can view the malware scans for
            their own accounts. An administrator can view the malware scans for all the member
            accounts.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the request is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.FilterCriteria_FilterCriterion">
            <summary>
            <para>
            <para>Represents a condition that when matched will be added to the response of the operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.SortCriterion">
            <summary>
            <para>
            <para>Represents the criteria used for sorting scan entries.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items that you want in
            the response. The default value is 50. The maximum value is 50.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Scans'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DescribeMalwareScansResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DescribeMalwareScansResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanSettingCmdlet">
            <summary>
            Returns the details of the malware scan settings.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanSettingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the scan setting is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetMalwareScanSettingsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetMalwareScanSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMalwareScanSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMasterAccountCmdlet">
            <summary>
            Provides the details for the GuardDuty administrator account associated with the current
            GuardDuty member account.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMasterAccountCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMasterAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Master'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetMasterAccountResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetMasterAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMasterAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMemberCmdlet">
            <summary>
            Retrieves GuardDuty member accounts (of the current GuardDuty administrator account)
            specified by the account IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the GuardDuty member accounts that you want to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account whose members you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMemberDetectorCmdlet">
            <summary>
            Describes which data sources are enabled for the member account's detector.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberDetectorCmdlet.AccountId">
            <summary>
            <para>
            <para>The account ID of the member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberDetectorCmdlet.DetectorId">
            <summary>
            <para>
            <para>The detector ID for the administrator account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetMemberDetectorsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetMemberDetectorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet">
            <summary>
            Lists details about all member accounts for the current GuardDuty administrator account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector the member is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.OnlyAssociated">
            <summary>
            <para>
            <para>Specifies whether to only return associated members or to return all members (including
            members who haven't been invited yet or have been disassociated). Member accounts
            must have been previously associated with the GuardDuty administrator account using
            <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html"><code>Create Members</code></a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items you want in the
            response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter when paginating results. Set the value of this parameter
            to null on your first call to the list action. For subsequent calls to the action,
            fill nextToken in the request with the value of NextToken from the previous response
            to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Members'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDMemberListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationAdminAccountListCmdlet">
            <summary>
            Lists the accounts configured as GuardDuty delegated administrators.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationAdminAccountListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationAdminAccountListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to use for paginating results that are returned in the response. Set the value
            of this parameter to null for the first request to a list action. For subsequent calls,
            use the <code>NextToken</code> value returned from the previous request to continue
            listing results after the first page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationAdminAccountListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AdminAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListOrganizationAdminAccountsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListOrganizationAdminAccountsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationAdminAccountListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationConfigurationCmdlet">
            <summary>
            Returns information about the account selected as the delegated administrator for
            GuardDuty.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationConfigurationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector to retrieve information about the delegated administrator from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DescribeOrganizationConfigurationResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DescribeOrganizationConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDOrganizationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationCmdlet">
            <summary>
            Returns information about the publishing destination specified by the provided <code>destinationId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationCmdlet.DestinationId">
            <summary>
            <para>
            <para>The ID of the publishing destination to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector associated with the publishing destination to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DescribePublishingDestinationResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DescribePublishingDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet">
            <summary>
            Returns a list of publishing destinations associated with the specified <code>detectorId</code>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector to retrieve publishing destinations for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in the response.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to use for paginating results that are returned in the response. Set the value
            of this parameter to null for the first request to a list action. For subsequent calls,
            use the <code>NextToken</code> value returned from the previous request to continue
            listing results after the first page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Destinations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListPublishingDestinationsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListPublishingDestinationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDPublishingDestinationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDRemainingFreeTrialDayCmdlet">
            <summary>
            Provides the number of days left for each data source used in the free trial period.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDRemainingFreeTrialDayCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account identifiers of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDRemainingFreeTrialDayCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDRemainingFreeTrialDayCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetRemainingFreeTrialDaysResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetRemainingFreeTrialDaysResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDRemainingFreeTrialDayCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDResourceTagCmdlet">
            <summary>
            Lists tags for a resource. Tagging is currently supported for detectors, finding filters,
            IP sets, and threat intel sets, with a limit of 50 tags per resource. When invoked,
            this operation returns all assigned tags for a given resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the given GuardDuty resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetCmdlet">
            <summary>
            Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the threatIntelSet is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetCmdlet.ThreatIntelSetId">
            <summary>
            <para>
            <para>The unique ID of the threatIntelSet that you want to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetThreatIntelSetResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetThreatIntelSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThreatIntelSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThreatIntelSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet">
            <summary>
            Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID. If
            you use this operation from a member account, the ThreatIntelSets associated with
            the administrator account are returned.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the threatIntelSet is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.MaxResult">
            <summary>
            <para>
            <para>You can use this parameter to indicate the maximum number of items that you want in
            the response. The default value is 50. The maximum value is 50.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.NextToken">
            <summary>
            <para>
            <para>You can use this parameter to paginate results in the response. Set the value of this
            parameter to null on your first call to the list action. For subsequent calls to the
            action, fill nextToken in the request with the value of NextToken from the previous
            response to continue listing data.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThreatIntelSetIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.ListThreatIntelSetsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.ListThreatIntelSetsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDThreatIntelSetListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet">
            <summary>
            Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector
            ID. For newly enabled detectors or data sources, the cost returned will include only
            the usage so far under 30 days. This may differ from the cost metrics in the console,
            which project usage over 30 days to provide a monthly cost estimate. For more information,
            see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/monitoring_costs.html#usage-calculations">Understanding
            How Usage Costs are Calculated</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.UsageCriteria_AccountId">
            <summary>
            <para>
            <para>The account IDs to aggregate usage statistics from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.UsageCriteria_DataSource">
            <summary>
            <para>
            <para>The data sources to aggregate usage statistics from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector that specifies the GuardDuty service whose usage statistics
            you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.UsageCriteria_Resource">
            <summary>
            <para>
            <para>The resources to aggregate usage statistics from. Only accepts exact resource names.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.Unit">
            <summary>
            <para>
            <para>The currency unit you would like to view your usage statistics in. Current valid values
            are USD.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.UsageStatisticType">
            <summary>
            <para>
            <para>The type of usage statistics to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in the response.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.NextToken">
            <summary>
            <para>
            <para>A token to use for paginating results that are returned in the response. Set the value
            of this parameter to null for the first request to a list action. For subsequent calls,
            use the NextToken value returned from the previous request to continue listing results
            after the first page.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UsageStatistics'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.GetUsageStatisticsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.GetUsageStatisticsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.GetGDUsageStatisticCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet">
            <summary>
            Creates a single Amazon GuardDuty detector. A detector is a resource that represents
            the GuardDuty service. To start using GuardDuty, you must create a detector in each
            Region where you enable the service. You can have only one detector per account per
            Region. All data sources are enabled in a new detector by default.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.ScanEc2InstanceWithFindings_EbsVolume">
            <summary>
            <para>
            <para>Describes the configuration for scanning EBS volumes as data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.AuditLogs_Enable">
            <summary>
            <para>
            <para>The status of Kubernetes audit logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.S3Logs_Enable">
            <summary>
            <para>
            <para> The status of S3 data event logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.Enable">
            <summary>
            <para>
            <para>A Boolean value that specifies whether the detector is to be enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.FindingPublishingFrequency">
            <summary>
            <para>
            <para>A value that specifies how frequently updated findings are exported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be added to a new detector resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the create request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DetectorId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateDetectorResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreateDetectorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Enable parameter.
            The -PassThru parameter is deprecated, use -Select '^Enable' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDDetectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet">
            <summary>
            Creates a filter using the specified finding criteria.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Action">
            <summary>
            <para>
            <para>Specifies the action that is to be applied to the findings that match the filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Description">
            <summary>
            <para>
            <para>The description of the filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector belonging to the GuardDuty account that you want to create
            a filter for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.FindingCriterion">
            <summary>
            <para>
            <para>Represents the criteria to be used in the filter for querying findings.</para><para>You can only use the following attributes to query findings:</para><ul><li><para>accountId</para></li><li><para>region</para></li><li><para>confidence</para></li><li><para>id</para></li><li><para>resource.accessKeyDetails.accessKeyId</para></li><li><para>resource.accessKeyDetails.principalId</para></li><li><para>resource.accessKeyDetails.userName</para></li><li><para>resource.accessKeyDetails.userType</para></li><li><para>resource.instanceDetails.iamInstanceProfile.id</para></li><li><para>resource.instanceDetails.imageId</para></li><li><para>resource.instanceDetails.instanceId</para></li><li><para>resource.instanceDetails.outpostArn</para></li><li><para>resource.instanceDetails.networkInterfaces.ipv6Addresses</para></li><li><para>resource.instanceDetails.networkInterfaces.privateIpAddresses.privateIpAddress</para></li><li><para>resource.instanceDetails.networkInterfaces.publicDnsName</para></li><li><para>resource.instanceDetails.networkInterfaces.publicIp</para></li><li><para>resource.instanceDetails.networkInterfaces.securityGroups.groupId</para></li><li><para>resource.instanceDetails.networkInterfaces.securityGroups.groupName</para></li><li><para>resource.instanceDetails.networkInterfaces.subnetId</para></li><li><para>resource.instanceDetails.networkInterfaces.vpcId</para></li><li><para>resource.instanceDetails.tags.key</para></li><li><para>resource.instanceDetails.tags.value</para></li><li><para>resource.resourceType</para></li><li><para>service.action.actionType</para></li><li><para>service.action.awsApiCallAction.api</para></li><li><para>service.action.awsApiCallAction.callerType</para></li><li><para>service.action.awsApiCallAction.errorCode</para></li><li><para>service.action.awsApiCallAction.userAgent</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.city.cityName</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.country.countryName</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.ipAddressV4</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.organization.asn</para></li><li><para>service.action.awsApiCallAction.remoteIpDetails.organization.asnOrg</para></li><li><para>service.action.awsApiCallAction.serviceName</para></li><li><para>service.action.dnsRequestAction.domain</para></li><li><para>service.action.networkConnectionAction.blocked</para></li><li><para>service.action.networkConnectionAction.connectionDirection</para></li><li><para>service.action.networkConnectionAction.localPortDetails.port</para></li><li><para>service.action.networkConnectionAction.protocol</para></li><li><para>service.action.networkConnectionAction.localIpDetails.ipAddressV4</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.city.cityName</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.country.countryName</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.ipAddressV4</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.organization.asn</para></li><li><para>service.action.networkConnectionAction.remoteIpDetails.organization.asnOrg</para></li><li><para>service.action.networkConnectionAction.remotePortDetails.port</para></li><li><para>service.additionalInfo.threatListName</para></li><li><para>resource.s3BucketDetails.publicAccess.effectivePermissions</para></li><li><para>resource.s3BucketDetails.name</para></li><li><para>resource.s3BucketDetails.tags.key</para></li><li><para>resource.s3BucketDetails.tags.value</para></li><li><para>resource.s3BucketDetails.type</para></li><li><para>service.archived</para><para>When this attribute is set to TRUE, only archived findings are listed. When it's set
            to FALSE, only unarchived findings are listed. When this attribute is not set, all
            existing findings are listed.</para></li><li><para>service.resourceRole</para></li><li><para>severity</para></li><li><para>type</para></li><li><para>updatedAt</para><para>Type: ISO 8601 string format: YYYY-MM-DDTHH:MM:SS.SSSZ or YYYY-MM-DDTHH:MM:SSZ depending
            on whether the value contains milliseconds.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the filter. Minimum length of 3. Maximum length of 64. Valid characters
            include alphanumeric characters, dot (.), underscore (_), and dash (-). Spaces are
            not allowed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Rank">
            <summary>
            <para>
            <para>Specifies the position of the filter in the list of current filters. Also specifies
            the order in which this filter is applied to the findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be added to a new filter resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the create request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateFilterResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreateFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet">
            <summary>
            Creates a new IPSet, which is called a trusted IP list in the console user interface.
            An IPSet is a list of IP addresses that are trusted for secure communication with
            Amazon Web Services infrastructure and applications. GuardDuty doesn't generate findings
            for IP addresses that are included in IPSets. Only users from the administrator account
            can use this operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Activate">
            <summary>
            <para>
            <para>A Boolean value that indicates whether GuardDuty is to start using the uploaded IPSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account that you want to create an
            IPSet for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Format">
            <summary>
            <para>
            <para>The format of the file that contains the IPSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Location">
            <summary>
            <para>
            <para>The URI of the file that contains the IPSet. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Name">
            <summary>
            <para>
            <para>The user-friendly name to identify the IPSet.</para><para> Allowed characters are alphanumerics, spaces, hyphens (-), and underscores (_).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be added to a new IP set resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the create request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IpSetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateIPSetResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreateIPSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDIPSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet">
            <summary>
            Creates member accounts of the current Amazon Web Services account by specifying a
            list of Amazon Web Services account IDs. This step is a prerequisite for managing
            the associated member accounts either by invitation or through an organization.
            
             
            <para>
            When using <code>Create Members</code> as an organizations delegated administrator
            this action will enable GuardDuty in the added member accounts, with the exception
            of the organization delegated administrator account, which must enable GuardDuty prior
            to being added as a member.
            </para><para>
            If you are adding accounts by invitation use this action after GuardDuty has been
            enabled in potential member accounts and before using <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html"><code>Invite Members</code></a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet.AccountDetail">
            <summary>
            <para>
            <para>A list of account ID and email address pairs of the accounts that you want to associate
            with the GuardDuty administrator account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account that you want to associate
            member accounts with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreateMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountDetail parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountDetail' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet">
            <summary>
            Creates a publishing destination to export findings to. The resource to export findings
            to must exist before you use this operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.DestinationProperties_DestinationArn">
            <summary>
            <para>
            <para>The ARN of the resource to publish to.</para><para>To specify an S3 bucket folder use the following format: <code>arn:aws:s3:::DOC-EXAMPLE-BUCKET/myFolder/</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.DestinationType">
            <summary>
            <para>
            <para>The type of resource for the publishing destination. Currently only Amazon S3 buckets
            are supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the GuardDuty detector associated with the publishing destination.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.DestinationProperties_KmsKeyArn">
            <summary>
            <para>
            <para>The ARN of the KMS key to use for encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'DestinationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreatePublishingDestinationResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreatePublishingDestinationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDPublishingDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet">
            <summary>
            Generates example findings of types specified by the list of finding types. If 'NULL'
            is specified for <code>findingTypes</code>, the API generates example findings of
            all supported finding types.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector to create sample findings for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet.FindingType">
            <summary>
            <para>
            <para>The types of sample findings to generate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateSampleFindingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDSampleFindingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet">
            <summary>
            Creates a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses.
            GuardDuty generates findings based on ThreatIntelSets. Only users of the administrator
            account can use this operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Activate">
            <summary>
            <para>
            <para>A Boolean value that indicates whether GuardDuty is to start using the uploaded ThreatIntelSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account that you want to create a threatIntelSet
            for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Format">
            <summary>
            <para>
            <para>The format of the file that contains the ThreatIntelSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Location">
            <summary>
            <para>
            <para>The URI of the file that contains the ThreatIntelSet. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Name">
            <summary>
            <para>
            <para>A user-friendly ThreatIntelSet name displayed in all findings that are generated by
            activity that involves IP addresses included in this ThreatIntelSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to be added to a new threat list resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the create request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ThreatIntelSetId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.CreateThreatIntelSetResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.CreateThreatIntelSetResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.NewGDThreatIntelSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet">
            <summary>
            Accepts the invitation to be a member account and get monitored by a GuardDuty administrator
            account that sent the invitation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.AdministratorId">
            <summary>
            <para>
            <para>The account ID of the GuardDuty administrator account whose invitation you're accepting.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.InvitationId">
            <summary>
            <para>
            <para>The value that is used to validate the administrator account to the member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.AcceptAdministratorInvitationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.ReceiveGDAdministratorInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDDetectorCmdlet">
            <summary>
            Deletes an Amazon GuardDuty detector that is specified by the detector ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDDetectorCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteDetectorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDDetectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet">
            <summary>
            Deletes the filter specified by the filter name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the filter is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the filter that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDFromAdministratorAccountCmdlet">
            <summary>
            Disassociates the current GuardDuty member account from its administrator account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFromAdministratorAccountCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFromAdministratorAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DisassociateFromAdministratorAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFromAdministratorAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDFromAdministratorAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDInvitationCmdlet">
            <summary>
            Deletes invitations sent to the current member account by Amazon Web Services accounts
            specified by their account IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDInvitationCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the Amazon Web Services accounts that sent invitations to
            the current member account that you want to delete invitations from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteInvitationsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DeleteInvitationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet">
            <summary>
            Deletes the IPSet specified by the <code>ipSetId</code>. IPSets are called trusted
            IP lists in the console user interface.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector associated with the IPSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet.IpSetId">
            <summary>
            <para>
            <para>The unique ID of the IPSet to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteIPSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IpSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^IpSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDIPSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet">
            <summary>
            Deletes GuardDuty member accounts (to the current GuardDuty administrator account)
            specified by the account IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the GuardDuty member accounts that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account whose members you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DeleteMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet">
            <summary>
            Deletes the publishing definition with the specified <code>destinationId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet.DestinationId">
            <summary>
            <para>
            <para>The ID of the publishing destination to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector associated with the publishing destination to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeletePublishingDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDPublishingDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet">
            <summary>
            Removes tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the resource to remove tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys to remove from the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet">
            <summary>
            Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that the threatIntelSet is associated with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet.ThreatIntelSetId">
            <summary>
            <para>
            <para>The unique ID of the threatIntelSet that you want to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DeleteThreatIntelSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ThreatIntelSetId parameter.
            The -PassThru parameter is deprecated, use -Select '^ThreatIntelSetId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RemoveGDThreatIntelSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet">
            <summary>
            Unarchives GuardDuty findings specified by the <code>findingIds</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector associated with the findings to unarchive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet.FindingId">
            <summary>
            <para>
            <para>The IDs of the findings to unarchive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UnarchiveFindingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.RestoreGDFindingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet">
            <summary>
            Invites other Amazon Web Services accounts (created as members of the current Amazon
            Web Services account by CreateMembers) to enable GuardDuty, and allow the current
            Amazon Web Services account to view and manage these accounts' findings on their behalf
            as the GuardDuty administrator account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the accounts that you want to invite to GuardDuty as members.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account that you want to invite members
            with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.DisableEmailNotification">
            <summary>
            <para>
            <para>A Boolean value that specifies whether you want to disable email notification to the
            accounts that you are inviting to GuardDuty as members.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.Message">
            <summary>
            <para>
            <para>The invitation message that you want to send to the accounts that you're inviting
            to GuardDuty as members.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.InviteMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.InviteMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.SendGDMemberInvitationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet">
            <summary>
            Turns on GuardDuty monitoring of the specified member accounts. Use this operation
            to restart monitoring of accounts that you stopped monitoring with the <code>StopMonitoringMembers</code>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the GuardDuty member accounts to start monitoring.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty administrator account associated with
            the member accounts to monitor.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.StartMonitoringMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.StartMonitoringMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StartGDMonitoringMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet">
            <summary>
            Stops GuardDuty monitoring for the specified member accounts. Use the <code>StartMonitoringMembers</code>
            operation to restart monitoring for those accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs for the member accounts to stop monitoring.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector associated with the GuardDuty administrator account
            that is monitoring member accounts.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.StopMonitoringMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.StopMonitoringMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.StopGDMonitoringMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UnregisterGDFromMasterAccountCmdlet">
            <summary>
            Disassociates the current GuardDuty member account from its administrator account.<br/><br/>This operation is deprecated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDFromMasterAccountCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty member account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDFromMasterAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DisassociateFromMasterAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDFromMasterAccountCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDFromMasterAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet">
            <summary>
            Disassociates GuardDuty member accounts (to the current administrator account) specified
            by the account IDs.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of account IDs of the GuardDuty member accounts that you want to disassociate
            from the administrator account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector of the GuardDuty account whose members you want to disassociate
            from the administrator account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.DisassociateMembersResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.DisassociateMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AccountId parameter.
            The -PassThru parameter is deprecated, use -Select '^AccountId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UnregisterGDMemberCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet">
            <summary>
            Updates the Amazon GuardDuty detector specified by the detectorId.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.ScanEc2InstanceWithFindings_EbsVolume">
            <summary>
            <para>
            <para>Describes the configuration for scanning EBS volumes as data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.AuditLogs_Enable">
            <summary>
            <para>
            <para>The status of Kubernetes audit logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.S3Logs_Enable">
            <summary>
            <para>
            <para> The status of S3 data event logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.Enable">
            <summary>
            <para>
            <para>Specifies whether the detector is enabled or not enabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.FindingPublishingFrequency">
            <summary>
            <para>
            <para>An enum value that specifies how frequently findings are exported, such as to CloudWatch
            Events.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateDetectorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDDetectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet">
            <summary>
            Updates the filter specified by the filter name.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.Action">
            <summary>
            <para>
            <para>Specifies the action that is to be applied to the findings that match the filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.Description">
            <summary>
            <para>
            <para>The description of the filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that specifies the GuardDuty service where you want
            to update a filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.FilterName">
            <summary>
            <para>
            <para>The name of the filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.FindingCriterion">
            <summary>
            <para>
            <para>Represents the criteria to be used in the filter for querying findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.Rank">
            <summary>
            <para>
            <para>Specifies the position of the filter in the list of current filters. Also specifies
            the order in which this filter is applied to the findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Name'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateFilterResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.UpdateFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet">
            <summary>
            Marks the specified GuardDuty findings as useful or not useful.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.Comment">
            <summary>
            <para>
            <para>Additional feedback about the GuardDuty findings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector associated with the findings to update feedback for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.Feedback">
            <summary>
            <para>
            <para>The feedback for the finding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.FindingId">
            <summary>
            <para>
            <para>The IDs of the findings that you want to mark as useful or not useful.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateFindingsFeedbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDFindingFeedbackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet">
            <summary>
            Updates the IPSet specified by the IPSet ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.Activate">
            <summary>
            <para>
            <para>The updated Boolean value that specifies whether the IPSet is active or not.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The detectorID that specifies the GuardDuty service whose IPSet you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.IpSetId">
            <summary>
            <para>
            <para>The unique ID that specifies the IPSet that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.Location">
            <summary>
            <para>
            <para>The updated URI of the file that contains the IPSet. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.Name">
            <summary>
            <para>
            <para>The unique ID that specifies the IPSet that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateIPSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDIPSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet">
            <summary>
            Updates the malware scan settings.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.DetectorId">
            <summary>
            <para>
            <para>The unique ID of the detector that specifies the GuardDuty service where you want
            to update scan settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.EbsSnapshotPreservation">
            <summary>
            <para>
            <para>An enum value representing possible snapshot preservation settings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.ScanResourceCriteria_Exclude">
            <summary>
            <para>
            <para>Represents condition that when matched will prevent a malware scan for a certain resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.ScanResourceCriteria_Include">
            <summary>
            <para>
            <para>Represents condition that when matched will allow a malware scan for a certain resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateMalwareScanSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMalwareScanSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet">
            <summary>
            Contains information on member accounts to be updated.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.AccountId">
            <summary>
            <para>
            <para>A list of member account IDs to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.DetectorId">
            <summary>
            <para>
            <para>The detector ID of the administrator account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.ScanEc2InstanceWithFindings_EbsVolume">
            <summary>
            <para>
            <para>Describes the configuration for scanning EBS volumes as data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.AuditLogs_Enable">
            <summary>
            <para>
            <para>The status of Kubernetes audit logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.S3Logs_Enable">
            <summary>
            <para>
            <para> The status of S3 data event logs as a data source.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UnprocessedAccounts'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateMemberDetectorsResponse).
            Specifying the name of a property of type Amazon.GuardDuty.Model.UpdateMemberDetectorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDMemberDetectorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet">
            <summary>
            Updates the delegated administrator account with the values provided.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.AutoEnable">
            <summary>
            <para>
            <para>Indicates whether to automatically enable member accounts in the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.AuditLogs_AutoEnable">
            <summary>
            <para>
            <para>A value that contains information on whether Kubernetes audit logs should be enabled
            automatically as a data source for the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.EbsVolumes_AutoEnable">
            <summary>
            <para>
            <para>Whether scanning EBS volumes should be auto-enabled for new members joining the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.S3Logs_AutoEnable">
            <summary>
            <para>
            <para>A value that contains information on whether S3 data event logs will be enabled automatically
            as a data source for the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector to update the delegated administrator for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateOrganizationConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDOrganizationConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet">
            <summary>
            Updates information about the publishing destination specified by the <code>destinationId</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.DestinationProperties_DestinationArn">
            <summary>
            <para>
            <para>The ARN of the resource to publish to.</para><para>To specify an S3 bucket folder use the following format: <code>arn:aws:s3:::DOC-EXAMPLE-BUCKET/myFolder/</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.DestinationId">
            <summary>
            <para>
            <para>The ID of the publishing destination to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.DetectorId">
            <summary>
            <para>
            <para>The ID of the detector associated with the publishing destinations to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.DestinationProperties_KmsKeyArn">
            <summary>
            <para>
            <para>The ARN of the KMS key to use for encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdatePublishingDestinationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDPublishingDestinationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet">
            <summary>
            Updates the ThreatIntelSet specified by the ThreatIntelSet ID.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.Activate">
            <summary>
            <para>
            <para>The updated Boolean value that specifies whether the ThreateIntelSet is active or
            not.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.DetectorId">
            <summary>
            <para>
            <para>The detectorID that specifies the GuardDuty service whose ThreatIntelSet you want
            to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.Location">
            <summary>
            <para>
            <para>The updated URI of the file that contains the ThreateIntelSet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.Name">
            <summary>
            <para>
            <para>The unique ID that specifies the ThreatIntelSet that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.ThreatIntelSetId">
            <summary>
            <para>
            <para>The unique ID that specifies the ThreatIntelSet that you want to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GuardDuty.Model.UpdateThreatIntelSetResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DetectorId parameter.
            The -PassThru parameter is deprecated, use -Select '^DetectorId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GD.UpdateGDThreatIntelSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
