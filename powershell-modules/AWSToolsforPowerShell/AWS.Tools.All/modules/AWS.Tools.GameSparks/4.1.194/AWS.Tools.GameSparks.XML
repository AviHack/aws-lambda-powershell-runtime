<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.GameSparks</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet">
            <summary>
            Adds tags to a GameSparks resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to add the tags to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.AddGMESPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet">
            <summary>
            Disconnects a player from the game runtime.
            
             
            <para>
             If a player has multiple connections, this operation attempts to close all of them.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.PlayerId">
            <summary>
            <para>
            <para>The unique identifier representing a player.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.DisconnectPlayerResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.DisconnectPlayerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlayerId parameter.
            The -PassThru parameter is deprecated, use -Select '^PlayerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.DisconnectGMESPPlayerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet">
            <summary>
            Exports a game configuration snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot to export.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'S3Url'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ExportSnapshotResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ExportSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ExportGMESPSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionCmdlet">
            <summary>
            Gets details about a specified extension.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace (qualifier) of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Extension'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetExtensionResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetExtensionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionListCmdlet">
            <summary>
            Gets a paginated list of available extensions.
            
             
            <para>
             Extensions provide features that games can use from scripts. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Extensions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListExtensionsResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListExtensionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet">
            <summary>
            Gets details about a specified extension version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet.ExtensionVersion">
            <summary>
            <para>
            <para>The version of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace (qualifier) of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExtensionVersion'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetExtensionVersionResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetExtensionVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ExtensionVersion parameter.
            The -PassThru parameter is deprecated, use -Select '^ExtensionVersion' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet">
            <summary>
            Gets a paginated list of available versions for the extension.
            
             
            <para>
             Each time an API change is made to an extension, the version is incremented. The
            list retrieved by this operation shows the versions that are currently available.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.Namespace">
            <summary>
            <para>
            <para>The namespace (qualifier) of the extension.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ExtensionVersions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListExtensionVersionsResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListExtensionVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPExtensionVersionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameCmdlet">
            <summary>
            Gets details about a game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Game'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetGameResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetGameResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameConfigurationCmdlet">
            <summary>
            Gets the configuration of the game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameConfigurationCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameConfigurationCmdlet.Section">
            <summary>
            <para>
            <para>The list of sections to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetGameConfigurationResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetGameConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameListCmdlet">
            <summary>
            Gets a paginated list of games.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGameListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Games'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListGamesResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListGamesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet">
            <summary>
            Gets details about a job that is generating code for a snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet.JobId">
            <summary>
            <para>
            <para>The identifier of the code generation job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot for the code generation job.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GeneratedCodeJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetGeneratedCodeJobResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetGeneratedCodeJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet">
            <summary>
            Gets a paginated list of code generation jobs for a snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GeneratedCodeJobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListGeneratedCodeJobsResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListGeneratedCodeJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPGeneratedCodeJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet">
            <summary>
            Gets the status of a player's connection to the game runtime.
            
             
            <para>
             It's possible for a single player to have multiple connections to the game runtime.
            If a player is not connected, this operation returns an empty list. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet.PlayerId">
            <summary>
            <para>
            <para>The unique identifier representing a player.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Connections'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetPlayerConnectionStatusResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetPlayerConnectionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPPlayerConnectionStatusCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the PlayerId parameter.
            The -PassThru parameter is deprecated, use -Select '^PlayerId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPResourceTagCmdlet">
            <summary>
            Lists the tags associated with a GameSparks resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the GameSparks resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet">
            <summary>
            Gets a copy of the game configuration in a snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet.Section">
            <summary>
            <para>
            <para>The list of game configuration sections to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetSnapshotResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet">
            <summary>
            Gets a paginated list of snapshot summaries from the game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshots'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListSnapshotsResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPSnapshotListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageCmdlet">
            <summary>
            Gets information about a stage.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Stage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetStageResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetStageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet">
            <summary>
            Gets information about a stage deployment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet.DeploymentId">
            <summary>
            <para>
            <para> The identifier of the stage deployment. <code>StartStageDeployment</code> returns
            the identifier that you use here. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StageDeployment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.GetStageDeploymentResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.GetStageDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet">
            <summary>
            Gets a paginated list of stage deployment summaries from the game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StageDeployments'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListStageDeploymentsResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListStageDeploymentsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageDeploymentListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet">
            <summary>
            Gets a paginated list of stage summaries from the game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para><para> Use this parameter with NextToken to get results as a set of sequential pages. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token that indicates the start of the next sequential page of results.</para><para> Use the token that is returned with a previous call to this operation. To start at
            the beginning of the result set, do not specify a value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Stages'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ListStagesResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ListStagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.GetGMESPStageListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet">
            <summary>
            Imports a game configuration.
            
             
            <para>
             This operation replaces the current configuration of the game with the provided input.
            This is not a reversible operation. If you want to preserve the previous configuration,
            use <code>CreateSnapshot</code> to make a new snapshot before importing. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet.ImportSource_File">
            <summary>
            <para>
            <para>The JSON string containing the configuration sections.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.ImportGameConfigurationResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.ImportGameConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.ImportGMESPGameConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet">
            <summary>
            Creates a new game with an empty configuration. After creating your game, you can
            update the configuration using <code>UpdateGameConfiguration</code> or <code>ImportGameConfiguration</code>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.Description">
            <summary>
            <para>
            <para>The description of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.Tag">
            <summary>
            <para>
            <para>The list of tags to apply to the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.ClientToken">
            <summary>
            <para>
            <para> A client-defined token. With an active client token in the request, this action is
            idempotent. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Game'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.CreateGameResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.CreateGameResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPGameCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet">
            <summary>
            Creates a snapshot of the game configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet.Description">
            <summary>
            <para>
            <para>The description of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.CreateSnapshotResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.CreateSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet">
            <summary>
            Creates a new stage for stage-by-stage game development and deployment.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.Description">
            <summary>
            <para>
            <para>The description of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.Role">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the role to run the game with. This role can be
            a game-defined role or the default role that GameSparks created. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.Tag">
            <summary>
            <para>
            <para>The list of tags to apply to the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.ClientToken">
            <summary>
            <para>
            <para> A client-defined token. With an active client token in the request, this action is
            idempotent. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Stage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.CreateStageResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.CreateStageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.NewGMESPStageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPGameCmdlet">
            <summary>
            Deletes a game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPGameCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPGameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.DeleteGameResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPGameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPGameCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet">
            <summary>
            Removes tags from a GameSparks resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to remove the tags from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to remove.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet">
            <summary>
            Deletes a stage from a game, along with the associated game runtime.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.DeleteStageResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.RemoveGMESPStageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet">
            <summary>
            Starts an asynchronous process that generates client code for system-defined and
            custom messages. The resulting code is collected as a .zip file and uploaded to a
            pre-signed Amazon S3 URL.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.Generator_GameSdkVersion">
            <summary>
            <para>
            <para>The target version of the GameSparks Game SDK.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.Generator_Language">
            <summary>
            <para>
            <para>The programming language for the generated code.</para><para> Not all languages are supported for each platform. For cases where multiple languages
            are supported, this parameter specifies the language to be used. If this value is
            omitted, the default language for the target platform will be used. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot for which to generate code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.Generator_TargetPlatform">
            <summary>
            <para>
            <para>The platform that will be used to run the generated code.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GeneratedCodeJobId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.StartGeneratedCodeJobResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.StartGeneratedCodeJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPGeneratedCodeJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet">
            <summary>
            Deploys a snapshot to the stage and creates a new game runtime.
            
             
            <para>
             After you call this operation, you can check the deployment status by using <code>GetStageDeployment</code>.
            
            </para><para>
             If there are any players connected to the previous game runtime, then both runtimes
            persist. Existing connections to the previous runtime are maintained. When players
            disconnect and reconnect, they connect to the new runtime. After there are no connections
            to the previous game runtime, it is deleted. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot to deploy.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage to deploy the snapshot onto.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.ClientToken">
            <summary>
            <para>
            <para> A client-defined token. With an active client token in the request, this action is
            idempotent. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'StageDeployment'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.StartStageDeploymentResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.StartStageDeploymentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.StartGMESPStageDeploymentCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet">
            <summary>
            Updates details of the game.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet.Description">
            <summary>
            <para>
            <para>The description of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Game'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.UpdateGameResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.UpdateGameResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet">
            <summary>
            Updates one or more sections of the game configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet.Modification">
            <summary>
            <para>
            <para>The list of modifications to make.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GameConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.UpdateGameConfigurationResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.UpdateGameConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GameName parameter.
            The -PassThru parameter is deprecated, use -Select '^GameName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPGameConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet">
            <summary>
            Updates the metadata of a GameSparks snapshot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.Description">
            <summary>
            <para>
            <para>The description of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.SnapshotId">
            <summary>
            <para>
            <para>The identifier of the snapshot.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Snapshot'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.UpdateSnapshotResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.UpdateSnapshotResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SnapshotId parameter.
            The -PassThru parameter is deprecated, use -Select '^SnapshotId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPSnapshotCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet">
            <summary>
            Updates the metadata of a stage.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.Description">
            <summary>
            <para>
            <para>The description of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.GameName">
            <summary>
            <para>
            <para>The name of the game.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.Role">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the role to use for the game snapshots deployed
            to this stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.StageName">
            <summary>
            <para>
            <para>The name of the stage.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Stage'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.GameSparks.Model.UpdateStageResponse).
            Specifying the name of a property of type Amazon.GameSparks.Model.UpdateStageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the StageName parameter.
            The -PassThru parameter is deprecated, use -Select '^StageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.GMESP.UpdateGMESPStageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
