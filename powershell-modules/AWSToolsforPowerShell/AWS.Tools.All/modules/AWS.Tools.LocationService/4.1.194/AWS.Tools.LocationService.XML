<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.LocationService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet">
            <summary>
            Assigns one or more tags (key-value pairs) to the specified Amazon Location Service
            resource.
            
             <pre><code> &lt;p&gt;Tags can help you organize and categorize your resources. You
            can also use them to scope user permissions, by granting a user permission to access
            or change only resources with certain tag values.&lt;/p&gt; &lt;p&gt;You can use the
            &lt;code&gt;TagResource&lt;/code&gt; operation with an Amazon Location Service resource
            that already has tags. If you specify a new tag key for the resource, this tag is
            appended to the tags already associated with the resource. If you specify a tag key
            that's already associated with the resource, the new tag value that you specify replaces
            the previous value for that tag. &lt;/p&gt; &lt;p&gt;You can associate up to 50 tags
            with a resource.&lt;/p&gt; </code></pre>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource whose tags you want to update.</para><ul><li><para>Format example: <code>arn:aws:geo:region:account-id:resourcetype/ExampleResource</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to specific resource. A tag is a key-value pair that helps
            you manage, identify, search, and filter your resources.</para><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource.</para></li><li><para>Each tag key must be unique and must have exactly one associated value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @</para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.AddLOCResourceTagSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet">
            <summary>
            Updates the specified properties of a given geofence collection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.CollectionName">
            <summary>
            <para>
            <para>The name of the geofence collection to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.Description">
            <summary>
            <para>
            <para>Updates the description for the geofence collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.PricingPlanDataSource">
            <summary>
            <para>
            <para>This parameter is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UpdateGeofenceCollectionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.UpdateGeofenceCollectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCGeofenceCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet">
            <summary>
            Updates the specified properties of a given map resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.Description">
            <summary>
            <para>
            <para>Updates the description for the map resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.MapName">
            <summary>
            <para>
            <para>The name of the map resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UpdateMapResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.UpdateMapResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCMapCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet">
            <summary>
            Updates the specified properties of a given place index resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.Description">
            <summary>
            <para>
            <para>Updates the description for the place index resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.DataSourceConfiguration_IntendedUse">
            <summary>
            <para>
            <para>Specifies how the results of an operation will be stored by the caller. </para><para>Valid values include:</para><ul><li><para><code>SingleUse</code> specifies that the results won't be stored. </para></li><li><para><code>Storage</code> specifies that the result can be cached or stored in a database.</para></li></ul><para>Default value: <code>SingleUse</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UpdatePlaceIndexResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.UpdatePlaceIndexResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCPlaceIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet">
            <summary>
            Updates the specified properties for a given route calculator resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.Description">
            <summary>
            <para>
            <para>Updates the description for the route calculator resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UpdateRouteCalculatorResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.UpdateRouteCalculatorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCRouteCalculatorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet">
            <summary>
            Updates the specified properties of a given tracker resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.Description">
            <summary>
            <para>
            <para>Updates the description for the tracker resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.PositionFiltering">
            <summary>
            <para>
            <para>Updates the position filtering for the tracker resource.</para><para>Valid values:</para><ul><li><para><code>TimeBased</code> - Location updates are evaluated against linked geofence collections,
            but not every location update is stored. If your update frequency is more often than
            30 seconds, only one update per 30 seconds is stored for each unique device ID. </para></li><li><para><code>DistanceBased</code> - If the device has moved less than 30 m (98.4 ft), location
            updates are ignored. Location updates within this distance are neither evaluated against
            linked geofence collections, nor stored. This helps control costs by reducing the
            number of geofence evaluations and historical device positions to paginate through.
            Distance-based filtering can also reduce the effects of GPS noise when displaying
            device trajectories on a map. </para></li><li><para><code>AccuracyBased</code> - If the device has moved less than the measured accuracy,
            location updates are ignored. For example, if two consecutive updates from a device
            have a horizontal accuracy of 5 m and 10 m, the second update is ignored if the device
            has moved less than 15 m. Ignored location updates are neither evaluated against linked
            geofence collections, nor stored. This helps educe the effects of GPS noise when displaying
            device trajectories on a map, and can help control costs by reducing the number of
            geofence evaluations. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.PricingPlanDataSource">
            <summary>
            <para>
            <para>This parameter is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UpdateTrackerResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.UpdateTrackerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.EditLOCTrackerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionCmdlet">
            <summary>
            Retrieves a device's most recent position according to its sample time.
            
             <note><para>
            Device positions are deleted after 30 days.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionCmdlet.DeviceId">
            <summary>
            <para>
            <para>The device whose position you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionCmdlet.TrackerName">
            <summary>
            <para>
            <para>The tracker resource receiving the position update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetDevicePositionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetDevicePositionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionBatchCmdlet">
            <summary>
            Lists the latest device positions for requested devices.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionBatchCmdlet.DeviceId">
            <summary>
            <para>
            <para>Devices whose position you want to retrieve.</para><ul><li><para>For example, for two devices: <code>device-ids=DeviceId1&amp;device-ids=DeviceId2</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionBatchCmdlet.TrackerName">
            <summary>
            <para>
            <para>The tracker resource retrieving the device position.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchGetDevicePositionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchGetDevicePositionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet">
            <summary>
            Retrieves the device position history from a tracker resource within a specified range
            of time.
            
             <note><para>
            Device positions are deleted after 30 days.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.DeviceId">
            <summary>
            <para>
            <para>The device whose position history you want to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.EndTimeExclusive">
            <summary>
            <para>
            <para>Specify the end time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">
            ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value
            will be the time that the request is made.</para><para>Requirement:</para><ul><li><para>The time specified for <code>EndTimeExclusive</code> must be after the time for <code>StartTimeInclusive</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.StartTimeInclusive">
            <summary>
            <para>
            <para>Specify the start time for the position history in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">
            ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. By default, the value
            will be 24 hours prior to the time that the request is made.</para><para>Requirement:</para><ul><li><para>The time specified for <code>StartTimeInclusive</code> must be before <code>EndTimeExclusive</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.TrackerName">
            <summary>
            <para>
            <para>The tracker resource receiving the request for the device position history.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of device positions returned in a single call.</para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page. </para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetDevicePositionHistoryResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetDevicePositionHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionHistoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet">
            <summary>
            A batch request to retrieve all device positions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet.TrackerName">
            <summary>
            <para>
            <para>The tracker resource containing the requested devices.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of entries returned in a single call.</para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page.</para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListDevicePositionsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListDevicePositionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCDevicePositionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCmdlet">
            <summary>
            Retrieves the geofence details from a geofence collection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCmdlet.CollectionName">
            <summary>
            <para>
            <para>The geofence collection storing the target geofence.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCmdlet.GeofenceId">
            <summary>
            <para>
            <para>The geofence you're retrieving details for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Geometry.Polygon'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetGeofenceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetGeofenceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionCmdlet">
            <summary>
            Retrieves the geofence collection details.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionCmdlet.CollectionName">
            <summary>
            <para>
            <para>The name of the geofence collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DescribeGeofenceCollectionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.DescribeGeofenceCollectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionListCmdlet">
            <summary>
            Lists geofence collections in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of resources returned in a single call. </para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page. </para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceCollectionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListGeofenceCollectionsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListGeofenceCollectionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet">
            <summary>
            Lists geofences stored in a given geofence collection.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet.CollectionName">
            <summary>
            <para>
            <para>The name of the geofence collection storing the list of geofences.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of geofences returned in a single call. </para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page. </para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListGeofencesResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListGeofencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCGeofenceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapCmdlet">
            <summary>
            Retrieves the map resource details.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapCmdlet.MapName">
            <summary>
            <para>
            <para>The name of the map resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DescribeMapResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.DescribeMapResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet">
            <summary>
            Retrieves glyphs used to display labels on a map.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet.FontStack">
            <summary>
            <para>
            <para>A comma-separated list of fonts to load glyphs from in order of preference. For example,
            <code>Noto Sans Regular, Arial Unicode</code>.</para><para>Valid fonts stacks for <a href="https://docs.aws.amazon.com/location/latest/developerguide/esri.html">Esri</a>
            styles: </para><ul><li><para>VectorEsriDarkGrayCanvas – <code>Ubuntu Medium Italic</code> | <code>Ubuntu Medium</code>
            | <code>Ubuntu Italic</code> | <code>Ubuntu Regular</code> | <code>Ubuntu Bold</code></para></li><li><para>VectorEsriLightGrayCanvas – <code>Ubuntu Italic</code> | <code>Ubuntu Regular</code>
            | <code>Ubuntu Light</code> | <code>Ubuntu Bold</code></para></li><li><para>VectorEsriTopographic – <code>Noto Sans Italic</code> | <code>Noto Sans Regular</code>
            | <code>Noto Sans Bold</code> | <code>Noto Serif Regular</code> | <code>Roboto Condensed
            Light Italic</code></para></li><li><para>VectorEsriStreets – <code>Arial Regular</code> | <code>Arial Italic</code> | <code>Arial
            Bold</code></para></li><li><para>VectorEsriNavigation – <code>Arial Regular</code> | <code>Arial Italic</code> | <code>Arial
            Bold</code></para></li></ul><para>Valid font stacks for <a href="https://docs.aws.amazon.com/location/latest/developerguide/HERE.html">HERE
            Technologies</a> styles: </para><ul><li><para>VectorHereContrast – <code>Fira GO Regular</code> | <code>Fira GO Bold</code></para></li><li><para>VectorHereExplore, VectorHereExploreTruck, HybridHereExploreSatellite – <code>Fira
            GO Italic</code> | <code>Fira GO Map</code> | <code>Fira GO Map Bold</code> | <code>Noto
            Sans CJK JP Bold</code> | <code>Noto Sans CJK JP Light</code> | <code>Noto Sans CJK
            JP Regular</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet.FontUnicodeRange">
            <summary>
            <para>
            <para>A Unicode range of characters to download glyphs for. Each response will contain 256
            characters. For example, 0–255 includes all characters from range <code>U+0000</code>
            to <code>00FF</code>. Must be aligned to multiples of 256.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet.MapName">
            <summary>
            <para>
            <para>The map resource associated with the glyph ﬁle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetMapGlyphsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetMapGlyphsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapGlyphCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapListCmdlet">
            <summary>
            Lists map resources in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of resources returned in a single call. </para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page.</para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListMapsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListMapsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapSpriteCmdlet">
            <summary>
            Retrieves the sprite sheet corresponding to a map resource. The sprite sheet is a
            PNG image paired with a JSON document describing the offsets of individual icons that
            will be displayed on a rendered map.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapSpriteCmdlet.FileName">
            <summary>
            <para>
            <para>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</para><ul><li><para><code>sprites.png</code></para></li><li><para><code>sprites@2x.png</code> for high pixel density displays</para></li></ul><para>For the JSON document containing image offsets. Use the following ﬁle names:</para><ul><li><para><code>sprites.json</code></para></li><li><para><code>sprites@2x.json</code> for high pixel density displays</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapSpriteCmdlet.MapName">
            <summary>
            <para>
            <para>The map resource associated with the sprite ﬁle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapSpriteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetMapSpritesResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetMapSpritesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapSpriteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapStyleDescriptorCmdlet">
            <summary>
            Retrieves the map style descriptor from a map resource. 
            
             
            <para>
            The style descriptor contains speciﬁcations on how features render on a map. For example,
            what data to display, what order to display the data in, and the style for the data.
            Style descriptors follow the Mapbox Style Specification.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapStyleDescriptorCmdlet.MapName">
            <summary>
            <para>
            <para>The map resource to retrieve the style descriptor from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapStyleDescriptorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetMapStyleDescriptorResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetMapStyleDescriptorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapStyleDescriptorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet">
            <summary>
            Retrieves a vector data tile from the map resource. Map tiles are used by clients
            to render a map. they're addressed using a grid arrangement with an X coordinate,
            Y coordinate, and Z (zoom) level. 
            
             
            <para>
            The origin (0, 0) is the top left of the map. Increasing the zoom level by 1 doubles
            both the X and Y dimensions, so a tile containing data for the entire world at (0/0/0)
            will be split into 4 tiles at zoom 1 (1/0/0, 1/0/1, 1/1/0, 1/1/1).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.MapName">
            <summary>
            <para>
            <para>The map resource to retrieve the map tiles from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.X">
            <summary>
            <para>
            <para>The X axis value for the map tile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.Y">
            <summary>
            <para>
            <para>The Y axis value for the map tile. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.Z">
            <summary>
            <para>
            <para>The zoom value for the map tile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetMapTileResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetMapTileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCMapTileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet">
            <summary>
            Finds a place by its unique ID. A <code>PlaceId</code> is returned by other search
            operations.
            
             <note><para>
            A PlaceId is valid only if all of the following are the same in the original search
            request and the call to <code>GetPlace</code>.
            </para><ul><li><para>
            Customer AWS account
            </para></li><li><para>
            AWS Region
            </para></li><li><para>
            Data provider specified in the place index resource
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource that you want to use for the search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet.Language">
            <summary>
            <para>
            <para>The preferred language used to return results. The value must be a valid <a href="https://tools.ietf.org/search/bcp47">BCP
            47</a> language tag, for example, <code>en</code> for English.</para><para>This setting affects the languages used in the results, but not the results themselves.
            If no language is specified, or not supported for a particular result, the partner
            automatically chooses a language for the result.</para><para>For an example, we'll use the Greek language. You search for a location around Athens,
            Greece, with the <code>language</code> parameter set to <code>en</code>. The <code>city</code>
            in the results will most likely be returned as <code>Athens</code>.</para><para>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then
            the <code>city</code> in the results will more likely be returned as <code>Αθήνα</code>.</para><para>If the data provider does not have a value for Greek, the result will be in a language
            that the provider does support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet.PlaceId">
            <summary>
            <para>
            <para>The identifier of the place to find.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Place'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.GetPlaceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.GetPlaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexCmdlet">
            <summary>
            Retrieves the place index resource details.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DescribePlaceIndexResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.DescribePlaceIndexResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexListCmdlet">
            <summary>
            Lists place index resources in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the maximum number of results returned in a single call.</para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page.</para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCPlaceIndexListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListPlaceIndexesResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListPlaceIndexesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCResourceTagSetCmdlet">
            <summary>
            Returns a list of tags that are applied to the specified Amazon Location resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCResourceTagSetCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.</para><ul><li><para>Format example: <code>arn:aws:geo:region:account-id:resourcetype/ExampleResource</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCResourceTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCResourceTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet">
            <summary>
            <a href="https://docs.aws.amazon.com/location/latest/developerguide/calculate-route.html">Calculates
            a route</a> given the following required parameters: <code>DeparturePosition</code>
            and <code>DestinationPosition</code>. Requires that you first <a href="https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html">create
            a route calculator resource</a>.
            
             
            <para>
            By default, a request that doesn't specify a departure time uses the best time of
            day to travel with the best traffic conditions when calculating the route.
            </para><para>
            Additional options include:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html">Specifying
            a departure time</a> using either <code>DepartureTime</code> or <code>DepartNow</code>.
            This calculates a route based on predictive traffic data at the given time. 
            </para><note><para>
            You can't specify both <code>DepartureTime</code> and <code>DepartNow</code> in a
            single request. Specifying both parameters returns a validation error.
            </para></note></li><li><para><a href="https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html">Specifying
            a travel mode</a> using TravelMode sets the transportation mode used to calculate
            the routes. This also lets you specify additional route preferences in <code>CarModeOptions</code>
            if traveling by <code>Car</code>, or <code>TruckModeOptions</code> if traveling by
            <code>Truck</code>.
            </para><note><para>
            If you specify <code>walking</code> for the travel mode and your data provider is
            Esri, the start and destination must be within 40km.
            </para></note></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.CarModeOptions_AvoidFerry">
            <summary>
            <para>
            <para>Avoids ferries when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.TruckModeOptions_AvoidFerry">
            <summary>
            <para>
            <para>Avoids ferries when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.CarModeOptions_AvoidToll">
            <summary>
            <para>
            <para>Avoids tolls when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.TruckModeOptions_AvoidToll">
            <summary>
            <para>
            <para>Avoids tolls when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource that you want to use to calculate the route.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.DepartNow">
            <summary>
            <para>
            <para>Sets the time of departure as the current time. Uses the current time to calculate
            a route. Otherwise, the best time of day to travel with the best traffic conditions
            is used to calculate the route.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.DeparturePosition">
            <summary>
            <para>
            <para>The start position for the route. Defined in <a href="https://earth-info.nga.mil/index.php?dir=wgs84&amp;action=wgs84">World
            Geodetic System (WGS 84)</a> format: <code>[longitude, latitude]</code>.</para><ul><li><para>For example, <code>[-123.115, 49.285]</code></para></li></ul><note><para>If you specify a departure that's not located on a road, Amazon Location <a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html">moves
            the position to the nearest road</a>. If Esri is the provider for your route calculator,
            specifying a route that is longer than 400 km returns a <code>400 RoutesValidationException</code>
            error.</para></note><para>Valid Values: <code>[-180 to 180,-90 to 90]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.DepartureTime">
            <summary>
            <para>
            <para>Specifies the desired time of departure. Uses the given time to calculate the route.
            Otherwise, the best time of day to travel with the best traffic conditions is used
            to calculate the route.</para><note><para>Setting a departure time in the past returns a <code>400 ValidationException</code>
            error.</para></note><ul><li><para>In <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format:
            <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. For example, <code>2020–07-2T12:15:20.000Z+01:00</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.DestinationPosition">
            <summary>
            <para>
            <para>The finish position for the route. Defined in <a href="https://earth-info.nga.mil/index.php?dir=wgs84&amp;action=wgs84">World
            Geodetic System (WGS 84)</a> format: <code>[longitude, latitude]</code>.</para><ul><li><para> For example, <code>[-122.339, 47.615]</code></para></li></ul><note><para>If you specify a destination that's not located on a road, Amazon Location <a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html">moves
            the position to the nearest road</a>. </para></note><para>Valid Values: <code>[-180 to 180,-90 to 90]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.DistanceUnit">
            <summary>
            <para>
            <para>Set the unit system to specify the distance.</para><para>Default Value: <code>Kilometers</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Dimensions_Height">
            <summary>
            <para>
            <para>The height of the truck.</para><ul><li><para>For example, <code>4.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 50 meters.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.IncludeLegGeometry">
            <summary>
            <para>
            <para>Set to include the geometry details in the result for each path between a pair of
            positions.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Dimensions_Length">
            <summary>
            <para>
            <para>The length of the truck.</para><ul><li><para>For example, <code>15.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 300
            meters. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Weight_Total">
            <summary>
            <para>
            <para>The total weight of the truck. </para><ul><li><para>For example, <code>3500</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.TravelMode">
            <summary>
            <para>
            <para>Specifies the mode of transport when calculating a route. Used in estimating the speed
            of travel and road compatibility. You can choose <code>Car</code>, <code>Truck</code>,
            or <code>Walking</code> as options for the <code>TravelMode</code>.</para><para>The <code>TravelMode</code> you specify also determines how you specify route preferences:
            </para><ul><li><para>If traveling by <code>Car</code> use the <code>CarModeOptions</code> parameter.</para></li><li><para>If traveling by <code>Truck</code> use the <code>TruckModeOptions</code> parameter.</para></li></ul><para>Default Value: <code>Car</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Dimensions_Unit">
            <summary>
            <para>
            <para> Specifies the unit of measurement for the truck dimensions.</para><para>Default Value: <code>Meters</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Weight_Unit">
            <summary>
            <para>
            <para>The unit of measurement to use for the truck weight.</para><para>Default Value: <code>Kilograms</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.WaypointPosition">
            <summary>
            <para>
            <para>Specifies an ordered list of up to 23 intermediate positions to include along a route
            between the departure position and destination position. </para><ul><li><para>For example, from the <code>DeparturePosition</code><code>[-123.115, 49.285]</code>,
            the route follows the order that the waypoint positions are given <code>[[-122.757,
            49.0021],[-122.349, 47.620]]</code></para></li></ul><note><para>If you specify a waypoint position that's not located on a road, Amazon Location <a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html">moves
            the position to the nearest road</a>. </para><para>Specifying more than 23 waypoints returns a <code>400 ValidationException</code> error.</para><para>If Esri is the provider for your route calculator, specifying a route that is longer
            than 400 km returns a <code>400 RoutesValidationException</code> error.</para></note><para>Valid Values: <code>[-180 to 180,-90 to 90]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Dimensions_Width">
            <summary>
            <para>
            <para>The width of the truck.</para><ul><li><para>For example, <code>4.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 50 meters.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CalculateRouteResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CalculateRouteResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorCmdlet">
            <summary>
            Retrieves the route calculator resource details.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DescribeRouteCalculatorResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.DescribeRouteCalculatorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorListCmdlet">
            <summary>
            Lists route calculator resources in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional maximum number of results returned in a single call.</para><para>Default Value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page.</para><para>Default Value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteCalculatorListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListRouteCalculatorsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListRouteCalculatorsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet">
            <summary>
            <a href="https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html">
            Calculates a route matrix</a> given the following required parameters: <code>DeparturePositions</code>
            and <code>DestinationPositions</code>. <code>CalculateRouteMatrix</code> calculates
            routes and returns the travel time and travel distance from each departure position
            to each destination position in the request. For example, given departure positions
            A and B, and destination positions X and Y, <code>CalculateRouteMatrix</code> will
            return time and distance for routes from A to X, A to Y, B to X, and B to Y (in that
            order). The number of results returned (and routes calculated) will be the number
            of <code>DeparturePositions</code> times the number of <code>DestinationPositions</code>.
            
             <note><para>
            Your account is charged for each route calculated, not the number of requests.
            </para></note><para>
            Requires that you first <a href="https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html">create
            a route calculator resource</a>.
            </para><para>
            By default, a request that doesn't specify a departure time uses the best time of
            day to travel with the best traffic conditions when calculating routes.
            </para><para>
            Additional options include:
            </para><ul><li><para><a href="https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html">
            Specifying a departure time</a> using either <code>DepartureTime</code> or <code>DepartNow</code>.
            This calculates routes based on predictive traffic data at the given time. 
            </para><note><para>
            You can't specify both <code>DepartureTime</code> and <code>DepartNow</code> in a
            single request. Specifying both parameters returns a validation error.
            </para></note></li><li><para><a href="https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html">Specifying
            a travel mode</a> using TravelMode sets the transportation mode used to calculate
            the routes. This also lets you specify additional route preferences in <code>CarModeOptions</code>
            if traveling by <code>Car</code>, or <code>TruckModeOptions</code> if traveling by
            <code>Truck</code>.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.CarModeOptions_AvoidFerry">
            <summary>
            <para>
            <para>Avoids ferries when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.TruckModeOptions_AvoidFerry">
            <summary>
            <para>
            <para>Avoids ferries when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.CarModeOptions_AvoidToll">
            <summary>
            <para>
            <para>Avoids tolls when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.TruckModeOptions_AvoidToll">
            <summary>
            <para>
            <para>Avoids tolls when calculating routes.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource that you want to use to calculate the route
            matrix. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.DepartNow">
            <summary>
            <para>
            <para>Sets the time of departure as the current time. Uses the current time to calculate
            the route matrix. You can't set both <code>DepartureTime</code> and <code>DepartNow</code>.
            If neither is set, the best time of day to travel with the best traffic conditions
            is used to calculate the route matrix.</para><para>Default Value: <code>false</code></para><para>Valid Values: <code>false</code> | <code>true</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.DeparturePosition">
            <summary>
            <para>
            <para>The list of departure (origin) positions for the route matrix. An array of points,
            each of which is itself a 2-value array defined in <a href="https://earth-info.nga.mil/GandG/wgs84/index.html">WGS
            84</a> format: <code>[longitude, latitude]</code>. For example, <code>[-123.115, 49.285]</code>.</para><important><para>Depending on the data provider selected in the route calculator resource there may
            be additional restrictions on the inputs you can choose. See <a href="https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits">
            Position restrictions</a> in the <i>Amazon Location Service Developer Guide</i>.</para></important><note><para>For route calculators that use Esri as the data provider, if you specify a departure
            that's not located on a road, Amazon Location <a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html">
            moves the position to the nearest road</a>. The snapped value is available in the
            result in <code>SnappedDeparturePositions</code>.</para></note><para>Valid Values: <code>[-180 to 180,-90 to 90]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.DepartureTime">
            <summary>
            <para>
            <para>Specifies the desired time of departure. Uses the given time to calculate the route
            matrix. You can't set both <code>DepartureTime</code> and <code>DepartNow</code>.
            If neither is set, the best time of day to travel with the best traffic conditions
            is used to calculate the route matrix.</para><note><para>Setting a departure time in the past returns a <code>400 ValidationException</code>
            error.</para></note><ul><li><para>In <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format:
            <code>YYYY-MM-DDThh:mm:ss.sssZ</code>. For example, <code>2020–07-2T12:15:20.000Z+01:00</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.DestinationPosition">
            <summary>
            <para>
            <para>The list of destination positions for the route matrix. An array of points, each of
            which is itself a 2-value array defined in <a href="https://earth-info.nga.mil/GandG/wgs84/index.html">WGS
            84</a> format: <code>[longitude, latitude]</code>. For example, <code>[-122.339, 47.615]</code></para><important><para>Depending on the data provider selected in the route calculator resource there may
            be additional restrictions on the inputs you can choose. See <a href="https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits">
            Position restrictions</a> in the <i>Amazon Location Service Developer Guide</i>.</para></important><note><para>For route calculators that use Esri as the data provider, if you specify a destination
            that's not located on a road, Amazon Location <a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html">
            moves the position to the nearest road</a>. The snapped value is available in the
            result in <code>SnappedDestinationPositions</code>.</para></note><para>Valid Values: <code>[-180 to 180,-90 to 90]</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.DistanceUnit">
            <summary>
            <para>
            <para>Set the unit system to specify the distance.</para><para>Default Value: <code>Kilometers</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Dimensions_Height">
            <summary>
            <para>
            <para>The height of the truck.</para><ul><li><para>For example, <code>4.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 50 meters.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Dimensions_Length">
            <summary>
            <para>
            <para>The length of the truck.</para><ul><li><para>For example, <code>15.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 300
            meters. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Weight_Total">
            <summary>
            <para>
            <para>The total weight of the truck. </para><ul><li><para>For example, <code>3500</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.TravelMode">
            <summary>
            <para>
            <para>Specifies the mode of transport when calculating a route. Used in estimating the speed
            of travel and road compatibility.</para><para>The <code>TravelMode</code> you specify also determines how you specify route preferences:
            </para><ul><li><para>If traveling by <code>Car</code> use the <code>CarModeOptions</code> parameter.</para></li><li><para>If traveling by <code>Truck</code> use the <code>TruckModeOptions</code> parameter.</para></li></ul><para>Default Value: <code>Car</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Dimensions_Unit">
            <summary>
            <para>
            <para> Specifies the unit of measurement for the truck dimensions.</para><para>Default Value: <code>Meters</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Weight_Unit">
            <summary>
            <para>
            <para>The unit of measurement to use for the truck weight.</para><para>Default Value: <code>Kilograms</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Dimensions_Width">
            <summary>
            <para>
            <para>The width of the truck.</para><ul><li><para>For example, <code>4.5</code>.</para></li></ul><note><para> For routes calculated with a HERE resource, this value must be between 0 and 50 meters.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CalculateRouteMatrixResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CalculateRouteMatrixResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCRouteMatrixCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerCmdlet">
            <summary>
            Retrieves the tracker resource details.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DescribeTrackerResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.DescribeTrackerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet">
            <summary>
            Lists geofence collections currently associated to the given tracker resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet.TrackerName">
            <summary>
            <para>
            <para>The tracker resource whose associated geofence collections you want to list.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of resources returned in a single call. </para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page. </para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConsumerArns'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListTrackerConsumersResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListTrackerConsumersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerConsumerListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerListCmdlet">
            <summary>
            Lists tracker resources in your AWS account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerListCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional limit for the number of resources returned in a single call. </para><para>Default value: <code>100</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerListCmdlet.NextToken">
            <summary>
            <para>
            <para>The pagination token specifying which page of results to return in the response. If
            no token is provided, the default page is the first page. </para><para>Default value: <code>null</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.GetLOCTrackerListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Entries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.ListTrackersResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.ListTrackersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet">
            <summary>
            Creates a geofence collection, which manages and stores geofences.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.CollectionName">
            <summary>
            <para>
            <para>A custom name for the geofence collection.</para><para>Requirements:</para><ul><li><para>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and
            underscores (_). </para></li><li><para>Must be a unique geofence collection name.</para></li><li><para>No spaces allowed. For example, <code>ExampleGeofenceCollection</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the geofence collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>A key identifier for an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html">AWS
            KMS customer managed key</a>. Enter a key ID, key ARN, alias name, or alias ARN. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to the geofence collection. A tag is a key-value pair helps
            manage, identify, search, and filter your resources by labelling them.</para><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource</para></li><li><para>Each resource tag must be unique with a maximum of one value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @. </para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.PricingPlanDataSource">
            <summary>
            <para>
            <para>This parameter is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CreateGeofenceCollectionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CreateGeofenceCollectionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCGeofenceCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet">
            <summary>
            Creates a map resource in your AWS account, which provides map tiles of different
            styles sourced from global location data providers.
            
             <note><para>
            If your application is tracking or routing assets you use in your business, such as
            delivery vehicles or employees, you may only use HERE as your geolocation provider.
            See section 82 of the <a href="http://aws.amazon.com/service-terms">AWS service terms</a>
            for more details.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the map resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.MapName">
            <summary>
            <para>
            <para>The name for the map resource.</para><para>Requirements:</para><ul><li><para>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.),
            and underscores (_). </para></li><li><para>Must be a unique map resource name. </para></li><li><para>No spaces allowed. For example, <code>ExampleMap</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.Configuration_Style">
            <summary>
            <para>
            <para>Specifies the map style selected from an available data provider.</para><para>Valid <a href="https://docs.aws.amazon.com/location/latest/developerguide/esri.html">Esri
            map styles</a>:</para><ul><li><para><code>VectorEsriDarkGrayCanvas</code> – The Esri Dark Gray Canvas map style. A vector
            basemap with a dark gray, neutral background with minimal colors, labels, and features
            that's designed to draw attention to your thematic content. </para></li><li><para><code>RasterEsriImagery</code> – The Esri Imagery map style. A raster basemap that
            provides one meter or better satellite and aerial imagery in many parts of the world
            and lower resolution satellite imagery worldwide. </para></li><li><para><code>VectorEsriLightGrayCanvas</code> – The Esri Light Gray Canvas map style, which
            provides a detailed vector basemap with a light gray, neutral background style with
            minimal colors, labels, and features that's designed to draw attention to your thematic
            content. </para></li><li><para><code>VectorEsriTopographic</code> – The Esri Light map style, which provides a detailed
            vector basemap with a classic Esri map style.</para></li><li><para><code>VectorEsriStreets</code> – The Esri World Streets map style, which provides
            a detailed vector basemap for the world symbolized with a classic Esri street map
            style. The vector tile layer is similar in content and style to the World Street Map
            raster map.</para></li><li><para><code>VectorEsriNavigation</code> – The Esri World Navigation map style, which provides
            a detailed basemap for the world symbolized with a custom navigation map style that's
            designed for use during the day in mobile devices.</para></li></ul><para>Valid <a href="https://docs.aws.amazon.com/location/latest/developerguide/HERE.html">HERE
            Technologies map styles</a>:</para><ul><li><para><code>VectorHereContrast</code> – The HERE Contrast (Berlin) map style is a high
            contrast detailed base map of the world that blends 3D and 2D rendering.</para><note><para>The <code>VectorHereContrast</code> style has been renamed from <code>VectorHereBerlin</code>.
            <code>VectorHereBerlin</code> has been deprecated, but will continue to work in applications
            that use it.</para></note></li><li><para><code>VectorHereExplore</code> – A default HERE map style containing a neutral, global
            map and its features including roads, buildings, landmarks, and water features. It
            also now includes a fully designed map of Japan.</para></li><li><para><code>VectorHereExploreTruck</code> – A global map containing truck restrictions
            and attributes (e.g. width / height / HAZMAT) symbolized with highlighted segments
            and icons on top of HERE Explore to support use cases within transport and logistics.</para></li><li><para><code>RasterHereExploreSatellite</code> – A global map containing high resolution
            satellite imagery.</para></li><li><para><code>HybridHereExploreSatellite</code> – A global map displaying the road network,
            street names, and city labels over satellite imagery. This style will automatically
            retrieve both raster and vector tiles, and your charges will be based on total tiles
            retrieved.</para><note><para>Hybrid styles use both vector and raster tiles when rendering the map that you see.
            This means that more tiles are retrieved than when using either vector or raster tiles
            alone. Your charges will include all tiles retrieved.</para></note></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to the map resource. A tag is a key-value pair helps manage,
            identify, search, and filter your resources by labelling them.</para><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource</para></li><li><para>Each resource tag must be unique with a maximum of one value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @. </para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CreateMapResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CreateMapResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCMapCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet">
            <summary>
            Creates a place index resource in your AWS account. Use a place index resource to
            geocode addresses and other text queries by using the <code>SearchPlaceIndexForText</code>
            operation, and reverse geocode coordinates by using the <code>SearchPlaceIndexForPosition</code>
            operation, and enable autosuggestions by using the <code>SearchPlaceIndexForSuggestions</code>
            operation.
            
             <note><para>
            If your application is tracking or routing assets you use in your business, such as
            delivery vehicles or employees, you may only use HERE as your geolocation provider.
            See section 82 of the <a href="http://aws.amazon.com/service-terms">AWS service terms</a>
            for more details.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.DataSource">
            <summary>
            <para>
            <para>Specifies the geospatial data provider for the new place index.</para><note><para>This field is case-sensitive. Enter the valid values as shown. For example, entering
            <code>HERE</code> returns an error.</para></note><para>Valid values include:</para><ul><li><para><code>Esri</code> – For additional information about <a href="https://docs.aws.amazon.com/location/latest/developerguide/esri.html">Esri</a>'s
            coverage in your region of interest, see <a href="https://developers.arcgis.com/rest/geocode/api-reference/geocode-coverage.htm">Esri
            details on geocoding coverage</a>.</para></li><li><para><code>Here</code> – For additional information about <a href="https://docs.aws.amazon.com/location/latest/developerguide/HERE.html">HERE
            Technologies</a>' coverage in your region of interest, see <a href="https://developer.here.com/documentation/geocoder/dev_guide/topics/coverage-geocoder.html">HERE
            details on goecoding coverage</a>.</para><important><para>If you specify HERE Technologies (<code>Here</code>) as the data provider, you may
            not <a href="https://docs.aws.amazon.com/location-places/latest/APIReference/API_DataSourceConfiguration.html">store
            results</a> for locations in Japan. For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS
            Service Terms</a> for Amazon Location Service.</para></important></li></ul><para>For additional information , see <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Data
            providers</a> on the <i>Amazon Location Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.Description">
            <summary>
            <para>
            <para>The optional description for the place index resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource. </para><para>Requirements:</para><ul><li><para>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and
            underscores (_).</para></li><li><para>Must be a unique place index resource name.</para></li><li><para>No spaces allowed. For example, <code>ExamplePlaceIndex</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.DataSourceConfiguration_IntendedUse">
            <summary>
            <para>
            <para>Specifies how the results of an operation will be stored by the caller. </para><para>Valid values include:</para><ul><li><para><code>SingleUse</code> specifies that the results won't be stored. </para></li><li><para><code>Storage</code> specifies that the result can be cached or stored in a database.</para></li></ul><para>Default value: <code>SingleUse</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to the place index resource. A tag is a key-value pair that
            helps you manage, identify, search, and filter your resources.</para><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource.</para></li><li><para>Each tag key must be unique and must have exactly one associated value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8.</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8.</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @</para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CreatePlaceIndexResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CreatePlaceIndexResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCPlaceIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet">
            <summary>
            Creates a route calculator resource in your AWS account.
            
             
            <para>
            You can send requests to a route calculator resource to estimate travel time, distance,
            and get directions. A route calculator sources traffic and road network data from
            your chosen data provider.
            </para><note><para>
            If your application is tracking or routing assets you use in your business, such as
            delivery vehicles or employees, you may only use HERE as your geolocation provider.
            See section 82 of the <a href="http://aws.amazon.com/service-terms">AWS service terms</a>
            for more details.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource. </para><para>Requirements:</para><ul><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-), periods (.), and underscores
            (_).</para></li><li><para>Must be a unique Route calculator resource name.</para></li><li><para>No spaces allowed. For example, <code>ExampleRouteCalculator</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.DataSource">
            <summary>
            <para>
            <para>Specifies the data provider of traffic and road network data.</para><note><para>This field is case-sensitive. Enter the valid values as shown. For example, entering
            <code>HERE</code> returns an error. Route calculators that use Esri as a data source
            only calculate routes that are shorter than 400 km.</para></note><para>Valid values include:</para><ul><li><para><code>Esri</code> – For additional information about <a href="https://docs.aws.amazon.com/location/latest/developerguide/esri.html">Esri</a>'s
            coverage in your region of interest, see <a href="https://doc.arcgis.com/en/arcgis-online/reference/network-coverage.htm">Esri
            details on street networks and traffic coverage</a>.</para></li><li><para><code>Here</code> – For additional information about <a href="https://docs.aws.amazon.com/location/latest/developerguide/HERE.html">HERE
            Technologies</a>' coverage in your region of interest, see <a href="https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/car-routing.html">HERE
            car routing coverage</a> and <a href="https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/truck-routing.html">HERE
            truck routing coverage</a>.</para></li></ul><para>For additional information , see <a href="https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html">Data
            providers</a> on the <i>Amazon Location Service Developer Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.Description">
            <summary>
            <para>
            <para>The optional description for the route calculator resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to the route calculator resource. A tag is a key-value pair
            helps manage, identify, search, and filter your resources by labelling them.</para><ul><li><para>For example: { <code>"tag1" : "value1"</code>, <code>"tag2" : "value2"</code>}</para></li></ul><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource</para></li><li><para>Each resource tag must be unique with a maximum of one value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @. </para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CreateRouteCalculatorResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CreateRouteCalculatorResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCRouteCalculatorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet">
            <summary>
            Creates a tracker resource in your AWS account, which lets you retrieve current and
            historical location of devices.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.Description">
            <summary>
            <para>
            <para>An optional description for the tracker resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.KmsKeyId">
            <summary>
            <para>
            <para>A key identifier for an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html">AWS
            KMS customer managed key</a>. Enter a key ID, key ARN, alias name, or alias ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.PositionFiltering">
            <summary>
            <para>
            <para>Specifies the position filtering for the tracker resource.</para><para>Valid values:</para><ul><li><para><code>TimeBased</code> - Location updates are evaluated against linked geofence collections,
            but not every location update is stored. If your update frequency is more often than
            30 seconds, only one update per 30 seconds is stored for each unique device ID. </para></li><li><para><code>DistanceBased</code> - If the device has moved less than 30 m (98.4 ft), location
            updates are ignored. Location updates within this area are neither evaluated against
            linked geofence collections, nor stored. This helps control costs by reducing the
            number of geofence evaluations and historical device positions to paginate through.
            Distance-based filtering can also reduce the effects of GPS noise when displaying
            device trajectories on a map. </para></li><li><para><code>AccuracyBased</code> - If the device has moved less than the measured accuracy,
            location updates are ignored. For example, if two consecutive updates from a device
            have a horizontal accuracy of 5 m and 10 m, the second update is ignored if the device
            has moved less than 15 m. Ignored location updates are neither evaluated against linked
            geofence collections, nor stored. This can reduce the effects of GPS noise when displaying
            device trajectories on a map, and can help control your costs by reducing the number
            of geofence evaluations. </para></li></ul><para>This field is optional. If not specified, the default value is <code>TimeBased</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.Tag">
            <summary>
            <para>
            <para>Applies one or more tags to the tracker resource. A tag is a key-value pair helps
            manage, identify, search, and filter your resources by labelling them.</para><para>Format: <code>"key" : "value"</code></para><para>Restrictions:</para><ul><li><para>Maximum 50 tags per resource</para></li><li><para>Each resource tag must be unique with a maximum of one value.</para></li><li><para>Maximum key length: 128 Unicode characters in UTF-8</para></li><li><para>Maximum value length: 256 Unicode characters in UTF-8</para></li><li><para>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + -
            = . _ : / @. </para></li><li><para>Cannot use "aws:" as a prefix for a key.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name for the tracker resource.</para><para>Requirements:</para><ul><li><para>Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and
            underscores (_).</para></li><li><para>Must be a unique tracker resource name.</para></li><li><para>No spaces allowed. For example, <code>ExampleTracker</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.PricingPlan">
            <summary>
            <para>
            <para>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.PricingPlanDataSource">
            <summary>
            <para>
            <para>This parameter is no longer used.</para>
            </para>
            <para>This parameter is deprecated.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.CreateTrackerResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.CreateTrackerResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.NewLOCTrackerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet">
            <summary>
            Creates an association between a geofence collection and a tracker resource. This
            allows the tracker resource to communicate location data to the linked geofence collection.
            
            
             
            <para>
            You can associate up to five geofence collections to each tracker resource.
            </para><note><para>
            Currently not supported — Cross-account configurations, such as creating associations
            between a tracker resource in one account and a geofence collection in another account.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet.ConsumerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker
            resource. Used when you need to specify a resource across all AWS.</para><ul><li><para>Format example: <code>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to be associated with a geofence collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.AssociateTrackerConsumerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RegisterLOCTrackerConsumerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet">
            <summary>
            Deletes the position history of one or more devices from a tracker resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet.DeviceId">
            <summary>
            <para>
            <para>Devices whose position history you want to delete.</para><ul><li><para>For example, for two devices: <code>“DeviceIds” : [DeviceId1,DeviceId2]</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to delete the device position history from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchDeleteDevicePositionHistoryResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchDeleteDevicePositionHistoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCDevicePositionHistoryBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet">
            <summary>
            Deletes a batch of geofences from a geofence collection.
            
             <note><para>
            This operation deletes the resource permanently.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet.CollectionName">
            <summary>
            <para>
            <para>The geofence collection storing the geofences to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet.GeofenceId">
            <summary>
            <para>
            <para>The batch of geofences to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchDeleteGeofenceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchDeleteGeofenceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceCollectionCmdlet">
            <summary>
            Deletes a geofence collection from your AWS account.
            
             <note><para>
            This operation deletes the resource permanently. If the geofence collection is the
            target of a tracker resource, the devices will no longer be monitored.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceCollectionCmdlet.CollectionName">
            <summary>
            <para>
            <para>The name of the geofence collection to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceCollectionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DeleteGeofenceCollectionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceCollectionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCGeofenceCollectionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCMapCmdlet">
            <summary>
            Deletes a map resource from your AWS account.
            
             <note><para>
            This operation deletes the resource permanently. If the map is being used in an application,
            the map may not render.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCMapCmdlet.MapName">
            <summary>
            <para>
            <para>The name of the map resource to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCMapCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DeleteMapResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCMapCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MapName parameter.
            The -PassThru parameter is deprecated, use -Select '^MapName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCMapCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCPlaceIndexCmdlet">
            <summary>
            Deletes a place index resource from your AWS account.
            
             <note><para>
            This operation deletes the resource permanently.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCPlaceIndexCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCPlaceIndexCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DeletePlaceIndexResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCPlaceIndexCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCPlaceIndexCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet">
            <summary>
            Removes one or more tags from the specified Amazon Location resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which you want to remove tags.</para><ul><li><para>Format example: <code>arn:aws:geo:region:account-id:resourcetype/ExampleResource</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet.TagKey">
            <summary>
            <para>
            <para>The list of tag keys to remove from the specified resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCResourceTagSetCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCRouteCalculatorCmdlet">
            <summary>
            Deletes a route calculator resource from your AWS account.
            
             <note><para>
            This operation deletes the resource permanently.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCRouteCalculatorCmdlet.CalculatorName">
            <summary>
            <para>
            <para>The name of the route calculator resource to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCRouteCalculatorCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DeleteRouteCalculatorResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCRouteCalculatorCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CalculatorName parameter.
            The -PassThru parameter is deprecated, use -Select '^CalculatorName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCRouteCalculatorCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCTrackerCmdlet">
            <summary>
            Deletes a tracker resource from your AWS account.
            
             <note><para>
            This operation deletes the resource permanently. If the tracker resource is in use,
            you may encounter an error. Make sure that the target resource isn't a dependency
            for your applications.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCTrackerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCTrackerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DeleteTrackerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCTrackerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.RemoveLOCTrackerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet">
            <summary>
            Reverse geocodes a given coordinate and returns a legible address. Allows you to search
            for Places or points of interest near a given position.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource you want to use for the search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.Language">
            <summary>
            <para>
            <para>The preferred language used to return results. The value must be a valid <a href="https://tools.ietf.org/search/bcp47">BCP
            47</a> language tag, for example, <code>en</code> for English.</para><para>This setting affects the languages used in the results, but not the results themselves.
            If no language is specified, or not supported for a particular result, the partner
            automatically chooses a language for the result.</para><para>For an example, we'll use the Greek language. You search for a location around Athens,
            Greece, with the <code>language</code> parameter set to <code>en</code>. The <code>city</code>
            in the results will most likely be returned as <code>Athens</code>.</para><para>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then
            the <code>city</code> in the results will more likely be returned as <code>Αθήνα</code>.</para><para>If the data provider does not have a value for Greek, the result will be in a language
            that the provider does support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.Position">
            <summary>
            <para>
            <para>Specifies the longitude and latitude of the position to query.</para><para> This parameter must contain a pair of numbers. The first number represents the X
            coordinate, or longitude; the second number represents the Y coordinate, or latitude.</para><para>For example, <code>[-123.1174, 49.2847]</code> represents a position with longitude
            <code>-123.1174</code> and latitude <code>49.2847</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional parameter. The maximum number of results returned per request.</para><para>Default value: <code>50</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.SearchPlaceIndexForPositionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.SearchPlaceIndexForPositionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForPositionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet">
            <summary>
            Generates suggestions for addresses and points of interest based on partial or misspelled
            free-form text. This operation is also known as autocomplete, autosuggest, or fuzzy
            matching.
            
             
            <para>
            Optional parameters let you narrow your search results by bounding box or country,
            or bias your search toward a specific position on the globe.
            </para><note><para>
            You can search for suggested place names near a specified position by using <code>BiasPosition</code>,
            or filter results within a bounding box by using <code>FilterBBox</code>. These parameters
            are mutually exclusive; using both <code>BiasPosition</code> and <code>FilterBBox</code>
            in the same command returns an error.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.BiasPosition">
            <summary>
            <para>
            <para>An optional parameter that indicates a preference for place suggestions that are closer
            to a specified position.</para><para> If provided, this parameter must contain a pair of numbers. The first number represents
            the X coordinate, or longitude; the second number represents the Y coordinate, or
            latitude.</para><para>For example, <code>[-123.1174, 49.2847]</code> represents the position with longitude
            <code>-123.1174</code> and latitude <code>49.2847</code>.</para><note><para><code>BiasPosition</code> and <code>FilterBBox</code> are mutually exclusive. Specifying
            both options results in an error. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.FilterBBox">
            <summary>
            <para>
            <para>An optional parameter that limits the search results by returning only suggestions
            within a specified bounding box.</para><para> If provided, this parameter must contain a total of four consecutive numbers in two
            pairs. The first pair of numbers represents the X and Y coordinates (longitude and
            latitude, respectively) of the southwest corner of the bounding box; the second pair
            of numbers represents the X and Y coordinates (longitude and latitude, respectively)
            of the northeast corner of the bounding box.</para><para>For example, <code>[-12.7935, -37.4835, -12.0684, -36.9542]</code> represents a bounding
            box where the southwest corner has longitude <code>-12.7935</code> and latitude <code>-37.4835</code>,
            and the northeast corner has longitude <code>-12.0684</code> and latitude <code>-36.9542</code>.</para><note><para><code>FilterBBox</code> and <code>BiasPosition</code> are mutually exclusive. Specifying
            both options results in an error. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.FilterCountry">
            <summary>
            <para>
            <para>An optional parameter that limits the search results by returning only suggestions
            within the provided list of countries.</para><ul><li><para>Use the <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> 3-digit
            country code. For example, Australia uses three upper-case characters: <code>AUS</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource you want to use for the search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.Language">
            <summary>
            <para>
            <para>The preferred language used to return results. The value must be a valid <a href="https://tools.ietf.org/search/bcp47">BCP
            47</a> language tag, for example, <code>en</code> for English.</para><para>This setting affects the languages used in the results. If no language is specified,
            or not supported for a particular result, the partner automatically chooses a language
            for the result.</para><para>For an example, we'll use the Greek language. You search for <code>Athens, Gr</code>
            to get suggestions with the <code>language</code> parameter set to <code>en</code>.
            The results found will most likely be returned as <code>Athens, Greece</code>.</para><para>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then
            the result found will more likely be returned as <code>Αθήνα, Ελλάδα</code>.</para><para>If the data provider does not have a value for Greek, the result will be in a language
            that the provider does support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.Text">
            <summary>
            <para>
            <para>The free-form partial text to use to generate place suggestions. For example, <code>eiffel
            tow</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional parameter. The maximum number of results returned per request. </para><para>The default: <code>5</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.SearchPlaceIndexForSuggestionsResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.SearchPlaceIndexForSuggestionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForSuggestionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet">
            <summary>
            Geocodes free-form text, such as an address, name, city, or region to allow you to
            search for Places or points of interest. 
            
             
            <para>
            Optional parameters let you narrow your search results by bounding box or country,
            or bias your search toward a specific position on the globe.
            </para><note><para>
            You can search for places near a given position using <code>BiasPosition</code>, or
            filter results within a bounding box using <code>FilterBBox</code>. Providing both
            parameters simultaneously returns an error.
            </para></note><para>
            Search results are returned in order of highest to lowest relevance.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.BiasPosition">
            <summary>
            <para>
            <para>An optional parameter that indicates a preference for places that are closer to a
            specified position.</para><para> If provided, this parameter must contain a pair of numbers. The first number represents
            the X coordinate, or longitude; the second number represents the Y coordinate, or
            latitude.</para><para>For example, <code>[-123.1174, 49.2847]</code> represents the position with longitude
            <code>-123.1174</code> and latitude <code>49.2847</code>.</para><note><para><code>BiasPosition</code> and <code>FilterBBox</code> are mutually exclusive. Specifying
            both options results in an error. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.FilterBBox">
            <summary>
            <para>
            <para>An optional parameter that limits the search results by returning only places that
            are within the provided bounding box.</para><para> If provided, this parameter must contain a total of four consecutive numbers in two
            pairs. The first pair of numbers represents the X and Y coordinates (longitude and
            latitude, respectively) of the southwest corner of the bounding box; the second pair
            of numbers represents the X and Y coordinates (longitude and latitude, respectively)
            of the northeast corner of the bounding box.</para><para>For example, <code>[-12.7935, -37.4835, -12.0684, -36.9542]</code> represents a bounding
            box where the southwest corner has longitude <code>-12.7935</code> and latitude <code>-37.4835</code>,
            and the northeast corner has longitude <code>-12.0684</code> and latitude <code>-36.9542</code>.</para><note><para><code>FilterBBox</code> and <code>BiasPosition</code> are mutually exclusive. Specifying
            both options results in an error. </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.FilterCountry">
            <summary>
            <para>
            <para>An optional parameter that limits the search results by returning only places that
            are in a specified list of countries.</para><ul><li><para>Valid values include <a href="https://www.iso.org/iso-3166-country-codes.html">ISO
            3166</a> 3-digit country codes. For example, Australia uses three upper-case characters:
            <code>AUS</code>.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.IndexName">
            <summary>
            <para>
            <para>The name of the place index resource you want to use for the search.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.Language">
            <summary>
            <para>
            <para>The preferred language used to return results. The value must be a valid <a href="https://tools.ietf.org/search/bcp47">BCP
            47</a> language tag, for example, <code>en</code> for English.</para><para>This setting affects the languages used in the results, but not the results themselves.
            If no language is specified, or not supported for a particular result, the partner
            automatically chooses a language for the result.</para><para>For an example, we'll use the Greek language. You search for <code>Athens, Greece</code>,
            with the <code>language</code> parameter set to <code>en</code>. The result found
            will most likely be returned as <code>Athens</code>.</para><para>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then
            the result found will more likely be returned as <code>Αθήνα</code>.</para><para>If the data provider does not have a value for Greek, the result will be in a language
            that the provider does support.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.Text">
            <summary>
            <para>
            <para>The address, name, city, or region to be used in the search in free-form text format.
            For example, <code>123 Any Street</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.MaxResult">
            <summary>
            <para>
            <para>An optional parameter. The maximum number of results returned per request. </para><para>The default: <code>50</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.SearchPlaceIndexForTextResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.SearchPlaceIndexForTextResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SearchLOCPlaceIndexForTextCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IndexName parameter.
            The -PassThru parameter is deprecated, use -Select '^IndexName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet">
            <summary>
            Uploads position update data for one or more devices to a tracker resource. Amazon
            Location uses the data when it reports the last known device position and position
            history. Amazon Location retains location data for 30 days.
            
             <note><para>
            Position updates are handled based on the <code>PositionFiltering</code> property
            of the tracker. When <code>PositionFiltering</code> is set to <code>TimeBased</code>,
            updates are evaluated against linked geofence collections, and location data is stored
            at a maximum of one position per 30 second interval. If your update frequency is more
            often than every 30 seconds, only one update per 30 seconds is stored for each unique
            device ID.
            </para><para>
            When <code>PositionFiltering</code> is set to <code>DistanceBased</code> filtering,
            location data is stored and evaluated against linked geofence collections only if
            the device has moved more than 30 m (98.4 ft).
            </para><para>
            When <code>PositionFiltering</code> is set to <code>AccuracyBased</code> filtering,
            location data is stored and evaluated against linked geofence collections only if
            the device has moved more than the measured accuracy. For example, if two consecutive
            updates from a device have a horizontal accuracy of 5 m and 10 m, the second update
            is neither stored or evaluated if the device has moved less than 15 m. If <code>PositionFiltering</code>
            is set to <code>AccuracyBased</code> filtering, Amazon Location uses the default value
            <code>{ "Horizontal": 0}</code> when accuracy is not provided on a <code>DevicePositionUpdate</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet.Update">
            <summary>
            <para>
            <para>Contains the position update details for each device.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchUpdateDevicePositionResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchUpdateDevicePositionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCDevicePositionBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet">
            <summary>
            Stores a geofence geometry in a given geofence collection, or updates the geometry
            of an existing geofence if a geofence ID is included in the request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.Circle_Center">
            <summary>
            <para>
            <para>A single point geometry, specifying the center of the circle, using <a href="https://gisgeography.com/wgs84-world-geodetic-system/">WGS
            84</a> coordinates, in the form <code>[longitude, latitude]</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.CollectionName">
            <summary>
            <para>
            <para>The geofence collection to store the geofence in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.GeofenceId">
            <summary>
            <para>
            <para>An identifier for the geofence. For example, <code>ExampleGeofence-1</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.Geometry_Polygon">
            <summary>
            <para>
            <para>A polygon is a list of linear rings which are each made up of a list of vertices.</para><para>Each vertex is a 2-dimensional point of the form: <code>[longitude, latitude]</code>.
            This is represented as an array of doubles of length 2 (so <code>[double, double]</code>).</para><para>An array of 4 or more vertices, where the first and last vertex are the same (to form
            a closed boundary), is called a linear ring. The linear ring vertices must be listed
            in counter-clockwise order around the ring’s interior. The linear ring is represented
            as an array of vertices, or an array of arrays of doubles (<code>[[double, double],
            ...]</code>).</para><para>A geofence consists of a single linear ring. To allow for future expansion, the Polygon
            parameter takes an array of linear rings, which is represented as an array of arrays
            of arrays of doubles (<code>[[[double, double], ...], ...]</code>).</para><para>A linear ring for use in geofences can consist of between 4 and 1,000 vertices.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.Circle_Radius">
            <summary>
            <para>
            <para>The radius of the circle in meters. Must be greater than zero and no larger than 100,000
            (100 kilometers).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.PutGeofenceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.PutGeofenceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet">
            <summary>
            A batch request for storing geofence geometries into a given geofence collection,
            or updates the geometry of an existing geofence if a geofence ID is included in the
            request.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet.CollectionName">
            <summary>
            <para>
            <para>The geofence collection storing the geofences.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet.Entry">
            <summary>
            <para>
            <para>The batch of geofences to be stored in a geofence collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchPutGeofenceResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchPutGeofenceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SetLOCGeofenceBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet">
            <summary>
            Evaluates device positions against the geofence geometries from a given geofence collection.
            
             
            <para>
            This operation always returns an empty response because geofences are asynchronously
            evaluated. The evaluation determines if the device has entered or exited a geofenced
            area, and then publishes one of the following events to Amazon EventBridge:
            </para><ul><li><para><code>ENTER</code> if Amazon Location determines that the tracked device has entered
            a geofenced area.
            </para></li><li><para><code>EXIT</code> if Amazon Location determines that the tracked device has exited
            a geofenced area.
            </para></li></ul><note><para>
            The last geofence that a device was observed within is tracked for 30 days after the
            most recent device position update.
            </para></note><note><para>
            Geofence evaluation uses the given device position. It does not account for the optional
            <code>Accuracy</code> of a <code>DevicePositionUpdate</code>.
            </para></note><note><para>
            The <code>DeviceID</code> is used as a string to represent the device. You do not
            need to have a <code>Tracker</code> associated with the <code>DeviceID</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet.CollectionName">
            <summary>
            <para>
            <para>The geofence collection used in evaluating the position of devices against its geofences.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet.DevicePositionUpdate">
            <summary>
            <para>
            <para>Contains device details for each device to be evaluated against the given geofence
            collection.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.BatchEvaluateGeofencesResponse).
            Specifying the name of a property of type Amazon.LocationService.Model.BatchEvaluateGeofencesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CollectionName parameter.
            The -PassThru parameter is deprecated, use -Select '^CollectionName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.SubmitLOCGeofenceEvaluationBatchCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet">
            <summary>
            Removes the association between a tracker resource and a geofence collection.
            
             <note><para>
            Once you unlink a tracker resource from a geofence collection, the tracker positions
            will no longer be automatically evaluated against geofences.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet.ConsumerArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) for the geofence collection to be disassociated from
            the tracker resource. Used when you need to specify a resource across all AWS. </para><ul><li><para>Format example: <code>arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet.TrackerName">
            <summary>
            <para>
            <para>The name of the tracker resource to be dissociated from the consumer.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.LocationService.Model.DisassociateTrackerConsumerResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TrackerName parameter.
            The -PassThru parameter is deprecated, use -Select '^TrackerName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.LOC.UnregisterLOCTrackerConsumerCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
