<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.CodeGuruProfiler</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet">
            <summary>
            Add up to 2 anomaly notifications channels for a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet.Channel">
            <summary>
            <para>
            <para>One or 2 channels to report to when anomalies are detected.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group that we are setting up notifications for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.AddNotificationChannelsResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.AddNotificationChannelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPNotificationChannelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet">
            <summary>
            Use to assign one or more tags to a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the resource that the tags are added to. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para> The list of tags that are added to the specified resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.AddCGPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html"><code>FindingsReportSummary</code></a> objects that contain analysis results for
            all profiling groups in your AWS account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.DailyReportsOnly">
            <summary>
            <para>
            <para>A <code>Boolean</code> value indicating whether to only return reports from daily
            profiles. If set to <code>True</code>, only analysis data from daily profiles is returned.
            If set to <code>False</code>, analysis data is returned from smaller time windows
            (for example, one hour).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results returned by <code> GetFindingsReportAccountSummary</code>
            in paginated output. When this parameter is used, <code>GetFindingsReportAccountSummary</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>GetFindingsReportAccountSummary</code> request with the returned <code>nextToken</code>
            value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>GetFindingsReportAccountSummary</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. </para><note><para>This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ReportSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.GetFindingsReportAccountSummaryResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.GetFindingsReportAccountSummaryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DailyReportsOnly parameter.
            The -PassThru parameter is deprecated, use -Select '^DailyReportsOnly' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportAccountSummaryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet">
            <summary>
            List the available reports for a given profiling group and time range.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.DailyReportsOnly">
            <summary>
            <para>
            <para>A <code>Boolean</code> value indicating whether to only return reports from daily
            profiles. If set to <code>True</code>, only analysis data from daily profiles is returned.
            If set to <code>False</code>, analysis data is returned from smaller time windows
            (for example, one hour).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.EndTime">
            <summary>
            <para>
            <para> The end time of the profile to get analysis data about. You must specify <code>startTime</code>
            and <code>endTime</code>. This is specified using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group from which to search for analysis data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.StartTime">
            <summary>
            <para>
            <para> The start time of the profile to get analysis data about. You must specify <code>startTime</code>
            and <code>endTime</code>. This is specified using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of report results returned by <code>ListFindingsReports</code>
            in paginated output. When this parameter is used, <code>ListFindingsReports</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListFindingsReports</code> request with the returned <code>nextToken</code>
            value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListFindingsReportsRequest</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. </para><note><para>This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FindingsReportSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.ListFindingsReportsResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.ListFindingsReportsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPFindingsReportListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet">
            <summary>
            Returns the time series of values for a requested list of frame metrics from a time
            period.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.EndTime">
            <summary>
            <para>
            <para> The end time of the time period for the returned time series values. This is specified
            using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond
            past June 1, 2020 1:15:02 PM UTC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.FrameMetric">
            <summary>
            <para>
            <para> The details of the metrics that are used to request a time series of values. The
            metric includes the name of the frame, the aggregation type to calculate the metric
            value for the frame, and the thread states to use to get the count for the metric
            value of the frame.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.Period">
            <summary>
            <para>
            <para> The duration of the frame metrics used to return the time series values. Specify
            using the ISO 8601 format. The maximum period duration is one day (<code>PT24H</code>
            or <code>P1D</code>). </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para> The name of the profiling group associated with the the frame metrics used to return
            the time series values. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.StartTime">
            <summary>
            <para>
            <para> The start time of the time period for the frame metrics used to return the time series
            values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z
            represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.TargetResolution">
            <summary>
            <para>
            <para>The requested resolution of time steps for the returned time series of values. If
            the requested target resolution is not available due to data not being retained we
            provide a best effort result by falling back to the most granular available resolution
            after the target resolution. There are 3 valid values. </para><ul><li><para><code>P1D</code> — 1 day </para></li><li><para><code>PT1H</code> — 1 hour </para></li><li><para><code>PT5M</code> — 5 minutes </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.BatchGetFrameMetricDataResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.BatchGetFrameMetricDataResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPGetFrameMetricDataCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPNotificationConfigurationCmdlet">
            <summary>
            Get the current configuration for anomaly notifications for a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPNotificationConfigurationCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group we want to get the notification configuration for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPNotificationConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.GetNotificationConfigurationResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.GetNotificationConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPNotificationConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPPolicyCmdlet">
            <summary>
            Returns the JSON-formatted resource-based policy on a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPPolicyCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.GetPolicyResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.GetPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet">
            <summary>
            Gets the aggregated profile of a profiling group for a specified time range. Amazon
            CodeGuru Profiler collects posted agent profiles for a profiling group into aggregated
            profiles. 
            
             <pre><code> &lt;note&gt; &lt;p&gt; Because aggregated profiles expire over time &lt;code&gt;GetProfile&lt;/code&gt;
            is not idempotent. &lt;/p&gt; &lt;/note&gt; &lt;p&gt; Specify the time range for the
            requested aggregated profile using 1 or 2 of the following parameters: &lt;code&gt;startTime&lt;/code&gt;,
            &lt;code&gt;endTime&lt;/code&gt;, &lt;code&gt;period&lt;/code&gt;. The maximum time
            range allowed is 7 days. If you specify all 3 parameters, an exception is thrown.
            If you specify only &lt;code&gt;period&lt;/code&gt;, the latest aggregated profile
            is returned. &lt;/p&gt; &lt;p&gt; Aggregated profiles are available with aggregation
            periods of 5 minutes, 1 hour, and 1 day, aligned to UTC. The aggregation period of
            an aggregated profile determines how long it is retained. For more information, see
            &lt;a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html"&gt;
            &lt;code&gt;AggregatedProfileTime&lt;/code&gt; &lt;/a&gt;. The aggregated profile's
            aggregation period determines how long it is retained by CodeGuru Profiler. &lt;/p&gt;
            &lt;ul&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 5 minutes, the aggregated
            profile is retained for 15 days. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; If the
            aggregation period is 1 hour, the aggregated profile is retained for 60 days. &lt;/p&gt;
            &lt;/li&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 1 day, the aggregated
            profile is retained for 3 years. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There
            are two use cases for calling &lt;code&gt;GetProfile&lt;/code&gt;.&lt;/p&gt; &lt;ol&gt;
            &lt;li&gt; &lt;p&gt; If you want to return an aggregated profile that already exists,
            use &lt;a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ListProfileTimes.html"&gt;
            &lt;code&gt;ListProfileTimes&lt;/code&gt; &lt;/a&gt; to view the time ranges of existing
            aggregated profiles. Use them in a &lt;code&gt;GetProfile&lt;/code&gt; request to
            return a specific, existing aggregated profile. &lt;/p&gt; &lt;/li&gt; &lt;li&gt;
            &lt;p&gt; If you want to return an aggregated profile for a time range that doesn't
            align with an existing aggregated profile, then CodeGuru Profiler makes a best effort
            to combine existing aggregated profiles from the requested time range and return them
            as one aggregated profile. &lt;/p&gt; &lt;p&gt; If aggregated profiles do not exist
            for the full time range requested, then aggregated profiles for a smaller time range
            are returned. For example, if the requested time range is from 00:00 to 00:20, and
            the existing aggregated profiles are from 00:15 and 00:25, then the aggregated profiles
            from 00:15 to 00:20 are returned. &lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; </code></pre>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.Accept">
            <summary>
            <para>
            <para> The format of the returned profiling data. The format maps to the <code>Accept</code>
            and <code>Content-Type</code> headers of the HTTP request. You can specify one of
            the following: or the default . </para><pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt;
            — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt;
            — the Amazon Ion data format. For more information, see &lt;a href="http://amzn.github.io/ion-docs/"&gt;Amazon
            Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.EndTime">
            <summary>
            <para>
            <para> The end time of the requested profile. Specify using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.
            </para><para> If you specify <code>endTime</code>, then you must also specify <code>period</code>
            or <code>startTime</code>, but not both. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.MaxDepth">
            <summary>
            <para>
            <para> The maximum depth of the stacks in the code that is represented in the aggregated
            profile. For example, if CodeGuru Profiler finds a method <code>A</code>, which calls
            method <code>B</code>, which calls method <code>C</code>, which calls method <code>D</code>,
            then the depth is 4. If the <code>maxDepth</code> is set to 2, then the aggregated
            profile contains representations of methods <code>A</code> and <code>B</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.Period">
            <summary>
            <para>
            <para> Used with <code>startTime</code> or <code>endTime</code> to specify the time range
            for the returned aggregated profile. Specify using the ISO 8601 format. For example,
            <code>P1DT1H1M1S</code>. </para><pre><code> &lt;p&gt; To get the latest aggregated profile, specify only &lt;code&gt;period&lt;/code&gt;.
            &lt;/p&gt; </code></pre>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group to get.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time of the profile to get. Specify using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.</para><pre><code> &lt;p&gt; If you specify &lt;code&gt;startTime&lt;/code&gt;, then you
            must also specify &lt;code&gt;period&lt;/code&gt; or &lt;code&gt;endTime&lt;/code&gt;,
            but not both. &lt;/p&gt; </code></pre>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.GetProfileResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.GetProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet">
            <summary>
            Lists the start times of the available aggregated profiles of a profiling group for
            an aggregation period within the specified time range.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.EndTime">
            <summary>
            <para>
            <para>The end time of the time range from which to list the profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.OrderBy">
            <summary>
            <para>
            <para>The order (ascending or descending by start time of the profile) to use when listing
            profiles. Defaults to <code>TIMESTAMP_DESCENDING</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.Period">
            <summary>
            <para>
            <para> The aggregation period. This specifies the period during which an aggregation profile
            collects posted agent profiles for a profiling group. There are 3 valid values. </para><ul><li><para><code>P1D</code> — 1 day </para></li><li><para><code>PT1H</code> — 1 hour </para></li><li><para><code>PT5M</code> — 5 minutes </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.StartTime">
            <summary>
            <para>
            <para>The start time of the time range from which to list the profiles.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of profile time results returned by <code>ListProfileTimes</code>
            in paginated output. When this parameter is used, <code>ListProfileTimes</code> only
            returns <code>maxResults</code> results in a single page with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListProfileTimes</code> request with the returned <code>nextToken</code>
            value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListProfileTimes</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. </para><note><para>This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfileTimes'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.ListProfileTimesResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.ListProfileTimesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfileTimeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupCmdlet">
            <summary>
            Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"><code>ProfilingGroupDescription</code></a> object that contains information about
            the requested profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para> The name of the profiling group to get information about. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfilingGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.DescribeProfilingGroupResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.DescribeProfilingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet">
            <summary>
            Returns a list of profiling groups. The profiling groups are returned as <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"><code>ProfilingGroupDescription</code></a> objects.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.IncludeDescription">
            <summary>
            <para>
            <para>A <code>Boolean</code> value indicating whether to include a description. If <code>true</code>,
            then a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html"><code>ProfilingGroupDescription</code></a> objects that contain detailed information
            about profiling groups is returned. If <code>false</code>, then a list of profiling
            group names is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of profiling groups results returned by <code>ListProfilingGroups</code>
            in paginated output. When this parameter is used, <code>ListProfilingGroups</code>
            only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. The remaining results of the initial request can be seen by sending
            another <code>ListProfilingGroups</code> request with the returned <code>nextToken</code>
            value. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListProfilingGroups</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value. </para><note><para>This token should be treated as an opaque identifier that is only used to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.ListProfilingGroupsResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.ListProfilingGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the IncludeDescription parameter.
            The -PassThru parameter is deprecated, use -Select '^IncludeDescription' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPProfilingGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet">
            <summary>
            Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Recommendation.html"><code>Recommendation</code></a> objects that contain recommendations for a profiling
            group for a given time period. A list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Anomaly.html"><code>Anomaly</code></a> objects that contains details about anomalies detected in
            the profiling group for the same time period is also returned.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.EndTime">
            <summary>
            <para>
            <para> The start time of the profile to get analysis data about. You must specify <code>startTime</code>
            and <code>endTime</code>. This is specified using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.Locale">
            <summary>
            <para>
            <para> The language used to provide analysis. Specify using a string that is one of the
            following <code>BCP 47</code> language codes. </para><ul><li><para><code>de-DE</code> - German, Germany </para></li><li><para><code>en-GB</code> - English, United Kingdom </para></li><li><para><code>en-US</code> - English, United States </para></li><li><para><code>es-ES</code> - Spanish, Spain </para></li><li><para><code>fr-FR</code> - French, France </para></li><li><para><code>it-IT</code> - Italian, Italy </para></li><li><para><code>ja-JP</code> - Japanese, Japan </para></li><li><para><code>ko-KR</code> - Korean, Republic of Korea </para></li><li><para><code>pt-BR</code> - Portugese, Brazil </para></li><li><para><code>zh-CN</code> - Chinese, China </para></li><li><para><code>zh-TW</code> - Chinese, Taiwan </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para> The name of the profiling group to get analysis data about. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.StartTime">
            <summary>
            <para>
            <para> The end time of the profile to get analysis data about. You must specify <code>startTime</code>
            and <code>endTime</code>. This is specified using the ISO 8601 format. For example,
            2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020 1:15:02 PM UTC.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.GetRecommendationsResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.GetRecommendationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPRecommendationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.GetCGPResourceTagCmdlet">
            <summary>
            Returns a list of the tags that are assigned to a specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the resource that contains the tags to return.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.GetCGPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet">
            <summary>
            Creates a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.ComputePlatform">
            <summary>
            <para>
            <para> The compute platform of the profiling group. Use <code>AWSLambda</code> if your application
            runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute
            platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server,
            or a different platform. If not specified, <code>Default</code> is used. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.AgentOrchestrationConfig_ProfilingEnabled">
            <summary>
            <para>
            <para> A <code>Boolean</code> that specifies whether the profiling agent collects profiling
            data or not. Set to <code>true</code> to enable profiling. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group to create.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.Tag">
            <summary>
            <para>
            <para> A list of tags to add to the created profiling group. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.ClientToken">
            <summary>
            <para>
            <para> Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent
            the accidental creation of duplicate profiling groups if there are failures and retries.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfilingGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.CreateProfilingGroupResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.CreateProfilingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.NewCGPProfilingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet">
            <summary>
            Remove one anomaly notifications channel for a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet.ChannelId">
            <summary>
            <para>
            <para>The id of the channel that we want to stop receiving notifications.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group we want to change notification configuration for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'NotificationConfiguration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.RemoveNotificationChannelResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.RemoveNotificationChannelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPNotificationChannelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet">
            <summary>
            Removes permissions from a profiling group's resource-based policy that are provided
            using an action group. The one supported action group that can be removed is <code>agentPermission</code>
            which grants <code>ConfigureAgent</code> and <code>PostAgent</code> permissions. For
            more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html">Resource-based
            policies in CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>,
            <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"><code>ConfigureAgent</code></a>, and <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html"><code>PostAgentProfile</code></a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.ActionGroup">
            <summary>
            <para>
            <para> Specifies an action group that contains the permissions to remove from a profiling
            group's resource-based policy. One action group is supported, <code>agentPermissions</code>,
            which grants <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para> A universally unique identifier (UUID) for the revision of the resource-based policy
            from which you want to remove permissions. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.RemovePermissionResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.RemovePermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPProfilingGroupCmdlet">
            <summary>
            Deletes a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPProfilingGroupCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPProfilingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.DeleteProfilingGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPProfilingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPProfilingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet">
            <summary>
            Use to remove one or more tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para> The Amazon Resource Name (ARN) of the resource that contains the tags to remove.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para> A list of tag keys. Existing tags of resources with keys in this list are removed
            from the specified resource. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.RemoveCGPResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet">
            <summary>
            Submits profiling data to an aggregated profile of a profiling group. To get an aggregated
            profile that is created with this profiling data, use <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_GetProfile.html"><code>GetProfile</code></a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.AgentProfile">
            <summary>
            <para>
            <para> The submitted profiling data. </para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.ContentType">
            <summary>
            <para>
            <para> The format of the submitted profiling data. The format maps to the <code>Accept</code>
            and <code>Content-Type</code> headers of the HTTP request. You can specify one of
            the following: or the default . </para><pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt;
            — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt;
            — the Amazon Ion data format. For more information, see &lt;a href="http://amzn.github.io/ion-docs/"&gt;Amazon
            Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.ProfileToken">
            <summary>
            <para>
            <para> Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent
            the accidental submission of duplicate profiling data if there are failures and retries.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para> The name of the profiling group with the aggregated profile that receives the submitted
            profiling data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.PostAgentProfileResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AgentProfile parameter.
            The -PassThru parameter is deprecated, use -Select '^AgentProfile' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SendCGPAgentProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet">
            <summary>
            Used by profiler agents to report their current state and to receive remote configuration
            updates. For example, <code>ConfigureAgent</code> can be used to tell an agent whether
            to profile or not and for how long to return profiling data.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.FleetInstanceId">
            <summary>
            <para>
            <para> A universally unique identifier (UUID) for a profiling instance. For example, if
            the profiling instance is an Amazon EC2 instance, it is the instance ID. If it is
            an AWS Fargate container, it is the container's task ID. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.Metadata">
            <summary>
            <para>
            <para> Metadata captured about the compute platform the agent is running on. It includes
            information about sampling and reporting. The valid fields are:</para><ul><li><para><code>COMPUTE_PLATFORM</code> - The compute platform on which the agent is running
            </para></li><li><para><code>AGENT_ID</code> - The ID for an agent instance. </para></li><li><para><code>AWS_REQUEST_ID</code> - The AWS request ID of a Lambda invocation. </para></li><li><para><code>EXECUTION_ENVIRONMENT</code> - The execution environment a Lambda function
            is running on. </para></li><li><para><code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name (ARN) that is used to
            invoke a Lambda function. </para></li><li><para><code>LAMBDA_MEMORY_LIMIT_IN_MB</code> - The memory allocated to a Lambda function.
            </para></li><li><para><code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code> - The time in milliseconds before
            execution of a Lambda function times out. </para></li><li><para><code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code> - The time in milliseconds
            between two invocations of a Lambda function. </para></li><li><para><code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code> - The time in milliseconds
            for the previous Lambda invocation. </para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para> The name of the profiling group for which the configured agent is collecting profiling
            data. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Configuration'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.ConfigureAgentResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.ConfigureAgentResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SetCGPAgentConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet">
            <summary>
            Sends feedback to CodeGuru Profiler about whether the anomaly detected by the analysis
            is useful or not.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.AnomalyInstanceId">
            <summary>
            <para>
            <para>The universally unique identifier (UUID) of the <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AnomalyInstance.html"><code>AnomalyInstance</code></a> object that is included in the analysis data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.Comment">
            <summary>
            <para>
            <para>Optional feedback about this anomaly.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group that is associated with the analysis data.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.Type">
            <summary>
            <para>
            <para> The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>.
            </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.SubmitFeedbackResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.SubmitCGPFeedbackCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet">
            <summary>
            Updates a profiling group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet.AgentOrchestrationConfig_ProfilingEnabled">
            <summary>
            <para>
            <para> A <code>Boolean</code> that specifies whether the profiling agent collects profiling
            data or not. Set to <code>true</code> to enable profiling. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ProfilingGroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.UpdateProfilingGroupResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.UpdateProfilingGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.UpdateCGPProfilingGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet">
            <summary>
            Adds permissions to a profiling group's resource-based policy that are provided using
            an action group. If a profiling group doesn't have a resource-based policy, one is
            created for it using the permissions in the action group and the roles and users in
            the <code>principals</code> parameter. 
            
             <pre><code> &lt;p&gt; The one supported action group that can be added is &lt;code&gt;agentPermission&lt;/code&gt;
            which grants &lt;code&gt;ConfigureAgent&lt;/code&gt; and &lt;code&gt;PostAgent&lt;/code&gt;
            permissions. For more information, see &lt;a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html"&gt;Resource-based
            policies in CodeGuru Profiler&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru Profiler User
            Guide&lt;/i&gt;, &lt;a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"&gt;
            &lt;code&gt;ConfigureAgent&lt;/code&gt; &lt;/a&gt;, and &lt;a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html"&gt;
            &lt;code&gt;PostAgentProfile&lt;/code&gt; &lt;/a&gt;. &lt;/p&gt; &lt;p&gt; The first
            time you call &lt;code&gt;PutPermission&lt;/code&gt; on a profiling group, do not
            specify a &lt;code&gt;revisionId&lt;/code&gt; because it doesn't have a resource-based
            policy. Subsequent calls must provide a &lt;code&gt;revisionId&lt;/code&gt; to specify
            which revision of the resource-based policy to add the permissions to. &lt;/p&gt;
            &lt;p&gt; The response contains the profiling group's JSON-formatted resource policy.
            &lt;/p&gt; </code></pre>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.ActionGroup">
            <summary>
            <para>
            <para> Specifies an action group that contains permissions to add to a profiling group resource.
            One action group is supported, <code>agentPermissions</code>, which grants permission
            to perform actions required by the profiling agent, <code>ConfigureAgent</code> and
            <code>PostAgentProfile</code> permissions. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.Principal">
            <summary>
            <para>
            <para> A list ARNs for the roles and users you want to grant access to the profiling group.
            Wildcards are not are supported in the ARNs. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.ProfilingGroupName">
            <summary>
            <para>
            <para>The name of the profiling group to grant access to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.RevisionId">
            <summary>
            <para>
            <para> A universally unique identifier (UUID) for the revision of the policy you are adding
            to the profiling group. Do not specify this when you add permissions to a profiling
            group for the first time. If a policy already exists on the profiling group, you must
            specify the <code>revisionId</code>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.CodeGuruProfiler.Model.PutPermissionResponse).
            Specifying the name of a property of type Amazon.CodeGuruProfiler.Model.PutPermissionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ProfilingGroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^ProfilingGroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.CGP.WriteCGPPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
