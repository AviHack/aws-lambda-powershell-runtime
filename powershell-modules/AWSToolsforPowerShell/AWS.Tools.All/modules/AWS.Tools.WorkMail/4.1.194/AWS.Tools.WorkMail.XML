<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.WorkMail</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet">
            <summary>
            Adds a member (user or group) to the resource's set of delegates.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.EntityId">
            <summary>
            <para>
            <para>The member (user or group) to associate to the resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization under which the resource exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource for which members (users or groups) are associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.AssociateDelegateToResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMDelegateToResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet">
            <summary>
            Registers a new domain in WorkMail and SES, and configures it for use by WorkMail.
            Emails received by SES for this domain are routed to the specified WorkMail organization,
            and WorkMail has permanent permission to use the specified domain for sending your
            users' emails.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The name of the mail domain to create in WorkMail and SES.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which you're creating the domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.ClientToken">
            <summary>
            <para>
            <para>Idempotency token used when retrying requests.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.RegisterMailDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMailDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet">
            <summary>
            Adds a member (user or group) to the group's set.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The group to which the member (user or group) is associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.MemberId">
            <summary>
            <para>
            <para>The member (user or group) to associate to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization under which the group exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.AssociateMemberToGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberId parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMMemberToGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet">
            <summary>
            Applies the specified tags to the specified WorkMailorganization resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The resource ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tag key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.AddWMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet">
            <summary>
            Gets the effects of an organization's access control rules as they apply to a specified
            IPv4 address, access protocol action, and user ID or impersonation role ID. You must
            provide either the user ID or impersonation role ID. Impersonation role ID can only
            be used with Action EWS.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.Action">
            <summary>
            <para>
            <para>The access protocol action. Valid values include <code>ActiveSync</code>, <code>AutoDiscover</code>,
            <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>, <code>WindowsOutlook</code>,
            and <code>WebMail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The impersonation role ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.IpAddress">
            <summary>
            <para>
            <para>The IPv4 address.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.UserId">
            <summary>
            <para>
            <para>The user ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetAccessControlEffectResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetAccessControlEffectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlEffectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlRuleListCmdlet">
            <summary>
            Lists the access control rules for the specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlRuleListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlRuleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Rules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListAccessControlRulesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListAccessControlRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAccessControlRuleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet">
            <summary>
            Creates a paginated call to list the aliases associated with a given entity.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier for the entity for which to list the aliases.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the entity exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Aliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListAliasesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAliasListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet">
            <summary>
            List all the <code>AvailabilityConfiguration</code>'s for the given WorkMail organization.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the <code>AvailabilityConfiguration</code>'s will
            be listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not require
            a token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AvailabilityConfigurations'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListAvailabilityConfigurationsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListAvailabilityConfigurationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMAvailabilityConfigurationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMDefaultRetentionPolicyCmdlet">
            <summary>
            Gets the default retention policy details for the specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDefaultRetentionPolicyCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDefaultRetentionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetDefaultRetentionPolicyResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetDefaultRetentionPolicyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDefaultRetentionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet">
            <summary>
            Lists the delegates associated with a resource. Users and groups can be resource delegates
            and answer requests on behalf of the resource.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization that contains the resource for which delegates
            are listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier for the resource whose delegates are listed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The number of maximum results in a page.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token used to paginate through the delegates associated with a resource.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Delegates'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListResourceDelegatesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListResourceDelegatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMDelegateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMEmailMonitoringConfigurationCmdlet">
            <summary>
            Describes the current email monitoring configuration for a specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMEmailMonitoringConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization for which the email monitoring configuration is described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMEmailMonitoringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeEmailMonitoringConfigurationResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeEmailMonitoringConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMEmailMonitoringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMGroupCmdlet">
            <summary>
            Returns the data available for the group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier for the group to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the group exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeGroupResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet">
            <summary>
            Returns summaries of the organization's groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the groups exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Groups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListGroupsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMGroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleCmdlet">
            <summary>
            Gets the impersonation role details for the given WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The impersonation role ID to retrieve.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization from which to retrieve the impersonation role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetImpersonationRoleResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetImpersonationRoleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImpersonationRoleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImpersonationRoleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet">
            <summary>
            Tests whether the given impersonation role can impersonate a target user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The impersonation role ID to test.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization where the impersonation role is defined.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet.TargetUser">
            <summary>
            <para>
            <para>The WorkMail organization user chosen to test the impersonation role. The following
            identity formats are available:</para><ul><li><para>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code></para></li><li><para>Email address: <code>user@domain.tld</code></para></li><li><para>User name: <code>user</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetImpersonationRoleEffectResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetImpersonationRoleEffectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleEffectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImpersonationRoleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImpersonationRoleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet">
            <summary>
            Lists all the impersonation roles for the given WorkMail organization.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization to which the listed impersonation roles belong.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results returned in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token used to retrieve the next page of results. The first call doesn't require
            a token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Roles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListImpersonationRolesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListImpersonationRolesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMImpersonationRoleListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMInboundDmarcSettingCmdlet">
            <summary>
            Lists the settings in a DMARC policy for a specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMInboundDmarcSettingCmdlet.OrganizationId">
            <summary>
            <para>
            <para>Lists the ID of the given organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMInboundDmarcSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Enforced'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeInboundDmarcSettingsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeInboundDmarcSettingsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMInboundDmarcSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxDetailCmdlet">
            <summary>
            Requests a user's mailbox details for a specified organization and user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxDetailCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization that contains the user whose mailbox details are
            being requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxDetailCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier for the user whose mailbox details are being requested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxDetailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetMailboxDetailsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetMailboxDetailsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxDetailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobCmdlet">
            <summary>
            Describes the current status of a mailbox export job.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobCmdlet.JobId">
            <summary>
            <para>
            <para>The mailbox export job ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeMailboxExportJobResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeMailboxExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet">
            <summary>
            Lists the mailbox export jobs started for the specified organization within the last
            seven days.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Jobs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListMailboxExportJobsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListMailboxExportJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxExportJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet">
            <summary>
            Lists the mailbox permissions associated with a user, group, or resource mailbox.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier of the user, group, or resource for which to list mailbox permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization under which the user, group, or resource exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Permissions'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListMailboxPermissionsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListMailboxPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailboxPermissionListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainCmdlet">
            <summary>
            Gets details for a mail domain, including domain records required to configure your
            domain with recommended security.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain from which you want to retrieve details.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the domain is retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetMailDomainResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetMailDomainResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet">
            <summary>
            Lists the mail domains in a given WorkMail organization.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which to list domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not require
            a token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MailDomains'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListMailDomainsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListMailDomainsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMailDomainListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet">
            <summary>
            Returns an overview of the members of a group. Users and groups can be members of
            a group.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier for the group to which the members (users or groups) are associated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the group exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.NextToken">
            <summary>
            <para>
            <para> The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Members'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListGroupMembersResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListGroupMembersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMemberListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet">
            <summary>
            Simulates the effect of the mobile device access rules for the given attributes of
            a sample access event. Use this method to test the effects of the current set of mobile
            device access rules for the WorkMail organization for a particular user's attributes.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.DeviceModel">
            <summary>
            <para>
            <para>Device model the simulated user will report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.DeviceOperatingSystem">
            <summary>
            <para>
            <para>Device operating system the simulated user will report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.DeviceType">
            <summary>
            <para>
            <para>Device type the simulated user will report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.DeviceUserAgent">
            <summary>
            <para>
            <para>Device user agent the simulated user will report.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization to simulate the access effect for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetMobileDeviceAccessEffectResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetMobileDeviceAccessEffectResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessEffectCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet">
            <summary>
            Gets the mobile device access override for the given WorkMail organization, user,
            and device.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet.DeviceId">
            <summary>
            <para>
            <para>The mobile device to which the override applies. <code>DeviceId</code> is case insensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization to which you want to apply the override.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet.UserId">
            <summary>
            <para>
            <para>Identifies the WorkMail user for the override. Accepts the following types of user
            identities: </para><ul><li><para>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code></para></li><li><para>Email address: <code>user@domain.tld</code></para></li><li><para>User name: <code>user</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.GetMobileDeviceAccessOverrideResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.GetMobileDeviceAccessOverrideResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet">
            <summary>
            Lists all the mobile device access overrides for any given combination of WorkMail
            organization, user, or device.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.DeviceId">
            <summary>
            <para>
            <para>The mobile device to which the access override applies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which to list mobile device access overrides.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.UserId">
            <summary>
            <para>
            <para>The WorkMail user under which you list the mobile device access overrides. Accepts
            the following types of user identities:</para><ul><li><para>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code></para></li><li><para>Email address: <code>user@domain.tld</code></para></li><li><para>User name: <code>user</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not require
            a token.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Overrides'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListMobileDeviceAccessOverridesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListMobileDeviceAccessOverridesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessOverrideListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessRuleListCmdlet">
            <summary>
            Lists the mobile device access rules for the specified WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessRuleListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which to list the rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessRuleListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Rules'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListMobileDeviceAccessRulesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListMobileDeviceAccessRulesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMMobileDeviceAccessRuleListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationCmdlet">
            <summary>
            Provides more information regarding a given organization based on its identifier.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeOrganizationResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationListCmdlet">
            <summary>
            Returns summaries of the customer's organizations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListOrganizationsResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListOrganizationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMOrganizationListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMResourceCmdlet">
            <summary>
            Returns the data available for the resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier associated with the organization for which the resource is described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the resource to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeResourceResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet">
            <summary>
            Returns summaries of the organization's resources.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the resources exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Resources'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListResourcesResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListResourcesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMResourceTagCmdlet">
            <summary>
            Lists the tags applied to an WorkMail organization resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The resource ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMUserCmdlet">
            <summary>
            Provides information regarding the user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the user exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier for the user to be described.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DescribeUserResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DescribeUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet">
            <summary>
            Returns summaries of the organization's users.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the users exist.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return in a single call.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.NextToken">
            <summary>
            <para>
            <para>The token to use to retrieve the next page of results. The first call does not contain
            any tokens.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Users'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ListUsersResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.ListUsersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.GetWMUserListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet">
            <summary>
            Assumes an impersonation role for the given WorkMail organization. This method returns
            an authentication token you can use to make impersonated calls.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The impersonation role ID to assume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which the impersonation role will be assumed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.AssumeImpersonationRoleResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.AssumeImpersonationRoleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImpersonationRoleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImpersonationRoleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.InvokeWMImpersonationRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet">
            <summary>
            Adds an alias to the set of a given member (user or group) of WorkMail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.Alias">
            <summary>
            <para>
            <para>The alias to add to the member set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.EntityId">
            <summary>
            <para>
            <para>The member (user or group) to which this alias is added.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization under which the member (user or group) exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Alias parameter.
            The -PassThru parameter is deprecated, use -Select '^Alias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet">
            <summary>
            Creates an <code>AvailabilityConfiguration</code> for the given WorkMail organization
            and domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain to which the provider applies.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.EwsProvider_EwsEndpoint">
            <summary>
            <para>
            <para>The endpoint of the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.EwsProvider_EwsPassword">
            <summary>
            <para>
            <para>The password used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.EwsProvider_EwsUsername">
            <summary>
            <para>
            <para>The username used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.LambdaProvider_LambdaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Lambda that acts as the availability provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will
            be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.ClientToken">
            <summary>
            <para>
            <para>An idempotent token that ensures that an API request is executed only once.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateAvailabilityConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMAvailabilityConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet">
            <summary>
            Creates a group that can be used in WorkMail by calling the <a>RegisterToWorkMail</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet.Name">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization under which the group is to be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateGroupResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet">
            <summary>
            Creates an impersonation role for the given WorkMail organization.
            
             
            <para><i>Idempotency</i> ensures that an API request completes no more than one time. With
            an idempotent request, if the original request completes successfully, any subsequent
            retries also complete successfully without performing any further actions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Description">
            <summary>
            <para>
            <para>The description of the new impersonation role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new impersonation role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization to create the new impersonation role within.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Rule">
            <summary>
            <para>
            <para>The list of rules for the impersonation role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Type">
            <summary>
            <para>
            <para>The impersonation role's type. The available impersonation role types are <code>READ_ONLY</code>
            or <code>FULL_ACCESS</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImpersonationRoleId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateImpersonationRoleResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateImpersonationRoleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMImpersonationRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet">
            <summary>
            Creates a new mobile device access rule for the specified WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.Description">
            <summary>
            <para>
            <para>The rule description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.DeviceModel">
            <summary>
            <para>
            <para>Device models that the rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.DeviceOperatingSystem">
            <summary>
            <para>
            <para>Device operating systems that the rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.DeviceType">
            <summary>
            <para>
            <para>Device types that the rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.DeviceUserAgent">
            <summary>
            <para>
            <para>Device user agents that the rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.Effect">
            <summary>
            <para>
            <para>The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.Name">
            <summary>
            <para>
            <para>The rule name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.NotDeviceModel">
            <summary>
            <para>
            <para>Device models that the rule <b>will not</b> match. All other device models will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.NotDeviceOperatingSystem">
            <summary>
            <para>
            <para>Device operating systems that the rule <b>will not</b> match. All other device operating
            systems will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.NotDeviceType">
            <summary>
            <para>
            <para>Device types that the rule <b>will not</b> match. All other device types will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.NotDeviceUserAgent">
            <summary>
            <para>
            <para>Device user agents that the rule <b>will not</b> match. All other device user agents
            will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which the rule will be created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MobileDeviceAccessRuleId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateMobileDeviceAccessRuleResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateMobileDeviceAccessRuleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMMobileDeviceAccessRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet">
            <summary>
            Creates a new WorkMail organization. Optionally, you can choose to associate an existing
            AWS Directory Service directory with your organization. If an AWS Directory Service
            directory ID is specified, the organization alias must match the directory alias.
            If you choose not to associate an existing directory with your organization, then
            we create a new WorkMail directory for you. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html">Adding
            an organization</a> in the <i>WorkMail Administrator Guide</i>.
            
             
            <para>
            You can associate multiple email domains with an organization, then choose your default
            email domain from the WorkMail console. You can also associate a domain that is managed
            in an Amazon Route 53 public hosted zone. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html">Adding
            a domain</a> and <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html">Choosing
            the default domain</a> in the <i>WorkMail Administrator Guide</i>.
            </para><para>
            Optionally, you can use a customer managed key from AWS Key Management Service (AWS
            KMS) to encrypt email for your organization. If you don't associate an AWS KMS key,
            WorkMail creates a default, AWS managed key for you.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.Alias">
            <summary>
            <para>
            <para>The organization alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The AWS Directory Service directory ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.Domain">
            <summary>
            <para>
            <para>The email domains to associate with the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.EnableInteroperability">
            <summary>
            <para>
            <para>When <code>true</code>, allows organization interoperability between WorkMail and
            Microsoft Exchange. If <code>true</code>, you must include a AD Connector directory
            ID in the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.KmsKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of a customer managed key from AWS KMS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token associated with the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'OrganizationId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateOrganizationResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Alias parameter.
            The -PassThru parameter is deprecated, use -Select '^Alias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMOrganizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet">
            <summary>
            Creates a new WorkMail resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier associated with the organization for which the resource is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.Type">
            <summary>
            <para>
            <para>The type of the new resource. The available types are <code>equipment</code> and <code>room</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ResourceId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateResourceResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet">
            <summary>
            Creates a user who can be used in WorkMail by calling the <a>RegisterToWorkMail</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.DisplayName">
            <summary>
            <para>
            <para>The display name for the new user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.Name">
            <summary>
            <para>
            <para>The name for the new user. WorkMail directory user names have a maximum length of
            64. All others have a maximum length of 20.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization for which the user is created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.Password">
            <summary>
            <para>
            <para>The password for the new user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UserId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CreateUserResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.CreateUserResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.NewWMUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet">
            <summary>
            Registers an existing and disabled user, group, or resource for WorkMail use by associating
            a mailbox and calendaring capabilities. It performs no change if the user, group,
            or resource is enabled and fails if the user, group, or resource is deleted. This
            operation results in the accumulation of costs. For more information, see <a href="https://aws.amazon.com/workmail/pricing">Pricing</a>.
            The equivalent console functionality for this operation is <i>Enable</i>.
            
             
            <para>
            Users can either be created by calling the <a>CreateUser</a> API operation or they
            can be synchronized from your directory. For more information, see <a>DeregisterFromWorkMail</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.Email">
            <summary>
            <para>
            <para>The email for the user, group, or resource to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier for the user, group, or resource to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the user, group, or resource exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.RegisterToWorkMailResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RegisterWMToWorkMailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet">
            <summary>
            Deletes an access control rule for the specified WorkMail organization.
            
             <note><para>
            Deleting already deleted and non-existing rules does not produce an error. In those
            cases, the service sends back an HTTP 200 response with an empty HTTP body.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet.Name">
            <summary>
            <para>
            <para>The name of the access control rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteAccessControlRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAccessControlRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet">
            <summary>
            Remove one or more specified aliases from a set of aliases for a given user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.Alias">
            <summary>
            <para>
            <para>The aliases to be removed from the user's set of aliases. Duplicate entries in the
            list are collapsed into single entries (the list is transformed into a set).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier for the member (user or group) from which to have the aliases removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the user exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Alias parameter.
            The -PassThru parameter is deprecated, use -Select '^Alias' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet">
            <summary>
            Deletes the <code>AvailabilityConfiguration</code> for the given WorkMail organization
            and domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain for which the <code>AvailabilityConfiguration</code> will be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will
            be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteAvailabilityConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMAvailabilityConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet">
            <summary>
            Removes a member from the resource's set of delegates.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier for the member (user, group) to be removed from the resource's delegates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the resource exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the resource from which delegates' set members are removed. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DisassociateDelegateFromResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMDelegateFromResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMEmailMonitoringConfigurationCmdlet">
            <summary>
            Deletes the email monitoring configuration for a specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMEmailMonitoringConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization from which the email monitoring configuration is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMEmailMonitoringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteEmailMonitoringConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMEmailMonitoringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMEmailMonitoringConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet">
            <summary>
            Mark a user, group, or resource as no longer used in WorkMail. This action disassociates
            the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days before
            they are permanently removed. The functionality in the console is <i>Disable</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier for the member (user or group) to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the WorkMail entity exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeregisterFromWorkMailResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMFromWorkMailCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet">
            <summary>
            Deletes a group from WorkMail.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization that contains the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet">
            <summary>
            Deletes an impersonation role for the given WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The ID of the impersonation role to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization from which to delete the impersonation role.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteImpersonationRoleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImpersonationRoleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImpersonationRoleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMImpersonationRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet">
            <summary>
            Deletes permissions granted to a member (user or group).
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier of the member (user or group) that owns the mailbox.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.GranteeId">
            <summary>
            <para>
            <para>The identifier of the member (user or group) for which to delete granted permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization under which the member (user or group) exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteMailboxPermissionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailboxPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet">
            <summary>
            Removes a domain from WorkMail, stops email routing to WorkMail, and removes the authorization
            allowing WorkMail use. SES keeps the domain because other applications may use it.
            You must first remove any email address used by WorkMail entities before you remove
            the domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain to deregister in WorkMail and SES.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the domain will be deregistered.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeregisterMailDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMailDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet">
            <summary>
            Removes a member from a group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier for the group from which members are removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.MemberId">
            <summary>
            <para>
            <para>The identifier for the member to be removed to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization under which the group exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DisassociateMemberFromGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MemberId parameter.
            The -PassThru parameter is deprecated, use -Select '^MemberId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMemberFromGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet">
            <summary>
            Deletes the mobile device access override for the given WorkMail organization, user,
            and device.
            
             <note><para>
            Deleting already deleted and non-existing overrides does not produce an error. In
            those cases, the service sends back an HTTP 200 response with an empty HTTP body.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.DeviceId">
            <summary>
            <para>
            <para>The mobile device for which you delete the override. <code>DeviceId</code> is case
            insensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the access override will be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.UserId">
            <summary>
            <para>
            <para>The WorkMail user for which you want to delete the override. Accepts the following
            types of user identities:</para><ul><li><para>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code></para></li><li><para>Email address: <code>user@domain.tld</code></para></li><li><para>User name: <code>user</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteMobileDeviceAccessOverrideResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessOverrideCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet">
            <summary>
            Deletes a mobile device access rule for the specified WorkMail organization.
            
             <note><para>
            Deleting already deleted and non-existing rules does not produce an error. In those
            cases, the service sends back an HTTP 200 response with an empty HTTP body.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet.MobileDeviceAccessRuleId">
            <summary>
            <para>
            <para>The identifier of the rule to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which the rule will be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteMobileDeviceAccessRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MobileDeviceAccessRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^MobileDeviceAccessRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMMobileDeviceAccessRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet">
            <summary>
            Deletes an WorkMail organization and all underlying AWS resources managed by WorkMail
            as part of the organization. You can choose whether to delete the associated directory.
            For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html">Removing
            an organization</a> in the <i>WorkMail Administrator Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.DeleteDirectory">
            <summary>
            <para>
            <para>If true, deletes the AWS Directory Service directory associated with the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token associated with the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteOrganizationResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.DeleteOrganizationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMOrganizationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet">
            <summary>
            Deletes the specified resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier associated with the organization from which the resource is deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the resource to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet">
            <summary>
            Untags the specified tags from the specified WorkMail organization resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet.ResourceARN">
            <summary>
            <para>
            <para>The resource ARN.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceARN parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceARN' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet">
            <summary>
            Deletes the specified retention policy from the specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet.Id">
            <summary>
            <para>
            <para>The retention policy ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteRetentionPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Id parameter.
            The -PassThru parameter is deprecated, use -Select '^Id' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMRetentionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet">
            <summary>
            Deletes a user from WorkMail and all subsequent systems. Before you can delete a user,
            the user state must be <code>DISABLED</code>. Use the <a>DescribeUser</a> action to
            confirm the user state.
            
             
            <para>
            Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes
            for 30 days before they are permanently removed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization that contains the user to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user to be deleted.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.DeleteUserResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.RemoveWMUserCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet">
            <summary>
            Allows the administrator to reset the password for a user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization that contains the user for which the password is
            reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.Password">
            <summary>
            <para>
            <para>The new password for the user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.UserId">
            <summary>
            <para>
            <para>The identifier of the user for whom the password is reset.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.ResetPasswordResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.ResetWMPasswordCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet">
            <summary>
            Starts a mailbox export job to export MIME-format email messages and calendar items
            from the specified mailbox to the specified Amazon Simple Storage Service (Amazon
            S3) bucket. For more information, see <a href="https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html">Exporting
            mailbox content</a> in the <i>WorkMail Administrator Guide</i>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.Description">
            <summary>
            <para>
            <para>The mailbox export job description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier of the user or resource associated with the mailbox.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.KmsKeyArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the symmetric AWS Key Management Service (AWS KMS)
            key that encrypts the exported mailbox content.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier associated with the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.RoleArn">
            <summary>
            <para>
            <para>The ARN of the AWS Identity and Access Management (IAM) role that grants write permission
            to the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.S3BucketName">
            <summary>
            <para>
            <para>The name of the S3 bucket.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.S3Prefix">
            <summary>
            <para>
            <para>The S3 bucket prefix.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'JobId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.StartMailboxExportJobResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.StartMailboxExportJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StartWMMailboxExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet">
            <summary>
            Cancels a mailbox export job.
            
             <note><para>
            If the mailbox export job is near completion, it might not be possible to cancel it.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.JobId">
            <summary>
            <para>
            <para>The job ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.ClientToken">
            <summary>
            <para>
            <para>The idempotency token for the client request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.CancelMailboxExportJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobId parameter.
            The -PassThru parameter is deprecated, use -Select '^JobId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.StopWMMailboxExportJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet">
            <summary>
            Performs a test on an availability provider to ensure that access is allowed. For
            EWS, it verifies the provided credentials can be used to successfully log in. For
            Lambda, it verifies that the Lambda function can be invoked and that the resource
            access policy was configured to deny anonymous access. An anonymous invocation is
            one done without providing either a <code>SourceArn</code> or <code>SourceAccount</code>
            header.
            
             <note><para>
            The request must contain either one provider definition (<code>EwsProvider</code>
            or <code>LambdaProvider</code>) or the <code>DomainName</code> parameter. If the <code>DomainName</code>
            parameter is provided, the configuration stored under the <code>DomainName</code>
            will be tested.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain to which the provider applies. If this field is provided, a stored availability
            provider associated to this domain name will be tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.EwsProvider_EwsEndpoint">
            <summary>
            <para>
            <para>The endpoint of the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.EwsProvider_EwsPassword">
            <summary>
            <para>
            <para>The password used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.EwsProvider_EwsUsername">
            <summary>
            <para>
            <para>The username used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.LambdaProvider_LambdaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Lambda that acts as the availability provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization where the availability provider will be tested.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.TestAvailabilityConfigurationResponse).
            Specifying the name of a property of type Amazon.WorkMail.Model.TestAvailabilityConfigurationResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.TestWMAvailabilityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet">
            <summary>
            Updates an existing <code>AvailabilityConfiguration</code> for the given WorkMail
            organization and domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain to which the provider applies the availability configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.EwsProvider_EwsEndpoint">
            <summary>
            <para>
            <para>The endpoint of the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.EwsProvider_EwsPassword">
            <summary>
            <para>
            <para>The password used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.EwsProvider_EwsUsername">
            <summary>
            <para>
            <para>The username used to authenticate the remote EWS server.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.LambdaProvider_LambdaArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Lambda that acts as the availability provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which the <code>AvailabilityConfiguration</code> will
            be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateAvailabilityConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMAvailabilityConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet">
            <summary>
            Updates the default mail domain for an organization. The default mail domain is used
            by the WorkMail AWS Console to suggest an email address when enabling a mail user.
            You can only have one default domain.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet.DomainName">
            <summary>
            <para>
            <para>The domain name that will become the default domain.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization for which to list domains.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateDefaultMailDomainResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DomainName parameter.
            The -PassThru parameter is deprecated, use -Select '^DomainName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMDefaultMailDomainCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet">
            <summary>
            Updates an impersonation role for the given WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Description">
            <summary>
            <para>
            <para>The updated impersonation role description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>The ID of the impersonation role to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Name">
            <summary>
            <para>
            <para>The updated impersonation role name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization that contains the impersonation role to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Rule">
            <summary>
            <para>
            <para>The updated list of rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Type">
            <summary>
            <para>
            <para>The updated impersonation role type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateImpersonationRoleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImpersonationRoleId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImpersonationRoleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMImpersonationRoleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet">
            <summary>
            Updates a user's current mailbox quota for a specified organization and user.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.MailboxQuota">
            <summary>
            <para>
            <para>The updated mailbox quota, in MB, for the specified user.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier for the organization that contains the user for whom to update the
            mailbox quota.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.UserId">
            <summary>
            <para>
            <para>The identifer for the user for whom to update the mailbox quota.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateMailboxQuotaResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMailboxQuotaCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet">
            <summary>
            Updates a mobile device access rule for the specified WorkMail organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.Description">
            <summary>
            <para>
            <para>The updated rule description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.DeviceModel">
            <summary>
            <para>
            <para>Device models that the updated rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.DeviceOperatingSystem">
            <summary>
            <para>
            <para>Device operating systems that the updated rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.DeviceType">
            <summary>
            <para>
            <para>Device types that the updated rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.DeviceUserAgent">
            <summary>
            <para>
            <para>User agents that the updated rule will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.Effect">
            <summary>
            <para>
            <para>The effect of the rule when it matches. Allowed values are <code>ALLOW</code> or <code>DENY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.MobileDeviceAccessRuleId">
            <summary>
            <para>
            <para>The identifier of the rule to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.Name">
            <summary>
            <para>
            <para>The updated rule name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.NotDeviceModel">
            <summary>
            <para>
            <para>Device models that the updated rule <b>will not</b> match. All other device models
            will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.NotDeviceOperatingSystem">
            <summary>
            <para>
            <para>Device operating systems that the updated rule <b>will not</b> match. All other device
            operating systems will match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.NotDeviceType">
            <summary>
            <para>
            <para>Device types that the updated rule <b>will not</b> match. All other device types will
            match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.NotDeviceUserAgent">
            <summary>
            <para>
            <para>User agents that the updated rule <b>will not</b> match. All other user agents will
            match.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The WorkMail organization under which the rule will be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateMobileDeviceAccessRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MobileDeviceAccessRuleId parameter.
            The -PassThru parameter is deprecated, use -Select '^MobileDeviceAccessRuleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMMobileDeviceAccessRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet">
            <summary>
            Updates the primary email for a user, group, or resource. The current email is moved
            into the list of aliases (or swapped between an existing alias and the current primary
            email), and the email provided in the input is promoted as the primary.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.Email">
            <summary>
            <para>
            <para>The value of the email to be updated as primary.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.EntityId">
            <summary>
            <para>
            <para>The user, group, or resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization that contains the user, group, or resource to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdatePrimaryEmailAddressResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Email parameter.
            The -PassThru parameter is deprecated, use -Select '^Email' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMPrimaryEmailAddressCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet">
            <summary>
            Updates data for the resource. To have the latest information, it must be preceded
            by a <a>DescribeResource</a> call. The dataset in the request should be the one expected
            when performing another <code>DescribeResource</code> call.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.BookingOption">
            <summary>
            <para>
            <para>The resource's booking options to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.Name">
            <summary>
            <para>
            <para>The name of the resource to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier associated with the organization for which the resource is updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the resource to be updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.UpdateResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.UpdateWMResourceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet">
            <summary>
            Adds a new access control rule for the specified organization. The rule allows or
            denies access to the organization for the specified IPv4 addresses, access protocol
            actions, user IDs and impersonation IDs. Adding a new rule with the same name as an
            existing rule replaces the older rule.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Action">
            <summary>
            <para>
            <para>Access protocol actions to include in the rule. Valid values include <code>ActiveSync</code>,
            <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>,
            <code>WindowsOutlook</code>, and <code>WebMail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Description">
            <summary>
            <para>
            <para>The rule description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Effect">
            <summary>
            <para>
            <para>The rule effect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.ImpersonationRoleId">
            <summary>
            <para>
            <para>Impersonation role IDs to include in the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.IpRange">
            <summary>
            <para>
            <para>IPv4 CIDR ranges to include in the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Name">
            <summary>
            <para>
            <para>The rule name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.NotAction">
            <summary>
            <para>
            <para>Access protocol actions to exclude from the rule. Valid values include <code>ActiveSync</code>,
            <code>AutoDiscover</code>, <code>EWS</code>, <code>IMAP</code>, <code>SMTP</code>,
            <code>WindowsOutlook</code>, and <code>WebMail</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.NotImpersonationRoleId">
            <summary>
            <para>
            <para>Impersonation role IDs to exclude from the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.NotIpRange">
            <summary>
            <para>
            <para>IPv4 CIDR ranges to exclude from the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.NotUserId">
            <summary>
            <para>
            <para>User IDs to exclude from the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.UserId">
            <summary>
            <para>
            <para>User IDs to include in the rule.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutAccessControlRuleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMAccessControlRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet">
            <summary>
            Creates or updates the email monitoring configuration for a specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.LogGroupArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the CloudWatch Log group associated with the email
            monitoring configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization for which the email monitoring configuration is set.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM Role associated with the email monitoring
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutEmailMonitoringConfigurationResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMEmailMonitoringConfigurationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet">
            <summary>
            Enables or disables a DMARC policy for a given organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet.Enforced">
            <summary>
            <para>
            <para>Enforces or suspends a policy after it's applied.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The ID of the organization that you are applying the DMARC policy to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutInboundDmarcSettingsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMInboundDmarcSettingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet">
            <summary>
            Sets permissions for a user, group, or resource. This replaces any pre-existing permissions.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.EntityId">
            <summary>
            <para>
            <para>The identifier of the user, group, or resource for which to update mailbox permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.GranteeId">
            <summary>
            <para>
            <para>The identifier of the user, group, or resource to which to grant the permissions.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The identifier of the organization under which the user, group, or resource exists.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.PermissionValue">
            <summary>
            <para>
            <para>The permissions granted to the grantee. SEND_AS allows the grantee to send email as
            the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF
            allows the grantee to send email on behalf of the owner of the mailbox (the grantee
            is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee
            full access to the mailbox, irrespective of other folder-level permissions set on
            the mailbox.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutMailboxPermissionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the EntityId parameter.
            The -PassThru parameter is deprecated, use -Select '^EntityId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMailboxPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet">
            <summary>
            Creates or updates a mobile device access override for the given WorkMail organization,
            user, and device.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.Description">
            <summary>
            <para>
            <para>A description of the override.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.DeviceId">
            <summary>
            <para>
            <para>The mobile device for which you create the override. <code>DeviceId</code> is case
            insensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.Effect">
            <summary>
            <para>
            <para>The effect of the override, <code>ALLOW</code> or <code>DENY</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.OrganizationId">
            <summary>
            <para>
            <para>Identifies the WorkMail organization for which you create the override.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.UserId">
            <summary>
            <para>
            <para>The WorkMail user for which you create the override. Accepts the following types of
            user identities:</para><ul><li><para>User ID: <code>12345678-1234-1234-1234-123456789012</code> or <code>S-1-1-12-1234567890-123456789-123456789-1234</code></para></li><li><para>Email address: <code>user@domain.tld</code></para></li><li><para>User name: <code>user</code></para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutMobileDeviceAccessOverrideResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UserId parameter.
            The -PassThru parameter is deprecated, use -Select '^UserId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMMobileDeviceAccessOverrideCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet">
            <summary>
            Puts a retention policy to the specified organization.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.Description">
            <summary>
            <para>
            <para>The retention policy description.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.FolderConfiguration">
            <summary>
            <para>
            <para>The retention policy folder configurations.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.Id">
            <summary>
            <para>
            <para>The retention policy ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.Name">
            <summary>
            <para>
            <para>The retention policy name.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.OrganizationId">
            <summary>
            <para>
            <para>The organization ID.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkMail.Model.PutRetentionPolicyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the OrganizationId parameter.
            The -PassThru parameter is deprecated, use -Select '^OrganizationId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WM.WriteWMRetentionPolicyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
