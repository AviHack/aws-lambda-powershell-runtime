<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.WorkSpaces</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet">
            <summary>
            Terminates the specified WorkSpaces.
            
             <important><para>
            Terminating a WorkSpace is a permanent action and cannot be undone. The user's data
            is destroyed. If you need to archive any user data, contact Amazon Web Services Support
            before terminating the WorkSpace.
            </para></important><para>
            You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have been completely
            terminated. After a WorkSpace is terminated, the <code>TERMINATED</code> state is
            returned only briefly before the WorkSpace directory metadata is cleaned up, so this
            state is rarely returned. To confirm that a WorkSpace is terminated, check for the
            WorkSpace ID by using <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaces.html">
            DescribeWorkSpaces</a>. If the WorkSpace ID isn't returned, then the WorkSpace has
            been successfully terminated.
            </para><note><para>
            Simple AD and AD Connector are made available to you free of charge to use with WorkSpaces.
            If there are no WorkSpaces being used with your Simple AD or AD Connector directory
            for 30 consecutive days, this directory will be automatically deregistered for use
            with Amazon WorkSpaces, and you will be charged for this directory as per the <a href="http://aws.amazon.com/directoryservice/pricing/">Directory
            Service pricing terms</a>.
            </para><para>
            To delete empty directories, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/delete-workspaces-directory.html">
            Delete the Directory for Your WorkSpaces</a>. If you delete your Simple AD or AD Connector
            directory, you can always create a new one when you want to start using WorkSpaces
            again.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to terminate.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to terminate. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.TerminateWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.TerminateWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet">
            <summary>
            Rebuilds the specified WorkSpace.
            
             
            <para>
            You cannot rebuild a WorkSpace unless its state is <code>AVAILABLE</code>, <code>ERROR</code>,
            <code>UNHEALTHY</code>, <code>STOPPED</code>, or <code>REBOOTING</code>.
            </para><para>
            Rebuilding a WorkSpace is a potentially destructive action that can result in the
            loss of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html">Rebuild
            a WorkSpace</a>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have been completely
            rebuilt.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of the WorkSpaces to rebuild. You can specify a single WorkSpace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpace to rebuild. You can specify a single WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RebuildWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.RebuildWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ResetWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet">
            <summary>
            Reboots the specified WorkSpaces.
            
             
            <para>
            You cannot reboot a WorkSpace unless its state is <code>AVAILABLE</code> or <code>UNHEALTHY</code>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpaces have rebooted.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to reboot.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to reboot. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RebootWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.RebootWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestartWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet">
            <summary>
            Starts the specified WorkSpaces.
            
             
            <para>
            You cannot start a WorkSpace unless it has a running mode of <code>AutoStop</code>
            and a state of <code>STOPPED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to start.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to start. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.StartWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.StartWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet">
            <summary>
            Stops the specified WorkSpaces.
            
             
            <para>
            You cannot stop a WorkSpace unless it has a running mode of <code>AutoStop</code>
            and a state of <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>,
            or <code>ERROR</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            The IDs of one or more WorkSpaces to be stopped.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Request">
            <summary>
            <para>
            <para>The WorkSpaces to stop. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FailedRequests'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.StopWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.StopWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Request parameter.
            The -PassThru parameter is deprecated, use -Select '^Request' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StopWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet">
            <summary>
            Adds one or more rules to the specified IP access control group.
            
             
            <para>
            This action gives users permission to access their WorkSpaces from the CIDR address
            ranges specified in the rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to add to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.AuthorizeIpRulesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ApproveWKSIpRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet">
            <summary>
            Copies the specified image from the specified Region to the current Region. For more
            information about copying images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/copy-custom-image.html">
            Copy a Custom WorkSpaces Image</a>.
            
             
            <para>
            In the China (Ningxia) Region, you can copy images only within the same Region.
            </para><para>
            In Amazon Web Services GovCloud (US), to copy images to and from other Regions, contact
            Amazon Web Services Support.
            </para><important><para>
            Before copying a shared image, be sure to verify that it has been shared from the
            correct Amazon Web Services account. To determine if an image has been shared and
            to see the ID of the Amazon Web Services account that owns an image, use the <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceImages.html">DescribeWorkSpaceImages</a>
            and <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceImagePermissions.html">DescribeWorkspaceImagePermissions</a>
            API operations. 
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Description">
            <summary>
            <para>
            <para>A description of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Name">
            <summary>
            <para>
            <para>The name of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.SourceImageId">
            <summary>
            <para>
            <para>The identifier of the source image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.SourceRegion">
            <summary>
            <para>
            <para>The identifier of the source Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags for the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CopyWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CopyWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.CopyWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet">
            <summary>
            Modifies the configuration of Bring Your Own License (BYOL) for the specified account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.DedicatedTenancyManagementCidrRange">
            <summary>
            <para>
            <para>The IP address range, specified as an IPv4 CIDR block, for the management network
            interface. Specify an IP address range that is compatible with your network and in
            CIDR notation (that is, specify the range as an IPv4 CIDR block). The CIDR block size
            must be /16 (for example, 203.0.113.25/16). It must also be specified as available
            by the <code>ListAvailableManagementCidrRanges</code> operation.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.DedicatedTenancySupport">
            <summary>
            <para>
            <para>The status of BYOL.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyAccountResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSAccountCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet">
            <summary>
            Modifies the properties of the specified Amazon WorkSpaces clients.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.ClientProperties_LogUploadEnabled">
            <summary>
            <para>
            <para>Specifies whether users can upload diagnostic log files of Amazon WorkSpaces client
            directly to WorkSpaces to troubleshoot issues when using the WorkSpaces client. When
            enabled, the log files will be sent to WorkSpaces automatically and will be applied
            to all users in the specified directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.ClientProperties_ReconnectEnabled">
            <summary>
            <para>
            <para>Specifies whether users can cache their credentials on the Amazon WorkSpaces client.
            When enabled, users can choose to reconnect to their WorkSpaces without re-entering
            their credentials. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifiers, in the form of directory IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyClientPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClientProperties_ReconnectEnabled parameter.
            The -PassThru parameter is deprecated, use -Select '^ClientProperties_ReconnectEnabled' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSClientPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet">
            <summary>
            Modifies multiple properties related to SAML 2.0 authentication, including the enablement
            status, user access URL, and relay state parameter name that are used for configuring
            federation with an SAML 2.0 identity provider.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.PropertiesToDelete">
            <summary>
            <para>
            <para>The SAML properties to delete as part of your request.</para><para>Specify one of the following options:</para><ul><li><para><code>SAML_PROPERTIES_USER_ACCESS_URL</code> to delete the user access URL.</para></li><li><para><code>SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME</code> to delete the relay state
            parameter name.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.SamlProperties_RelayStateParameterName">
            <summary>
            <para>
            <para>The relay state parameter name supported by the SAML 2.0 identity provider (IdP).
            When the end user is redirected to the user access URL from the WorkSpaces client
            application, this relay state parameter name is appended as a query parameter to the
            URL along with the relay state endpoint to return the user to the client application
            session.</para><para>To use SAML 2.0 authentication with WorkSpaces, the IdP must support IdP-initiated
            deep linking for the relay state URL. Consult your IdP documentation for more information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier for which you want to configure SAML properties.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.SamlProperties_Status">
            <summary>
            <para>
            <para>Indicates the status of SAML 2.0 authentication. These statuses include the following.</para><ul><li><para>If the setting is <code>DISABLED</code>, end users will be directed to login with
            their directory credentials.</para></li><li><para>If the setting is <code>ENABLED</code>, end users will be directed to login via the
            user access URL. Users attempting to connect to WorkSpaces from a client application
            that does not support SAML 2.0 authentication will not be able to connect.</para></li><li><para>If the setting is <code>ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK</code>, end users will
            be directed to login via the user access URL on supported client applications, but
            will not prevent clients that do not support SAML 2.0 authentication from connecting
            as if SAML 2.0 authentication was disabled.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.SamlProperties_UserAccessUrl">
            <summary>
            <para>
            <para>The SAML 2.0 identity provider (IdP) user access URL is the URL a user would navigate
            to in their web browser in order to federate from the IdP and directly access the
            application, without any SAML 2.0 service provider (SP) bindings.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifySamlPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSamlPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet">
            <summary>
            Modifies the self-service WorkSpace management capabilities for your users. For more
            information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/enable-user-self-service-workspace-management.html">Enable
            Self-Service WorkSpace Management Capabilities for Your Users</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_ChangeComputeType">
            <summary>
            <para>
            <para>Specifies whether users can change the compute type (bundle) for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_IncreaseVolumeSize">
            <summary>
            <para>
            <para>Specifies whether users can increase the volume size of the drives on their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_RebuildWorkspace">
            <summary>
            <para>
            <para>Specifies whether users can rebuild the operating system of a WorkSpace to its original
            state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_RestartWorkspace">
            <summary>
            <para>
            <para>Specifies whether users can restart their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.SelfservicePermissions_SwitchRunningMode">
            <summary>
            <para>
            <para>Specifies whether users can switch the running mode of their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifySelfservicePermissionsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSSelfservicePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet">
            <summary>
            Specifies which devices and operating systems users can use to access their WorkSpaces.
            For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-directory-details.html#control-device-access">
            Control Device Access</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeAndroid">
            <summary>
            <para>
            <para>Indicates whether users can use Android and Android-compatible Chrome OS devices to
            access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeChromeOs">
            <summary>
            <para>
            <para>Indicates whether users can use Chromebooks to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeIo">
            <summary>
            <para>
            <para>Indicates whether users can use iOS devices to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeLinux">
            <summary>
            <para>
            <para>Indicates whether users can use Linux clients to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeOsx">
            <summary>
            <para>
            <para>Indicates whether users can use macOS clients to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeWeb">
            <summary>
            <para>
            <para>Indicates whether users can access their WorkSpaces through a web browser.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeWindow">
            <summary>
            <para>
            <para>Indicates whether users can use Windows clients to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.WorkspaceAccessProperties_DeviceTypeZeroClient">
            <summary>
            <para>
            <para>Indicates whether users can use zero client devices to access their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceAccessPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceAccessPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet">
            <summary>
            Modify the default properties used to create WorkSpaces.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_CustomSecurityGroupId">
            <summary>
            <para>
            <para>The identifier of your custom security group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_DefaultOu">
            <summary>
            <para>
            <para>The default organizational unit (OU) for your WorkSpaces directories. This string
            must be the full Lightweight Directory Access Protocol (LDAP) distinguished name for
            the target domain and OU. It must be in the form <code>"OU=<i>value</i>,DC=<i>value</i>,DC=<i>value</i>"</code>,
            where <i>value</i> is any string of characters, and the number of domain components
            (DCs) is two or more. For example, <code>OU=WorkSpaces_machines,DC=machines,DC=example,DC=com</code>.
            </para><important><ul><li><para>To avoid errors, certain characters in the distinguished name must be escaped. For
            more information, see <a href="https://docs.microsoft.com/previous-versions/windows/desktop/ldap/distinguished-names">
            Distinguished Names</a> in the Microsoft documentation.</para></li><li><para>The API doesn't validate whether the OU exists.</para></li></ul></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_EnableInternetAccess">
            <summary>
            <para>
            <para>Indicates whether internet access is enabled for your WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_EnableMaintenanceMode">
            <summary>
            <para>
            <para>Indicates whether maintenance mode is enabled for your WorkSpaces. For more information,
            see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html">WorkSpace
            Maintenance</a>. </para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_EnableWorkDoc">
            <summary>
            <para>
            <para>Indicates whether Amazon WorkDocs is enabled for your WorkSpaces.</para><note><para>If WorkDocs is already enabled for a WorkSpaces directory and you disable it, new
            WorkSpaces launched in the directory will not have WorkDocs enabled. However, WorkDocs
            remains enabled for any existing WorkSpaces, unless you either disable users' access
            to WorkDocs or you delete the WorkDocs site. To disable users' access to WorkDocs,
            see <a href="https://docs.aws.amazon.com/workdocs/latest/adminguide/inactive-user.html">Disabling
            Users</a> in the <i>Amazon WorkDocs Administration Guide</i>. To delete a WorkDocs
            site, see <a href="https://docs.aws.amazon.com/workdocs/latest/adminguide/manage-sites.html">Deleting
            a Site</a> in the <i>Amazon WorkDocs Administration Guide</i>.</para><para>If you enable WorkDocs on a directory that already has existing WorkSpaces, the existing
            WorkSpaces and any new WorkSpaces that are launched in the directory will have WorkDocs
            enabled.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.WorkspaceCreationProperties_UserEnabledAsLocalAdministrator">
            <summary>
            <para>
            <para>Indicates whether users are local administrators of their WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceCreationPropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceCreationPropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet">
            <summary>
            Modifies the specified WorkSpace properties. For important information about how to
            modify the size of the root and user volumes, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html">
            Modify a WorkSpace</a>. 
            
             <note><para>
            The <code>MANUAL</code> running mode value is only supported by Amazon WorkSpaces
            Core. Contact your account team to be allow-listed to use this value. For more information,
            see <a href="http://aws.amazon.com/workspaces/core/">Amazon WorkSpaces Core</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_ComputeTypeName">
            <summary>
            <para>
            <para>The compute type. For more information, see <a href="http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles">Amazon
            WorkSpaces Bundles</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RootVolumeSizeGib">
            <summary>
            <para>
            <para>The size of the root volume. For important information about how to modify the size
            of the root and user volumes, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html">Modify
            a WorkSpace</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RunningMode">
            <summary>
            <para>
            <para>The running mode. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html">Manage
            the WorkSpace Running Mode</a>.</para><note><para>The <code>MANUAL</code> value is only supported by Amazon WorkSpaces Core. Contact
            your account team to be allow-listed to use this value. For more information, see
            <a href="http://aws.amazon.com/workspaces/core/">Amazon WorkSpaces Core</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_RunningModeAutoStopTimeoutInMinute">
            <summary>
            <para>
            <para>The time after a user logs off when WorkSpaces are automatically stopped. Configured
            in 60-minute intervals.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceProperties_UserVolumeSizeGib">
            <summary>
            <para>
            <para>The size of the user storage. For important information about how to modify the size
            of the root and user volumes, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/modify-workspaces.html">Modify
            a WorkSpace</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspacePropertiesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspacePropertyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet">
            <summary>
            Sets the state of the specified WorkSpace.
            
             
            <para>
            To maintain a WorkSpace without being interrupted, set the WorkSpace state to <code>ADMIN_MAINTENANCE</code>.
            WorkSpaces in this state do not respond to requests to reboot, stop, start, rebuild,
            or restore. An AutoStop WorkSpace in this state is not stopped. Users cannot log into
            a WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.WorkspaceState">
            <summary>
            <para>
            <para>The WorkSpace state.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ModifyWorkspaceStateResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.EditWKSWorkspaceStateCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountCmdlet">
            <summary>
            Retrieves a list that describes the configuration of Bring Your Own License (BYOL)
            for the specified account.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeAccountResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeAccountResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet">
            <summary>
            Retrieves a list that describes modifications to the configuration of Bring Your Own
            License (BYOL) for the specified account.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AccountModifications'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeAccountModificationsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeAccountModificationsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAccountModificationCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet">
            <summary>
            Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks, that you can
            use for the network management interface when you enable Bring Your Own License (BYOL).
            
            
             
            <para>
            This operation can be run only by Amazon Web Services accounts that are enabled for
            BYOL. If your account isn't enabled for BYOL, you'll receive an <code>AccessDeniedException</code>
            error.
            </para><para>
            The management network interface is connected to a secure Amazon WorkSpaces management
            network. It is used for interactive streaming of the WorkSpace desktop to Amazon WorkSpaces
            clients, and to allow Amazon WorkSpaces to manage the WorkSpace.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.ManagementCidrRangeConstraint">
            <summary>
            <para>
            <para>The IP address range to search. Specify an IP address range that is compatible with
            your network and in CIDR notation (that is, specify the range as an IPv4 CIDR block).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ManagementCidrRanges'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ListAvailableManagementCidrRangesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.ListAvailableManagementCidrRangesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ManagementCidrRangeConstraint parameter.
            The -PassThru parameter is deprecated, use -Select '^ManagementCidrRangeConstraint' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSAvailableManagementCidrRangeListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientBrandingCmdlet">
            <summary>
            Describes the specified client branding. Client branding allows you to customize the
            log in page of various device types for your users. You can add your company logo,
            the support email address, support link, link to reset password, and a custom message
            for users trying to sign in.
            
             <note><para>
            Only device types that have branding information configured will be shown in the response.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientBrandingCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier of the WorkSpace for which you want to view client branding
            information.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientBrandingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeClientBrandingResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeClientBrandingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientBrandingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet">
            <summary>
            Retrieves a list that describes one or more specified Amazon WorkSpaces clients.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.ResourceId">
            <summary>
            <para>
            <para>The resource identifier, in the form of directory IDs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ClientPropertiesList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeClientPropertiesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeClientPropertiesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSClientPropertyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet">
            <summary>
            Retrieves a list of Amazon Connect client add-ins that have been created.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier for which the client add-in is configured.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AddIns'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeConnectClientAddInsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeConnectClientAddInsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectClientAddInCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet">
            <summary>
            Retrieves a list that describes the connection aliases used for cross-Region redirection.
            For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifiers of the connection aliases to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory associated with the connection alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of connection aliases to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectionAliases'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeConnectionAliasesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeConnectionAliasesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet">
            <summary>
            Describes the permissions that the owner of a connection alias has granted to another
            Amazon Web Services account for the specified connection alias. For more information,
            see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifier of the connection alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results. </para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeConnectionAliasPermissionsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeConnectionAliasPermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSConnectionAliasPermissionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet">
            <summary>
            Describes one or more of your IP access control groups.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Result'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeIpGroupsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeIpGroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSIpGroupCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet">
            <summary>
            Describes the specified tags for the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, IP access control groups, and connection
            aliases.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TagList'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeTagsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeTagsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet">
            <summary>
            Describes the specified WorkSpaces.
            
             
            <para>
            You can filter the results by using the bundle identifier, directory identifier, or
            owner, but you can specify only one filter at a time.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the bundle. All WorkSpaces that are created from this bundle are
            retrieved. You cannot combine this parameter with any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. In addition, you can optionally specify a specific
            directory user (see <code>UserName</code>). You cannot combine this parameter with
            any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.UserName">
            <summary>
            <para>
            <para>The name of the directory user. You must specify this parameter with <code>DirectoryId</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifiers of the WorkSpaces. You cannot combine this parameter with any other
            filter.</para><para>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns
            is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with
            this identifier, no information is returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Workspaces'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet">
            <summary>
            Retrieves a list that describes the available WorkSpace bundles.
            
             
            <para>
            You can filter the results using either bundle ID or owner, but not both.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifiers of the bundles. You cannot combine this parameter with any other filter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.NextToken">
            <summary>
            <para>
            <para>The token for the next set of results. (You received this token from a previous call.)</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.Owner">
            <summary>
            <para>
            <para>The owner of the bundles. You cannot combine this parameter with any other filter.</para><para>To describe the bundles provided by Amazon Web Services, specify <code>AMAZON</code>.
            To describe the bundles that belong to your account, don't specify a value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Bundles'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceBundlesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceBundlesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceBundleCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet">
            <summary>
            Describes the available directories that are registered with Amazon WorkSpaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifiers of the directories. If the value is null, all directories are retrieved.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.Limit">
            <summary>
            <para>
            <para>The maximum number of directories to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Directories'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceDirectoriesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceDirectoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceDirectoryCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet">
            <summary>
            Retrieves a list that describes one or more specified images, if the image identifiers
            are provided. Otherwise, all images in the account are described.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.ImageType">
            <summary>
            <para>
            <para>The type (owned or shared) of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Images'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceImagesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceImagesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImageCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet">
            <summary>
            Describes the permissions that the owner of an image has granted to other Amazon Web
            Services accounts for an image.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of items to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceImagePermissionsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceImagePermissionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceImagePermissionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet">
            <summary>
            Describes the connection status of the specified WorkSpaces.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifiers of the WorkSpaces. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.NextToken">
            <summary>
            <para>
            <para>If you received a <code>NextToken</code> from a previous call that was paginated,
            provide this token to receive the next set of results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkspacesConnectionStatus'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspacesConnectionStatusResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspacesConnectionStatusResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspacesConnectionStatusCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet">
            <summary>
            Describes the snapshots for the specified WorkSpace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DescribeWorkspaceSnapshotsResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.DescribeWorkspaceSnapshotsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.GetWKSWorkspaceSnapshotCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet">
            <summary>
            Imports client branding. Client branding allows you to customize your WorkSpace's
            client login portal. You can tailor your login portal company logo, the support email
            address, support link, link to reset password, and a custom message for users trying
            to sign in.
            
             
            <para>
            After you import client branding, the default branding experience for the specified
            platform type is replaced with the imported experience
            </para><note><ul><li><para>
            You must specify at least one platform type when importing client branding.
            </para></li><li><para>
            You can import up to 6 MB of data with each request. If your request exceeds this
            limit, you can import client branding for different platform types using separate
            requests.
            </para></li><li><para>
            In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify only one parameter for each platform
            type, but not both.
            </para></li><li><para>
            Imported data can take up to a minute to appear in the WorkSpaces client.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeAndroid_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeLinux_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeOsx_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWeb_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWindows_ForgotPasswordLink">
            <summary>
            <para>
            <para>The forgotten password link. This is the web address that users can go to if they
            forget the password for their WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeAndroid_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeLinux_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeOsx_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWeb_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWindows_LoginMessage">
            <summary>
            <para>
            <para>The login message. Specified as a key value pair, in which the key is a locale and
            the value is the localized message for that locale. The only key supported is <code>en_US</code>.
            The HTML tags supported include the following: <code>a, b, blockquote, br, cite, code,
            dd, dl, dt, div, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup,
            u, ul</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeAndroid_Logo">
            <summary>
            <para>
            <para>The logo. The only image format accepted is a binary data object that is converted
            from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_Logo">
            <summary>
            <para>
            <para>The logo. This is the standard-resolution display that has a 1:1 pixel density (or
            @1x), where one pixel is equal to one point. The only image format accepted is a binary
            data object that is converted from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeLinux_Logo">
            <summary>
            <para>
            <para>The logo. The only image format accepted is a binary data object that is converted
            from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeOsx_Logo">
            <summary>
            <para>
            <para>The logo. The only image format accepted is a binary data object that is converted
            from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWeb_Logo">
            <summary>
            <para>
            <para>The logo. The only image format accepted is a binary data object that is converted
            from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWindows_Logo">
            <summary>
            <para>
            <para>The logo. The only image format accepted is a binary data object that is converted
            from a <code>.png</code> file.</para>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_Logo2x">
            <summary>
            <para>
            <para>The @2x version of the logo. This is the higher resolution display that offers a scale
            factor of 2.0 (or @2x). The only image format accepted is a binary data object that
            is converted from a <code>.png</code> file.</para><note><para> For more information about iOS image size and resolution, see <a href="https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/image-size-and-resolution/">Image
            Size and Resolution </a> in the <i>Apple Human Interface Guidelines</i>.</para></note>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_Logo3x">
            <summary>
            <para>
            <para>The @3x version of the logo. This is the higher resolution display that offers a scale
            factor of 3.0 (or @3x). The only image format accepted is a binary data object that
            is converted from a <code>.png</code> file.</para><note><para> For more information about iOS image size and resolution, see <a href="https://developer.apple.com/design/human-interface-guidelines/ios/icons-and-images/image-size-and-resolution/">Image
            Size and Resolution </a> in the <i>Apple Human Interface Guidelines</i>.</para></note>
            </para>
            <para>The cmdlet will automatically convert the supplied parameter of type string, string[], System.IO.FileInfo or System.IO.Stream to byte[] before supplying it to the service.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier of the WorkSpace for which you want to import client branding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeAndroid_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeLinux_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeOsx_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWeb_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWindows_SupportEmail">
            <summary>
            <para>
            <para>The support email. The company's customer support email address.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default email is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeAndroid_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeIos_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeLinux_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeOsx_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWeb_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.DeviceTypeWindows_SupportLink">
            <summary>
            <para>
            <para>The support link. The link for the company's customer support page for their WorkSpace.</para><note><ul><li><para>In each platform type, the <code>SupportEmail</code> and <code>SupportLink</code>
            parameters are mutually exclusive. You can specify one parameter for each platform
            type, but not both.</para></li><li><para>The default support link is <code>workspaces-feedback@amazon.com</code>.</para></li></ul></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ImportClientBrandingResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.ImportClientBrandingResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSClientBrandingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet">
            <summary>
            Imports the specified Windows 10 Bring Your Own License (BYOL) or Windows Server 2016
            BYOL image into Amazon WorkSpaces. The image must be an already licensed Amazon EC2
            image that is in your Amazon Web Services account, and you must own the image. For
            more information about creating BYOL images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">
            Bring Your Own Windows Desktop Licenses</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Application">
            <summary>
            <para>
            <para>If specified, the version of Microsoft Office to subscribe to. Valid only for Windows
            10 BYOL images. For more information about subscribing to Office for BYOL images,
            see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">
            Bring Your Own Windows Desktop Licenses</a>.</para><note><para>Although this parameter is an array, only one item is allowed at this time.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Ec2ImageId">
            <summary>
            <para>
            <para>The identifier of the EC2 image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.ImageDescription">
            <summary>
            <para>
            <para>The description of the WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.ImageName">
            <summary>
            <para>
            <para>The name of the WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.IngestionProcess">
            <summary>
            <para>
            <para>The ingestion process to be used when importing the image, depending on which protocol
            you want to use for your BYOL Workspace image, either PCoIP, WorkSpaces Streaming
            Protocol (WSP), or bring your own protocol (BYOP). To use WSP, specify a value that
            ends in <code>_WSP</code>. To use PCoIP, specify a value that does not end in <code>_WSP</code>.
            To use BYOP, specify a value that ends in <code>_BYOP</code>.</para><para>For non-GPU-enabled bundles (bundles other than Graphics or GraphicsPro), specify
            <code>BYOL_REGULAR</code>, <code>BYOL_REGULAR_WSP</code>, or <code>BYOL_REGULAR_BYOP</code>,
            depending on the protocol.</para><note><para>The <code>BYOL_REGULAR_BYOP</code> and <code>BYOL_GRAPHICS_G4DN_BYOP</code> values
            are only supported by Amazon WorkSpaces Core. Contact your account team to be allow-listed
            to use these values. For more information, see <a href="http://aws.amazon.com/workspaces/core/">Amazon
            WorkSpaces Core</a>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.ImportWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.ImportWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageName parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.ImportWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet">
            <summary>
            Creates a client-add-in for Amazon Connect within a directory. You can create only
            one Amazon Connect client add-in within a directory.
            
             
            <para>
            This client add-in allows WorkSpaces users to seamlessly connect to Amazon Connect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.Name">
            <summary>
            <para>
            <para>The name of the client add-in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier for which to configure the client add-in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.URL">
            <summary>
            <para>
            <para>The endpoint URL of the Amazon Connect client add-in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AddInId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateConnectClientAddInResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateConnectClientAddInResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectClientAddInCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet">
            <summary>
            Creates the specified connection alias for use with cross-Region redirection. For
            more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet.ConnectionString">
            <summary>
            <para>
            <para>A connection string in the form of a fully qualified domain name (FQDN), such as <code>www.example.com</code>.</para><important><para>After you create a connection string, it is always associated to your Amazon Web Services
            account. You cannot recreate the same connection string with a different account,
            even if you delete all instances of it from the original account. The connection string
            is globally reserved for your account.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to associate with the connection alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'AliasId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateConnectionAliasResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateConnectionAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ConnectionString parameter.
            The -PassThru parameter is deprecated, use -Select '^ConnectionString' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSConnectionAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet">
            <summary>
            Creates an IP access control group.
            
             
            <para>
            An IP access control group provides you with the ability to control the IP addresses
            from which users are allowed to access their WorkSpaces. To specify the CIDR address
            ranges, add rules to your IP access control group and then associate the group with
            your directory. You can add rules when you create the group or at any time using <a>AuthorizeIpRules</a>.
            </para><para>
            There is a default IP access control group associated with your directory. If you
            don't associate an IP access control group with your directory, the default group
            is used. The default group includes a default rule that allows users to access their
            WorkSpaces from anywhere. You cannot modify the default IP access control group for
            your directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.GroupDesc">
            <summary>
            <para>
            <para>The description of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.GroupName">
            <summary>
            <para>
            <para>The name of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to add to the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'GroupId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateIpGroupResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateIpGroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet">
            <summary>
            Creates the specified tags for the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, IP access control groups, and connection
            aliases.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet">
            <summary>
            Creates a new updated WorkSpace image based on the specified source image. The new
            updated WorkSpace image has the latest drivers and other updates required by the Amazon
            WorkSpaces components.
            
             
            <para>
            To determine which WorkSpace images need to be updated with the latest Amazon WorkSpaces
            requirements, use <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaceImages.html">
            DescribeWorkspaceImages</a>.
            </para><note><ul><li><para>
            Only Windows 10, Windows Sever 2016, and Windows Server 2019 WorkSpace images can
            be programmatically updated at this time.
            </para></li><li><para>
            Microsoft Windows updates and other application updates are not included in the update
            process.
            </para></li><li><para>
            The source WorkSpace image is not deleted. You can delete the source image after you've
            verified your new updated image and created a new bundle. 
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.Description">
            <summary>
            <para>
            <para>A description of whether updates for the WorkSpace image are available.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new updated WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.SourceImageId">
            <summary>
            <para>
            <para>The identifier of the source WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags that you want to add to the new updated WorkSpace image.</para><note><para>To add tags at the same time when you're creating the updated image, you must create
            an IAM policy that grants your IAM user permissions to use <code>workspaces:CreateTags</code>.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ImageId'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateUpdatedWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateUpdatedWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSUpdatedWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet">
            <summary>
            Creates one or more WorkSpaces.
            
             
            <para>
            This operation is asynchronous and returns before the WorkSpaces are created.
            </para><note><para>
            The <code>MANUAL</code> running mode value is only supported by Amazon WorkSpaces
            Core. Contact your account team to be allow-listed to use this value. For more information,
            see <a href="http://aws.amazon.com/workspaces/core/">Amazon WorkSpaces Core</a>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Workspace">
            <summary>
            <para>
            <para>The WorkSpaces to create. You can specify up to 25 WorkSpaces.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateWorkspacesResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateWorkspacesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Workspace parameter.
            The -PassThru parameter is deprecated, use -Select '^Workspace' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet">
            <summary>
            Creates the specified WorkSpace bundle. For more information about creating WorkSpace
            bundles, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/create-custom-bundle.html">
            Create a Custom WorkSpaces Image and Bundle</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.BundleDescription">
            <summary>
            <para>
            <para>The description of the bundle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.BundleName">
            <summary>
            <para>
            <para>The name of the bundle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.RootStorage_Capacity">
            <summary>
            <para>
            <para>The size of the root volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.UserStorage_Capacity">
            <summary>
            <para>
            <para>The size of the user volume.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image that is used to create the bundle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.ComputeType_Name">
            <summary>
            <para>
            <para>The compute type.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.Tag">
            <summary>
            <para>
            <para>The tags associated with the bundle.</para><note><para>To add tags at the same time when you're creating the bundle, you must create an IAM
            policy that grants your IAM user permissions to use <code>workspaces:CreateTags</code>.
            </para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'WorkspaceBundle'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateWorkspaceBundleResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateWorkspaceBundleResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BundleName parameter.
            The -PassThru parameter is deprecated, use -Select '^BundleName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceBundleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet">
            <summary>
            Creates a new WorkSpace image from an existing WorkSpace.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.Description">
            <summary>
            <para>
            <para>The description of the new WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.Name">
            <summary>
            <para>
            <para>The name of the new WorkSpace image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.Tag">
            <summary>
            <para>
            <para>The tags that you want to add to the new WorkSpace image. To add tags when you're
            creating the image, you must create an IAM policy that grants your IAM user permission
            to use <code>workspaces:CreateTags</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the source WorkSpace</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.CreateWorkspaceImageResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.CreateWorkspaceImageResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.NewWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet">
            <summary>
            Associates the specified connection alias with the specified directory to enable cross-Region
            redirection. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.
            
             <note><para>
            Before performing this operation, call <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html">
            DescribeConnectionAliases</a> to make sure that the current state of the connection
            alias is <code>CREATED</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifier of the connection alias.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the directory to associate the connection alias with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'ConnectionIdentifier'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.AssociateConnectionAliasResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.AssociateConnectionAliasResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSConnectionAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet">
            <summary>
            Associates the specified IP access control group with the specified directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.AssociateIpGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet">
            <summary>
            Registers the specified directory. This operation is asynchronous and returns before
            the WorkSpace directory is registered. If this is the first time you are registering
            a directory, you will need to create the workspaces_DefaultRole role before you can
            register a directory. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role">
            Creating the workspaces_DefaultRole Role</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. You cannot register a directory if it does not have
            a status of Active. If the directory does not have a status of Active, you will receive
            an InvalidResourceStateException error. If you have already registered the maximum
            number of directories that you can register with Amazon WorkSpaces, you will receive
            a ResourceLimitExceededException error. Deregister directories that you are not using
            for WorkSpaces, and try again.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.EnableSelfService">
            <summary>
            <para>
            <para>Indicates whether self-service capabilities are enabled or disabled.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.EnableWorkDoc">
            <summary>
            <para>
            <para>Indicates whether Amazon WorkDocs is enabled or disabled. If you have enabled this
            parameter and WorkDocs is not available in the Region, you will receive an OperationNotSupportedException
            error. Set <code>EnableWorkDocs</code> to disabled, and try again.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.SubnetId">
            <summary>
            <para>
            <para>The identifiers of the subnets for your virtual private cloud (VPC). Make sure that
            the subnets are in supported Availability Zones. The subnets must also be in separate
            Availability Zones. If these conditions are not met, you will receive an OperationNotSupportedException
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Tag">
            <summary>
            <para>
            <para>The tags associated with the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Tenancy">
            <summary>
            <para>
            <para>Indicates whether your WorkSpace directory is dedicated or shared. To use Bring Your
            Own License (BYOL) images, this value must be set to <code>DEDICATED</code> and your
            Amazon Web Services account must be enabled for BYOL. If your account has not been
            enabled for BYOL, you will receive an InvalidParameterValuesException error. For more
            information about BYOL images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">Bring
            Your Own Windows Desktop Images</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RegisterWorkspaceDirectoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RegisterWKSWorkspaceDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet">
            <summary>
            Deletes customized client branding. Client branding allows you to customize your WorkSpace's
            client login portal. You can tailor your login portal company logo, the support email
            address, support link, link to reset password, and a custom message for users trying
            to sign in.
            
             
            <para>
            After you delete your customized client branding, your login portal reverts to the
            default client branding.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet.Platform">
            <summary>
            <para>
            <para>The device type for which you want to delete client branding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier of the WorkSpace for which you want to delete client branding.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteClientBrandingResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSClientBrandingCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet">
            <summary>
            Deletes a client-add-in for Amazon Connect that is configured within a directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet.AddInId">
            <summary>
            <para>
            <para>The identifier of the client add-in to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier for which the client add-in is configured.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteConnectClientAddInResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectClientAddInCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectionAliasCmdlet">
            <summary>
            Deletes the specified connection alias. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.
            
             <important><para><b>If you will no longer be using a fully qualified domain name (FQDN) as the registration
            code for your WorkSpaces users, you must take certain precautions to prevent potential
            security issues.</b> For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html#cross-region-redirection-security-considerations">
            Security Considerations if You Stop Using Cross-Region Redirection</a>.
            </para></important><note><para>
            To delete a connection alias that has been shared, the shared account must first disassociate
            the connection alias from any directories it has been associated with. Then you must
            unshare the connection alias from the account it has been shared with. You can delete
            a connection alias only after it is no longer shared with any accounts or associated
            with any directories.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectionAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifier of the connection alias to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectionAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteConnectionAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectionAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSConnectionAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet">
            <summary>
            Deletes the specified IP access control group.
            
             
            <para>
            You cannot delete an IP access control group that is associated with a directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the IP access control group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteIpGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet">
            <summary>
            Deletes the specified tags from the specified WorkSpaces resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.ResourceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpaces resource. The supported resource types are WorkSpaces,
            registered directories, images, custom bundles, IP access control groups, and connection
            aliases.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The tag keys.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteTagsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceBundleCmdlet">
            <summary>
            Deletes the specified WorkSpace bundle. For more information about deleting WorkSpace
            bundles, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/delete_bundle.html">
            Delete a Custom WorkSpaces Bundle or Image</a>.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceBundleCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the bundle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteWorkspaceBundleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceBundleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BundleId parameter.
            The -PassThru parameter is deprecated, use -Select '^BundleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceBundleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet">
            <summary>
            Deletes the specified image from your account. To delete an image, you must first
            delete any bundles that are associated with the image and unshare the image if it
            is shared with other accounts.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeleteWorkspaceImageResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RemoveWKSWorkspaceImageCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet">
            <summary>
            Restores the specified WorkSpace to its last known healthy state.
            
             
            <para>
            You cannot restore a WorkSpace unless its state is <code> AVAILABLE</code>, <code>ERROR</code>,
            <code>UNHEALTHY</code>, or <code>STOPPED</code>.
            </para><para>
            Restoring a WorkSpace is a potentially destructive action that can result in the loss
            of data. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/restore-workspace.html">Restore
            a WorkSpace</a>.
            </para><para>
            This operation is asynchronous and returns before the WorkSpace is completely restored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.WorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RestoreWorkspaceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the WorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^WorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RestoreWKSWorkspaceCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet">
            <summary>
            Removes one or more rules from the specified IP access control group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.UserRule">
            <summary>
            <para>
            <para>The rules to remove from the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.RevokeIpRulesResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.RevokeWKSIpRuleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet">
            <summary>
            Migrates a WorkSpace from one operating system or bundle type to another, while retaining
            the data on the user volume.
            
             
            <para>
            The migration process recreates the WorkSpace by using a new root volume from the
            target bundle image and the user volume from the last available snapshot of the original
            WorkSpace. During migration, the original <code>D:\Users\%USERNAME%</code> user profile
            folder is renamed to <code>D:\Users\%USERNAME%MMddyyTHHmmss%.NotMigrated</code>. A
            new <code>D:\Users\%USERNAME%\</code> folder is generated by the new OS. Certain files
            in the old user profile are moved to the new user profile.
            </para><para>
            For available migration scenarios, details about what happens during migration, and
            best practices, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/migrate-workspaces.html">Migrate
            a WorkSpace</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the target bundle type to migrate the WorkSpace to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.SourceWorkspaceId">
            <summary>
            <para>
            <para>The identifier of the WorkSpace to migrate from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.MigrateWorkspaceResponse).
            Specifying the name of a property of type Amazon.WorkSpaces.Model.MigrateWorkspaceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the SourceWorkspaceId parameter.
            The -PassThru parameter is deprecated, use -Select '^SourceWorkspaceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.StartWKSWorkspaceMigrationCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSConnectionAliasCmdlet">
            <summary>
            Disassociates a connection alias from a directory. Disassociating a connection alias
            disables cross-Region redirection between two directories in different Regions. For
            more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.
            
             <note><para>
            Before performing this operation, call <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html">
            DescribeConnectionAliases</a> to make sure that the current state of the connection
            alias is <code>CREATED</code>.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSConnectionAliasCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifier of the connection alias to disassociate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSConnectionAliasCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DisassociateConnectionAliasResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSConnectionAliasCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSConnectionAliasCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet">
            <summary>
            Disassociates the specified IP access control group from the specified directory.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifiers of one or more IP access control groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DisassociateIpGroupsResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet">
            <summary>
            Deregisters the specified directory. This operation is asynchronous and returns before
            the WorkSpace directory is deregistered. If any WorkSpaces are registered to this
            directory, you must remove them before you can deregister the directory.
            
             <note><para>
            Simple AD and AD Connector are made available to you free of charge to use with WorkSpaces.
            If there are no WorkSpaces being used with your Simple AD or AD Connector directory
            for 30 consecutive days, this directory will be automatically deregistered for use
            with Amazon WorkSpaces, and you will be charged for this directory as per the <a href="http://aws.amazon.com/directoryservice/pricing/">Directory
            Service pricing terms</a>.
            </para><para>
            To delete empty directories, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/delete-workspaces-directory.html">
            Delete the Directory for Your WorkSpaces</a>. If you delete your Simple AD or AD Connector
            directory, you can always create a new one when you want to start using WorkSpaces
            again.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.DirectoryId">
            <summary>
            <para>
            <para>The identifier of the directory. If any WorkSpaces are registered to this directory,
            you must remove them before you deregister the directory, or you will receive an OperationNotSupportedException
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.DeregisterWorkspaceDirectoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the DirectoryId parameter.
            The -PassThru parameter is deprecated, use -Select '^DirectoryId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UnregisterWKSWorkspaceDirectoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet">
            <summary>
            Updates a Amazon Connect client add-in. Use this action to update the name and endpoint
            URL of a Amazon Connect client add-in.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.AddInId">
            <summary>
            <para>
            <para>The identifier of the client add-in to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.Name">
            <summary>
            <para>
            <para>The name of the client add-in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.ResourceId">
            <summary>
            <para>
            <para>The directory identifier for which the client add-in is configured.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.URL">
            <summary>
            <para>
            <para>The endpoint URL of the Amazon Connect client add-in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateConnectClientAddInResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceId parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectClientAddInCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet">
            <summary>
            Shares or unshares a connection alias with one account by specifying whether that
            account has permission to associate the connection alias with a directory. If the
            association permission is granted, the connection alias is shared with that account.
            If the association permission is revoked, the connection alias is unshared with the
            account. For more information, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/cross-region-redirection.html">
            Cross-Region Redirection for Amazon WorkSpaces</a>.
            
             <note><ul><li><para>
            Before performing this operation, call <a href="https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeConnectionAliases.html">
            DescribeConnectionAliases</a> to make sure that the current state of the connection
            alias is <code>CREATED</code>.
            </para></li><li><para>
            To delete a connection alias that has been shared, the shared account must first disassociate
            the connection alias from any directories it has been associated with. Then you must
            unshare the connection alias from the account it has been shared with. You can delete
            a connection alias only after it is no longer shared with any accounts or associated
            with any directories.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.AliasId">
            <summary>
            <para>
            <para>The identifier of the connection alias that you want to update permissions for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.ConnectionAliasPermission_AllowAssociation">
            <summary>
            <para>
            <para>Indicates whether the specified Amazon Web Services account is allowed to associate
            the connection alias with a directory.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.ConnectionAliasPermission_SharedAccountId">
            <summary>
            <para>
            <para>The identifier of the Amazon Web Services account that the connection alias is shared
            with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateConnectionAliasPermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AliasId parameter.
            The -PassThru parameter is deprecated, use -Select '^AliasId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSConnectionAliasPermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet">
            <summary>
            Replaces the current rules of the specified IP access control group with the specified
            rules.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.GroupId">
            <summary>
            <para>
            <para>The identifier of the group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.UserRule">
            <summary>
            <para>
            <para>One or more rules.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateRulesOfIpGroupResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the GroupId parameter.
            The -PassThru parameter is deprecated, use -Select '^GroupId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSRulesOfIpGroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet">
            <summary>
            Updates a WorkSpace bundle with a new image. For more information about updating WorkSpace
            bundles, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/update-custom-bundle.html">
            Update a Custom WorkSpaces Bundle</a>.
            
             <important><para>
            Existing WorkSpaces aren't automatically updated when you update the bundle that they're
            based on. To update existing WorkSpaces that are based on a bundle that you've updated,
            you must either rebuild the WorkSpaces or delete and recreate them.
            </para></important>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet.BundleId">
            <summary>
            <para>
            <para>The identifier of the bundle.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateWorkspaceBundleResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the BundleId parameter.
            The -PassThru parameter is deprecated, use -Select '^BundleId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceBundleCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet">
            <summary>
            Shares or unshares an image with one account in the same Amazon Web Services Region
            by specifying whether that account has permission to copy the image. If the copy image
            permission is granted, the image is shared with that account. If the copy image permission
            is revoked, the image is unshared with the account.
            
             
            <para>
            After an image has been shared, the recipient account can copy the image to other
            Regions as needed.
            </para><para>
            In the China (Ningxia) Region, you can copy images only within the same Region.
            </para><para>
            In Amazon Web Services GovCloud (US), to copy images to and from other Regions, contact
            Amazon Web Services Support.
            </para><para>
            For more information about sharing images, see <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/share-custom-image.html">
            Share or Unshare a Custom WorkSpaces Image</a>.
            </para><note><ul><li><para>
            To delete an image that has been shared, you must unshare the image before you delete
            it.
            </para></li><li><para>
            Sharing Bring Your Own License (BYOL) images across Amazon Web Services accounts isn't
            supported at this time in Amazon Web Services GovCloud (US). To share BYOL images
            across accounts in Amazon Web Services GovCloud (US), contact Amazon Web Services
            Support.
            </para></li></ul></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.AllowCopyImage">
            <summary>
            <para>
            <para>The permission to copy the image. This permission can be revoked only after an image
            has been shared.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.ImageId">
            <summary>
            <para>
            <para>The identifier of the image.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.SharedAccountId">
            <summary>
            <para>
            <para>The identifier of the Amazon Web Services account to share or unshare the image with.</para><important><para>Before sharing the image, confirm that you are sharing to the correct Amazon Web Services
            account ID.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.WorkSpaces.Model.UpdateWorkspaceImagePermissionResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ImageId parameter.
            The -PassThru parameter is deprecated, use -Select '^ImageId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.WKS.UpdateWKSWorkspaceImagePermissionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
