<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.TranscribeService</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet">
            <summary>
            Adds one or more custom tags, each in the form of a key:value pair, to the specified
            resource.
            
             
            <para>
            To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource you want to tag. ARNs have the format
            <code>arn:partition:service:region:account-id:resource-type/resource-id</code>.</para><para>For example, <code>arn:aws:transcribe:us-west-2:account-id:transcription-job/transcription-job-name</code>.</para><para>Valid values for <code>resource-type</code> are: <code>transcription-job</code>, <code>medical-transcription-job</code>,
            <code>vocabulary</code>, <code>medical-vocabulary</code>, <code>vocabulary-filter</code>,
            and <code>language-model</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to the specified
            resource.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.AddTRSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryCmdlet">
            <summary>
            Provides information about the specified Call Analytics category.
            
             
            <para>
            To get a list of your Call Analytics categories, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryCmdlet.CategoryName">
            <summary>
            <para>
            <para>The name of the Call Analytics category you want information about. Category names
            are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CategoryProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetCallAnalyticsCategoryResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetCallAnalyticsCategoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CategoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^CategoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryListCmdlet">
            <summary>
            Provides a list of Call Analytics categories, including all rules that make up each
            category.
            
             
            <para>
            To get detailed information about a specific Call Analytics category, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Call Analytics categories to return in each page of results.
            If there are fewer results than the value you specify, only the actual results are
            returned. If you don't specify a value, a default of 5 is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListCallAnalyticsCategories</code> request returns more results than
            can be displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Categories'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListCallAnalyticsCategoriesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsCategoryListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobCmdlet">
            <summary>
            Provides information about the specified Call Analytics job.
            
             
            <para>
            To view the job's status, refer to <code>CallAnalyticsJobStatus</code>. If the status
            is <code>COMPLETED</code>, the job is finished. You can find your completed transcript
            at the URI specified in <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>,
            <code>FailureReason</code> provides details on why your transcription job failed.
            </para><para>
            If you enabled personally identifiable information (PII) redaction, the redacted transcript
            appears at the location specified in <code>RedactedTranscriptFileUri</code>.
            </para><para>
            If you chose to redact the audio in your media file, you can find your redacted media
            file at the location specified in <code>RedactedMediaFileUri</code>.
            </para><para>
            To get a list of your Call Analytics jobs, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobCmdlet.CallAnalyticsJobName">
            <summary>
            <para>
            <para>The name of the Call Analytics job you want information about. Job names are case
            sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CallAnalyticsJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetCallAnalyticsJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetCallAnalyticsJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CallAnalyticsJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^CallAnalyticsJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet">
            <summary>
            Provides a list of Call Analytics jobs that match the specified criteria. If no criteria
            are specified, all Call Analytics jobs are returned.
            
             
            <para>
            To get detailed information about a specific Call Analytics job, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.JobNameContain">
            <summary>
            <para>
            <para>Returns only the Call Analytics jobs that contain the specified string. The search
            is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Call Analytics jobs to return in each page of results. If there
            are fewer results than the value you specify, only the actual results are returned.
            If you don't specify a value, a default of 5 is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListCallAnalyticsJobs</code> request returns more results than can be
            displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.Status">
            <summary>
            <para>
            <para>Returns only Call Analytics jobs with the specified status. Jobs are ordered by creation
            date, with the newest job first. If you don't include <code>Status</code>, all Call
            Analytics jobs are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CallAnalyticsJobSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListCallAnalyticsJobsResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListCallAnalyticsJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobNameContain parameter.
            The -PassThru parameter is deprecated, use -Select '^JobNameContain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSCallAnalyticsJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelCmdlet">
            <summary>
            Provides information about the specified custom language model.
            
             
            <para>
            This operation also shows if the base language model you used to create your custom
            language model has been updated. If Amazon Transcribe has updated the base model,
            you can create a new custom language model using the updated base model.
            </para><para>
            If you tried to create a new custom language model and the request wasn't successful,
            you can use <code>DescribeLanguageModel</code> to help identify the reason for this
            failure.
            </para><para>
            To get a list of your custom language models, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the custom language model you want information about. Model names are
            case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'LanguageModel'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DescribeLanguageModelResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.DescribeLanguageModelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ModelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ModelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet">
            <summary>
            Provides a list of custom language models that match the specified criteria. If no
            criteria are specified, all language models are returned.
            
             
            <para>
            To get detailed information about a specific custom language model, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.NameContain">
            <summary>
            <para>
            <para>Returns only the custom language models that contain the specified string. The search
            is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.StatusEqual">
            <summary>
            <para>
            <para>Returns only custom language models with the specified status. Language models are
            ordered by creation date, with the newest model first. If you don't include <code>StatusEquals</code>,
            all custom language models are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom language models to return in each page of results. If
            there are fewer results than the value you specify, only the actual results are returned.
            If you don't specify a value, a default of 5 is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListLanguageModels</code> request returns more results than can be displayed,
            <code>NextToken</code> is displayed in the response with an associated string. To
            get the next page of results, copy this string and repeat your request, including
            <code>NextToken</code> with the value of the copied string. Repeat as needed to view
            all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Models'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListLanguageModelsResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListLanguageModelsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSLanguageModelListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobCmdlet">
            <summary>
            Provides information about the specified medical transcription job.
            
             
            <para>
            To view the status of the specified medical transcription job, check the <code>TranscriptionJobStatus</code>
            field. If the status is <code>COMPLETED</code>, the job is finished and you can find
            the results at the location specified in <code>TranscriptFileUri</code>. If the status
            is <code>FAILED</code>, <code>FailureReason</code> provides details on why your transcription
            job failed.
            </para><para>
            To get a list of your medical transcription jobs, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobCmdlet.MedicalTranscriptionJobName">
            <summary>
            <para>
            <para>The name of the medical transcription job you want information about. Job names are
            case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MedicalTranscriptionJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetMedicalTranscriptionJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetMedicalTranscriptionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MedicalTranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^MedicalTranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet">
            <summary>
            Provides a list of medical transcription jobs that match the specified criteria. If
            no criteria are specified, all medical transcription jobs are returned.
            
             
            <para>
            To get detailed information about a specific medical transcription job, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.JobNameContain">
            <summary>
            <para>
            <para>Returns only the medical transcription jobs that contain the specified string. The
            search is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of medical transcription jobs to return in each page of results.
            If there are fewer results than the value you specify, only the actual results are
            returned. If you don't specify a value, a default of 5 is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListMedicalTranscriptionJobs</code> request returns more results than
            can be displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.Status">
            <summary>
            <para>
            <para>Returns only medical transcription jobs with the specified status. Jobs are ordered
            by creation date, with the newest job first. If you don't include <code>Status</code>,
            all medical transcription jobs are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MedicalTranscriptionJobSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListMedicalTranscriptionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the JobNameContain parameter.
            The -PassThru parameter is deprecated, use -Select '^JobNameContain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalTranscriptionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyCmdlet">
            <summary>
            Provides information about the specified custom medical vocabulary.
            
             
            <para>
            To view the status of the specified medical vocabulary, check the <code>VocabularyState</code>
            field. If the status is <code>READY</code>, your vocabulary is available to use. If
            the status is <code>FAILED</code>, <code>FailureReason</code> provides details on
            why your vocabulary failed.
            </para><para>
            To get a list of your custom medical vocabularies, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom medical vocabulary you want information about. Vocabulary names
            are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetMedicalVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetMedicalVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet">
            <summary>
            Provides a list of custom medical vocabularies that match the specified criteria.
            If no criteria are specified, all custom medical vocabularies are returned.
            
             
            <para>
            To get detailed information about a specific custom medical vocabulary, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.NameContain">
            <summary>
            <para>
            <para>Returns only the custom medical vocabularies that contain the specified string. The
            search is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.StateEqual">
            <summary>
            <para>
            <para>Returns only custom medical vocabularies with the specified state. Vocabularies are
            ordered by creation date, with the newest vocabulary first. If you don't include <code>StateEquals</code>,
            all custom medical vocabularies are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom medical vocabularies to return in each page of results.
            If there are fewer results than the value you specify, only the actual results are
            returned. If you don't specify a value, a default of 5 is used.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListMedicalVocabularies</code> request returns more results than can
            be displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vocabularies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListMedicalVocabulariesResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListMedicalVocabulariesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSMedicalVocabularyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSResourceTagCmdlet">
            <summary>
            Lists all tags associated with the specified transcription job, vocabulary, model,
            or resource.
            
             
            <para>
            To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>Returns a list of all tags associated with the specified Amazon Resource Name (ARN).
            ARNs have the format <code>arn:partition:service:region:account-id:resource-type/resource-id</code>.</para><para>For example, <code>arn:aws:transcribe:us-west-2:account-id:transcription-job/transcription-job-name</code>.</para><para>Valid values for <code>resource-type</code> are: <code>transcription-job</code>, <code>medical-transcription-job</code>,
            <code>vocabulary</code>, <code>medical-vocabulary</code>, <code>vocabulary-filter</code>,
            and <code>language-model</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobCmdlet">
            <summary>
            Provides information about the specified transcription job.
            
             
            <para>
            To view the status of the specified transcription job, check the <code>TranscriptionJobStatus</code>
            field. If the status is <code>COMPLETED</code>, the job is finished and you can find
            the results at the location specified in <code>TranscriptFileUri</code>. If the status
            is <code>FAILED</code>, <code>FailureReason</code> provides details on why your transcription
            job failed.
            </para><para>
            If you enabled content redaction, the redacted transcript can be found at the location
            specified in <code>RedactedTranscriptFileUri</code>.
            </para><para>
            To get a list of your transcription jobs, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobCmdlet.TranscriptionJobName">
            <summary>
            <para>
            <para>The name of the transcription job you want information about. Job names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TranscriptionJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetTranscriptionJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetTranscriptionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^TranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet">
            <summary>
            Provides a list of transcription jobs that match the specified criteria. If no criteria
            are specified, all transcription jobs are returned.
            
             
            <para>
            To get detailed information about a specific transcription job, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.JobNameContain">
            <summary>
            <para>
            <para>Returns only the transcription jobs that contain the specified string. The search
            is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of transcription jobs to return in each page of results. If there
            are fewer results than the value you specify, only the actual results are returned.
            If you don't specify a value, a default of 5 is used.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListTranscriptionJobs</code> request returns more results than can be
            displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.Status">
            <summary>
            <para>
            <para>Returns only transcription jobs with the specified status. Jobs are ordered by creation
            date, with the newest job first. If you don't include <code>Status</code>, all transcription
            jobs are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TranscriptionJobSummaries'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListTranscriptionJobsResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListTranscriptionJobsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSTranscriptionJobListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyCmdlet">
            <summary>
            Provides information about the specified custom vocabulary.
            
             
            <para>
            To view the status of the specified vocabulary, check the <code>VocabularyState</code>
            field. If the status is <code>READY</code>, your vocabulary is available to use. If
            the status is <code>FAILED</code>, <code>FailureReason</code> provides details on
            why your vocabulary failed.
            </para><para>
            To get a list of your custom vocabularies, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want information about. Vocabulary names are
            case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterCmdlet">
            <summary>
            Provides information about the specified custom vocabulary filter.
            
             
            <para>
            To view the status of the specified vocabulary filter, check the <code>VocabularyState</code>
            field. If the status is <code>READY</code>, your vocabulary is available to use. If
            the status is <code>FAILED</code>, <code>FailureReason</code> provides details on
            why your vocabulary filter failed.
            </para><para>
            To get a list of your custom vocabulary filters, use the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterCmdlet.VocabularyFilterName">
            <summary>
            <para>
            <para>The name of the custom vocabulary filter you want information about. Vocabulary filter
            names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.GetVocabularyFilterResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.GetVocabularyFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyFilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyFilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet">
            <summary>
            Provides a list of custom vocabulary filters that match the specified criteria. If
            no criteria are specified, all custom vocabularies are returned.
            
             
            <para>
            To get detailed information about a specific custom vocabulary filter, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.NameContain">
            <summary>
            <para>
            <para>Returns only the custom vocabulary filters that contain the specified string. The
            search is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom vocabulary filters to return in each page of results.
            If there are fewer results than the value you specify, only the actual results are
            returned. If you don't specify a value, a default of 5 is used.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListVocabularyFilters</code> request returns more results than can be
            displayed, <code>NextToken</code> is displayed in the response with an associated
            string. To get the next page of results, copy this string and repeat your request,
            including <code>NextToken</code> with the value of the copied string. Repeat as needed
            to view all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'VocabularyFilters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListVocabularyFiltersResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListVocabularyFiltersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NameContain parameter.
            The -PassThru parameter is deprecated, use -Select '^NameContain' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyFilterListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet">
            <summary>
            Provides a list of custom vocabularies that match the specified criteria. If no criteria
            are specified, all custom vocabularies are returned.
            
             
            <para>
            To get detailed information about a specific custom vocabulary, use the operation.
            </para><br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.NameContain">
            <summary>
            <para>
            <para>Returns only the custom vocabularies that contain the specified string. The search
            is not case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.StateEqual">
            <summary>
            <para>
            <para>Returns only custom vocabularies with the specified state. Vocabularies are ordered
            by creation date, with the newest vocabulary first. If you don't include <code>StateEquals</code>,
            all custom medical vocabularies are returned.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of custom vocabularies to return in each page of results. If there
            are fewer results than the value you specify, only the actual results are returned.
            If you don't specify a value, a default of 5 is used.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.NextToken">
            <summary>
            <para>
            <para>If your <code>ListVocabularies</code> request returns more results than can be displayed,
            <code>NextToken</code> is displayed in the response with an associated string. To
            get the next page of results, copy this string and repeat your request, including
            <code>NextToken</code> with the value of the copied string. Repeat as needed to view
            all your results.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Vocabularies'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.ListVocabulariesResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.ListVocabulariesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.GetTRSVocabularyListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet">
            <summary>
            Creates a new Call Analytics category.
            
             
            <para>
            All categories are automatically applied to your Call Analytics jobs. Note that in
            order to apply your categories to your jobs, you must create them before submitting
            your job request, as categories cannot be applied retroactively.
            </para><para>
            Call Analytics categories are composed of rules. For each category, you must create
            between 1 and 20 rules. Rules can include these parameters: , , , and .
            </para><para>
            To update an existing category, see .
            </para><para>
            To learn more about:
            </para><ul><li><para>
            Call Analytics categories, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics-create-categories.html">Creating
            categories</a></para></li><li><para>
            Using rules, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics-create-categories.html#call-analytics-create-categories-rules">Rule
            criteria</a> and refer to the data type
            </para></li><li><para>
            Call Analytics, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics.html">Analyzing
            call center audio with Call Analytics</a></para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet.CategoryName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your Call Analytics category. It's helpful to use
            a detailed naming system that will make sense to you in the future. For example, it's
            better to use <code>sentiment-positive-last30seconds</code> for a category over a
            generic name like <code>test-category</code>.</para><para>Category names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet.Rule">
            <summary>
            <para>
            <para>Rules define a Call Analytics category. When creating a new Call Analytics category,
            you must create between 1 and 20 rules for that category. For each rule, you specify
            a filter you want applied to the attributes of a call. For example, you can choose
            a sentiment filter that detects if a customer's sentiment was positive during the
            last 30 seconds of the call.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CategoryProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.CreateCallAnalyticsCategoryResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.CreateCallAnalyticsCategoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CategoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^CategoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSCallAnalyticsCategoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet">
            <summary>
            Creates a new custom language model.
            
             
            <para>
            When creating a new language model, you must specify:
            </para><ul><li><para>
            If you want a Wideband (audio sample rates over 16,000 Hz) or Narrowband (audio sample
            rates under 16,000 Hz) base model
            </para></li><li><para>
            The location of your training and tuning files (this must be an Amazon S3 URI)
            </para></li><li><para>
            The language of your model
            </para></li><li><para>
            A unique name for your model
            </para></li></ul><para>
            For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html">Custom
            language models</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.BaseModelName">
            <summary>
            <para>
            <para>The Amazon Transcribe standard language model, or base model, used to create your
            custom language model. Amazon Transcribe offers two options for base models: Wideband
            and Narrowband.</para><para>If the audio you want to transcribe has a sample rate of 16,000 Hz or greater, choose
            <code>WideBand</code>. To transcribe audio with a sample rate less than 16,000 Hz,
            choose <code>NarrowBand</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.InputDataConfig_DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an IAM role that has permissions to access the Amazon
            S3 bucket that contains your input files. If the role you specify doesn’t have the
            appropriate permissions to access the specified Amazon S3 location, your request fails.</para><para>IAM role ARNs have the format <code>arn:partition:iam::account:role/role-name-with-path</code>.
            For example: <code>arn:aws:iam::111122223333:role/Admin</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns">IAM
            ARNs</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of your model. Each language model
            must contain terms in only one language, and the language you select for your model
            must match the language of your training and tuning data.</para><para>For a list of supported languages and their associated language codes, refer to the
            <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table. Note that U.S. English (<code>en-US</code>) is the only language
            supported with Amazon Transcribe Medical.</para><para>A custom language model can only be used to transcribe files in the same language
            as the model. For example, if you create a language model using US English (<code>en-US</code>),
            you can only apply this model to files that contain English audio.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.ModelName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your custom language model.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new language model with the same name
            as an existing language model, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.InputDataConfig_S3Uri">
            <summary>
            <para>
            <para>The Amazon S3 location (URI) of the text files you want to use to train your custom
            language model.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-model-training-data/</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new custom
            language model at the time you create this new model.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.InputDataConfig_TuningDataS3Uri">
            <summary>
            <para>
            <para>The Amazon S3 location (URI) of the text files you want to use to tune your custom
            language model.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-model-tuning-data/</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.CreateLanguageModelResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.CreateLanguageModelResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ModelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ModelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSLanguageModelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet">
            <summary>
            Creates a new custom medical vocabulary.
            
             
            <para>
            Prior to creating a new medical vocabulary, you must first upload a text file that
            contains your new entries, phrases, and terms into an Amazon S3 bucket. Note that
            this differs from , where you can include a list of terms within your request using
            the <code>Phrases</code> flag; <code>CreateMedicalVocabulary</code> does not support
            the <code>Phrases</code> flag.
            </para><para>
            Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary request fails. Refer
            to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary-create.html">Creating
            a custom vocabulary</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of the entries in your custom vocabulary.
            US English (<code>en-US</code>) is the only language supported with Amazon Transcribe
            Medical.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new medical
            vocabulary at the time you create this new vocabulary.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.VocabularyFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location (URI) of the text file that contains your custom medical vocabulary.
            The URI must be in the same Amazon Web Services Region as the resource you're calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-file.txt</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your new custom medical vocabulary.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new medical vocabulary with the same
            name as an existing medical vocabulary, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.CreateMedicalVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.CreateMedicalVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSMedicalVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet">
            <summary>
            Creates a new custom vocabulary.
            
             
            <para>
            When creating a new vocabulary, you can either upload a text file that contains your
            new entries, phrases, and terms into an Amazon S3 bucket and include the URI in your
            request, or you can include a list of terms directly in your request using the <code>Phrases</code>
            flag.
            </para><para>
            Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary request fails. Refer
            to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary-create.html">Creating
            a custom vocabulary</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of the entries in your custom vocabulary.
            Each vocabulary must contain terms in only one language.</para><para>A custom vocabulary can only be used to transcribe files in the same language as the
            vocabulary. For example, if you create a vocabulary using US English (<code>en-US</code>),
            you can only apply this vocabulary to files that contain English audio.</para><para>For a list of supported languages and their associated language codes, refer to the
            <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.Phrase">
            <summary>
            <para>
            <para>Use this parameter if you want to create your vocabulary by including all desired
            terms, as comma-separated values, within your request. The other option for creating
            your vocabulary is to save your entries in a text file and upload them to an Amazon
            S3 bucket, then specify the location of your file using the <code>VocabularyFileUri</code>
            parameter.</para><para>Note that if you include <code>Phrases</code> in your request, you cannot use <code>VocabularyFileUri</code>;
            you must choose one or the other.</para><para>Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary filter request fails.
            Refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new custom
            vocabulary at the time you create this new vocabulary.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.VocabularyFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the text file that contains your custom vocabulary. The
            URI must be located in the same Amazon Web Services Region as the resource you're
            calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-file.txt</code></para><para>Note that if you include <code>VocabularyFileUri</code> in your request, you cannot
            use the <code>Phrases</code> flag; you must choose one or the other.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your new custom vocabulary.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new vocabulary with the same name as
            an existing vocabulary, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.CreateVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.CreateVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet">
            <summary>
            Creates a new custom vocabulary filter.
            
             
            <para>
            You can use vocabulary filters to mask, delete, or flag specific words from your transcript.
            Vocabulary filters are commonly used to mask profanity in transcripts.
            </para><para>
            Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary filter request fails.
            Refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/vocabulary-filtering.html">Using
            vocabulary filtering with unwanted words</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of the entries in your vocabulary filter.
            Each vocabulary filter must contain terms in only one language.</para><para>A vocabulary filter can only be used to transcribe files in the same language as the
            filter. For example, if you create a vocabulary filter using US English (<code>en-US</code>),
            you can only apply this filter to files that contain English audio.</para><para>For a list of supported languages and their associated language codes, refer to the
            <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new custom
            vocabulary filter at the time you create this new filter.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.VocabularyFilterFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the text file that contains your custom vocabulary filter
            terms. The URI must be located in the same Amazon Web Services Region as the resource
            you're calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-filter-file.txt</code></para><para>Note that if you include <code>VocabularyFilterFileUri</code> in your request, you
            cannot use <code>Words</code>; you must choose one or the other.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.VocabularyFilterName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your new custom vocabulary filter.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new vocabulary filter with the same name
            as an existing vocabulary filter, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.Word">
            <summary>
            <para>
            <para>Use this parameter if you want to create your vocabulary filter by including all desired
            terms, as comma-separated values, within your request. The other option for creating
            your vocabulary filter is to save your entries in a text file and upload them to an
            Amazon S3 bucket, then specify the location of your file using the <code>VocabularyFilterFileUri</code>
            parameter.</para><para>Note that if you include <code>Words</code> in your request, you cannot use <code>VocabularyFilterFileUri</code>;
            you must choose one or the other.</para><para>Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary filter request fails.
            Refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.CreateVocabularyFilterResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.CreateVocabularyFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyFilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyFilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.NewTRSVocabularyFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsCategoryCmdlet">
            <summary>
            Deletes a Call Analytics category. To use this operation, specify the name of the
            category you want to delete using <code>CategoryName</code>. Category names are case
            sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsCategoryCmdlet.CategoryName">
            <summary>
            <para>
            <para>The name of the Call Analytics category you want to delete. Category names are case
            sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteCallAnalyticsCategoryResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CategoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^CategoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsCategoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsJobCmdlet">
            <summary>
            Deletes a Call Analytics job. To use this operation, specify the name of the job you
            want to delete using <code>CallAnalyticsJobName</code>. Job names are case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsJobCmdlet.CallAnalyticsJobName">
            <summary>
            <para>
            <para>The name of the Call Analytics job you want to delete. Job names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteCallAnalyticsJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CallAnalyticsJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^CallAnalyticsJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSCallAnalyticsJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSLanguageModelCmdlet">
            <summary>
            Deletes a custom language model. To use this operation, specify the name of the language
            model you want to delete using <code>ModelName</code>. Language model names are case
            sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSLanguageModelCmdlet.ModelName">
            <summary>
            <para>
            <para>The name of the custom language model you want to delete. Model names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSLanguageModelCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteLanguageModelResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSLanguageModelCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ModelName parameter.
            The -PassThru parameter is deprecated, use -Select '^ModelName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSLanguageModelCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalTranscriptionJobCmdlet">
            <summary>
            Deletes a medical transcription job. To use this operation, specify the name of the
            job you want to delete using <code>MedicalTranscriptionJobName</code>. Job names are
            case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalTranscriptionJobCmdlet.MedicalTranscriptionJobName">
            <summary>
            <para>
            <para>The name of the medical transcription job you want to delete. Job names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteMedicalTranscriptionJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MedicalTranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^MedicalTranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalTranscriptionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalVocabularyCmdlet">
            <summary>
            Deletes a custom medical vocabulary. To use this operation, specify the name of the
            vocabulary you want to delete using <code>VocabularyName</code>. Vocabulary names
            are case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom medical vocabulary you want to delete. Vocabulary names are
            case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteMedicalVocabularyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSMedicalVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet">
            <summary>
            Removes the specified tags from the specified Amazon Transcribe resource.
            
             
            <para>
            If you include <code>UntagResource</code> in your request, you must also include <code>ResourceArn</code>
            and <code>TagKeys</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the Amazon Transcribe resource you want to remove
            tags from. ARNs have the format <code>arn:partition:service:region:account-id:resource-type/resource-id</code>.</para><para>For example, <code>arn:aws:transcribe:us-west-2:account-id:transcription-job/transcription-job-name</code>.</para><para>Valid values for <code>resource-type</code> are: <code>transcription-job</code>, <code>medical-transcription-job</code>,
            <code>vocabulary</code>, <code>medical-vocabulary</code>, <code>vocabulary-filter</code>,
            and <code>language-model</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>Removes the specified tag keys from the specified Amazon Transcribe resource.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSTranscriptionJobCmdlet">
            <summary>
            Deletes a transcription job. To use this operation, specify the name of the job you
            want to delete using <code>TranscriptionJobName</code>. Job names are case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSTranscriptionJobCmdlet.TranscriptionJobName">
            <summary>
            <para>
            <para>The name of the transcription job you want to delete. Job names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteTranscriptionJobResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^TranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSTranscriptionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyCmdlet">
            <summary>
            Deletes a custom vocabulary. To use this operation, specify the name of the vocabulary
            you want to delete using <code>VocabularyName</code>. Vocabulary names are case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want to delete. Vocabulary names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteVocabularyResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyFilterCmdlet">
            <summary>
            Deletes a vocabulary filter. To use this operation, specify the name of the vocabulary
            filter you want to delete using <code>VocabularyFilterName</code>. Vocabulary filter
            names are case sensitive.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyFilterCmdlet.VocabularyFilterName">
            <summary>
            <para>
            <para>The name of the custom vocabulary filter you want to delete. Vocabulary filter names
            are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.DeleteVocabularyFilterResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyFilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyFilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.RemoveTRSVocabularyFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet">
            <summary>
            Transcribes the audio from a customer service call and applies any additional Request
            Parameters you choose to include in your request.
            
             
            <para>
            In addition to many of the standard transcription features, Call Analytics provides
            you with call characteristics, call summarization, speaker sentiment, and optional
            redaction of your text transcript and your audio file. You can also apply custom categories
            to flag specified conditions. To learn more about these features and insights, refer
            to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics.html">Analyzing
            call center audio with Call Analytics</a>.
            </para><para>
            If you want to apply categories to your Call Analytics job, you must create them before
            submitting your job request. Categories cannot be retroactively applied to a job.
            To create a new category, use the operation. To learn more about Call Analytics categories,
            see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/call-analytics-create-categories.html">Creating
            categories</a>.
            </para><para>
            To make a <code>StartCallAnalyticsJob</code> request, you must first upload your media
            file into an Amazon S3 bucket; you can then specify the Amazon S3 location of the
            file using the <code>Media</code> parameter.
            </para><para>
            You must include the following parameters in your <code>StartCallAnalyticsJob</code>
            request:
            </para><ul><li><para><code>region</code>: The Amazon Web Services Region where you are making your request.
            For a list of Amazon Web Services Regions supported with Amazon Transcribe, refer
            to <a href="https://docs.aws.amazon.com/general/latest/gr/transcribe.html">Amazon
            Transcribe endpoints and quotas</a>.
            </para></li><li><para><code>CallAnalyticsJobName</code>: A custom name you create for your transcription
            job that is unique within your Amazon Web Services account.
            </para></li><li><para><code>DataAccessRoleArn</code>: The Amazon Resource Name (ARN) of an IAM role that
            has permissions to access the Amazon S3 bucket that contains your input files.
            </para></li><li><para><code>Media</code> (<code>MediaFileUri</code> or <code>RedactedMediaFileUri</code>):
            The Amazon S3 location of your media file.
            </para></li></ul><note><para>
            With Call Analytics, you can redact the audio contained in your media file by including
            <code>RedactedMediaFileUri</code>, instead of <code>MediaFileUri</code>, to specify
            the location of your input audio. If you choose to redact your audio, you can find
            your redacted media at the location specified in the <code>RedactedMediaFileUri</code>
            field of your response.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.CallAnalyticsJobName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your Call Analytics job.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new job with the same name as an existing
            job, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.ChannelDefinition">
            <summary>
            <para>
            <para>Allows you to specify which speaker is on which channel. For example, if your agent
            is the first participant to speak, you would set <code>ChannelId</code> to <code>0</code>
            (to indicate the first channel) and <code>ParticipantRole</code> to <code>AGENT</code>
            (to indicate that it's the agent speaking).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an IAM role that has permissions to access the Amazon
            S3 bucket that contains your input files. If the role you specify doesn’t have the
            appropriate permissions to access the specified Amazon S3 location, your request fails.</para><para>IAM role ARNs have the format <code>arn:partition:iam::account:role/role-name-with-path</code>.
            For example: <code>arn:aws:iam::111122223333:role/Admin</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns">IAM
            ARNs</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_LanguageIdSetting">
            <summary>
            <para>
            <para>If using automatic language identification (<code>IdentifyLanguage</code>) in your
            request and you want to apply a custom language model, a custom vocabulary, or a custom
            vocabulary filter, include <code>LanguageIdSettings</code> with the relevant sub-parameters
            (<code>VocabularyName</code>, <code>LanguageModelName</code>, and <code>VocabularyFilterName</code>).</para><para>You can specify two or more language codes that represent the languages you think
            may be present in your media; including more than five is not recommended. Each language
            code you include can have an associated custom language model, custom vocabulary,
            and custom vocabulary filter. The languages you specify must match the languages of
            the specified custom language models, custom vocabularies, and custom vocabulary filters.</para><para>To include language options using <code>IdentifyLanguage</code><b>without</b> including
            a custom language model, a custom vocabulary, or a custom vocabulary filter, use <code>LanguageOptions</code>
            instead of <code>LanguageIdSettings</code>. Including language options can improve
            the accuracy of automatic language identification.</para><para>If you want to include a custom language model with your request but <b>do not</b>
            want to use automatic language identification, use instead the <code /> parameter with
            the <code>LanguageModelName</code> sub-parameter.</para><para>If you want to include a custom vocabulary or a custom vocabulary filter (or both)
            with your request but <b>do not</b> want to use automatic language identification,
            use instead the <code /> parameter with the <code>VocabularyName</code> or <code>VocabularyFilterName</code>
            (or both) sub-parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_LanguageModelName">
            <summary>
            <para>
            <para>The name of the custom language model you want to use when processing your Call Analytics
            job. Note that language model names are case sensitive.</para><para>The language of the specified language model must match the language code you specify
            in your transcription request. If the languages don't match, the language model isn't
            applied. There are no errors or warnings associated with a language mismatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_LanguageOption">
            <summary>
            <para>
            <para>You can specify two or more language codes that represent the languages you think
            may be present in your media; including more than five is not recommended. If you're
            unsure what languages are present, do not include this parameter.</para><para>Including language options can improve the accuracy of language identification.</para><para>For a list of languages supported with Call Analytics, refer to the <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Media_MediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to transcribe. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.OutputEncryptionKMSKeyId">
            <summary>
            <para>
            <para>The KMS key you want to use to encrypt your Call Analytics output.</para><para>If using a key located in the <b>current</b> Amazon Web Services account, you can
            specify your KMS key in one of four ways:</para><ol><li><para>Use the KMS key ID itself. For example, <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use an alias for the KMS key ID. For example, <code>alias/ExampleAlias</code>.</para></li><li><para>Use the Amazon Resource Name (ARN) for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If using a key located in a <b>different</b> Amazon Web Services account than the
            current Amazon Web Services account, you can specify your KMS key in one of two ways:</para><ol><li><para>Use the ARN for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If you don't specify an encryption key, your output is encrypted with the default
            Amazon S3 key (SSE-S3).</para><para>If you specify a KMS key to encrypt your output, you must also specify an output location
            using the <code>OutputLocation</code> parameter.</para><para>Note that the user making the request must have permission to use the specified KMS
            key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.OutputLocation">
            <summary>
            <para>
            <para>The Amazon S3 location where you want your Call Analytics transcription output stored.
            You can use any of the following formats to specify the output location:</para><ol><li><para>s3://DOC-EXAMPLE-BUCKET</para></li><li><para>s3://DOC-EXAMPLE-BUCKET/my-output-folder/</para></li><li><para>s3://DOC-EXAMPLE-BUCKET/my-output-folder/my-call-analytics-job.json</para></li></ol><para>Unless you specify a file name (option 3), the name of your output file has a default
            value that matches the name you specified for your transcription job using the <code>CallAnalyticsJobName</code>
            parameter.</para><para>You can specify a KMS key to encrypt your output using the <code>OutputEncryptionKMSKeyId</code>
            parameter. If you don't specify a KMS key, Amazon Transcribe uses the default Amazon
            S3 key for server-side encryption.</para><para>If you don't specify <code>OutputLocation</code>, your transcript is placed in a service-managed
            Amazon S3 bucket and you are provided with a URI to access your transcript.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.ContentRedaction_PiiEntityType">
            <summary>
            <para>
            <para>Specify which types of personally identifiable information (PII) you want to redact
            in your transcript. You can include as many types as you'd like, or you can select
            <code>ALL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Media_RedactedMediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to redact. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para><important><para><code>RedactedMediaFileUri</code> is only supported for Call Analytics (<code>StartCallAnalyticsJob</code>)
            transcription requests.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.ContentRedaction_RedactionOutput">
            <summary>
            <para>
            <para>Specify if you want only a redacted transcript, or if you want a redacted and an unredacted
            transcript.</para><para>When you choose <code>redacted</code> Amazon Transcribe creates only a redacted transcript.</para><para>When you choose <code>redacted_and_unredacted</code> Amazon Transcribe creates a redacted
            and an unredacted transcript (as two separate files).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.ContentRedaction_RedactionType">
            <summary>
            <para>
            <para>Specify the category of information you want to redact; <code>PII</code> (personally
            identifiable information) is the only valid value. You can use <code>PiiEntityTypes</code>
            to choose which types of PII you want to redact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_VocabularyFilterMethod">
            <summary>
            <para>
            <para>Specify how you want your vocabulary filter applied to your transcript.</para><para>To replace words with <code>***</code>, choose <code>mask</code>.</para><para>To delete words, choose <code>remove</code>.</para><para>To flag words without changing them, choose <code>tag</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_VocabularyFilterName">
            <summary>
            <para>
            <para>The name of the custom vocabulary filter you want to include in your Call Analytics
            transcription request. Vocabulary filter names are case sensitive.</para><para>Note that if you include <code>VocabularyFilterName</code> in your request, you must
            also include <code>VocabularyFilterMethod</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Settings_VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want to include in your Call Analytics transcription
            request. Vocabulary names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CallAnalyticsJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.StartCallAnalyticsJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.StartCallAnalyticsJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CallAnalyticsJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^CallAnalyticsJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSCallAnalyticsJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet">
            <summary>
            Transcribes the audio from a medical dictation or conversation and applies any additional
            Request Parameters you choose to include in your request.
            
             
            <para>
            In addition to many of the standard transcription features, Amazon Transcribe Medical
            provides you with a robust medical vocabulary and, optionally, content identification,
            which adds flags to personal health information (PHI). To learn more about these features,
            refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-it-works-med.html">How
            Amazon Transcribe Medical works</a>.
            </para><para>
            To make a <code>StartMedicalTranscriptionJob</code> request, you must first upload
            your media file into an Amazon S3 bucket; you can then specify the S3 location of
            the file using the <code>Media</code> parameter.
            </para><para>
            You must include the following parameters in your <code>StartMedicalTranscriptionJob</code>
            request:
            </para><ul><li><para><code>region</code>: The Amazon Web Services Region where you are making your request.
            For a list of Amazon Web Services Regions supported with Amazon Transcribe, refer
            to <a href="https://docs.aws.amazon.com/general/latest/gr/transcribe.html">Amazon
            Transcribe endpoints and quotas</a>.
            </para></li><li><para><code>MedicalTranscriptionJobName</code>: A custom name you create for your transcription
            job that is unique within your Amazon Web Services account.
            </para></li><li><para><code>Media</code> (<code>MediaFileUri</code>): The Amazon S3 location of your media
            file.
            </para></li><li><para><code>LanguageCode</code>: This must be <code>en-US</code>.
            </para></li><li><para><code>OutputBucketName</code>: The Amazon S3 bucket where you want your transcript
            stored. If you want your output stored in a sub-folder of this bucket, you must also
            include <code>OutputKey</code>.
            </para></li><li><para><code>Specialty</code>: This must be <code>PRIMARYCARE</code>.
            </para></li><li><para><code>Type</code>: Choose whether your audio is a conversation or a dictation.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_ChannelIdentification">
            <summary>
            <para>
            <para>Enables channel identification in multi-channel audio.</para><para>Channel identification transcribes the audio on each channel independently, then appends
            the output for each channel into one transcript.</para><para>If you have multi-channel audio and do not enable channel identification, your audio
            is transcribed in a continuous manner and your transcript does not separate the speech
            by channel.</para><para>You can't include both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code>
            in the same request. Including both parameters returns a <code>BadRequestException</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/channel-id.html">Transcribing
            multi-channel audio</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.ContentIdentificationType">
            <summary>
            <para>
            <para>Labels all personal health information (PHI) identified in your transcript. For more
            information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/phi-id.html">Identifying
            personal health information (PHI) in a transcription</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.KMSEncryptionContext">
            <summary>
            <para>
            <para>A map of plain text, non-secret key:value pairs, known as encryption context pairs,
            that provide an added layer of security for your data. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/key-management.html#kms-context">KMS
            encryption context</a> and <a href="https://docs.aws.amazon.com/transcribe/latest/dg/symmetric-asymmetric.html">Asymmetric
            keys in KMS</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language spoken in the input media file. US
            English (<code>en-US</code>) is the only valid value for medical transcription jobs.
            Any other value you enter for language code results in a <code>BadRequestException</code>
            error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_MaxAlternative">
            <summary>
            <para>
            <para>Indicate the maximum number of alternative transcriptions you want Amazon Transcribe
            Medical to include in your transcript.</para><para>If you select a number greater than the number of alternative transcriptions generated
            by Amazon Transcribe Medical, only the actual number of alternative transcriptions
            are included.</para><para>If you include <code>MaxAlternatives</code> in your request, you must also include
            <code>ShowAlternatives</code> with a value of <code>true</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-alternatives.html">Alternative
            transcriptions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_MaxSpeakerLabel">
            <summary>
            <para>
            <para>Specify the maximum number of speakers you want to identify in your media.</para><para>Note that if your media contains more speakers than the specified number, multiple
            speakers will be identified as a single speaker.</para><para>If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code>
            field to true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Media_MediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to transcribe. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.MediaFormat">
            <summary>
            <para>
            <para>Specify the format of your input media file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.MediaSampleRateHertz">
            <summary>
            <para>
            <para>The sample rate, in Hertz, of the audio track in your input media file.</para><para>If you don't specify the media sample rate, Amazon Transcribe Medical determines it
            for you. If you specify the sample rate, it must match the rate detected by Amazon
            Transcribe Medical; if there's a mismatch between the value you specify and the value
            detected, your job fails. Therefore, in most cases, it's advised to omit <code>MediaSampleRateHertz</code>
            and let Amazon Transcribe Medical determine the sample rate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.MedicalTranscriptionJobName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your medical transcription job. The name you specify
            is also used as the default name of your transcription output file. If you want to
            specify a different name for your transcription output, use the <code>OutputKey</code>
            parameter.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new job with the same name as an existing
            job, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.OutputBucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket where you want your medical transcription output
            stored. Do not include the <code>S3://</code> prefix of the specified bucket.</para><para>If you want your output to go to a sub-folder of this bucket, specify it using the
            <code>OutputKey</code> parameter; <code>OutputBucketName</code> only accepts the name
            of a bucket.</para><para>For example, if you want your output stored in <code>S3://DOC-EXAMPLE-BUCKET</code>,
            set <code>OutputBucketName</code> to <code>DOC-EXAMPLE-BUCKET</code>. However, if
            you want your output stored in <code>S3://DOC-EXAMPLE-BUCKET/test-files/</code>, set
            <code>OutputBucketName</code> to <code>DOC-EXAMPLE-BUCKET</code> and <code>OutputKey</code>
            to <code>test-files/</code>.</para><para>Note that Amazon Transcribe must have permission to use the specified location. You
            can change Amazon S3 permissions using the <a href="https://console.aws.amazon.com/s3">Amazon
            Web Services Management Console</a>. See also <a href="https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user">Permissions
            Required for IAM User Roles</a>.</para><para>If you don't specify <code>OutputBucketName</code>, your transcript is placed in a
            service-managed Amazon S3 bucket and you are provided with a URI to access your transcript.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.OutputEncryptionKMSKeyId">
            <summary>
            <para>
            <para>The KMS key you want to use to encrypt your medical transcription output.</para><para>If using a key located in the <b>current</b> Amazon Web Services account, you can
            specify your KMS key in one of four ways:</para><ol><li><para>Use the KMS key ID itself. For example, <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use an alias for the KMS key ID. For example, <code>alias/ExampleAlias</code>.</para></li><li><para>Use the Amazon Resource Name (ARN) for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If using a key located in a <b>different</b> Amazon Web Services account than the
            current Amazon Web Services account, you can specify your KMS key in one of two ways:</para><ol><li><para>Use the ARN for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If you don't specify an encryption key, your output is encrypted with the default
            Amazon S3 key (SSE-S3).</para><para>If you specify a KMS key to encrypt your output, you must also specify an output location
            using the <code>OutputLocation</code> parameter.</para><para>Note that the user making the request must have permission to use the specified KMS
            key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.OutputKey">
            <summary>
            <para>
            <para>Use in combination with <code>OutputBucketName</code> to specify the output location
            of your transcript and, optionally, a unique name for your output file. The default
            name for your transcription output is the same as the name you specified for your
            medical transcription job (<code>MedicalTranscriptionJobName</code>).</para><para>Here are some examples of how you can use <code>OutputKey</code>:</para><ul><li><para>If you specify 'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code> and 'my-transcript.json'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/my-transcript.json</code>.</para></li><li><para>If you specify 'my-first-transcription' as the <code>MedicalTranscriptionJobName</code>,
            'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code>, and 'my-transcript' as
            the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/my-transcript/my-first-transcription.json</code>.</para></li><li><para>If you specify 'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code> and 'test-files/my-transcript.json'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/test-files/my-transcript.json</code>.</para></li><li><para>If you specify 'my-first-transcription' as the <code>MedicalTranscriptionJobName</code>,
            'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code>, and 'test-files/my-transcript'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/test-files/my-transcript/my-first-transcription.json</code>.</para></li></ul><para>If you specify the name of an Amazon S3 bucket sub-folder that doesn't exist, one
            is created for you.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Media_RedactedMediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to redact. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para><important><para><code>RedactedMediaFileUri</code> is only supported for Call Analytics (<code>StartCallAnalyticsJob</code>)
            transcription requests.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_ShowAlternative">
            <summary>
            <para>
            <para>To include alternative transcriptions within your transcription output, include <code>ShowAlternatives</code>
            in your transcription request.</para><para>If you include <code>ShowAlternatives</code>, you must also include <code>MaxAlternatives</code>,
            which is the maximum number of alternative transcriptions you want Amazon Transcribe
            Medical to generate.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-alternatives.html">Alternative
            transcriptions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_ShowSpeakerLabel">
            <summary>
            <para>
            <para>Enables speaker identification (diarization) in your transcription output. Speaker
            identification labels the speech from individual speakers in your media file.</para><para>If you enable <code>ShowSpeakerLabels</code> in your request, you must also include
            <code>MaxSpeakerLabels</code>.</para><para>You can't include both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code>
            in the same request. Including both parameters returns a <code>BadRequestException</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/diarization.html">Identifying
            speakers (diarization)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Specialty">
            <summary>
            <para>
            <para>Specify the predominant medical specialty represented in your media. For batch transcriptions,
            <code>PRIMARYCARE</code> is the only valid value. If you require additional specialties,
            refer to .</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new medical
            transcription job at the time you start this new job.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Type">
            <summary>
            <para>
            <para>Specify whether your input media contains only one person (<code>DICTATION</code>)
            or contains a conversation between two people (<code>CONVERSATION</code>).</para><para>For example, <code>DICTATION</code> could be used for a medical professional wanting
            to transcribe voice memos; <code>CONVERSATION</code> could be used for transcribing
            the doctor-patient dialogue during the patient's office visit.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Settings_VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want to use when processing your medical transcription
            job. Vocabulary names are case sensitive.</para><para>The language of the specified vocabulary must match the language code you specify
            in your transcription request. If the languages don't match, the vocabulary isn't
            applied. There are no errors or warnings associated with a language mismatch. US English
            (<code>en-US</code>) is the only valid language for Amazon Transcribe Medical.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'MedicalTranscriptionJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.StartMedicalTranscriptionJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.StartMedicalTranscriptionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the MedicalTranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^MedicalTranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSMedicalTranscriptionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet">
            <summary>
            Transcribes the audio from a media file and applies any additional Request Parameters
            you choose to include in your request.
            
             
            <para>
            To make a <code>StartTranscriptionJob</code> request, you must first upload your media
            file into an Amazon S3 bucket; you can then specify the Amazon S3 location of the
            file using the <code>Media</code> parameter.
            </para><para>
            You must include the following parameters in your <code>StartTranscriptionJob</code>
            request:
            </para><ul><li><para><code>region</code>: The Amazon Web Services Region where you are making your request.
            For a list of Amazon Web Services Regions supported with Amazon Transcribe, refer
            to <a href="https://docs.aws.amazon.com/general/latest/gr/transcribe.html">Amazon
            Transcribe endpoints and quotas</a>.
            </para></li><li><para><code>TranscriptionJobName</code>: A custom name you create for your transcription
            job that is unique within your Amazon Web Services account.
            </para></li><li><para><code>Media</code> (<code>MediaFileUri</code>): The Amazon S3 location of your media
            file.
            </para></li><li><para>
            One of <code>LanguageCode</code>, <code>IdentifyLanguage</code>, or <code>IdentifyMultipleLanguages</code>:
            If you know the language of your media file, specify it using the <code>LanguageCode</code>
            parameter; you can find all valid language codes in the <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table. If you don't know the languages spoken in your media, use either
            <code>IdentifyLanguage</code> or <code>IdentifyMultipleLanguages</code> and let Amazon
            Transcribe identify the languages for you.
            </para></li></ul>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.JobExecutionSettings_AllowDeferredExecution">
            <summary>
            <para>
            <para>Allows you to enable job queuing when your concurrent request limit is exceeded. When
            <code>AllowDeferredExecution</code> is set to <code>true</code>, transcription job
            requests are placed in a queue until the number of jobs falls below the concurrent
            request limit. If <code>AllowDeferredExecution</code> is set to <code>false</code>
            and the number of transcription job requests exceed the concurrent request limit,
            you get a <code>LimitExceededException</code> error.</para><para>Note that job queuing is enabled by default for Call Analytics jobs.</para><para>If you include <code>AllowDeferredExecution</code> in your request, you must also
            include <code>DataAccessRoleArn</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_ChannelIdentification">
            <summary>
            <para>
            <para>Enables channel identification in multi-channel audio.</para><para>Channel identification transcribes the audio on each channel independently, then appends
            the output for each channel into one transcript.</para><para>You can't include both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code>
            in the same request. Including both parameters returns a <code>BadRequestException</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/channel-id.html">Transcribing
            multi-channel audio</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.JobExecutionSettings_DataAccessRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an IAM role that has permissions to access the Amazon
            S3 bucket that contains your input files. If the role you specify doesn’t have the
            appropriate permissions to access the specified Amazon S3 location, your request fails.</para><para>IAM role ARNs have the format <code>arn:partition:iam::account:role/role-name-with-path</code>.
            For example: <code>arn:aws:iam::111122223333:role/Admin</code>. For more information,
            see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns">IAM
            ARNs</a>.</para><para>Note that if you include <code>DataAccessRoleArn</code> in your request, you must
            also include <code>AllowDeferredExecution</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Subtitles_Format">
            <summary>
            <para>
            <para>Specify the output format for your subtitle file; if you select both WebVTT (<code>vtt</code>)
            and SubRip (<code>srt</code>) formats, two output files are generated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.IdentifyLanguage">
            <summary>
            <para>
            <para>Enables automatic language identification in your transcription job request.</para><para>If you include <code>IdentifyLanguage</code>, you can optionally include a list of
            language codes, using <code>LanguageOptions</code>, that you think may be present
            in your media file. Including language options can improve transcription accuracy.</para><para>If you want to apply a custom language model, a custom vocabulary, or a custom vocabulary
            filter to your automatic language identification request, include <code>LanguageIdSettings</code>
            with the relevant sub-parameters (<code>VocabularyName</code>, <code>LanguageModelName</code>,
            and <code>VocabularyFilterName</code>).</para><para>Note that you must include one of <code>LanguageCode</code>, <code>IdentifyLanguage</code>,
            or <code>IdentifyMultipleLanguages</code> in your request. If you include more than
            one of these parameters, your transcription job fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.IdentifyMultipleLanguage">
            <summary>
            <para>
            <para>Enables automatic multi-language identification in your transcription job request.
            Use this parameter if your media file contains more than one language.</para><para>If you include <code>IdentifyMultipleLanguages</code>, you can optionally include
            a list of language codes, using <code>LanguageOptions</code>, that you think may be
            present in your media file. Including language options can improve transcription accuracy.</para><para>If you want to apply a custom vocabulary or a custom vocabulary filter to your automatic
            language identification request, include <code>LanguageIdSettings</code> with the
            relevant sub-parameters (<code>VocabularyName</code> and <code>VocabularyFilterName</code>).</para><para>Note that you must include one of <code>LanguageCode</code>, <code>IdentifyLanguage</code>,
            or <code>IdentifyMultipleLanguages</code> in your request. If you include more than
            one of these parameters, your transcription job fails.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.KMSEncryptionContext">
            <summary>
            <para>
            <para>A map of plain text, non-secret key:value pairs, known as encryption context pairs,
            that provide an added layer of security for your data. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/key-management.html#kms-context">KMS
            encryption context</a> and <a href="https://docs.aws.amazon.com/transcribe/latest/dg/symmetric-asymmetric.html">Asymmetric
            keys in KMS</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language spoken in the input media file.</para><para>If you're unsure of the language spoken in your media file, consider using <code>IdentifyLanguage</code>
            or <code>IdentifyMultipleLanguages</code> to enable automatic language identification.</para><para>Note that you must include one of <code>LanguageCode</code>, <code>IdentifyLanguage</code>,
            or <code>IdentifyMultipleLanguages</code> in your request. If you include more than
            one of these parameters, your transcription job fails.</para><para>For a list of supported languages and their associated language codes, refer to the
            <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table.</para><note><para>To transcribe speech in Modern Standard Arabic (<code>ar-SA</code>), your media file
            must be encoded at a sample rate of 16,000 Hz or higher.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.LanguageIdSetting">
            <summary>
            <para>
            <para>If using automatic language identification (<code>IdentifyLanguage</code>) in your
            request and you want to apply a custom language model, a custom vocabulary, or a custom
            vocabulary filter, include <code>LanguageIdSettings</code> with the relevant sub-parameters
            (<code>VocabularyName</code>, <code>LanguageModelName</code>, and <code>VocabularyFilterName</code>).</para><para>You can specify two or more language codes that represent the languages you think
            may be present in your media; including more than five is not recommended. Each language
            code you include can have an associated custom language model, custom vocabulary,
            and custom vocabulary filter. The languages you specify must match the languages of
            the specified custom language models, custom vocabularies, and custom vocabulary filters.</para><para>To include language options using <code>IdentifyLanguage</code><b>without</b> including
            a custom language model, a custom vocabulary, or a custom vocabulary filter, use <code>LanguageOptions</code>
            instead of <code>LanguageIdSettings</code>. Including language options can improve
            the accuracy of automatic language identification.</para><para>If you want to include a custom language model with your request but <b>do not</b>
            want to use automatic language identification, use instead the <code /> parameter with
            the <code>LanguageModelName</code> sub-parameter.</para><para>If you want to include a custom vocabulary or a custom vocabulary filter (or both)
            with your request but <b>do not</b> want to use automatic language identification,
            use instead the <code /> parameter with the <code>VocabularyName</code> or <code>VocabularyFilterName</code>
            (or both) sub-parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.ModelSettings_LanguageModelName">
            <summary>
            <para>
            <para>The name of the custom language model you want to use when processing your transcription
            job. Note that language model names are case sensitive.</para><para>The language of the specified language model must match the language code you specify
            in your transcription request. If the languages don't match, the language model isn't
            applied. There are no errors or warnings associated with a language mismatch.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.LanguageOption">
            <summary>
            <para>
            <para>You can specify two or more language codes that represent the languages you think
            may be present in your media; including more than five is not recommended. If you're
            unsure what languages are present, do not include this parameter.</para><para>If you include <code>LanguageOptions</code> in your request, you must also include
            <code>IdentifyLanguage</code>.</para><para>For more information, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a>.</para><para>To transcribe speech in Modern Standard Arabic (<code>ar-SA</code>), your media file
            must be encoded at a sample rate of 16,000 Hz or higher.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_MaxAlternative">
            <summary>
            <para>
            <para>Indicate the maximum number of alternative transcriptions you want Amazon Transcribe
            to include in your transcript.</para><para>If you select a number greater than the number of alternative transcriptions generated
            by Amazon Transcribe, only the actual number of alternative transcriptions are included.</para><para>If you include <code>MaxAlternatives</code> in your request, you must also include
            <code>ShowAlternatives</code> with a value of <code>true</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-alternatives.html">Alternative
            transcriptions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_MaxSpeakerLabel">
            <summary>
            <para>
            <para>Specify the maximum number of speakers you want to identify in your media.</para><para>Note that if your media contains more speakers than the specified number, multiple
            speakers will be identified as a single speaker.</para><para>If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code>
            field to true.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Media_MediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to transcribe. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.MediaFormat">
            <summary>
            <para>
            <para>Specify the format of your input media file.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.MediaSampleRateHertz">
            <summary>
            <para>
            <para>The sample rate, in Hertz, of the audio track in your input media file.</para><para>If you don't specify the media sample rate, Amazon Transcribe determines it for you.
            If you specify the sample rate, it must match the rate detected by Amazon Transcribe;
            if there's a mismatch between the value you specify and the value detected, your job
            fails. Therefore, in most cases, it's advised to omit <code>MediaSampleRateHertz</code>
            and let Amazon Transcribe determine the sample rate.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.OutputBucketName">
            <summary>
            <para>
            <para>The name of the Amazon S3 bucket where you want your transcription output stored.
            Do not include the <code>S3://</code> prefix of the specified bucket.</para><para>If you want your output to go to a sub-folder of this bucket, specify it using the
            <code>OutputKey</code> parameter; <code>OutputBucketName</code> only accepts the name
            of a bucket.</para><para>For example, if you want your output stored in <code>S3://DOC-EXAMPLE-BUCKET</code>,
            set <code>OutputBucketName</code> to <code>DOC-EXAMPLE-BUCKET</code>. However, if
            you want your output stored in <code>S3://DOC-EXAMPLE-BUCKET/test-files/</code>, set
            <code>OutputBucketName</code> to <code>DOC-EXAMPLE-BUCKET</code> and <code>OutputKey</code>
            to <code>test-files/</code>.</para><para>Note that Amazon Transcribe must have permission to use the specified location. You
            can change Amazon S3 permissions using the <a href="https://console.aws.amazon.com/s3">Amazon
            Web Services Management Console</a>. See also <a href="https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user">Permissions
            Required for IAM User Roles</a>.</para><para>If you don't specify <code>OutputBucketName</code>, your transcript is placed in a
            service-managed Amazon S3 bucket and you are provided with a URI to access your transcript.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.OutputEncryptionKMSKeyId">
            <summary>
            <para>
            <para>The KMS key you want to use to encrypt your transcription output.</para><para>If using a key located in the <b>current</b> Amazon Web Services account, you can
            specify your KMS key in one of four ways:</para><ol><li><para>Use the KMS key ID itself. For example, <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use an alias for the KMS key ID. For example, <code>alias/ExampleAlias</code>.</para></li><li><para>Use the Amazon Resource Name (ARN) for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If using a key located in a <b>different</b> Amazon Web Services account than the
            current Amazon Web Services account, you can specify your KMS key in one of two ways:</para><ol><li><para>Use the ARN for the KMS key ID. For example, <code>arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</para></li><li><para>Use the ARN for the KMS key alias. For example, <code>arn:aws:kms:region:account-ID:alias/ExampleAlias</code>.</para></li></ol><para>If you don't specify an encryption key, your output is encrypted with the default
            Amazon S3 key (SSE-S3).</para><para>If you specify a KMS key to encrypt your output, you must also specify an output location
            using the <code>OutputLocation</code> parameter.</para><para>Note that the user making the request must have permission to use the specified KMS
            key.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.OutputKey">
            <summary>
            <para>
            <para>Use in combination with <code>OutputBucketName</code> to specify the output location
            of your transcript and, optionally, a unique name for your output file. The default
            name for your transcription output is the same as the name you specified for your
            transcription job (<code>TranscriptionJobName</code>).</para><para>Here are some examples of how you can use <code>OutputKey</code>:</para><ul><li><para>If you specify 'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code> and 'my-transcript.json'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/my-transcript.json</code>.</para></li><li><para>If you specify 'my-first-transcription' as the <code>TranscriptionJobName</code>,
            'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code>, and 'my-transcript' as
            the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/my-transcript/my-first-transcription.json</code>.</para></li><li><para>If you specify 'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code> and 'test-files/my-transcript.json'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/test-files/my-transcript.json</code>.</para></li><li><para>If you specify 'my-first-transcription' as the <code>TranscriptionJobName</code>,
            'DOC-EXAMPLE-BUCKET' as the <code>OutputBucketName</code>, and 'test-files/my-transcript'
            as the <code>OutputKey</code>, your transcription output path is <code>s3://DOC-EXAMPLE-BUCKET/test-files/my-transcript/my-first-transcription.json</code>.</para></li></ul><para>If you specify the name of an Amazon S3 bucket sub-folder that doesn't exist, one
            is created for you.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Subtitles_OutputStartIndex">
            <summary>
            <para>
            <para>Specify the starting value that is assigned to the first subtitle segment.</para><para>The default start index for Amazon Transcribe is <code>0</code>, which differs from
            the more widely used standard of <code>1</code>. If you're uncertain which value to
            use, we recommend choosing <code>1</code>, as this may improve compatibility with
            other services.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.ContentRedaction_PiiEntityType">
            <summary>
            <para>
            <para>Specify which types of personally identifiable information (PII) you want to redact
            in your transcript. You can include as many types as you'd like, or you can select
            <code>ALL</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Media_RedactedMediaFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the media file you want to redact. For example:</para><ul><li><para><code>s3://DOC-EXAMPLE-BUCKET/my-media-file.flac</code></para></li><li><para><code>s3://DOC-EXAMPLE-BUCKET/media-files/my-media-file.flac</code></para></li></ul><para>Note that the Amazon S3 bucket that contains your input media must be located in the
            same Amazon Web Services Region where you're making your transcription request.</para><important><para><code>RedactedMediaFileUri</code> is only supported for Call Analytics (<code>StartCallAnalyticsJob</code>)
            transcription requests.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.ContentRedaction_RedactionOutput">
            <summary>
            <para>
            <para>Specify if you want only a redacted transcript, or if you want a redacted and an unredacted
            transcript.</para><para>When you choose <code>redacted</code> Amazon Transcribe creates only a redacted transcript.</para><para>When you choose <code>redacted_and_unredacted</code> Amazon Transcribe creates a redacted
            and an unredacted transcript (as two separate files).</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.ContentRedaction_RedactionType">
            <summary>
            <para>
            <para>Specify the category of information you want to redact; <code>PII</code> (personally
            identifiable information) is the only valid value. You can use <code>PiiEntityTypes</code>
            to choose which types of PII you want to redact.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_ShowAlternative">
            <summary>
            <para>
            <para>To include alternative transcriptions within your transcription output, include <code>ShowAlternatives</code>
            in your transcription request.</para><para>If you have multi-channel audio and do not enable channel identification, your audio
            is transcribed in a continuous manner and your transcript does not separate the speech
            by channel.</para><para>If you include <code>ShowAlternatives</code>, you must also include <code>MaxAlternatives</code>,
            which is the maximum number of alternative transcriptions you want Amazon Transcribe
            to generate.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-alternatives.html">Alternative
            transcriptions</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_ShowSpeakerLabel">
            <summary>
            <para>
            <para>Enables speaker identification (diarization) in your transcription output. Speaker
            identification labels the speech from individual speakers in your media file.</para><para>If you enable <code>ShowSpeakerLabels</code> in your request, you must also include
            <code>MaxSpeakerLabels</code>.</para><para>You can't include both <code>ShowSpeakerLabels</code> and <code>ChannelIdentification</code>
            in the same request. Including both parameters returns a <code>BadRequestException</code>.</para><para>For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/diarization.html">Identifying
            speakers (diarization)</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Tag">
            <summary>
            <para>
            <para>Adds one or more custom tags, each in the form of a key:value pair, to a new transcription
            job at the time you start this new job.</para><para>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging
            resources</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.TranscriptionJobName">
            <summary>
            <para>
            <para>A unique name, chosen by you, for your transcription job. The name you specify is
            also used as the default name of your transcription output file. If you want to specify
            a different name for your transcription output, use the <code>OutputKey</code> parameter.</para><para>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account. If you try to create a new job with the same name as an existing
            job, you get a <code>ConflictException</code> error.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_VocabularyFilterMethod">
            <summary>
            <para>
            <para>Specify how you want your vocabulary filter applied to your transcript.</para><para>To replace words with <code>***</code>, choose <code>mask</code>.</para><para>To delete words, choose <code>remove</code>.</para><para>To flag words without changing them, choose <code>tag</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_VocabularyFilterName">
            <summary>
            <para>
            <para>The name of the custom vocabulary filter you want to use in your transcription job
            request. This name is case sensitive, cannot contain spaces, and must be unique within
            an Amazon Web Services account.</para><para>Note that if you include <code>VocabularyFilterName</code> in your request, you must
            also include <code>VocabularyFilterMethod</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Settings_VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want to use in your transcription job request.
            This name is case sensitive, cannot contain spaces, and must be unique within an Amazon
            Web Services account.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'TranscriptionJob'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.StartTranscriptionJobResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.StartTranscriptionJobResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the TranscriptionJobName parameter.
            The -PassThru parameter is deprecated, use -Select '^TranscriptionJobName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.StartTRSTranscriptionJobCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet">
            <summary>
            Updates the specified Call Analytics category with new rules. Note that the <code>UpdateCallAnalyticsCategory</code>
            operation overwrites all existing rules contained in the specified category. You cannot
            append additional rules onto an existing category.
            
             
            <para>
            To create a new category, see .
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet.CategoryName">
            <summary>
            <para>
            <para>The name of the Call Analytics category you want to update. Category names are case
            sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet.Rule">
            <summary>
            <para>
            <para>The rules used for the updated Call Analytics category. The rules you provide in this
            field replace the ones that are currently being used in the specified category.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'CategoryProperties'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.UpdateCallAnalyticsCategoryResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.UpdateCallAnalyticsCategoryResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the CategoryName parameter.
            The -PassThru parameter is deprecated, use -Select '^CategoryName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSCallAnalyticsCategoryCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet">
            <summary>
            Updates an existing custom medical vocabulary with new values. This operation overwrites
            all existing information with your new values; you cannot append new terms onto an
            existing vocabulary.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of the entries in the custom vocabulary
            you want to update. US English (<code>en-US</code>) is the only language supported
            with Amazon Transcribe Medical.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet.VocabularyFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the text file that contains your custom medical vocabulary.
            The URI must be located in the same Amazon Web Services Region as the resource you're
            calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-file.txt</code></para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom medical vocabulary you want to update. Vocabulary names are
            case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.UpdateMedicalVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.UpdateMedicalVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSMedicalVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet">
            <summary>
            Updates an existing custom vocabulary with new values. This operation overwrites all
            existing information with your new values; you cannot append new terms onto an existing
            vocabulary.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.LanguageCode">
            <summary>
            <para>
            <para>The language code that represents the language of the entries in the custom vocabulary
            you want to update. Each vocabulary must contain terms in only one language.</para><para>A custom vocabulary can only be used to transcribe files in the same language as the
            vocabulary. For example, if you create a vocabulary using US English (<code>en-US</code>),
            you can only apply this vocabulary to files that contain English audio.</para><para>For a list of supported languages and their associated language codes, refer to the
            <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported
            languages</a> table.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.Phrase">
            <summary>
            <para>
            <para>Use this parameter if you want to update your vocabulary by including all desired
            terms, as comma-separated values, within your request. The other option for updating
            your vocabulary is to save your entries in a text file and upload them to an Amazon
            S3 bucket, then specify the location of your file using the <code>VocabularyFileUri</code>
            parameter.</para><para>Note that if you include <code>Phrases</code> in your request, you cannot use <code>VocabularyFileUri</code>;
            you must choose one or the other.</para><para>Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary filter request fails.
            Refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.VocabularyFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the text file that contains your custom vocabulary. The
            URI must be located in the same Amazon Web Services Region as the resource you're
            calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-file.txt</code></para><para>Note that if you include <code>VocabularyFileUri</code> in your request, you cannot
            use the <code>Phrases</code> flag; you must choose one or the other.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.VocabularyName">
            <summary>
            <para>
            <para>The name of the custom vocabulary you want to update. Vocabulary names are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.UpdateVocabularyResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.UpdateVocabularyResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet">
            <summary>
            Updates an existing custom vocabulary filter with a new list of words. The new list
            you provide overwrites all previous entries; you cannot append new terms onto an existing
            vocabulary filter.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.VocabularyFilterFileUri">
            <summary>
            <para>
            <para>The Amazon S3 location of the text file that contains your custom vocabulary filter
            terms. The URI must be located in the same Amazon Web Services Region as the resource
            you're calling.</para><para>Here's an example URI path: <code>s3://DOC-EXAMPLE-BUCKET/my-vocab-filter-file.txt</code></para><para>Note that if you include <code>VocabularyFilterFileUri</code> in your request, you
            cannot use <code>Words</code>; you must choose one or the other.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.VocabularyFilterName">
            <summary>
            <para>
            <para>The name of the custom vocabulary filter you want to update. Vocabulary filter names
            are case sensitive.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.Word">
            <summary>
            <para>
            <para>Use this parameter if you want to update your vocabulary filter by including all desired
            terms, as comma-separated values, within your request. The other option for updating
            your vocabulary filter is to save your entries in a text file and upload them to an
            Amazon S3 bucket, then specify the location of your file using the <code>VocabularyFilterFileUri</code>
            parameter.</para><para>Note that if you include <code>Words</code> in your request, you cannot use <code>VocabularyFilterFileUri</code>;
            you must choose one or the other.</para><para>Each language has a character set that contains all allowed characters for that specific
            language. If you use unsupported characters, your vocabulary filter request fails.
            Refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/charsets.html">Character
            Sets for Custom Vocabularies</a> to get the character set for your language.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.TranscribeService.Model.UpdateVocabularyFilterResponse).
            Specifying the name of a property of type Amazon.TranscribeService.Model.UpdateVocabularyFilterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the VocabularyFilterName parameter.
            The -PassThru parameter is deprecated, use -Select '^VocabularyFilterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.TRS.UpdateTRSVocabularyFilterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
