<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWS.Tools.EKS</name>
    </assembly>
    <members>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet">
            <summary>
            Associate encryption configuration to an existing cluster.
            
             
            <para>
            You can use this API to enable encryption on existing clusters which do not have encryption
            already enabled. This allows you to implement a defense-in-depth security strategy
            without migrating applications to new Amazon EKS clusters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>The client request token you are using with the encryption configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster that you are associating with encryption configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.EncryptionConfig">
            <summary>
            <para>
            <para>The configuration you are using for encryption.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.AssociateEncryptionConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.AssociateEncryptionConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSEncryptionConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet">
            <summary>
            Associate an identity provider configuration to a cluster.
            
             
            <para>
            If you want to authenticate identities using an identity provider, you can create
            an identity provider configuration and associate it to your cluster. After configuring
            authentication to your cluster you can create Kubernetes <code>roles</code> and <code>clusterroles</code>
            to assign permissions to the roles, and then bind the roles to the identities using
            Kubernetes <code>rolebindings</code> and <code>clusterrolebindings</code>. For more
            information see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/">Using
            RBAC Authorization</a> in the Kubernetes documentation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_ClientId">
            <summary>
            <para>
            <para>This is also known as <i>audience</i>. The ID for the client application that makes
            authentication requests to the OpenID identity provider.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to associate the configuration to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_GroupsClaim">
            <summary>
            <para>
            <para>The JWT claim that the provider uses to return your groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_GroupsPrefix">
            <summary>
            <para>
            <para>The prefix that is prepended to group claims to prevent clashes with existing names
            (such as <code>system:</code> groups). For example, the value<code> oidc:</code> will
            create group names like <code>oidc:engineering</code> and <code>oidc:infra</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_IdentityProviderConfigName">
            <summary>
            <para>
            <para>The name of the OIDC provider configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_IssuerUrl">
            <summary>
            <para>
            <para>The URL of the OpenID identity provider that allows the API server to discover public
            signing keys for verifying tokens. The URL must begin with <code>https://</code> and
            should correspond to the <code>iss</code> claim in the provider's OIDC ID tokens.
            Per the OIDC standard, path components are allowed but query parameters are not. Typically
            the URL consists of only a hostname, like <code>https://server.example.org</code>
            or <code>https://example.com</code>. This URL should point to the level below <code>.well-known/openid-configuration</code>
            and must be publicly accessible over the internet.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_RequiredClaim">
            <summary>
            <para>
            <para>The key value pairs that describe required claims in the identity token. If set, each
            claim is verified to be present in the token with a matching value. For the maximum
            number of claims that you can require, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html">Amazon
            EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the configuration to assist with categorization and organization.
            Each tag consists of a key and an optional value. You define both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_UsernameClaim">
            <summary>
            <para>
            <para>The JSON Web Token (JWT) claim to use as the username. The default is <code>sub</code>,
            which is expected to be a unique identifier of the end user. You can choose other
            claims, such as <code>email</code> or <code>name</code>, depending on the OpenID identity
            provider. Claims other than <code>email</code> are prefixed with the issuer URL to
            prevent naming clashes with other plug-ins.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Oidc_UsernamePrefix">
            <summary>
            <para>
            <para>The prefix that is prepended to username claims to prevent clashes with existing names.
            If you do not provide this field, and <code>username</code> is a value other than
            <code>email</code>, the prefix defaults to <code>issuerurl#</code>. You can use the
            value <code>-</code> to disable all prefixing.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is '*'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.AssociateIdentityProviderConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.AssociateIdentityProviderConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSIdentityProviderConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet">
            <summary>
            Associates the specified tags to a resource with the specified <code>resourceArn</code>.
            If existing tags on a resource are not specified in the request parameters, they are
            not changed. When a resource is deleted, the tags associated with that resource are
            deleted as well. Tags that you create for Amazon EKS resources do not propagate to
            any other resources associated with the cluster. For example, if you tag a cluster
            with this operation, that tag does not automatically propagate to the subnets and
            nodes associated with the cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource to which to add tags. Currently, the
            supported resources are Amazon EKS clusters and managed node groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Tag">
            <summary>
            <para>
            <para>The tags to add to the resource. A tag is an array of key-value pairs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.TagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.AddEKSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonCmdlet">
            <summary>
            Describes an Amazon EKS add-on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"><code>ListAddons</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addon'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeAddonResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeAddonResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AddonName parameter.
            The -PassThru parameter is deprecated, use -Select '^AddonName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet">
            <summary>
            Lists the available add-ons.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of add-on results returned by <code>ListAddonsRequest</code> in
            paginated output. When you use this parameter, <code>ListAddonsRequest</code> returns
            only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListAddonsRequest</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListAddonsRequest</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListAddonsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.</para><note><para>This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addons'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListAddonsResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListAddonsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet">
            <summary>
            Describes the Kubernetes versions that the add-on can be used with.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"><code>ListAddons</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.KubernetesVersion">
            <summary>
            <para>
            <para>The Kubernetes versions that the add-on can be used with.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of results to return.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>DescribeAddonVersionsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.</para><note><para>This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addons'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeAddonVersionsResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeAddonVersionsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSAddonVersionCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet">
            <summary>
            Returns descriptive information about an Amazon EKS cluster.
            
             
            <para>
            The API server endpoint and certificate authority data returned by this operation
            are required for <code>kubelet</code> and <code>kubectl</code> to communicate with
            your Kubernetes API server. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html">Create
            a kubeconfig for Amazon EKS</a>.
            </para><note><para>
            The API server endpoint and certificate authority data aren't available until the
            cluster reaches the <code>ACTIVE</code> state.
            </para></note>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the cluster to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet">
            <summary>
            Lists the Amazon EKS clusters in your Amazon Web Services account in the specified
            Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.Include">
            <summary>
            <para>
            <para>Indicates whether external clusters are included in the returned list. Use '<code>all</code>'
            to return connected clusters, or blank to return only Amazon EKS clusters. '<code>all</code>'
            must be in lowercase otherwise an error occurs.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of cluster results returned by <code>ListClusters</code> in paginated
            output. When you use this parameter, <code>ListClusters</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListClusters</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListClusters</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para><note><para>This token should be treated as an opaque identifier that is used only to retrieve
            the next items in a list and not for other programmatic purposes.</para></note>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Clusters'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListClustersResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListClustersResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSClusterListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet">
            <summary>
            Returns descriptive information about an Fargate profile.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet">
            <summary>
            Lists the Fargate profiles associated with the specified cluster in your Amazon Web
            Services account in the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that you would like to list Fargate profiles in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of Fargate profile results returned by <code>ListFargateProfiles</code>
            in paginated output. When you use this parameter, <code>ListFargateProfiles</code>
            returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListFargateProfiles</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListFargateProfiles</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListFargateProfiles</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfileNames'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListFargateProfilesResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListFargateProfilesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSFargateProfileListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet">
            <summary>
            Returns descriptive information about an identity provider configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The cluster name that the identity provider configuration is associated to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet.IdentityProviderConfig_Name">
            <summary>
            <para>
            <para>The name of the identity provider configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet.IdentityProviderConfig_Type">
            <summary>
            <para>
            <para>The type of the identity provider configuration. The only type available is <code>oidc</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProviderConfig'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeIdentityProviderConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeIdentityProviderConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet">
            <summary>
            A list of identity provider configurations.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The cluster name that you want to list identity provider configurations for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of identity provider configurations returned by <code>ListIdentityProviderConfigs</code>
            in paginated output. When you use this parameter, <code>ListIdentityProviderConfigs</code>
            returns only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListIdentityProviderConfigs</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListIdentityProviderConfigs</code>
            returns up to 100 results and a <code>nextToken</code> value, if applicable.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>IdentityProviderConfigsRequest</code>
            where <code>maxResults</code> was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that returned
            the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'IdentityProviderConfigs'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListIdentityProviderConfigsResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListIdentityProviderConfigsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSIdentityProviderConfigListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet">
            <summary>
            Returns descriptive information about an Amazon EKS node group.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the node group to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet">
            <summary>
            Lists the Amazon EKS managed node groups associated with the specified cluster in
            your Amazon Web Services account in the specified Region. Self-managed node groups
            are not listed.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that you would like to list node groups in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of node group results returned by <code>ListNodegroups</code> in
            paginated output. When you use this parameter, <code>ListNodegroups</code> returns
            only <code>maxResults</code> results in a single page along with a <code>nextToken</code>
            response element. You can see the remaining results of the initial request by sending
            another <code>ListNodegroups</code> request with the returned <code>nextToken</code>
            value. This value can be between 1 and 100. If you don't use this parameter, <code>ListNodegroups</code>
            returns up to 100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListNodegroups</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroups'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListNodegroupsResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListNodegroupsResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSNodegroupListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet">
            <summary>
            List the tags for an Amazon EKS resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) that identifies the resource for which to list the
            tags. Currently, the supported resources are Amazon EKS clusters and managed node
            groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Tags'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListTagsForResourceResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListTagsForResourceResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet">
            <summary>
            Returns descriptive information about an update against your Amazon EKS cluster or
            associated managed node group or Amazon EKS add-on.
            
             
            <para>
            When the status of the update is <code>Succeeded</code>, the update is complete. If
            an update fails, the status is <code>Failed</code>, and an error detail explains the
            reason for the failure.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"><code>ListAddons</code></a>. This parameter is required if the update is an add-on
            update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the Amazon EKS node group associated with the update. This parameter is
            required if the update is a node group update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.UpdateId">
            <summary>
            <para>
            <para>The ID of the update to describe.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DescribeUpdateResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DescribeUpdateResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the UpdateId parameter.
            The -PassThru parameter is deprecated, use -Select '^UpdateId' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet">
            <summary>
            Lists the updates associated with an Amazon EKS cluster or managed node group in your
            Amazon Web Services account, in the specified Region.<br/><br/>This cmdlet automatically pages all available results to the pipeline - parameters related to iteration are only needed if you want to manually control the paginated output. To disable autopagination, use -NoAutoIteration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.AddonName">
            <summary>
            <para>
            <para>The names of the installed add-ons that have available updates.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to list updates for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the Amazon EKS managed node group to list updates for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.MaxResult">
            <summary>
            <para>
            <para>The maximum number of update results returned by <code>ListUpdates</code> in paginated
            output. When you use this parameter, <code>ListUpdates</code> returns only <code>maxResults</code>
            results in a single page along with a <code>nextToken</code> response element. You
            can see the remaining results of the initial request by sending another <code>ListUpdates</code>
            request with the returned <code>nextToken</code> value. This value can be between
            1 and 100. If you don't use this parameter, <code>ListUpdates</code> returns up to
            100 results and a <code>nextToken</code> value if applicable.</para>
            </para>
            <para>
            <br/><b>Note:</b> In AWSPowerShell and AWSPowerShell.NetCore this parameter is used to limit the total number of items returned by the cmdlet.
            <br/>In AWS.Tools this parameter is simply passed to the service to specify how many items should be returned by each service call.
            <br/>Pipe the output of this cmdlet into Select-Object -First to terminate retrieving data pages early and control the number of items returned.
            </para>
            <para>If a value for this parameter is not specified the cmdlet will use a default value of '<b>100</b>'.</para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NextToken">
            <summary>
            <para>
            <para>The <code>nextToken</code> value returned from a previous paginated <code>ListUpdates</code>
            request where <code>maxResults</code> was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results that
            returned the <code>nextToken</code> value.</para>
            </para>
            <para>
            <br/><b>Note:</b> This parameter is only used if you are manually controlling output pagination of the service API call.
            <br/>In order to manually control output pagination, use '-NextToken $null' for the first call and '-NextToken $AWSHistory.LastServiceResponse.NextToken' for subsequent calls.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'UpdateIds'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.ListUpdatesResponse).
            Specifying the name of a property of type Amazon.EKS.Model.ListUpdatesResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.GetEKSUpdateListCmdlet.NoAutoIteration">
            <summary>
            By default the cmdlet will auto-iterate and retrieve all results to the pipeline by performing multiple
            service calls. If set, the cmdlet will retrieve only the next 'page' of results using the value of NextToken
            as the start point.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet">
            <summary>
            Creates an Amazon EKS add-on.
            
             
            <para>
            Amazon EKS add-ons help to automate the provisioning and lifecycle management of common
            operational software for Amazon EKS clusters. Amazon EKS add-ons require clusters
            running version 1.18 or later because Amazon EKS add-ons rely on the Server-side Apply
            Kubernetes feature, which is only available in Kubernetes 1.18 and later. For more
            information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html">Amazon
            EKS add-ons</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"><code>DescribeAddonVersions</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.AddonVersion">
            <summary>
            <para>
            <para>The version of the add-on. The version must match one of the versions returned by
            <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"><code>DescribeAddonVersions</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to create the add-on for.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.ResolveConflict">
            <summary>
            <para>
            <para>How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled
            based on the value you choose:</para><ul><li><para><b>None</b> – If the self-managed version of the add-on is installed on your cluster,
            Amazon EKS doesn't change the value. Creation of the add-on might fail.</para></li><li><para><b>Overwrite</b> – If the self-managed version of the add-on is installed on your
            cluster and the Amazon EKS default value is different than the existing value, Amazon
            EKS changes the value to the Amazon EKS default value.</para></li><li><para><b>Preserve</b> – Not supported. You can set this value when updating an add-on though.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html">UpdateAddon</a>.</para></li></ul><para>If you don't currently have the self-managed version of the add-on installed on your
            cluster, the Amazon EKS add-on is installed. Amazon EKS sets all values to default
            values, regardless of the option that you specify.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.ServiceAccountRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service
            account. The role must be assigned the IAM permissions required by the add-on. If
            you don't specify an existing IAM role, then the add-on uses the permissions assigned
            to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon
            EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</para><note><para>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider
            created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling
            IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value. You define both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addon'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateAddonResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateAddonResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AddonName parameter.
            The -PassThru parameter is deprecated, use -Select '^AddonName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSAddonCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet">
            <summary>
            Creates an Amazon EKS control plane. 
            
             
            <para>
            The Amazon EKS control plane consists of control plane instances that run the Kubernetes
            software, such as <code>etcd</code> and the API server. The control plane runs in
            an account managed by Amazon Web Services, and the Kubernetes API is exposed by the
            Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single tenant
            and unique. It runs on its own set of Amazon EC2 instances.
            </para><para>
            The cluster control plane is provisioned across multiple Availability Zones and fronted
            by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic
            network interfaces in your VPC subnets to provide connectivity from the control plane
            instances to the nodes (for example, to support <code>kubectl exec</code>, <code>logs</code>,
            and <code>proxy</code> data flows).
            </para><para>
            Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's
            control plane over the Kubernetes API server endpoint and a certificate file that
            is created for your cluster.
            </para><para>
            In most cases, it takes several minutes to create a cluster. After you create an Amazon
            EKS cluster, you must configure your Kubernetes tooling to communicate with the API
            server and launch nodes into your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html">Managing
            Cluster Authentication</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html">Launching
            Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Logging_ClusterLogging">
            <summary>
            <para>
            <para>The cluster control plane logging configuration for your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.OutpostConfig_ControlPlaneInstanceType">
            <summary>
            <para>
            <para>The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster
            on Outposts. The instance type that you specify is used for all Kubernetes control
            plane instances. The instance type can't be changed after cluster creation.</para><para>Choose an instance type based on the number of nodes that your cluster will have.
            If your cluster will have:</para><ul><li><para>1–20 nodes, then we recommend specifying a <code>large</code> instance type.</para></li><li><para>21–100 nodes, then we recommend specifying an <code>xlarge</code> instance type.</para></li><li><para>101–250 nodes, then we recommend specifying a <code>2xlarge</code> instance type.</para></li></ul><para>For a list of the available Amazon EC2 instance types, see Compute and storage in
            <a href="http://aws.amazon.com/outposts/rack/features/">Outposts rack features</a>.
            The control plane is not automatically scaled by Amazon EKS.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.EncryptionConfig">
            <summary>
            <para>
            <para>The encryption configuration for the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.KubernetesNetworkConfig_IpFamily">
            <summary>
            <para>
            <para>Specify which IP family is used to assign Kubernetes pod and service IP addresses.
            If you don't specify a value, <code>ipv4</code> is used by default. You can only specify
            an IP family when you create a cluster and can't change this value once the cluster
            is created. If you specify <code>ipv6</code>, the VPC and subnets that you specify
            for cluster creation must have both IPv4 and IPv6 CIDR blocks assigned to them. You
            can't specify <code>ipv6</code> for clusters in China Regions.</para><para>You can only specify <code>ipv6</code> for 1.21 and later clusters that use version
            1.10.1 or later of the Amazon VPC CNI add-on. If you specify <code>ipv6</code>, then
            ensure that your VPC meets the requirements listed in the considerations listed in
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/cni-ipv6.html">Assigning
            IPv6 addresses to pods and services</a> in the Amazon EKS User Guide. Kubernetes assigns
            services IPv6 addresses from the unique local address range (fc00::/7). You can't
            specify a custom IPv6 CIDR block. Pod addresses are assigned from the subnet's IPv6
            CIDR.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The unique name to give to your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.OutpostConfig_OutpostArn">
            <summary>
            <para>
            <para>The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts.
            Only a single Outpost ARN is supported.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.ResourcesVpcConfig">
            <summary>
            <para>
            <para>The VPC configuration that's used by the cluster control plane. Amazon EKS VPC resources
            have specific requirements to work properly with Kubernetes. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html">Cluster
            VPC Considerations</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html">Cluster
            Security Group Considerations</a> in the <i>Amazon EKS User Guide</i>. You must specify
            at least two subnets. You can specify up to five security groups. However, we recommend
            that you use a dedicated security group for your cluster control plane.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes
            control plane to make calls to Amazon Web Services API operations on your behalf.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon
            EKS Service IAM Role</a> in the <i><i>Amazon EKS User Guide</i></i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.KubernetesNetworkConfig_ServiceIpv4Cidr">
            <summary>
            <para>
            <para>Don't specify a value if you select <code>ipv6</code> for <b>ipFamily</b>. The CIDR
            block to assign Kubernetes service IP addresses from. If you don't specify a block,
            Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks.
            We recommend that you specify a block that does not overlap with resources in other
            networks that are peered or connected to your VPC. The block must meet the following
            requirements:</para><ul><li><para>Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12,
            or 192.168.0.0/16.</para></li><li><para>Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.</para></li><li><para>Between /24 and /12.</para></li></ul><important><para>You can only specify a custom CIDR block when you create a cluster and can't change
            this value once the cluster is created.</para></important>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value. You define both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Version">
            <summary>
            <para>
            <para>The desired Kubernetes version for your cluster. If you don't specify a value here,
            the default version available in Amazon EKS is used.</para><note><para>The default version might not be the latest version available.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet">
            <summary>
            Creates an Fargate profile for your Amazon EKS cluster. You must have at least one
            Fargate profile in a cluster to be able to run pods on Fargate.
            
             
            <para>
            The Fargate profile allows an administrator to declare which pods run on Fargate and
            specify which pods run on which Fargate profile. This declaration is done through
            the profile’s selectors. Each profile can have up to five selectors that contain a
            namespace and labels. A namespace is required for every selector. The label field
            consists of multiple optional key-value pairs. Pods that match the selectors are scheduled
            on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile,
            then that pod is run on Fargate.
            </para><para>
            When you create a Fargate profile, you must specify a pod execution role to use with
            the pods that are scheduled with the profile. This role is added to the cluster's
            Kubernetes <a href="https://kubernetes.io/docs/admin/authorization/rbac/">Role Based
            Access Control</a> (RBAC) for authorization so that the <code>kubelet</code> that
            is running on the Fargate infrastructure can register with your Amazon EKS cluster
            so that it can appear in your cluster as a node. The pod execution role also provides
            IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image
            repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            Fargate profiles are immutable. However, you can create a new updated profile to replace
            an existing profile and then delete the original after the updated profile has finished
            creating.
            </para><para>
            If any Fargate profiles in a cluster are in the <code>DELETING</code> status, you
            must wait for that Fargate profile to finish deleting before you can create any other
            profiles in that cluster.
            </para><para>
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html">Fargate
            Profile</a> in the <i>Amazon EKS User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to apply the Fargate profile to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.PodExecutionRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the pod execution role to use for pods that match
            the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure
            to register with your cluster as a node, and it provides read access to Amazon ECR
            image repositories. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod
            Execution Role</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Selector">
            <summary>
            <para>
            <para>The selectors to match for pods to use this Fargate profile. Each selector must have
            an associated namespace. Optionally, you can also specify labels for a namespace.
            You may specify up to five selectors in a Fargate profile.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Subnet">
            <summary>
            <para>
            <para>The IDs of subnets to launch your pods into. At this time, pods running on Fargate
            are not assigned public IP addresses, so only private subnets (with no direct route
            to an Internet Gateway) are accepted for this parameter.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the Fargate profile to assist with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Fargate profile
            tags do not propagate to any other resources associated with the Fargate profile,
            such as the pods that are scheduled with it.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSFargateProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet">
            <summary>
            Creates a managed node group for an Amazon EKS cluster. You can only create a node
            group for your cluster that is equal to the current Kubernetes version for the cluster.
            All node groups are created with the latest AMI release version for the respective
            minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch
            template. For more information about using launch templates, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a>.
            
             
            <para>
            An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated
            Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster.
            Each node group uses a version of the Amazon EKS optimized Amazon Linux 2 AMI. For
            more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html">Managed
            Node Groups</a> in the <i>Amazon EKS User Guide</i>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.AmiType">
            <summary>
            <para>
            <para>The AMI type for your node group. GPU instance types should use the <code>AL2_x86_64_GPU</code>
            AMI type. Non-GPU instances should use the <code>AL2_x86_64</code> AMI type. Arm instances
            should use the <code>AL2_ARM_64</code> AMI type. All types use the Amazon EKS optimized
            Amazon Linux 2 AMI. If you specify <code>launchTemplate</code>, and your launch template
            uses a custom AMI, then don't specify <code>amiType</code>, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.CapacityType">
            <summary>
            <para>
            <para>The capacity type for your node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to create the node group in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_DesiredSize">
            <summary>
            <para>
            <para>The current number of nodes that the managed node group should maintain.</para><important><para>If you use Cluster Autoscaler, you shouldn't change the desiredSize value directly,
            as this can cause the Cluster Autoscaler to suddenly scale up or scale down.</para></important><para>Whenever this parameter changes, the number of worker nodes in the node group is updated
            to the specified size. If this parameter is given a value that is smaller than the
            current number of running worker nodes, the necessary number of worker nodes are terminated
            to match the given value. When using CloudFormation, no action occurs if you remove
            this parameter from your CFN template.</para><para>This parameter can be different from minSize in some cases, such as when starting
            with extra hosts for testing. This parameter can also be different when you want to
            start with an estimated number of needed hosts, but let Cluster Autoscaler reduce
            the number if there are too many. When Cluster Autoscaler is used, the desiredSize
            parameter is altered by Cluster Autoscaler (but can be out-of-date for short periods
            of time). Cluster Autoscaler doesn't scale a managed node group lower than minSize
            or higher than maxSize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.DiskSize">
            <summary>
            <para>
            <para>The root device disk size (in GiB) for your node group instances. The default disk
            size is 20 GiB. If you specify <code>launchTemplate</code>, then don't specify <code>diskSize</code>,
            or the node group deployment will fail. For more information about using launch templates
            with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.RemoteAccess_Ec2SshKey">
            <summary>
            <para>
            <para>The Amazon EC2 SSH key that provides access for SSH communication with the nodes in
            the managed node group. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">Amazon
            EC2 key pairs and Linux instances</a> in the <i>Amazon Elastic Compute Cloud User
            Guide for Linux Instances</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.LaunchTemplate_Id">
            <summary>
            <para>
            <para>The ID of the launch template.</para><para>You must specify either the launch template ID or the launch template name in the
            request, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.InstanceType">
            <summary>
            <para>
            <para>Specify the instance types for a node group. If you specify a GPU instance type, be
            sure to specify <code>AL2_x86_64_GPU</code> with the <code>amiType</code> parameter.
            If you specify <code>launchTemplate</code>, then you can specify zero or one instance
            type in your launch template <i>or</i> you can specify 0-20 instance types for <code>instanceTypes</code>.
            If however, you specify an instance type in your launch template <i>and</i> specify
            any <code>instanceTypes</code>, the node group deployment will fail. If you don't
            specify an instance type in a launch template or for <code>instanceTypes</code>, then
            <code>t3.medium</code> is used, by default. If you specify <code>Spot</code> for <code>capacityType</code>,
            then we recommend specifying multiple values for <code>instanceTypes</code>. For more
            information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types">Managed
            node group capacity types</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Label">
            <summary>
            <para>
            <para>The Kubernetes labels to be applied to the nodes in the node group when they are created.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_MaxSize">
            <summary>
            <para>
            <para>The maximum number of nodes that the managed node group can scale out to. For information
            about the maximum number that you can specify, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html">Amazon
            EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.UpdateConfig_MaxUnavailable">
            <summary>
            <para>
            <para>The maximum number of nodes unavailable at once during a version update. Nodes will
            be updated in parallel. This value or <code>maxUnavailablePercentage</code> is required
            to have a value.The maximum number is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.UpdateConfig_MaxUnavailablePercentage">
            <summary>
            <para>
            <para>The maximum percentage of nodes unavailable during a version update. This percentage
            of nodes will be updated in parallel, up to 100 nodes at once. This value or <code>maxUnavailable</code>
            is required to have a value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ScalingConfig_MinSize">
            <summary>
            <para>
            <para>The minimum number of nodes that the managed node group can scale in to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.LaunchTemplate_Name">
            <summary>
            <para>
            <para>The name of the launch template.</para><para>You must specify either the launch template name or the launch template ID in the
            request, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The unique name to give your node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.NodeRole">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
            The Amazon EKS worker node <code>kubelet</code> daemon makes calls to Amazon Web Services
            APIs on your behalf. Nodes receive permissions for these API calls through an IAM
            instance profile and associated policies. Before you can launch nodes and register
            them into a cluster, you must create an IAM role for those nodes to use when they
            are launched. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon
            EKS node IAM role</a> in the <i><i>Amazon EKS User Guide</i></i>. If you specify
            <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"><code>IamInstanceProfile</code></a> in your launch template, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.ReleaseVersion">
            <summary>
            <para>
            <para>The AMI version of the Amazon EKS optimized AMI to use with your node group. By default,
            the latest available AMI version for the node group's current Kubernetes version is
            used. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            If you specify <code>launchTemplate</code>, and your launch template uses a custom
            AMI, then don't specify <code>releaseVersion</code>, or the node group deployment
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.RemoteAccess_SourceSecurityGroup">
            <summary>
            <para>
            <para>The security groups that are allowed SSH access (port 22) to the nodes. If you specify
            an Amazon EC2 SSH key but do not specify a source security group when you create a
            managed node group, then port 22 on the nodes is opened to the internet (0.0.0.0/0).
            For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html">Security
            Groups for Your VPC</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Subnet">
            <summary>
            <para>
            <para>The subnets to use for the Auto Scaling group that is created for your node group.
            If you specify <code>launchTemplate</code>, then don't specify <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"><code>SubnetId</code></a> in your launch template, or the node group deployment will
            fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata to apply to the node group to assist with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Node group tags
            do not propagate to any other resources associated with the node group, such as the
            Amazon EC2 instances or subnets.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Taint">
            <summary>
            <para>
            <para>The Kubernetes taints to be applied to the nodes in the node group. For more information,
            see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node
            taints on managed node groups</a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The launch template version number, <code>$Latest</code>, or <code>$Default</code>.</para><para>If the value is <code>$Latest</code>, Amazon EKS uses the latest version of the launch
            template.</para><para>If the value is <code>$Default</code>, Amazon EKS uses the default version of the
            launch template.</para><para>Default: The default version of the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Version">
            <summary>
            <para>
            <para>The Kubernetes version to use for your managed nodes. By default, the Kubernetes version
            of the cluster is used, and this is the only accepted specified value. If you specify
            <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't
            specify <code>version</code>, or the node group deployment will fail. For more information
            about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.CreateNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.CreateNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.NewEKSNodegroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet">
            <summary>
            Connects a Kubernetes cluster to the Amazon EKS control plane. 
            
             
            <para>
            Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current
            information about the cluster and its nodes. 
            </para><para>
            Cluster connection requires two steps. First, send a <code><a>RegisterClusterRequest</a></code> to add it to the Amazon EKS control plane.
            </para><para>
            Second, a <a href="https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml">Manifest</a>
            containing the <code>activationID</code> and <code>activationCode</code> must be applied
            to the Kubernetes cluster through it's native provider to provide visibility.
            </para><para>
            After the Manifest is updated and applied, then the connected cluster is visible to
            the Amazon EKS control plane. If the Manifest is not applied within three days, then
            the connected cluster will no longer be visible and must be deregistered. See <a>DeregisterCluster</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>Define a unique name for this cluster for your Region.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.ConnectorConfig_Provider">
            <summary>
            <para>
            <para>The cloud provider for the target cluster to connect.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.ConnectorConfig_RoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the role that is authorized to request the connector
            configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.Tag">
            <summary>
            <para>
            <para>The metadata that you apply to the cluster to assist with categorization and organization.
            Each tag consists of a key and an optional value, both of which you define. Cluster
            tags do not propagate to any other resources associated with the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.RegisterClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.RegisterClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RegisterEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet">
            <summary>
            Delete an Amazon EKS add-on.
            
             
            <para>
            When you remove the add-on, it will also be deleted from the cluster. You can always
            manually start an add-on on the cluster using the Kubernetes API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"><code>ListAddons</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to delete the add-on from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.Preserve">
            <summary>
            <para>
            <para>Specifying this option preserves the add-on software on your cluster but Amazon EKS
            stops managing any settings for the add-on. If an IAM account is associated with the
            add-on, it is not removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Addon'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteAddonResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteAddonResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AddonName parameter.
            The -PassThru parameter is deprecated, use -Select '^AddonName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSAddonCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet">
            <summary>
            Deletes the Amazon EKS cluster control plane.
            
             
            <para>
            If you have active services in your cluster that are associated with a load balancer,
            you must delete those services before deleting the cluster so that the load balancers
            are deleted properly. Otherwise, you can have orphaned resources in your VPC that
            prevent you from being able to delete the VPC. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html">Deleting
            a Cluster</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            If you have managed node groups or Fargate profiles attached to the cluster, you must
            delete them first. For more information, see <a>DeleteNodegroup</a> and <a>DeleteFargateProfile</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the cluster to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet">
            <summary>
            Deletes an Fargate profile.
            
             
            <para>
            When you delete a Fargate profile, any pods running on Fargate that were created with
            the profile are deleted. If those pods match another Fargate profile, then they are
            scheduled on Fargate with that profile. If they no longer match any Fargate profiles,
            then they are not scheduled on Fargate and they may remain in a pending state.
            </para><para>
            Only one Fargate profile in a cluster can be in the <code>DELETING</code> status at
            a time. You must wait for a Fargate profile to finish deleting before you can delete
            any other profiles in that cluster.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster associated with the Fargate profile to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.FargateProfileName">
            <summary>
            <para>
            <para>The name of the Fargate profile to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'FargateProfile'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteFargateProfileResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteFargateProfileResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the FargateProfileName parameter.
            The -PassThru parameter is deprecated, use -Select '^FargateProfileName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSFargateProfileCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet">
            <summary>
            Disassociates an identity provider configuration from a cluster. If you disassociate
            an identity provider from your cluster, users included in the provider can no longer
            access the cluster. However, you can still access the cluster with Amazon Web Services
            IAM users.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>A unique, case-sensitive identifier that you provide to ensure the idempotency of
            the request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster to disassociate an identity provider from.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.IdentityProviderConfig_Name">
            <summary>
            <para>
            <para>The name of the identity provider configuration.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.IdentityProviderConfig_Type">
            <summary>
            <para>
            <para>The type of the identity provider configuration. The only type available is <code>oidc</code>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DisassociateIdentityProviderConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DisassociateIdentityProviderConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ClusterName parameter.
            The -PassThru parameter is deprecated, use -Select '^ClusterName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSIdentityProviderConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet">
            <summary>
            Deletes an Amazon EKS node group for a cluster.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that is associated with your node group.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the node group to delete.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Nodegroup'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeleteNodegroupResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeleteNodegroupResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSNodegroupCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet">
            <summary>
            Deletes specified tags from a resource.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.ResourceArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of the resource from which to delete tags. Currently,
            the supported resources are Amazon EKS clusters and managed node groups.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.TagKey">
            <summary>
            <para>
            <para>The keys of the tags to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The cmdlet doesn't have a return value by default.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UntagResourceResponse).
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the ResourceArn parameter.
            The -PassThru parameter is deprecated, use -Select '^ResourceArn' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.RemoveEKSResourceTagCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UnregisterEKSClusterCmdlet">
            <summary>
            Deregisters a connected cluster to remove it from the Amazon EKS control plane.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UnregisterEKSClusterCmdlet.Name">
            <summary>
            <para>
            <para>The name of the connected cluster to deregister.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UnregisterEKSClusterCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Cluster'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.DeregisterClusterResponse).
            Specifying the name of a property of type Amazon.EKS.Model.DeregisterClusterResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UnregisterEKSClusterCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UnregisterEKSClusterCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet">
            <summary>
            Updates an Amazon EKS add-on.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.AddonName">
            <summary>
            <para>
            <para>The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"><code>ListAddons</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.AddonVersion">
            <summary>
            <para>
            <para>The version of the add-on. The version must match one of the versions returned by
            <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"><code>DescribeAddonVersions</code></a>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.ResolveConflict">
            <summary>
            <para>
            <para>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a
            value from the Amazon EKS default value. Conflicts are handled based on the option
            you choose:</para><ul><li><para><b>None</b> – Amazon EKS doesn't change the value. The update might fail.</para></li><li><para><b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS
            default value.</para></li><li><para><b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend
            that you test any field and value changes on a non-production cluster before updating
            the add-on on your production cluster.</para></li></ul>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.ServiceAccountRoleArn">
            <summary>
            <para>
            <para>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service
            account. The role must be assigned the IAM permissions required by the add-on. If
            you don't specify an existing IAM role, then the add-on uses the permissions assigned
            to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon
            EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</para><note><para>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider
            created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling
            IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</para></note>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateAddonResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateAddonResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the AddonName parameter.
            The -PassThru parameter is deprecated, use -Select '^AddonName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSAddonCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet">
            <summary>
            Updates an Amazon EKS cluster configuration. Your cluster continues to function during
            the update. The response output includes an update ID that you can use to track the
            status of your cluster update with the <a>DescribeUpdate</a> API operation.
            
             
            <para>
            You can use this API operation to enable or disable exporting the Kubernetes control
            plane logs for your cluster to CloudWatch Logs. By default, cluster control plane
            logs aren't exported to CloudWatch Logs. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html">Amazon
            EKS Cluster Control Plane Logs</a> in the <i><i>Amazon EKS User Guide</i></i>.
            </para><note><para>
            CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported
            control plane logs. For more information, see <a href="http://aws.amazon.com/cloudwatch/pricing/">CloudWatch
            Pricing</a>.
            </para></note><para>
            You can also use this API operation to enable or disable public and private access
            to your cluster's Kubernetes API server endpoint. By default, public access is enabled,
            and private access is disabled. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon
            EKS cluster endpoint access control</a> in the <i><i>Amazon EKS User Guide</i></i>.
            
            </para><important><para>
            You can't update the subnets or security group IDs for an existing cluster.
            </para></important><para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Logging_ClusterLogging">
            <summary>
            <para>
            <para>The cluster control plane logging configuration for your cluster.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.ResourcesVpcConfig">
            <summary>
            <para>
            The service has not provided documentation for this parameter; please refer to the service's API reference documentation for the latest available information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateClusterConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateClusterConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet">
            <summary>
            Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your cluster update with the <a>DescribeUpdate</a>
            API operation.
            
             
            <para>
            Cluster updates are asynchronous, and they should finish within a few minutes. During
            an update, the cluster status moves to <code>UPDATING</code> (this status transition
            is eventually consistent). When the update is complete (either <code>Failed</code>
            or <code>Successful</code>), the cluster status moves to <code>Active</code>.
            </para><para>
            If your cluster has managed node groups attached to it, all of your node groups’ Kubernetes
            versions must match the cluster’s Kubernetes version in order to update the cluster
            to a new Kubernetes version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Name">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Version">
            <summary>
            <para>
            <para>The desired Kubernetes version following a successful update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateClusterVersionResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateClusterVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the Name parameter.
            The -PassThru parameter is deprecated, use -Select '^Name' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSClusterVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet">
            <summary>
            Updates an Amazon EKS managed node group configuration. Your node group continues
            to function during the update. The response output includes an update ID that you
            can use to track the status of your node group update with the <a>DescribeUpdate</a>
            API operation. Currently you can update the Kubernetes labels for a node group or
            the scaling configuration.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Labels_AddOrUpdateLabel">
            <summary>
            <para>
            <para>Kubernetes labels to be added or updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Taints_AddOrUpdateTaint">
            <summary>
            <para>
            <para>Kubernetes taints to be added or updated.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that the managed node group resides in.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_DesiredSize">
            <summary>
            <para>
            <para>The current number of nodes that the managed node group should maintain.</para><important><para>If you use Cluster Autoscaler, you shouldn't change the desiredSize value directly,
            as this can cause the Cluster Autoscaler to suddenly scale up or scale down.</para></important><para>Whenever this parameter changes, the number of worker nodes in the node group is updated
            to the specified size. If this parameter is given a value that is smaller than the
            current number of running worker nodes, the necessary number of worker nodes are terminated
            to match the given value. When using CloudFormation, no action occurs if you remove
            this parameter from your CFN template.</para><para>This parameter can be different from minSize in some cases, such as when starting
            with extra hosts for testing. This parameter can also be different when you want to
            start with an estimated number of needed hosts, but let Cluster Autoscaler reduce
            the number if there are too many. When Cluster Autoscaler is used, the desiredSize
            parameter is altered by Cluster Autoscaler (but can be out-of-date for short periods
            of time). Cluster Autoscaler doesn't scale a managed node group lower than minSize
            or higher than maxSize.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_MaxSize">
            <summary>
            <para>
            <para>The maximum number of nodes that the managed node group can scale out to. For information
            about the maximum number that you can specify, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html">Amazon
            EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.UpdateConfig_MaxUnavailable">
            <summary>
            <para>
            <para>The maximum number of nodes unavailable at once during a version update. Nodes will
            be updated in parallel. This value or <code>maxUnavailablePercentage</code> is required
            to have a value.The maximum number is 100.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.UpdateConfig_MaxUnavailablePercentage">
            <summary>
            <para>
            <para>The maximum percentage of nodes unavailable during a version update. This percentage
            of nodes will be updated in parallel, up to 100 nodes at once. This value or <code>maxUnavailable</code>
            is required to have a value.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.ScalingConfig_MinSize">
            <summary>
            <para>
            <para>The minimum number of nodes that the managed node group can scale in to.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the managed node group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Labels_RemoveLabel">
            <summary>
            <para>
            <para>Kubernetes labels to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Taints_RemoveTaint">
            <summary>
            <para>
            <para>Kubernetes taints to be removed.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateNodegroupConfigResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateNodegroupConfigResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupConfigCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
        <member name="T:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet">
            <summary>
            Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.
            
             
            <para>
            You can update a node group using a launch template only if the node group was originally
            deployed with a launch template. If you need to update a custom AMI in a node group
            that was deployed with a launch template, then update your custom AMI, specify the
            new ID in a new version of the launch template, and then update the node group to
            the new version of the launch template.
            </para><para>
            If you update without a launch template, then you can update to the latest available
            AMI version of a node group's current Kubernetes version by not specifying a Kubernetes
            version in the request. You can update to the latest AMI version of your cluster's
            current Kubernetes version by specifying your cluster's Kubernetes version in the
            request. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
            </para><para>
            You cannot roll back a node group to an earlier Kubernetes version or AMI version.
            </para><para>
            When a node in a managed node group is terminated due to a scaling action or update,
            the pods in that node are drained first. Amazon EKS attempts to drain the nodes gracefully
            and will fail if it is unable to do so. You can <code>force</code> the update if Amazon
            EKS is unable to drain the nodes as a result of a pod disruption budget issue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ClientRequestToken">
            <summary>
            <para>
            <para>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
            request.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ClusterName">
            <summary>
            <para>
            <para>The name of the Amazon EKS cluster that is associated with the managed node group
            to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Enforce">
            <summary>
            <para>
            <para>Force the update if the existing node group's pods are unable to be drained due to
            a pod disruption budget issue. If an update fails because pods could not be drained,
            you can force the update after it fails to terminate the old node whether or not any
            pods are running on the node.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.LaunchTemplate_Id">
            <summary>
            <para>
            <para>The ID of the launch template.</para><para>You must specify either the launch template ID or the launch template name in the
            request, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.LaunchTemplate_Name">
            <summary>
            <para>
            <para>The name of the launch template.</para><para>You must specify either the launch template name or the launch template ID in the
            request, but not both.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.NodegroupName">
            <summary>
            <para>
            <para>The name of the managed node group to update.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.ReleaseVersion">
            <summary>
            <para>
            <para>The AMI version of the Amazon EKS optimized AMI to use for the update. By default,
            the latest available AMI version for the node group's Kubernetes version is used.
            For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon
            EKS optimized Amazon Linux 2 AMI versions </a> in the <i>Amazon EKS User Guide</i>.
            If you specify <code>launchTemplate</code>, and your launch template uses a custom
            AMI, then don't specify <code>releaseVersion</code>, or the node group update will
            fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.LaunchTemplate_Version">
            <summary>
            <para>
            <para>The launch template version number, <code>$Latest</code>, or <code>$Default</code>.</para><para>If the value is <code>$Latest</code>, Amazon EKS uses the latest version of the launch
            template.</para><para>If the value is <code>$Default</code>, Amazon EKS uses the default version of the
            launch template.</para><para>Default: The default version of the launch template.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Version">
            <summary>
            <para>
            <para>The Kubernetes version to update to. If no version is specified, then the Kubernetes
            version of the node group does not change. You can specify the Kubernetes version
            of the cluster to update the node group to the latest AMI version of the cluster's
            Kubernetes version. If you specify <code>launchTemplate</code>, and your launch template
            uses a custom AMI, then don't specify <code>version</code>, or the node group update
            will fail. For more information about using launch templates with Amazon EKS, see
            <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch
            template support</a> in the <i>Amazon EKS User Guide</i>.</para>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Select">
            <summary>
            Use the -Select parameter to control the cmdlet output. The default value is 'Update'.
            Specifying -Select '*' will result in the cmdlet returning the whole service response (Amazon.EKS.Model.UpdateNodegroupVersionResponse).
            Specifying the name of a property of type Amazon.EKS.Model.UpdateNodegroupVersionResponse will result in that property being returned.
            Specifying -Select '^ParameterName' will result in the cmdlet returning the selected cmdlet parameter value.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.PassThru">
            <summary>
            Changes the cmdlet behavior to return the value passed to the NodegroupName parameter.
            The -PassThru parameter is deprecated, use -Select '^NodegroupName' instead. This parameter will be removed in a future version.
            </summary>
        </member>
        <member name="P:Amazon.PowerShell.Cmdlets.EKS.UpdateEKSNodegroupVersionCmdlet.Force">
            <summary>
            This parameter overrides confirmation prompts to force 
            the cmdlet to continue its operation. This parameter should always
            be used with caution.
            </summary>
        </member>
    </members>
</doc>
